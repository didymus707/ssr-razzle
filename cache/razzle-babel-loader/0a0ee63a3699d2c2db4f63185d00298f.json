{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"mention\", \"theme\", \"searchValue\", \"isFocused\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/messages/compose/CommentCompose.tsx\";\nvar __jsx = React.createElement;\nimport { Avatar, Box, Flex, Icon, Stack } from '@chakra-ui/core';\nimport createMentionPlugin, { defaultSuggestionsFilter } from '@draft-js-plugins/mention';\nimport { Button, SmallText } from 'app/components';\nimport { convertToRaw, EditorState, Modifier } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { Attachments } from './Attachments';\nimport { DraftEditor, DraftEditorContainer } from './DraftEditor';\nimport { Emoji } from './Emoji';\nimport { FilePicker } from './FilePicker';\nexport const CommentCompose = props => {\n  const {\n    text,\n    thread,\n    mentions,\n    setText,\n    onSubmit,\n    attachedFiles,\n    setAttachedFiles\n  } = props;\n  const editorRef = useRef(null);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: suggestions,\n    1: setSuggestions\n  } = useState(mentions);\n  const {\n    MentionSuggestions,\n    plugins\n  } = useMemo(() => {\n    const mentionPlugin = createMentionPlugin(); // eslint-disable-next-line no-shadow\n\n    const {\n      MentionSuggestions\n    } = mentionPlugin; // eslint-disable-next-line no-shadow\n\n    const plugins = [mentionPlugin];\n    return {\n      plugins,\n      MentionSuggestions\n    };\n  }, []);\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty());\n  const onOpenChange = useCallback(_open => {\n    setOpen(_open);\n  }, []);\n  const onSearchChange = useCallback(({\n    value\n  }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions !== null && mentions !== void 0 ? mentions : []));\n  }, [mentions]);\n\n  const handleChange = editorState => {\n    const rawContentState = convertToRaw(editorState.getCurrentContent());\n    const text = rawContentState && draftToHtml(rawContentState, {\n      trigger: '#',\n      separator: ' '\n    });\n    setEditorState(editorState);\n    setText(text);\n  };\n\n  const handleFocus = () => {\n    if (editorRef.current) {\n      var _editorRef$current;\n\n      editorRef === null || editorRef === void 0 ? void 0 : (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.focus();\n    }\n  };\n\n  const handleEmojiClick = (event, emojiObject) => {\n    const currentContent = editorState.getCurrentContent(),\n          currentSelection = editorState.getSelection();\n    const newContent = Modifier.replaceText(currentContent, currentSelection, emojiObject.emoji);\n    const newEditorState = EditorState.push(editorState, newContent, 'insert-characters');\n    setEditorState(EditorState.forceSelection(newEditorState, newContent.getSelectionAfter()));\n  };\n\n  const handleSendMessageSuccess = () => {\n    setText('');\n    setAttachedFiles([]);\n    setEditorState(EditorState.createEmpty());\n  };\n\n  const handleSubmit = () => {\n    onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit({\n      body: text,\n      files: attachedFiles,\n      thread_id: thread.uuid\n    });\n    handleSendMessageSuccess();\n  };\n\n  return __jsx(Flex, {\n    width: \"100%\",\n    borderTopWidth: \"1px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(Attachments, {\n    files: attachedFiles,\n    setFiles: setAttachedFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), __jsx(DraftEditorContainer, {\n    minHeight: \"unset\",\n    onClick: handleFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(DraftEditor, {\n    ref: editorRef,\n    plugins: plugins,\n    editorKey: 'editor',\n    onChange: handleChange,\n    editorState: editorState,\n    placeholder: \"Type an internal comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), __jsx(MentionSuggestions, {\n    open: open,\n    onOpenChange: onOpenChange,\n    entryComponent: MentionEntry,\n    suggestions: suggestions !== null && suggestions !== void 0 ? suggestions : [],\n    onSearchChange: onSearchChange,\n    onAddMention: () => {// get the mention object selected\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }))), __jsx(Stack, {\n    spacing: \"0\",\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(Emoji, {\n    onEmojiClick: handleEmojiClick,\n    iconProps: {\n      size: '20px',\n      color: '#74798F',\n      name: 'inbox-comment-compose-emoji'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(FilePicker, {\n    files: attachedFiles,\n    textAreaRef: editorRef,\n    setFiles: setAttachedFiles,\n    iconProps: {\n      size: '20px',\n      color: '#74798F',\n      name: 'inbox-comment-compose-file'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    variant: \"ghost\",\n    variantColor: \"blue\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"inbox-comment-send\",\n    size: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  })))));\n};\n\nfunction MentionEntry(props) {\n  const {\n    mention,\n    theme,\n    searchValue,\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    isFocused\n  } = props,\n        parentProps = _objectWithoutProperties(props, _excluded);\n\n  return __jsx(Box, _extends({}, parentProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, __jsx(Avatar, {\n    size: \"xs\",\n    name: mention.name,\n    src: mention.avatar,\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }), __jsx(SmallText, {\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, mention.name)));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/messages/compose/CommentCompose.tsx"],"names":["Avatar","Box","Flex","Icon","Stack","createMentionPlugin","defaultSuggestionsFilter","Button","SmallText","convertToRaw","EditorState","Modifier","draftToHtml","React","useCallback","useMemo","useRef","useState","Attachments","DraftEditor","DraftEditorContainer","Emoji","FilePicker","CommentCompose","props","text","thread","mentions","setText","onSubmit","attachedFiles","setAttachedFiles","editorRef","open","setOpen","suggestions","setSuggestions","MentionSuggestions","plugins","mentionPlugin","editorState","setEditorState","createEmpty","onOpenChange","_open","onSearchChange","value","handleChange","rawContentState","getCurrentContent","trigger","separator","handleFocus","current","focus","handleEmojiClick","event","emojiObject","currentContent","currentSelection","getSelection","newContent","replaceText","emoji","newEditorState","push","forceSelection","getSelectionAfter","handleSendMessageSuccess","handleSubmit","body","files","thread_id","uuid","MentionEntry","size","color","name","mention","theme","searchValue","isFocused","parentProps","avatar"],"mappings":"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","sourcesContent":["import { Avatar, Box, Flex, Icon, Stack } from '@chakra-ui/core';\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n  MentionData,\n  MentionPluginTheme,\n} from '@draft-js-plugins/mention';\nimport { ComposeIconsProps, ThreadSchema } from 'app/authenticated-app/inbox/inbox.types';\nimport { Button, SmallText } from 'app/components';\nimport { convertToRaw, EditorState, Modifier } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { IEmojiData } from 'emoji-picker-react';\nimport React, { MouseEvent, ReactElement, useCallback, useMemo, useRef, useState } from 'react';\nimport { Attachments } from './Attachments';\nimport { DraftEditor, DraftEditorContainer } from './DraftEditor';\nimport { Emoji } from './Emoji';\nimport { FilePicker } from './FilePicker';\nimport { MessageComposeFormProps } from './MessageCompose';\n\nexport type CommentComposeProps = Pick<\n  ComposeIconsProps,\n  'setText' | 'attachedFiles' | 'setAttachedFiles'\n> & {\n  thread: ThreadSchema;\n  mentions?: MentionData[];\n  text: MessageComposeFormProps['text'];\n  onSubmit?(\n    payload?: { body?: string; thread_id?: string; files?: File[] },\n    callback?: () => void,\n  ): void;\n};\n\nexport const CommentCompose = (props: CommentComposeProps) => {\n  const { text, thread, mentions, setText, onSubmit, attachedFiles, setAttachedFiles } = props;\n\n  const editorRef = useRef<any>(null);\n  const [open, setOpen] = useState(false);\n  const [suggestions, setSuggestions] = useState(mentions);\n\n  const { MentionSuggestions, plugins } = useMemo(() => {\n    const mentionPlugin = createMentionPlugin();\n    // eslint-disable-next-line no-shadow\n    const { MentionSuggestions } = mentionPlugin;\n    // eslint-disable-next-line no-shadow\n    const plugins = [mentionPlugin];\n    return { plugins, MentionSuggestions };\n  }, []);\n\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onOpenChange = useCallback((_open: boolean) => {\n    setOpen(_open);\n  }, []);\n\n  const onSearchChange = useCallback(\n    ({ value }: { value: string }) => {\n      setSuggestions(defaultSuggestionsFilter(value, mentions ?? []));\n    },\n    [mentions],\n  );\n\n  const handleChange = (editorState: EditorState) => {\n    const rawContentState = convertToRaw(editorState.getCurrentContent());\n    const text =\n      rawContentState &&\n      draftToHtml(rawContentState, {\n        trigger: '#',\n        separator: ' ',\n      });\n    setEditorState(editorState);\n    setText(text);\n  };\n\n  const handleFocus = () => {\n    if (editorRef.current) {\n      editorRef?.current?.focus();\n    }\n  };\n\n  const handleEmojiClick = (event: MouseEvent, emojiObject: IEmojiData) => {\n    const currentContent = editorState.getCurrentContent(),\n      currentSelection = editorState.getSelection();\n\n    const newContent = Modifier.replaceText(currentContent, currentSelection, emojiObject.emoji);\n\n    const newEditorState = EditorState.push(editorState, newContent, 'insert-characters');\n\n    setEditorState(EditorState.forceSelection(newEditorState, newContent.getSelectionAfter()));\n  };\n\n  const handleSendMessageSuccess = () => {\n    setText('');\n    setAttachedFiles([]);\n    setEditorState(EditorState.createEmpty());\n  };\n\n  const handleSubmit = () => {\n    onSubmit?.({ body: text, files: attachedFiles, thread_id: thread.uuid });\n    handleSendMessageSuccess();\n  };\n\n  return (\n    <Flex width=\"100%\" borderTopWidth=\"1px\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Box flex={1}>\n        <Attachments files={attachedFiles} setFiles={setAttachedFiles} />\n        <DraftEditorContainer minHeight=\"unset\" onClick={handleFocus}>\n          <DraftEditor\n            ref={editorRef}\n            plugins={plugins}\n            editorKey={'editor'}\n            onChange={handleChange}\n            editorState={editorState}\n            placeholder=\"Type an internal comment\"\n          />\n          <MentionSuggestions\n            open={open}\n            onOpenChange={onOpenChange}\n            entryComponent={MentionEntry}\n            suggestions={suggestions ?? []}\n            onSearchChange={onSearchChange}\n            onAddMention={() => {\n              // get the mention object selected\n            }}\n          />\n        </DraftEditorContainer>\n      </Box>\n      <Stack spacing=\"0\" isInline alignItems=\"center\">\n        <Box>\n          <Emoji\n            onEmojiClick={handleEmojiClick}\n            iconProps={{\n              size: '20px',\n              color: '#74798F',\n              name: 'inbox-comment-compose-emoji',\n            }}\n          />\n        </Box>\n        <Box>\n          <FilePicker\n            files={attachedFiles}\n            textAreaRef={editorRef}\n            setFiles={setAttachedFiles}\n            iconProps={{\n              size: '20px',\n              color: '#74798F',\n              name: 'inbox-comment-compose-file',\n            }}\n          />\n        </Box>\n        <Box>\n          <Button size=\"xs\" variant=\"ghost\" variantColor=\"blue\" onClick={handleSubmit}>\n            <Icon name=\"inbox-comment-send\" size=\"16px\" />\n          </Button>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport interface EntryComponentProps {\n  id: string;\n  role: string;\n  isFocused: boolean;\n  className?: string;\n  searchValue?: string;\n  mention: MentionData;\n  theme?: MentionPluginTheme;\n  onMouseDown(event: MouseEvent): void;\n  onMouseUp(event: MouseEvent): void;\n  onMouseEnter(event: MouseEvent): void;\n  'aria-selected'?: boolean | 'false' | 'true';\n}\n\nfunction MentionEntry(props: EntryComponentProps): ReactElement {\n  const {\n    mention,\n    theme,\n    searchValue, // eslint-disable-line @typescript-eslint/no-unused-vars\n    isFocused, // eslint-disable-line @typescript-eslint/no-unused-vars\n    ...parentProps\n  } = props;\n\n  return (\n    <Box {...parentProps}>\n      <Stack isInline alignItems=\"center\">\n        <Avatar size=\"xs\" name={mention.name} src={mention.avatar} role=\"presentation\" />\n        <SmallText color=\"gray.900\">{mention.name}</SmallText>\n      </Stack>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}