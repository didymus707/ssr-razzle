{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/cell-properties/select/editor.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// @ts-nocheck\nimport React, { useEffect, useState, useRef } from 'react';\nimport { DragHandle } from '../../../../../components';\nimport { Icon, Box, Popover, PopoverTrigger, PopoverContent, Input } from '@chakra-ui/core';\nimport { SelectOptionMenuWrapper } from '../../../list-view.styles';\nimport { PopoverListItem } from '../../popover-list-item';\nimport { select_option_colors } from '../../../list.data';\n\nconst SelectColorOption = props => {\n  return __jsx(\"div\", {\n    className: \"list-item space-between\",\n    onClick: () => props.onClick(props.color),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"color\",\n    style: {\n      backgroundColor: props.color,\n      borderColor: props.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), props.label), props.active && __jsx(Icon, {\n    name: \"check\",\n    size: \"15px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }\n  }));\n};\n\nconst SelectOptionMenu = props => {\n  const {\n    0: tempLabel,\n    1: setTempLabel\n  } = useState(props.name);\n  const initialFocusRef = useRef();\n  useEffect(() => {\n    setTempLabel(props.name);\n  }, [props.name]);\n\n  const handleTempLabelChange = e => {\n    setTempLabel(e.target.value);\n  };\n\n  const handleEnterPressed = e => {\n    if (e.key !== 'Enter') return;\n    props.updateSelectOption(props.id, {\n      name: e.target.value,\n      color: props.color\n    });\n  };\n\n  const handleSelectOptionColorChange = color => {\n    props.updateSelectOption(props.id, {\n      name: props.name,\n      color\n    });\n  };\n\n  const handleDeleteOption = () => {\n    props.updateSelectOption(props.id, {\n      is_deleted: true\n    });\n  };\n\n  return __jsx(Popover, {\n    placement: \"bottom\",\n    initialFocusRef: initialFocusRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-bg\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    marginTop: \"10px\",\n    name: \"more\",\n    size: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), __jsx(PopoverContent, {\n    zIndex: 1000000000,\n    width: \"max-content\",\n    minWidth: \"200px\",\n    boxShadow: \"none\",\n    _focus: {\n      boxShadow: 'none',\n      outline: 'none'\n    },\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(SelectOptionMenuWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"input-item\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    variant: \"filled\",\n    onChange: handleTempLabelChange,\n    focusBorderColor: \"none\",\n    value: tempLabel,\n    height: 25,\n    fontSize: 13,\n    ref: initialFocusRef,\n    onKeyPress: handleEnterPressed,\n    style: {\n      backgroundColor: '#EDF2F7'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), __jsx(PopoverListItem, {\n    label: \"Delete\",\n    icon: \"trash\",\n    onClick: handleDeleteOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    fontSize: \"10px\",\n    fontWeight: \"600\",\n    color: \"#8c8c8c\",\n    paddingX: \"8px\",\n    paddingY: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"COLORS\"), select_option_colors.map((color, index) => __jsx(SelectColorOption, _extends({\n    active: color.color === props.color,\n    key: index\n  }, color, {\n    onClick: handleSelectOptionColorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  })))))));\n};\n\nconst OptionItem = props => {\n  const handleOptionClicked = () => {\n    props.updateValue([props.id]);\n  };\n\n  return __jsx(\"div\", {\n    className: \"option-item\",\n    onClick: handleOptionClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, __jsx(DragHandle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"name\",\n    style: _objectSpread({\n      backgroundColor: props.color || '#cecdca80'\n    }, props.itemStyles),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, props.name)), __jsx(SelectOptionMenu, _extends({}, props, {\n    updateSelectOption: props.updateSelectOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport const SelectCellEditor = props => {\n  const {\n    updateValue,\n    updateSelectOption,\n    allowCreate,\n    optionItemStyles = {}\n  } = props;\n  const options = props.options.filter(option => !option.isDeleted);\n  return __jsx(\"div\", {\n    className: \"select-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Select an option\", allowCreate && ' or create one'), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, options.map(i => __jsx(OptionItem, _extends({\n    key: i.id\n  }, i, {\n    updateValue: updateValue,\n    updateSelectOption: updateSelectOption,\n    itemStyles: optionItemStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/cell-properties/select/editor.tsx"],"names":["React","useEffect","useState","useRef","DragHandle","Icon","Box","Popover","PopoverTrigger","PopoverContent","Input","SelectOptionMenuWrapper","PopoverListItem","select_option_colors","SelectColorOption","props","onClick","color","backgroundColor","borderColor","label","active","SelectOptionMenu","tempLabel","setTempLabel","name","initialFocusRef","handleTempLabelChange","e","target","value","handleEnterPressed","key","updateSelectOption","id","handleSelectOptionColorChange","handleDeleteOption","is_deleted","stopPropagation","boxShadow","outline","map","index","OptionItem","handleOptionClicked","updateValue","itemStyles","SelectCellEditor","allowCreate","optionItemStyles","options","filter","option","isDeleted","i"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, { useEffect, useState, useRef } from 'react';\nimport { DragHandle } from '../../../../../components';\nimport { Icon, Box, Popover, PopoverTrigger, PopoverContent, Input } from '@chakra-ui/core';\nimport { SelectOptionMenuWrapper } from '../../../list-view.styles';\nimport { PopoverListItem } from '../../popover-list-item';\nimport { select_option_colors } from '../../../list.data';\n\ntype SelectColorOptionProps = {\n  color: string;\n  label: string;\n  active?: boolean;\n  onClick?: () => any;\n};\n\nconst SelectColorOption = (props: SelectColorOptionProps) => {\n  return (\n    <div className=\"list-item space-between\" onClick={() => props.onClick(props.color)}>\n      <div className=\"left\">\n        <div\n          className=\"color\"\n          style={{\n            backgroundColor: props.color,\n            borderColor: props.color,\n          }}\n        />\n        {props.label}\n      </div>\n      {props.active && <Icon name=\"check\" size=\"15px\" />}\n    </div>\n  );\n};\n\nconst SelectOptionMenu = (props: any) => {\n  const [tempLabel, setTempLabel] = useState(props.name);\n  const initialFocusRef = useRef();\n\n  useEffect(() => {\n    setTempLabel(props.name);\n  }, [props.name]);\n\n  const handleTempLabelChange = (e: any) => {\n    setTempLabel(e.target.value);\n  };\n\n  const handleEnterPressed = (e: any) => {\n    if (e.key !== 'Enter') return;\n    props.updateSelectOption(props.id, {\n      name: e.target.value,\n      color: props.color,\n    });\n  };\n\n  const handleSelectOptionColorChange = (color: string) => {\n    props.updateSelectOption(props.id, {\n      name: props.name,\n      color,\n    });\n  };\n\n  const handleDeleteOption = () => {\n    props.updateSelectOption(props.id, {\n      is_deleted: true,\n    });\n  };\n\n  return (\n    <Popover placement=\"bottom\" initialFocusRef={initialFocusRef}>\n      <>\n        <PopoverTrigger>\n          <div className=\"icon-bg\" onClick={(e: any) => e.stopPropagation()}>\n            <Icon marginTop=\"10px\" name=\"more\" size=\"12px\" />\n          </div>\n        </PopoverTrigger>\n        <PopoverContent\n          zIndex={1000000000}\n          width=\"max-content\"\n          minWidth=\"200px\"\n          boxShadow=\"none\"\n          _focus={{\n            boxShadow: 'none',\n            outline: 'none',\n          }}\n          onClick={(e: any) => e.stopPropagation()}\n        >\n          <SelectOptionMenuWrapper>\n            <Box className=\"input-item\" padding=\"none\">\n              <Input\n                variant=\"filled\"\n                onChange={handleTempLabelChange}\n                focusBorderColor=\"none\"\n                value={tempLabel}\n                height={25}\n                fontSize={13}\n                ref={initialFocusRef}\n                onKeyPress={handleEnterPressed}\n                style={{\n                  backgroundColor: '#EDF2F7',\n                }}\n              />\n            </Box>\n            <PopoverListItem label=\"Delete\" icon=\"trash\" onClick={handleDeleteOption} />\n            <hr />\n            <Box fontSize=\"10px\" fontWeight=\"600\" color=\"#8c8c8c\" paddingX=\"8px\" paddingY=\"5px\">\n              COLORS\n            </Box>\n            {select_option_colors.map((color: any, index: number) => (\n              <SelectColorOption\n                active={color.color === props.color}\n                key={index}\n                {...color}\n                onClick={handleSelectOptionColorChange}\n              />\n            ))}\n          </SelectOptionMenuWrapper>\n        </PopoverContent>\n      </>\n    </Popover>\n  );\n};\n\nconst OptionItem = (props: any) => {\n  const handleOptionClicked = () => {\n    props.updateValue([props.id]);\n  };\n\n  return (\n    <div className=\"option-item\" onClick={handleOptionClicked}>\n      <Box className=\"left\">\n        <DragHandle />\n        <div\n          className=\"name\"\n          style={{\n            backgroundColor: props.color || '#cecdca80',\n            ...props.itemStyles,\n          }}\n        >\n          {props.name}\n        </div>\n      </Box>\n      <SelectOptionMenu {...props} updateSelectOption={props.updateSelectOption} />\n    </div>\n  );\n};\n\nexport const SelectCellEditor = (props: any) => {\n  const { updateValue, updateSelectOption, allowCreate, optionItemStyles = {} } = props;\n  const options = props.options.filter((option: any) => !option.isDeleted);\n\n  return (\n    <div className=\"select-editor\">\n      <div className=\"description-text\">Select an option{allowCreate && ' or create one'}</div>\n      <div>\n        {options.map((i: any) => (\n          <OptionItem\n            key={i.id}\n            {...i}\n            updateValue={updateValue}\n            updateSelectOption={updateSelectOption}\n            itemStyles={optionItemStyles}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}