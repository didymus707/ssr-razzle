{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/component/developers/api-keys.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Heading, Stack, Text, useDisclosure, useToast } from '@chakra-ui/core';\nimport React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { ConfirmModal, EmptyState, ToastBox, Button } from '../../../../components';\nimport { selectApiKeys } from '../../selectors';\nimport { revokeAPIKey, generateAPIKey } from '../../thunks';\nimport { APIKeyItem } from './api-key-item';\nimport { NewAPIKeyModal } from './new-api-key-modal';\nimport launchApp from './launch-app.svg';\nconst connector = connect(null, {\n  revokeAPIKey,\n  generateAPIKey\n});\nexport const APIKeys = connector(props => {\n  const {\n    revokeAPIKey,\n    generateAPIKey\n  } = props;\n  const toast = useToast();\n  const apiKeys = useSelector(selectApiKeys);\n  const {\n    isOpen,\n    onClose,\n    onOpen\n  } = useDisclosure();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [apiKey, setApiKey] = React.useState();\n  const [apiKeyToDelete, setApiKeyToDelete] = React.useState();\n\n  const handleRevokeAPIKey = async () => {\n    if (apiKeyToDelete) {\n      try {\n        setIsLoading(true);\n        await revokeAPIKey(apiKeyToDelete);\n        setIsLoading(false);\n        setApiKeyToDelete(undefined);\n      } catch (error) {\n        setIsLoading(false);\n        toast({\n          position: 'bottom-left',\n          render: ({\n            onClose\n          }) => __jsx(ToastBox, {\n            onClose: onClose,\n            message: error,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 36\n            }\n          })\n        });\n      }\n    }\n  };\n\n  const handleGenerateAPIKey = async () => {\n    try {\n      setIsLoading(true); //@ts-ignore\n\n      const {\n        auth_key\n      } = await generateAPIKey();\n      setApiKey(auth_key.key);\n      setIsLoading(false);\n      onOpen();\n    } catch (error) {\n      setIsLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  };\n\n  const handleCloseNewAPIKeyModal = () => {\n    setApiKey(undefined);\n    onClose();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Stack, {\n    mb: \"2rem\",\n    isInline: true,\n    spacing: \"0\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    pb: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    pb: \"0.2rem\",\n    fontSize: \"1.2rem\",\n    color: \"#333333\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Standard keys\"), __jsx(Text, {\n    color: \"black\",\n    fontSize: \"0.8rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"These keys will allow you to authenticate API requests\")), __jsx(Button, {\n    size: \"sm\",\n    variantColor: \"blue\",\n    leftIcon: \"small-add\",\n    isLoading: isLoading,\n    onClick: handleGenerateAPIKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Generate secret key\")), __jsx(Box, {\n    pb: \"180px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, apiKeys.length ? __jsx(React.Fragment, null, __jsx(Stack, {\n    isInline: true,\n    pt: \"1rem\",\n    spacing: \"1rem\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    borderBottomWidth: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    marginBottom: \"1rem\",\n    width: ['calc(50% - 1rem)', 'calc(50% - 1rem)', 'calc(25% - 1rem)'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    fontWeight: \"500\",\n    fontSize: \"0.875rem\",\n    color: \"gray.900\",\n    textTransform: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Token\")), __jsx(Box, {\n    marginBottom: \"1rem\",\n    width: ['calc(50% - 1rem)', 'calc(50% - 1rem)', 'calc(25% - 1rem)'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    fontWeight: \"500\",\n    fontSize: \"0.875rem\",\n    color: \"gray.900\",\n    textTransform: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Status\")), __jsx(Box, {\n    marginBottom: \"1rem\",\n    width: ['calc(50% - 1rem)', 'calc(50% - 1rem)', 'calc(25% - 1rem)'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    fontWeight: \"500\",\n    fontSize: \"0.875rem\",\n    color: \"gray.900\",\n    textTransform: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Created\")), __jsx(Box, {\n    marginBottom: \"1rem\",\n    width: ['calc(25% - 1rem)', 'calc(50% - 1rem)', 'calc(25% - 1rem)'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  })), apiKeys.map(item => __jsx(APIKeyItem, {\n    key: item.id,\n    item: item,\n    onRevokeKey: setApiKeyToDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }))) : __jsx(EmptyState, {\n    py: \"100px\",\n    imageSize: \"120px\",\n    image: launchApp,\n    heading: \"No API keys generated yet\",\n    contentContainerProps: {\n      mt: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })), __jsx(ConfirmModal, {\n    title: \"Revoke API Key\",\n    isLoading: isLoading,\n    isOpen: !!apiKeyToDelete,\n    onConfirm: handleRevokeAPIKey,\n    onClose: () => setApiKeyToDelete(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), __jsx(NewAPIKeyModal, {\n    apiKey: apiKey,\n    isOpen: isOpen,\n    onClose: handleCloseNewAPIKeyModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/component/developers/api-keys.tsx"],"names":["Box","Heading","Stack","Text","useDisclosure","useToast","React","connect","useSelector","ConfirmModal","EmptyState","ToastBox","Button","selectApiKeys","revokeAPIKey","generateAPIKey","APIKeyItem","NewAPIKeyModal","launchApp","connector","APIKeys","props","toast","apiKeys","isOpen","onClose","onOpen","isLoading","setIsLoading","useState","apiKey","setApiKey","apiKeyToDelete","setApiKeyToDelete","handleRevokeAPIKey","undefined","error","position","render","handleGenerateAPIKey","auth_key","key","handleCloseNewAPIKeyModal","length","map","item","id","mt"],"mappings":"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","sourcesContent":["import { Box, Heading, Stack, Text, useDisclosure, useToast } from '@chakra-ui/core';\nimport React from 'react';\nimport { connect, ConnectedProps, useSelector } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { ConfirmModal, EmptyState, ToastBox, Button } from '../../../../components';\nimport { selectApiKeys } from '../../selectors';\nimport { APIKey } from '../../settings.types';\nimport { revokeAPIKey, generateAPIKey } from '../../thunks';\nimport { APIKeyItem } from './api-key-item';\nimport { NewAPIKeyModal } from './new-api-key-modal';\nimport launchApp from './launch-app.svg';\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = RouteComponentProps & PropsFromRedux;\n\nconst connector = connect(null, { revokeAPIKey, generateAPIKey });\n\nexport const APIKeys = connector((props: Props) => {\n  const { revokeAPIKey, generateAPIKey } = props;\n\n  const toast = useToast();\n  const apiKeys = useSelector(selectApiKeys);\n  const { isOpen, onClose, onOpen } = useDisclosure();\n\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [apiKey, setApiKey] = React.useState<string | undefined>();\n  const [apiKeyToDelete, setApiKeyToDelete] = React.useState<APIKey | undefined>();\n\n  const handleRevokeAPIKey = async () => {\n    if (apiKeyToDelete) {\n      try {\n        setIsLoading(true);\n        await revokeAPIKey(apiKeyToDelete);\n        setIsLoading(false);\n        setApiKeyToDelete(undefined);\n      } catch (error) {\n        setIsLoading(false);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n        });\n      }\n    }\n  };\n\n  const handleGenerateAPIKey = async () => {\n    try {\n      setIsLoading(true);\n      //@ts-ignore\n      const { auth_key } = await generateAPIKey();\n      setApiKey(auth_key.key);\n      setIsLoading(false);\n      onOpen();\n    } catch (error) {\n      setIsLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  };\n\n  const handleCloseNewAPIKeyModal = () => {\n    setApiKey(undefined);\n    onClose();\n  };\n\n  return (\n    <>\n      <Stack\n        mb=\"2rem\"\n        isInline\n        spacing=\"0\"\n        flexWrap=\"wrap\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box pb=\"0.5rem\">\n          <Heading pb=\"0.2rem\" fontSize=\"1.2rem\" color=\"#333333\" fontWeight=\"semibold\">\n            Standard keys\n          </Heading>\n          <Text color=\"black\" fontSize=\"0.8rem\">\n            These keys will allow you to authenticate API requests\n          </Text>\n        </Box>\n        <Button\n          size=\"sm\"\n          variantColor=\"blue\"\n          leftIcon=\"small-add\"\n          isLoading={isLoading}\n          onClick={handleGenerateAPIKey}\n        >\n          Generate secret key\n        </Button>\n      </Stack>\n\n      <Box pb=\"180px\">\n        {apiKeys.length ? (\n          <>\n            <Stack\n              isInline\n              pt=\"1rem\"\n              spacing=\"1rem\"\n              flexWrap=\"wrap\"\n              alignItems=\"center\"\n              borderBottomWidth=\"1px\"\n            >\n              <Box\n                marginBottom=\"1rem\"\n                width={['calc(50% - 1rem)', 'calc(50% - 1rem)', 'calc(25% - 1rem)']}\n              >\n                <Text\n                  fontWeight=\"500\"\n                  fontSize=\"0.875rem\"\n                  color=\"gray.900\"\n                  textTransform=\"uppercase\"\n                >\n                  Token\n                </Text>\n              </Box>\n              <Box\n                marginBottom=\"1rem\"\n                width={['calc(50% - 1rem)', 'calc(50% - 1rem)', 'calc(25% - 1rem)']}\n              >\n                <Text\n                  fontWeight=\"500\"\n                  fontSize=\"0.875rem\"\n                  color=\"gray.900\"\n                  textTransform=\"uppercase\"\n                >\n                  Status\n                </Text>\n              </Box>\n              <Box\n                marginBottom=\"1rem\"\n                width={['calc(50% - 1rem)', 'calc(50% - 1rem)', 'calc(25% - 1rem)']}\n              >\n                <Text\n                  fontWeight=\"500\"\n                  fontSize=\"0.875rem\"\n                  color=\"gray.900\"\n                  textTransform=\"uppercase\"\n                >\n                  Created\n                </Text>\n              </Box>\n              <Box\n                marginBottom=\"1rem\"\n                width={['calc(25% - 1rem)', 'calc(50% - 1rem)', 'calc(25% - 1rem)']}\n              ></Box>\n            </Stack>\n            {apiKeys.map(item => (\n              <APIKeyItem key={item.id} item={item} onRevokeKey={setApiKeyToDelete} />\n            ))}\n          </>\n        ) : (\n          <EmptyState\n            py=\"100px\"\n            imageSize=\"120px\"\n            image={launchApp}\n            heading=\"No API keys generated yet\"\n            contentContainerProps={{ mt: '1rem' }}\n          />\n        )}\n      </Box>\n      <ConfirmModal\n        title=\"Revoke API Key\"\n        isLoading={isLoading}\n        isOpen={!!apiKeyToDelete}\n        onConfirm={handleRevokeAPIKey}\n        onClose={() => setApiKeyToDelete(undefined)}\n      />\n      <NewAPIKeyModal apiKey={apiKey} isOpen={isOpen} onClose={handleCloseNewAPIKeyModal} />\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}