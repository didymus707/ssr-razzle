{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"accept\", \"maxSize\", \"children\", \"onUpload\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/FileUploader/index.tsx\";\nvar __jsx = React.createElement;\nimport { Box } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport * as React from 'react';\nimport { useDropzone } from 'react-dropzone';\nconst FileUploaderContainer = styled(Box)`\n  cursor: pointer;\n\n  .fileupload-container {\n    width: 100%;\n    height: 100%;\n    outline: none;\n  }\n\n  .container {\n    &:focus {\n      outline: none;\n    }\n  }\n`;\nexport function FileUploader(_ref) {\n  let {\n    accept,\n    maxSize,\n    children,\n    onUpload = console.log\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const onDrop = React.useCallback(acceptedFiles => {\n    onUpload(acceptedFiles);\n  }, [onUpload]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept,\n    onDrop\n  });\n  return __jsx(FileUploaderContainer, _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", _extends({}, getRootProps({\n    className: 'fileupload-container'\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), children));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/FileUploader/index.tsx"],"names":["Box","styled","React","useDropzone","FileUploaderContainer","FileUploader","accept","maxSize","children","onUpload","console","log","rest","onDrop","useCallback","acceptedFiles","getRootProps","getInputProps","className"],"mappings":";;;;;AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAGA,MAAMC,qBAAqB,GAAGH,MAAM,CAACD,GAAD,CAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,OAAO,SAASK,YAAT,OAMe;AAAA,MANO;AAC3BC,IAAAA,MAD2B;AAE3BC,IAAAA,OAF2B;AAG3BC,IAAAA,QAH2B;AAI3BC,IAAAA,QAAQ,GAAGC,OAAO,CAACC;AAJQ,GAMP;AAAA,MADjBC,IACiB;;AACpB,QAAMC,MAAM,GAAGX,KAAK,CAACY,WAAN,CACbC,aAAa,IAAI;AACfN,IAAAA,QAAQ,CAACM,aAAD,CAAR;AACD,GAHY,EAIb,CAACN,QAAD,CAJa,CAAf;AAMA,QAAM;AAAEO,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCd,WAAW,CAAC;AAClDG,IAAAA,MADkD;AAElDO,IAAAA;AAFkD,GAAD,CAAnD;AAKA,SACE,MAAC,qBAAD,eAA2BD,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,0BAASI,YAAY,CAAC;AAAEE,IAAAA,SAAS,EAAE;AAAb,GAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,4BAAWD,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEGT,QAFH,CADF,CADF;AAQD","sourcesContent":["import { Box } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport * as React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FileUploaderProps } from './types';\n\nconst FileUploaderContainer = styled(Box)`\n  cursor: pointer;\n\n  .fileupload-container {\n    width: 100%;\n    height: 100%;\n    outline: none;\n  }\n\n  .container {\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nexport function FileUploader({\n  accept,\n  maxSize,\n  children,\n  onUpload = console.log,\n  ...rest\n}: FileUploaderProps) {\n  const onDrop = React.useCallback(\n    acceptedFiles => {\n      onUpload(acceptedFiles);\n    },\n    [onUpload]\n  );\n  const { getRootProps, getInputProps } = useDropzone({\n    accept,\n    onDrop,\n  });\n\n  return (\n    <FileUploaderContainer {...rest}>\n      <div {...getRootProps({ className: 'fileupload-container' })}>\n        <input {...getInputProps()} />\n        {children}\n      </div>\n    </FileUploaderContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}