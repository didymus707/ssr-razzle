{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/payments/component/onboarding/components/content/get-started.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Box, Icon, Select, useToast } from '@chakra-ui/core';\nimport { useFormik } from 'formik';\nimport { ToastBox, Button } from 'app/components';\nexport const GetStarted = props => {\n  const {\n    0: updateLoading,\n    1: setUpdateLoading\n  } = useState(false);\n  const toast = useToast();\n\n  const handleProceed = async values => {\n    setUpdateLoading(true);\n    const res = await props.updatePaymentSetup(_objectSpread(_objectSpread({}, values), {}, {\n      status: 'pending'\n    }));\n    setUpdateLoading(false);\n\n    if (!res) {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: \"Unable to update payment setup, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        })\n      });\n      return;\n    }\n\n    props.setStage('id-information');\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      country: props.data.country,\n      business_type: props.data.business_type\n    },\n    onSubmit: handleProceed\n  });\n  const {\n    values\n  } = formik;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Setup your Simpu payments account\"), __jsx(\"div\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Basic information on your business and use\")), __jsx(\"div\", {\n    className: \"form-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"field-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Country\"), __jsx(Select, {\n    name: \"country\",\n    value: values.country,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"Nigeria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Nigeria\")))), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"field-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Business Type\"), __jsx(Select, {\n    name: \"business_type\",\n    value: values.business_type,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"individual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Individual\"), __jsx(\"option\", {\n    value: \"company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Company\")))), __jsx(Box, {\n    className: \"financial-container\",\n    padding: \"20px 30px !important\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"info\",\n    marginRight: \"15px\",\n    size: \"26px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Please note that your choice of business type determines the account name that will be assigned to your Simpu Benefits bank account which would be provisioned on your behalf\")))), __jsx(\"div\", {\n    className: \"action-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variantColor: \"blue\",\n    onClick: formik.handleSubmit,\n    isLoading: updateLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Next\")));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/payments/component/onboarding/components/content/get-started.tsx"],"names":["React","useState","Box","Icon","Select","useToast","useFormik","ToastBox","Button","GetStarted","props","updateLoading","setUpdateLoading","toast","handleProceed","values","res","updatePaymentSetup","status","position","render","onClose","setStage","formik","initialValues","country","data","business_type","onSubmit","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Icon, Select, useToast } from '@chakra-ui/core';\nimport { OnboardingStage } from '../../../../payments.types';\nimport { useFormik } from 'formik';\nimport { ToastBox, Button } from 'app/components';\n\ninterface Props {\n  stage: OnboardingStage;\n  setStage: Function;\n  updatePaymentSetup: Function;\n  data: InitialValueProps;\n}\n\ninterface InitialValueProps {\n  country: string;\n  business_type: string;\n}\n\nexport const GetStarted = (props: Props) => {\n  const [updateLoading, setUpdateLoading] = useState<boolean>(false);\n\n  const toast = useToast();\n\n  const handleProceed = async (values: InitialValueProps) => {\n    setUpdateLoading(true);\n    const res = await props.updatePaymentSetup({ ...values, status: 'pending' });\n    setUpdateLoading(false);\n    if (!res) {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox onClose={onClose} message=\"Unable to update payment setup, please try again\" />\n        ),\n      });\n      return;\n    }\n    props.setStage('id-information');\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      country: props.data.country,\n      business_type: props.data.business_type,\n    },\n    onSubmit: handleProceed,\n  });\n\n  const { values } = formik;\n\n  return (\n    <div>\n      <div className=\"heading\">\n        <div className=\"title\">Setup your Simpu payments account</div>\n        <div className=\"subtitle\">Basic information on your business and use</div>\n      </div>\n\n      <div className=\"form-section\">\n        <div className=\"row\">\n          <div className=\"field-item\">\n            <div className=\"label\">Country</div>\n            <Select name=\"country\" value={values.country} onChange={formik.handleChange}>\n              <option value=\"Nigeria\">Nigeria</option>\n            </Select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"field-item\">\n            <div className=\"label\">Business Type</div>\n            <Select\n              name=\"business_type\"\n              value={values.business_type}\n              onChange={formik.handleChange}\n            >\n              <option value=\"individual\">Individual</option>\n              <option value=\"company\">Company</option>\n            </Select>\n          </div>\n        </div>\n\n        <Box className=\"financial-container\" padding=\"20px 30px !important\">\n          <div className=\"info-container\">\n            <Icon name=\"info\" marginRight=\"15px\" size=\"26px\" />\n            <Box>\n              Please note that your choice of business type determines the account name that will be\n              assigned to your Simpu Benefits bank account which would be provisioned on your behalf\n            </Box>\n          </div>\n        </Box>\n      </div>\n\n      <div className=\"action-section\">\n        <Button variantColor=\"blue\" onClick={formik.handleSubmit} isLoading={updateLoading}>\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}