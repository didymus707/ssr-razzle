{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/resources/create-resource/stages/configure-resource.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Box, Checkbox, IconButton, Tooltip } from '@chakra-ui/core';\nimport { Button, ToastBox, Input } from 'app/components';\nimport { resource_types } from '../../../../../../list.data';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Divider, Icon, Image, useToast } from '@chakra-ui/core/dist';\nimport { useHistory } from 'react-router';\nimport googleSignInButton from 'app/authenticated-app/lists/assets/btn_google_signin_dark_normal_web@2x.png';\nconst initialValues = {\n  name: '',\n  account_name: '',\n  host: '',\n  port: '',\n  dbname: '',\n  username: '',\n  password: '',\n  ssh: false,\n  bastion_host: '',\n  bastion_port: '22',\n  bastion_user: 'simpu'\n};\nconst DBValidationSchema = yup.object().shape({\n  name: yup.string().required('Connection name is required'),\n  host: yup.string().required('Host address is required'),\n  port: yup.string().required('Database port is required'),\n  username: yup.string().required('Database user is required'),\n  password: yup.string().required('Database password is required'),\n  dbname: yup.string().required('Database name is required')\n});\nconst AppValidationSchema = yup.object().shape({\n  name: yup.string().required('Connection name is required'),\n  account_name: yup.string().required('Account name is required')\n});\nconst APIValidationSchema = yup.object().shape({\n  name: yup.string().required('Connection name is required')\n});\nconst APIPasswordAuthValidationSchema = yup.object().shape({\n  name: yup.string().required('Connection name is required'),\n  username: yup.string().required('Username name is required'),\n  password: yup.string().required('Password name is required')\n});\nexport const ConfigureResourceType = props => {\n  const {\n    0: testConnectionLoading,\n    1: setTestConnectionLoading\n  } = useState(false);\n  const {\n    0: connectionVerified,\n    1: setConnectionVerified\n  } = useState(false);\n  const resourceType = resource_types.find(i => i.key === props.resourceType);\n  const toast = useToast();\n  const routerHistory = useHistory();\n\n  const testConnection = async () => {\n    setTestConnectionLoading(true);\n\n    try {\n      const payload = _objectSpread(_objectSpread({}, values), {}, {\n        ssh_config: {\n          host: values.bastion_host,\n          port: values.bastion_port,\n          user: values.bastion_user\n        }\n      });\n\n      const response_message = await props.testResourceConnection(payload, resourceType === null || resourceType === void 0 ? void 0 : resourceType.key);\n      toast({\n        position: 'bottom-left',\n        render: () => __jsx(ToastBox, {\n          status: \"success\",\n          message: response_message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }\n        })\n      });\n      setConnectionVerified(true);\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => __jsx(ToastBox, {\n          status: \"error\",\n          message: e,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }\n        })\n      });\n    }\n\n    setTestConnectionLoading(false);\n  };\n\n  const createResource = async () => {\n    setSubmitting(true);\n\n    try {\n      const payload = _objectSpread(_objectSpread({}, values), {}, {\n        ssh_config: {\n          host: values.bastion_host,\n          port: values.bastion_port,\n          user: values.bastion_user\n        }\n      });\n\n      await props.createResource(payload, resourceType === null || resourceType === void 0 ? void 0 : resourceType.key);\n      toast({\n        position: 'bottom-left',\n        render: () => __jsx(ToastBox, {\n          status: \"success\",\n          message: `${resourceType === null || resourceType === void 0 ? void 0 : resourceType.label} connection added successfully`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        })\n      });\n      routerHistory.push('/s/lists/connections');\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => __jsx(ToastBox, {\n          message: (e === null || e === void 0 ? void 0 : e.message) || e,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 23\n          }\n        })\n      });\n    }\n\n    setSubmitting(false);\n  };\n\n  const ip = false ? '159.65.91.153' : '134.209.187.125';\n\n  const handleCopyIP = () => {\n    navigator.clipboard.writeText(ip);\n    toast({\n      position: 'bottom-left',\n      render: () => __jsx(ToastBox, {\n        status: \"success\",\n        message: \"IP address copied to clipboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      })\n    });\n  };\n\n  const requestAuth = async () => {\n    setSubmitting(true);\n\n    try {\n      const auth_url = await props.requestResourceAuth(values.name, resourceType === null || resourceType === void 0 ? void 0 : resourceType.key);\n      window.location.href = auth_url;\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => __jsx(ToastBox, {\n          message: \"Unable to connect Google Sheets account, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }\n        })\n      });\n    }\n\n    setSubmitting(false);\n  };\n\n  const requestAppAuth = async () => {\n    setSubmitting(true);\n\n    try {\n      const authURL = await props.requestAppResourceAuth(resourceType === null || resourceType === void 0 ? void 0 : resourceType.key, {\n        name: values.name,\n        organisation_account_name: values.account_name\n      });\n      window.location.href = authURL;\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => __jsx(ToastBox, {\n          message: \"Unable to connect to account, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 23\n          }\n        })\n      });\n    }\n\n    setSubmitting(false);\n  };\n\n  const submitAppAuth = async () => {\n    setSubmitting(true);\n\n    try {\n      const {\n        username,\n        password\n      } = values;\n      await props.submitAppResourceAuth(resourceType === null || resourceType === void 0 ? void 0 : resourceType.key, {\n        username,\n        password\n      }, {\n        organisation_account_name: values.name\n      });\n      routerHistory.push('/s/lists/connections?connectStatus=success&connectType=Mambu');\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => __jsx(ToastBox, {\n          message: \"Unable to connect to account, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 23\n          }\n        })\n      });\n    }\n\n    setSubmitting(false);\n  };\n\n  const submit = async () => {\n    if ((resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'api') await requestAuth();else if (resourceType !== null && resourceType !== void 0 && resourceType.passwordAuth) await submitAppAuth();else if ((resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'app') await requestAppAuth();else if ((resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'database') await createResource();\n  };\n\n  const formik = useFormik({\n    validationSchema: resourceType !== null && resourceType !== void 0 && resourceType.passwordAuth ? APIPasswordAuthValidationSchema : (resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'api' ? APIValidationSchema : (resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'app' ? AppValidationSchema : DBValidationSchema,\n    initialValues,\n    onSubmit: submit\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleBlur,\n    handleReset,\n    touched,\n    isSubmitting,\n    setSubmitting\n  } = formik;\n  useEffect(() => {\n    setConnectionVerified(false);\n  }, [values]);\n  return __jsx(Box, {\n    className: \"section-resource-config\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: \"section-resource-config-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    label: \"Name\",\n    isInvalid: touched.name && !!errors.name,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onReset: handleReset,\n    errorMessage: errors.name,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    className: \"description\",\n    mt: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, \"Your \", resourceType === null || resourceType === void 0 ? void 0 : resourceType.label, \" connection needs a unique name. You'll use this name when importing data into your Simpu list.\"))), ['shopify', 'woo-commerce'].includes((resourceType === null || resourceType === void 0 ? void 0 : resourceType.key) || '') && __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    label: \"Account Name\",\n    isInvalid: touched.account_name && !!errors.account_name,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"account_name\",\n    value: values.account_name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onReset: handleReset,\n    errorMessage: errors.account_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    className: \"description\",\n    mt: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, \"This should be the name of your \", resourceType === null || resourceType === void 0 ? void 0 : resourceType.label, \" store\"))), (resourceType === null || resourceType === void 0 ? void 0 : resourceType.passwordAuth) && __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Username\",\n    isInvalid: touched.username && !!errors.username,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"username\",\n    value: values.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onReset: handleReset,\n    errorMessage: errors.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }), __jsx(Box, {\n    className: \"description\",\n    mt: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, \"This should be the username of your \", resourceType === null || resourceType === void 0 ? void 0 : resourceType.label, \" account\"))), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Password\",\n    isInvalid: touched.password && !!errors.password,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onReset: handleReset,\n    errorMessage: errors.password,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  })))), (resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'database' && __jsx(React.Fragment, null, __jsx(Divider, {\n    marginY: \"35px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Host\",\n    isInvalid: touched.host && values.host.length === 0,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"host\",\n    value: values.host,\n    errorMessage: errors.host,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }))), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Port\",\n    isInvalid: touched.port && values.port.length === 0,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"port\",\n    value: values.port,\n    errorMessage: errors.port,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }))), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Database Name\",\n    isInvalid: touched.dbname && values.dbname.length === 0,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"dbname\",\n    value: values.dbname,\n    errorMessage: errors.dbname,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }))), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Username\",\n    isInvalid: touched.username && values.username.length === 0,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"username\",\n    value: values.username,\n    errorMessage: errors.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }))), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Password\",\n    isInvalid: touched.password && values.password.length === 0,\n    size: \"sm\",\n    mb: \"5px\",\n    name: \"password\",\n    value: values.password,\n    errorMessage: errors.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }))), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, __jsx(Checkbox, {\n    isChecked: values.ssh,\n    name: \"ssh\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onReset: handleReset,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    fontSize: \"14px\",\n    mt: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 19\n    }\n  }, \"Enable SSH tunnel\"))))), (resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'database' && values.ssh && __jsx(React.Fragment, null, __jsx(Divider, {\n    marginY: \"35px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Bastion Host\",\n    size: \"sm\",\n    mb: \"10px\",\n    name: \"bastion_host\",\n    value: values.bastion_host,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }))), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Bastion Port\",\n    size: \"sm\",\n    mb: \"10px\",\n    name: \"bastion_port\",\n    value: values.bastion_port,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 17\n    }\n  }))), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Bastion User\",\n    size: \"sm\",\n    mb: \"10px\",\n    name: \"bastion_user\",\n    value: values.bastion_user,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 17\n    }\n  }))), __jsx(Box, {\n    className: \"section-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 15\n    }\n  }, \"SSH public key authentication\"), __jsx(Box, {\n    onClick: () => window.open(`${process.env.REACT_APP_API_URL}/lists/static/ssh-key`, '_blank'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 17\n    }\n  }, \"Download Simpu's public key here \"), \"and add it to your ~/.ssh/authorized_keys. You may need to create a new user also.\"))), __jsx(Box, {\n    my: \"0.5rem\",\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }, \"Trouble connecting your data source?\", ' ', __jsx(\"span\", {\n    onClick: () => {\n      window.location.href = 'mailto:info@simpu.co';\n    },\n    color: \"blue\",\n    style: {\n      color: 'blue',\n      textDecoration: 'underline',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }\n  }, \"Contact us and we'll help you out.\")), __jsx(Box, {\n    className: \"section-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }\n  }, (resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'database' && __jsx(React.Fragment, null, __jsx(Tooltip, {\n    zIndex: 10000,\n    placement: \"bottom\",\n    label: \"You'll need to test your connection parameters and credentials to make sure everything's working fine before you proceed with any other thing \\uD83D\\uDE09\",\n    \"aria-label\": \"test-connection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: \"info\",\n    size: \"12px\",\n    color: \"#b9b9b9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    marginX: \"1rem\",\n    variant: \"link\",\n    size: \"sm\",\n    onClick: testConnection,\n    isLoading: testConnectionLoading,\n    isDisabled: !!Object.keys(errors).length || !Object.keys(touched).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 15\n    }\n  }, \"Test Connection\"), connectionVerified && __jsx(Icon, {\n    name: \"check-circle\",\n    color: \"limegreen\",\n    marginRight: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 17\n    }\n  })), (resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'database' && __jsx(Button, {\n    variant: \"solid\",\n    variantColor: \"blue\",\n    size: \"sm\",\n    onClick: formik.handleSubmit,\n    isLoading: isSubmitting,\n    isDisabled: !!Object.keys(errors).length || !Object.keys(touched).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, \"Connect data source\"), ['api', 'app'].includes((resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) || '') && (resourceType === null || resourceType === void 0 ? void 0 : resourceType.key) !== 'google-sheets' && __jsx(Button, {\n    variant: \"solid\",\n    variantColor: \"blue\",\n    size: \"sm\",\n    onClick: formik.handleSubmit,\n    isLoading: isSubmitting,\n    isDisabled: !!Object.keys(errors).length || !Object.keys(touched).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 15\n    }\n  }, \"Connect to \", resourceType === null || resourceType === void 0 ? void 0 : resourceType.label), (resourceType === null || resourceType === void 0 ? void 0 : resourceType.key) === 'google-sheets' && __jsx(Box, {\n    cursor: !!Object.keys(errors).length || !Object.keys(touched).length ? 'not-allowed' : 'pointer',\n    onClick: () => {\n      if (Object.keys(errors).length > 0 || !Object.keys(touched).length) return;else formik.handleSubmit();\n    },\n    opacity: Object.keys(errors).length > 0 || !Object.keys(touched).length ? 0.5 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    src: googleSignInButton,\n    height: \"42px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 15\n    }\n  })))), (resourceType === null || resourceType === void 0 ? void 0 : resourceType.type) === 'database' && __jsx(Box, {\n    className: \"section-resource-config-info\",\n    mb: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 11\n    }\n  }, \"Please allow Simpu to connect to your database by white-listing our IP address:\"), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"ip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 13\n    }\n  }, ip), __jsx(Tooltip, {\n    \"aria-label\": \"copy-ip\",\n    zIndex: 10000,\n    placement: \"bottom\",\n    label: \"Please copy IP address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 13\n    }\n  }, __jsx(IconButton, {\n    variant: \"link\",\n    \"aria-label\": \"copy\",\n    icon: \"copy\",\n    size: \"xs\",\n    marginLeft: \"10px\",\n    onClick: handleCopyIP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 15\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/resources/create-resource/stages/configure-resource.tsx"],"names":["React","useEffect","useState","Box","Checkbox","IconButton","Tooltip","Button","ToastBox","Input","resource_types","useFormik","yup","Divider","Icon","Image","useToast","useHistory","googleSignInButton","initialValues","name","account_name","host","port","dbname","username","password","ssh","bastion_host","bastion_port","bastion_user","DBValidationSchema","object","shape","string","required","AppValidationSchema","APIValidationSchema","APIPasswordAuthValidationSchema","ConfigureResourceType","props","testConnectionLoading","setTestConnectionLoading","connectionVerified","setConnectionVerified","resourceType","find","i","key","toast","routerHistory","testConnection","payload","values","ssh_config","user","response_message","testResourceConnection","position","render","e","createResource","setSubmitting","label","push","message","ip","handleCopyIP","navigator","clipboard","writeText","requestAuth","auth_url","requestResourceAuth","window","location","href","requestAppAuth","authURL","requestAppResourceAuth","organisation_account_name","submitAppAuth","submitAppResourceAuth","submit","type","passwordAuth","formik","validationSchema","onSubmit","errors","handleChange","handleBlur","handleReset","touched","isSubmitting","includes","length","open","process","env","REACT_APP_API_URL","color","textDecoration","cursor","Object","keys","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Checkbox, IconButton, Tooltip } from '@chakra-ui/core';\nimport { Button, ToastBox, Input } from 'app/components';\nimport { resource_types } from '../../../../../../list.data';\nimport { ResourceType } from '../../../../../../lists.types';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Divider, Icon, Image, useToast } from '@chakra-ui/core/dist';\nimport { useHistory } from 'react-router';\nimport googleSignInButton from 'app/authenticated-app/lists/assets/btn_google_signin_dark_normal_web@2x.png';\n\ninterface Props {\n  resourceType: string;\n  requestResourceAuth: Function;\n  requestAppResourceAuth: Function;\n  submitAppResourceAuth: Function;\n  testResourceConnection: Function;\n  createResource: Function;\n}\n\nconst initialValues = {\n  name: '',\n  account_name: '',\n  host: '',\n  port: '',\n  dbname: '',\n  username: '',\n  password: '',\n  ssh: false,\n  bastion_host: '',\n  bastion_port: '22',\n  bastion_user: 'simpu',\n};\n\nconst DBValidationSchema = yup.object().shape({\n  name: yup.string().required('Connection name is required'),\n  host: yup.string().required('Host address is required'),\n  port: yup.string().required('Database port is required'),\n  username: yup.string().required('Database user is required'),\n  password: yup.string().required('Database password is required'),\n  dbname: yup.string().required('Database name is required'),\n});\n\nconst AppValidationSchema = yup.object().shape({\n  name: yup.string().required('Connection name is required'),\n  account_name: yup.string().required('Account name is required'),\n});\n\nconst APIValidationSchema = yup.object().shape({\n  name: yup.string().required('Connection name is required'),\n});\n\nconst APIPasswordAuthValidationSchema = yup.object().shape({\n  name: yup.string().required('Connection name is required'),\n  username: yup.string().required('Username name is required'),\n  password: yup.string().required('Password name is required'),\n});\n\nexport const ConfigureResourceType = (props: Props) => {\n  const [testConnectionLoading, setTestConnectionLoading] = useState<boolean>(false);\n  const [connectionVerified, setConnectionVerified] = useState<boolean>(false);\n\n  const resourceType = resource_types.find((i: ResourceType) => i.key === props.resourceType);\n\n  const toast = useToast();\n  const routerHistory = useHistory();\n\n  const testConnection = async () => {\n    setTestConnectionLoading(true);\n    try {\n      const payload = {\n        ...values,\n        ssh_config: {\n          host: values.bastion_host,\n          port: values.bastion_port,\n          user: values.bastion_user,\n        },\n      };\n      const response_message = await props.testResourceConnection(payload, resourceType?.key);\n      toast({\n        position: 'bottom-left',\n        render: () => <ToastBox status=\"success\" message={response_message} />,\n      });\n      setConnectionVerified(true);\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => <ToastBox status=\"error\" message={e} />,\n      });\n    }\n    setTestConnectionLoading(false);\n  };\n\n  const createResource = async () => {\n    setSubmitting(true);\n    try {\n      const payload = {\n        ...values,\n        ssh_config: {\n          host: values.bastion_host,\n          port: values.bastion_port,\n          user: values.bastion_user,\n        },\n      };\n      await props.createResource(payload, resourceType?.key);\n      toast({\n        position: 'bottom-left',\n        render: () => (\n          <ToastBox\n            status=\"success\"\n            message={`${resourceType?.label} connection added successfully`}\n          />\n        ),\n      });\n      routerHistory.push('/s/lists/connections');\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => <ToastBox message={e?.message || e} />,\n      });\n    }\n    setSubmitting(false);\n  };\n\n  const ip = process.env.NODE_ENV === 'production' ? '159.65.91.153' : '134.209.187.125';\n  const handleCopyIP = () => {\n    navigator.clipboard.writeText(ip);\n    toast({\n      position: 'bottom-left',\n      render: () => <ToastBox status=\"success\" message=\"IP address copied to clipboard\" />,\n    });\n  };\n\n  const requestAuth = async () => {\n    setSubmitting(true);\n    try {\n      const auth_url = await props.requestResourceAuth(values.name, resourceType?.key);\n      window.location.href = auth_url;\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => (\n          <ToastBox message=\"Unable to connect Google Sheets account, please try again\" />\n        ),\n      });\n    }\n    setSubmitting(false);\n  };\n\n  const requestAppAuth = async () => {\n    setSubmitting(true);\n    try {\n      const authURL = await props.requestAppResourceAuth(resourceType?.key, {\n        name: values.name,\n        organisation_account_name: values.account_name,\n      });\n      window.location.href = authURL;\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => <ToastBox message=\"Unable to connect to account, please try again\" />,\n      });\n    }\n    setSubmitting(false);\n  };\n\n  const submitAppAuth = async () => {\n    setSubmitting(true);\n    try {\n      const { username, password } = values;\n      await props.submitAppResourceAuth(\n        resourceType?.key,\n        {\n          username,\n          password,\n        },\n        {\n          organisation_account_name: values.name,\n        },\n      );\n      routerHistory.push('/s/lists/connections?connectStatus=success&connectType=Mambu');\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: () => <ToastBox message=\"Unable to connect to account, please try again\" />,\n      });\n    }\n    setSubmitting(false);\n  };\n\n  const submit = async () => {\n    if (resourceType?.type === 'api') await requestAuth();\n    else if (resourceType?.passwordAuth) await submitAppAuth();\n    else if (resourceType?.type === 'app') await requestAppAuth();\n    else if (resourceType?.type === 'database') await createResource();\n  };\n\n  const formik = useFormik({\n    validationSchema: resourceType?.passwordAuth\n      ? APIPasswordAuthValidationSchema\n      : resourceType?.type === 'api'\n      ? APIValidationSchema\n      : resourceType?.type === 'app'\n      ? AppValidationSchema\n      : DBValidationSchema,\n    initialValues,\n    onSubmit: submit,\n  });\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleBlur,\n    handleReset,\n    touched,\n    isSubmitting,\n    setSubmitting,\n  } = formik;\n\n  useEffect(() => {\n    setConnectionVerified(false);\n  }, [values]);\n\n  return (\n    <Box className=\"section-resource-config\">\n      <Box className=\"section-resource-config-form\">\n        <Box className=\"row\">\n          <Box className=\"field\">\n            <Input\n              label=\"Name\"\n              isInvalid={touched.name && !!errors.name}\n              size=\"sm\"\n              mb=\"5px\"\n              name=\"name\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              onReset={handleReset}\n              errorMessage={errors.name}\n              autoFocus\n            />\n            <Box className=\"description\" mt=\"10px\">\n              Your {resourceType?.label} connection needs a unique name. You'll use this name when\n              importing data into your Simpu list.\n            </Box>\n          </Box>\n        </Box>\n\n        {['shopify', 'woo-commerce'].includes(resourceType?.key || '') && (\n          <Box className=\"row\">\n            <Box className=\"field\">\n              <Input\n                label=\"Account Name\"\n                isInvalid={touched.account_name && !!errors.account_name}\n                size=\"sm\"\n                mb=\"5px\"\n                name=\"account_name\"\n                value={values.account_name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onReset={handleReset}\n                errorMessage={errors.account_name}\n              />\n              <Box className=\"description\" mt=\"10px\">\n                This should be the name of your {resourceType?.label} store\n              </Box>\n            </Box>\n          </Box>\n        )}\n\n        {resourceType?.passwordAuth && (\n          <>\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Username\"\n                  isInvalid={touched.username && !!errors.username}\n                  size=\"sm\"\n                  mb=\"5px\"\n                  name=\"username\"\n                  value={values.username}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  onReset={handleReset}\n                  errorMessage={errors.username}\n                />\n                <Box className=\"description\" mt=\"10px\">\n                  This should be the username of your {resourceType?.label} account\n                </Box>\n              </Box>\n            </Box>\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Password\"\n                  isInvalid={touched.password && !!errors.password}\n                  size=\"sm\"\n                  mb=\"5px\"\n                  name=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  onReset={handleReset}\n                  errorMessage={errors.password}\n                  type=\"password\"\n                />\n              </Box>\n            </Box>\n          </>\n        )}\n\n        {resourceType?.type === 'database' && (\n          <>\n            <Divider marginY=\"35px\" />\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Host\"\n                  isInvalid={touched.host && values.host.length === 0}\n                  size=\"sm\"\n                  mb=\"5px\"\n                  name=\"host\"\n                  value={values.host}\n                  errorMessage={errors.host}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Box>\n            </Box>\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Port\"\n                  isInvalid={touched.port && values.port.length === 0}\n                  size=\"sm\"\n                  mb=\"5px\"\n                  name=\"port\"\n                  value={values.port}\n                  errorMessage={errors.port}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Box>\n            </Box>\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Database Name\"\n                  isInvalid={touched.dbname && values.dbname.length === 0}\n                  size=\"sm\"\n                  mb=\"5px\"\n                  name=\"dbname\"\n                  value={values.dbname}\n                  errorMessage={errors.dbname}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Box>\n            </Box>\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Username\"\n                  isInvalid={touched.username && values.username.length === 0}\n                  size=\"sm\"\n                  mb=\"5px\"\n                  name=\"username\"\n                  value={values.username}\n                  errorMessage={errors.username}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Box>\n            </Box>\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Password\"\n                  isInvalid={touched.password && values.password.length === 0}\n                  size=\"sm\"\n                  mb=\"5px\"\n                  name=\"password\"\n                  value={values.password}\n                  errorMessage={errors.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  type=\"password\"\n                />\n              </Box>\n            </Box>\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Checkbox\n                  isChecked={values.ssh}\n                  name=\"ssh\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  onReset={handleReset}\n                  alignItems=\"center\"\n                >\n                  <Box fontSize=\"14px\" mt=\"1px\">\n                    Enable SSH tunnel\n                  </Box>\n                </Checkbox>\n              </Box>\n            </Box>\n          </>\n        )}\n\n        {resourceType?.type === 'database' && values.ssh && (\n          <>\n            <Divider marginY=\"35px\" />\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Bastion Host\"\n                  size=\"sm\"\n                  mb=\"10px\"\n                  name=\"bastion_host\"\n                  value={values.bastion_host}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Box>\n            </Box>\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Bastion Port\"\n                  size=\"sm\"\n                  mb=\"10px\"\n                  name=\"bastion_port\"\n                  value={values.bastion_port}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Box>\n            </Box>\n\n            <Box className=\"row\">\n              <Box className=\"field\">\n                <Input\n                  label=\"Bastion User\"\n                  size=\"sm\"\n                  mb=\"10px\"\n                  name=\"bastion_user\"\n                  value={values.bastion_user}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Box>\n            </Box>\n\n            <Box className=\"section-info\">\n              <Box fontWeight=\"500\">SSH public key authentication</Box>\n              <Box\n                onClick={() =>\n                  window.open(`${process.env.REACT_APP_API_URL}/lists/static/ssh-key`, '_blank')\n                }\n              >\n                <span className=\"link\">Download Simpu's public key here </span>\n                and add it to your ~/.ssh/authorized_keys. You may need to create a new user also.\n              </Box>\n            </Box>\n          </>\n        )}\n\n        <Box my=\"0.5rem\" fontSize=\"14px\">\n          Trouble connecting your data source?{' '}\n          <span\n            onClick={() => {\n              window.location.href = 'mailto:info@simpu.co';\n            }}\n            color=\"blue\"\n            style={{\n              color: 'blue',\n              textDecoration: 'underline',\n              cursor: 'pointer',\n            }}\n          >\n            Contact us and we'll help you out.\n          </span>\n        </Box>\n\n        <Box className=\"section-actions\">\n          {resourceType?.type === 'database' && (\n            <>\n              <Tooltip\n                zIndex={10000}\n                placement=\"bottom\"\n                label=\"You'll need to test your connection parameters and credentials to make sure\n                everything's working fine before you proceed with any other thing 😉\"\n                aria-label=\"test-connection\"\n              >\n                <Icon name=\"info\" size=\"12px\" color=\"#b9b9b9\" />\n              </Tooltip>\n              <Button\n                marginX=\"1rem\"\n                variant=\"link\"\n                size=\"sm\"\n                onClick={testConnection}\n                isLoading={testConnectionLoading}\n                isDisabled={!!Object.keys(errors).length || !Object.keys(touched).length}\n              >\n                Test Connection\n              </Button>\n\n              {connectionVerified && (\n                <Icon name=\"check-circle\" color=\"limegreen\" marginRight=\"20px\" />\n              )}\n            </>\n          )}\n\n          {resourceType?.type === 'database' && (\n            <Button\n              variant=\"solid\"\n              variantColor=\"blue\"\n              size=\"sm\"\n              onClick={formik.handleSubmit}\n              isLoading={isSubmitting}\n              isDisabled={!!Object.keys(errors).length || !Object.keys(touched).length}\n            >\n              Connect data source\n            </Button>\n          )}\n\n          {['api', 'app'].includes(resourceType?.type || '') &&\n            resourceType?.key !== 'google-sheets' && (\n              <Button\n                variant=\"solid\"\n                variantColor=\"blue\"\n                size=\"sm\"\n                onClick={formik.handleSubmit}\n                isLoading={isSubmitting}\n                isDisabled={!!Object.keys(errors).length || !Object.keys(touched).length}\n              >\n                Connect to {resourceType?.label}\n              </Button>\n            )}\n\n          {resourceType?.key === 'google-sheets' && (\n            <Box\n              cursor={\n                !!Object.keys(errors).length || !Object.keys(touched).length\n                  ? 'not-allowed'\n                  : 'pointer'\n              }\n              onClick={() => {\n                if (Object.keys(errors).length > 0 || !Object.keys(touched).length) return;\n                else formik.handleSubmit();\n              }}\n              opacity={Object.keys(errors).length > 0 || !Object.keys(touched).length ? 0.5 : 1}\n            >\n              <Image src={googleSignInButton} height=\"42px\" />\n            </Box>\n          )}\n        </Box>\n      </Box>\n      {resourceType?.type === 'database' && (\n        <Box className=\"section-resource-config-info\" mb=\"2rem\">\n          <Box className=\"description\">\n            Please allow Simpu to connect to your database by white-listing our IP address:\n          </Box>\n          <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n            <Box className=\"ip\">{ip}</Box>\n            <Tooltip\n              aria-label=\"copy-ip\"\n              zIndex={10000}\n              placement=\"bottom\"\n              label=\"Please copy IP address\"\n            >\n              <IconButton\n                variant=\"link\"\n                aria-label=\"copy\"\n                icon=\"copy\"\n                size=\"xs\"\n                marginLeft=\"10px\"\n                onClick={handleCopyIP}\n              />\n            </Tooltip>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}