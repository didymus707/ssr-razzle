{"ast":null,"code":"const _excluded = [\"search_query\", \"updateSearchQuery\", \"focusWidth\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/search/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Input } from '@chakra-ui/core';\nimport _ from 'lodash';\nexport const ListSearch = props => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n\n  const {\n    search_query,\n    updateSearchQuery,\n    focusWidth = '300px'\n  } = props,\n        rest = _objectWithoutProperties(props, _excluded);\n\n  const handleChange = e => {\n    const _value = e.target.value;\n    setValue(_value);\n    debouncedCall(_value);\n  };\n\n  const updateSearchValue = _value => updateSearchQuery(_value);\n\n  const debouncedCall = useCallback(_.debounce(updateSearchValue, 1000), []);\n  useEffect(() => {\n    setValue(search_query); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return __jsx(Input // boxShadow=\"none\"\n  , _extends({\n    placeholder: \"Search\",\n    variant: \"filled\",\n    height: \"30px\",\n    fontSize: \"13px\",\n    style: {\n      width: value.length > 0 ? 150 : 100\n    },\n    type: \"search\",\n    transition: \"all 0.2s ease\",\n    paddingX: \"10px\",\n    paddingY: \"2px\",\n    value: value,\n    onChange: handleChange,\n    _focus: {\n      width: `${focusWidth} !important`\n    },\n    _active: {\n      width: focusWidth\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/search/index.tsx"],"names":["React","useEffect","useState","useCallback","Input","_","ListSearch","props","value","setValue","search_query","updateSearchQuery","focusWidth","rest","handleChange","e","_value","target","debouncedCall","updateSearchValue","debounce","width","length"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,KAAT,QAAkC,iBAAlC;AACA,OAAOC,CAAP,MAAc,QAAd;AAQA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAkB;AAC1C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAM;AAAEQ,IAAAA,YAAF;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA,UAAU,GAAG;AAAhD,MAAqEL,KAA3E;AAAA,QAAkEM,IAAlE,4BAA2EN,KAA3E;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAY;AAC/B,UAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAAST,KAAxB;AACAC,IAAAA,QAAQ,CAACO,MAAD,CAAR;AACAE,IAAAA,aAAa,CAACF,MAAD,CAAb;AACD,GAJD;;AAMA,QAAMG,iBAAiB,GAAIH,MAAD,IAAoBL,iBAAiB,CAACK,MAAD,CAA/D;;AAEA,QAAME,aAAa,GAAGf,WAAW,CAACE,CAAC,CAACe,QAAF,CAAWD,iBAAX,EAA8B,IAA9B,CAAD,EAAsC,EAAtC,CAAjC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACC,YAAD,CAAR,CADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,MAAC,KAAD,CACE;AADF;AAEE,IAAA,WAAW,EAAC,QAFd;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,QAAQ,EAAC,MALX;AAME,IAAA,KAAK,EAAE;AACLW,MAAAA,KAAK,EAAEb,KAAK,CAACc,MAAN,GAAe,CAAf,GAAmB,GAAnB,GAAyB;AAD3B,KANT;AASE,IAAA,IAAI,EAAC,QATP;AAUE,IAAA,UAAU,EAAC,eAVb;AAWE,IAAA,QAAQ,EAAC,MAXX;AAYE,IAAA,QAAQ,EAAC,KAZX;AAaE,IAAA,KAAK,EAAEd,KAbT;AAcE,IAAA,QAAQ,EAAEM,YAdZ;AAeE,IAAA,MAAM,EAAE;AACNO,MAAAA,KAAK,EAAG,GAAET,UAAW;AADf,KAfV;AAkBE,IAAA,OAAO,EAAE;AACPS,MAAAA,KAAK,EAAET;AADA;AAlBX,KAqBMC,IArBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAyBD,CA7CM","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { Input, InputProps } from '@chakra-ui/core';\nimport _ from 'lodash';\n\ntype Props = InputProps & {\n  focusWidth?: string;\n  search_query: string;\n  updateSearchQuery: Function;\n};\n\nexport const ListSearch = (props: Props) => {\n  const [value, setValue] = useState('');\n\n  const { search_query, updateSearchQuery, focusWidth = '300px', ...rest } = props;\n\n  const handleChange = (e: any) => {\n    const _value = e.target.value;\n    setValue(_value);\n    debouncedCall(_value);\n  };\n\n  const updateSearchValue = (_value: string) => updateSearchQuery(_value);\n\n  const debouncedCall = useCallback(_.debounce(updateSearchValue, 1000), []);\n\n  useEffect(() => {\n    setValue(search_query);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Input\n      // boxShadow=\"none\"\n      placeholder=\"Search\"\n      variant=\"filled\"\n      height=\"30px\"\n      fontSize=\"13px\"\n      style={{\n        width: value.length > 0 ? 150 : 100,\n      }}\n      type=\"search\"\n      transition=\"all 0.2s ease\"\n      paddingX=\"10px\"\n      paddingY=\"2px\"\n      value={value}\n      onChange={handleChange}\n      _focus={{\n        width: `${focusWidth} !important`,\n      }}\n      _active={{\n        width: focusWidth,\n      }}\n      {...rest}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}