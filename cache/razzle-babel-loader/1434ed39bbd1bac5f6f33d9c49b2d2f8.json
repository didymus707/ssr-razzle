{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/cell-properties/select/field.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// @ts-nocheck\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { Box, Icon, Input } from '@chakra-ui/core';\nimport { PopoverWrapper } from '../../../list-view.styles';\nimport { SelectCellEditor } from './editor';\nconst SelectInput = /*#__PURE__*/forwardRef(({\n  addOption\n}, ref) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleKeyPress = e => {\n    if (e.key !== 'Enter') return;\n    if (value === '') return;\n    addOption(value);\n    setValue('');\n  };\n\n  return __jsx(Input, {\n    ref: ref,\n    variant: \"unstyled\",\n    width: \"auto\",\n    value: value,\n    onChange: handleChange,\n    onKeyPress: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n});\n\nconst SelectValueItem = props => {\n  const handleDeleteValue = event => {\n    event.stopPropagation();\n    props.delete(props.id);\n  };\n\n  return __jsx(\"div\", {\n    className: \"value-item\",\n    style: _objectSpread({\n      fontSize: 12,\n      backgroundColor: props.color,\n      marginRight: 7.5,\n      padding: '2px 5px',\n      borderRadius: 2,\n      lineHeight: 'normal',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      cursor: 'pointer'\n    }, props.itemStyles),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, props.value, __jsx(Box, {\n    marginLeft: \"5px\",\n    display: \"flex\",\n    padding: \"2.5px\",\n    borderRadius: \"2px\",\n    backgroundColor: \"rgba(0,0,0,0.1)\",\n    onClick: handleDeleteValue,\n    className: \"close-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: \"close\",\n    size: \"8px\",\n    cursor: \"pointer\",\n    className: \"close-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport const SelectFieldComponent = props => {\n  const {\n    0: dummyValue,\n    1: setDummyValue\n  } = useState(null);\n  const {\n    0: dummyOptions,\n    1: setDummyOptions\n  } = useState([]);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: inputFocused,\n    1: setInputFocused\n  } = useState(false);\n  const inputRef = useRef(null);\n  const containerRef = useRef(null);\n  const popoverRef = useRef(null);\n  const {\n    column,\n    inputProps = {},\n    optionItemStyles = {},\n    allowCreate = true\n  } = props;\n  useEffect(() => {\n    setDummyValue(props.value);\n    setDummyOptions(props.column.options || []); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // @ts-ignore\n    if (inputFocused && document.activeElement !== inputRef.current) inputRef.current.focus();\n  }, [inputFocused]);\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleClick = e => {\n    if (!isOpen) return; // @ts-ignore\n\n    if (popoverRef.current.contains(e.target)) return; // @ts-ignore\n\n    if (containerRef.current.contains(e.target)) return;\n    onClose();\n  };\n\n  const deleteValue = async option_id => {\n    setDummyValue(null);\n    props.updateCellValue(null, column.uid);\n  };\n\n  const addOption = async _value => {\n    const option = await props.addSelectOption(column.uid, _value); // @ts-ignore\n\n    setDummyOptions([...dummyOptions, option]);\n    updateValue(option.id);\n  };\n\n  const updateSelectOption = async (option_id, payload) => {\n    const updated_options = await props.updateSelectOption(column.uid, option_id, payload);\n    setDummyOptions(updated_options);\n  };\n\n  const updateValue = _value => {\n    setDummyValue(_value);\n    props.updateCellValue(_value, column.uid);\n  };\n\n  const attachOutsideClickListener = () => {\n    document.addEventListener('mousedown', handleClick);\n  };\n\n  const detachOutsideClickListener = () => {\n    document.removeEventListener('mousedown', handleClick);\n  };\n\n  useEffect(() => {\n    attachOutsideClickListener();\n    return detachOutsideClickListener; // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n  let options = dummyOptions.filter(i => !i.isDeleted);\n  const selected_option = options.find(i => Number(i.id) === Number(dummyValue));\n  return __jsx(React.Fragment, null, __jsx(Box, _extends({\n    onClick: () => {\n      setIsOpen(true);\n      if (allowCreate) setInputFocused(true);\n    },\n    ref: containerRef,\n    padding: \"7.5px 12.5px\",\n    width: \"100%\",\n    borderRadius: \"3px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    fontSize: \"16px\",\n    border: \"1px solid #E2E8F0\"\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), selected_option && __jsx(SelectValueItem, {\n    value: selected_option.name,\n    color: selected_option.color,\n    delete: deleteValue,\n    id: selected_option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }), allowCreate && __jsx(SelectInput, {\n    ref: inputRef,\n    addOption: addOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }), !allowCreate && !selected_option && __jsx(Box, {\n    fontSize: \"14px !important\",\n    color: \"#7a7a7a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Select an Option\")), isOpen && __jsx(Box, {\n    ref: popoverRef,\n    zIndex: 100000,\n    position: \"absolute\",\n    width: \"max-content\",\n    boxShadow: \"none\",\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(PopoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, __jsx(SelectCellEditor, {\n    options: dummyOptions,\n    updateSelectOption,\n    updateValue,\n    allowCreate,\n    optionItemStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/cell-properties/select/field.tsx"],"names":["React","forwardRef","useEffect","useRef","useState","Box","Icon","Input","PopoverWrapper","SelectCellEditor","SelectInput","addOption","ref","value","setValue","handleChange","event","target","handleKeyPress","e","key","SelectValueItem","props","handleDeleteValue","stopPropagation","delete","id","fontSize","backgroundColor","color","marginRight","padding","borderRadius","lineHeight","display","flexDirection","alignItems","cursor","itemStyles","SelectFieldComponent","dummyValue","setDummyValue","dummyOptions","setDummyOptions","isOpen","setIsOpen","inputFocused","setInputFocused","inputRef","containerRef","popoverRef","column","inputProps","optionItemStyles","allowCreate","options","document","activeElement","current","focus","onClose","handleClick","contains","deleteValue","option_id","updateCellValue","uid","_value","option","addSelectOption","updateValue","updateSelectOption","payload","updated_options","attachOutsideClickListener","addEventListener","detachOutsideClickListener","removeEventListener","filter","i","isDeleted","selected_option","find","Number","name"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,QAAiC,iBAAjC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,gBAAT,QAAiC,UAAjC;AAEA,MAAMC,WAAW,gBAAGT,UAAU,CAAC,CAAC;AAAEU,EAAAA;AAAF,CAAD,EAAqBC,GAArB,KAAkC;AAC/D,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAgB;AACnCF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMK,cAAc,GAAIC,CAAD,IAAY;AACjC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACvB,QAAIP,KAAK,KAAK,EAAd,EAAkB;AAClBF,IAAAA,SAAS,CAACE,KAAD,CAAT;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALD;;AAOA,SACE,MAAC,KAAD;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,QAAQ,EAAEE,YALZ;AAME,IAAA,UAAU,EAAEG,cANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAxB6B,CAA9B;;AA0BA,MAAMG,eAAe,GAAIC,KAAD,IAAgB;AACtC,QAAMC,iBAAiB,GAAIP,KAAD,IAAgB;AACxCA,IAAAA,KAAK,CAACQ,eAAN;AACAF,IAAAA,KAAK,CAACG,MAAN,CAAaH,KAAK,CAACI,EAAnB;AACD,GAHD;;AAKA,SACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK;AACHC,MAAAA,QAAQ,EAAE,EADP;AAEHC,MAAAA,eAAe,EAAEN,KAAK,CAACO,KAFpB;AAGHC,MAAAA,WAAW,EAAE,GAHV;AAIHC,MAAAA,OAAO,EAAE,SAJN;AAKHC,MAAAA,YAAY,EAAE,CALX;AAMHC,MAAAA,UAAU,EAAE,QANT;AAOHC,MAAAA,OAAO,EAAE,MAPN;AAQHC,MAAAA,aAAa,EAAE,KARZ;AASHC,MAAAA,UAAU,EAAE,QATT;AAUHC,MAAAA,MAAM,EAAE;AAVL,OAWAf,KAAK,CAACgB,UAXN,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGhB,KAAK,CAACT,KAhBT,EAiBE,MAAC,GAAD;AACE,IAAA,UAAU,EAAC,KADb;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,YAAY,EAAC,KAJf;AAKE,IAAA,eAAe,EAAC,iBALlB;AAME,IAAA,OAAO,EAAEU,iBANX;AAOE,IAAA,SAAS,EAAC,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,IAAI,EAAC,KAAxB;AAA8B,IAAA,MAAM,EAAC,SAArC;AAA+C,IAAA,SAAS,EAAC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAjBF,CADF;AA+BD,CArCD;;AAuCA,OAAO,MAAMgB,oBAAoB,GAAIjB,KAAD,IAAgB;AAClD,QAAM;AAAA,OAACkB,UAAD;AAAA,OAAaC;AAAb,MAA8BrC,QAAQ,CAAyB,IAAzB,CAA5C;AACA,QAAM;AAAA,OAACsC,YAAD;AAAA,OAAeC;AAAf,MAAkCvC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACwC,MAAD;AAAA,OAASC;AAAT,MAAsBzC,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM;AAAA,OAAC0C,YAAD;AAAA,OAAeC;AAAf,MAAkC3C,QAAQ,CAAU,KAAV,CAAhD;AAEA,QAAM4C,QAAQ,GAAG7C,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM8C,YAAY,GAAG9C,MAAM,CAAC,IAAD,CAA3B;AACA,QAAM+C,UAAU,GAAG/C,MAAM,CAAC,IAAD,CAAzB;AAEA,QAAM;AAAEgD,IAAAA,MAAF;AAAUC,IAAAA,UAAU,GAAG,EAAvB;AAA2BC,IAAAA,gBAAgB,GAAG,EAA9C;AAAkDC,IAAAA,WAAW,GAAG;AAAhE,MAAyEhC,KAA/E;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACduC,IAAAA,aAAa,CAACnB,KAAK,CAACT,KAAP,CAAb;AACA8B,IAAAA,eAAe,CAACrB,KAAK,CAAC6B,MAAN,CAAaI,OAAb,IAAwB,EAAzB,CAAf,CAFc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMArD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI4C,YAAY,IAAIU,QAAQ,CAACC,aAAT,KAA2BT,QAAQ,CAACU,OAAxD,EAAiEV,QAAQ,CAACU,OAAT,CAAiBC,KAAjB;AAClE,GAHQ,EAGN,CAACb,YAAD,CAHM,CAAT;;AAKA,QAAMc,OAAO,GAAG,MAAM;AACpBf,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMgB,WAAW,GAAI1C,CAAD,IAAY;AAC9B,QAAI,CAACyB,MAAL,EAAa,OADiB,CAE9B;;AACA,QAAIM,UAAU,CAACQ,OAAX,CAAmBI,QAAnB,CAA4B3C,CAAC,CAACF,MAA9B,CAAJ,EAA2C,OAHb,CAI9B;;AACA,QAAIgC,YAAY,CAACS,OAAb,CAAqBI,QAArB,CAA8B3C,CAAC,CAACF,MAAhC,CAAJ,EAA6C;AAC7C2C,IAAAA,OAAO;AACR,GAPD;;AASA,QAAMG,WAAW,GAAG,MAAOC,SAAP,IAAsC;AACxDvB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAnB,IAAAA,KAAK,CAAC2C,eAAN,CAAsB,IAAtB,EAA4Bd,MAAM,CAACe,GAAnC;AACD,GAHD;;AAKA,QAAMvD,SAAS,GAAG,MAAOwD,MAAP,IAA0B;AAC1C,UAAMC,MAAM,GAAG,MAAM9C,KAAK,CAAC+C,eAAN,CAAsBlB,MAAM,CAACe,GAA7B,EAAkCC,MAAlC,CAArB,CAD0C,CAE1C;;AACAxB,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkB0B,MAAlB,CAAD,CAAf;AACAE,IAAAA,WAAW,CAACF,MAAM,CAAC1C,EAAR,CAAX;AACD,GALD;;AAOA,QAAM6C,kBAAkB,GAAG,OAAOP,SAAP,EAAmCQ,OAAnC,KAAuD;AAChF,UAAMC,eAAe,GAAG,MAAMnD,KAAK,CAACiD,kBAAN,CAAyBpB,MAAM,CAACe,GAAhC,EAAqCF,SAArC,EAAgDQ,OAAhD,CAA9B;AACA7B,IAAAA,eAAe,CAAC8B,eAAD,CAAf;AACD,GAHD;;AAKA,QAAMH,WAAW,GAAIH,MAAD,IAAiB;AACnC1B,IAAAA,aAAa,CAAC0B,MAAD,CAAb;AACA7C,IAAAA,KAAK,CAAC2C,eAAN,CAAsBE,MAAtB,EAA8BhB,MAAM,CAACe,GAArC;AACD,GAHD;;AAKA,QAAMQ,0BAA0B,GAAG,MAAM;AACvClB,IAAAA,QAAQ,CAACmB,gBAAT,CAA0B,WAA1B,EAAuCd,WAAvC;AACD,GAFD;;AAGA,QAAMe,0BAA0B,GAAG,MAAM;AACvCpB,IAAAA,QAAQ,CAACqB,mBAAT,CAA6B,WAA7B,EAA0ChB,WAA1C;AACD,GAFD;;AAIA3D,EAAAA,SAAS,CAAC,MAAM;AACdwE,IAAAA,0BAA0B;AAC1B,WAAOE,0BAAP,CAFc,CAGd;AACD,GAJQ,CAAT;AAMA,MAAIrB,OAAO,GAAGb,YAAY,CAACoC,MAAb,CAAqBC,CAAD,IAAY,CAACA,CAAC,CAACC,SAAnC,CAAd;AACA,QAAMC,eAAe,GAAG1B,OAAO,CAAC2B,IAAR,CAAcH,CAAD,IAAYI,MAAM,CAACJ,CAAC,CAACrD,EAAH,CAAN,KAAiByD,MAAM,CAAC3C,UAAD,CAAhD,CAAxB;AAEA,SACE,4BACE,MAAC,GAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbK,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAIS,WAAJ,EAAiBP,eAAe,CAAC,IAAD,CAAf;AAClB,KAJH;AAKE,IAAA,GAAG,EAAEE,YALP;AAME,IAAA,OAAO,EAAC,cANV;AAOE,IAAA,KAAK,EAAC,MAPR;AAQE,IAAA,YAAY,EAAC,KARf;AASE,IAAA,OAAO,EAAC,MATV;AAUE,IAAA,QAAQ,EAAC,MAVX;AAWE,IAAA,UAAU,EAAC,QAXb;AAYE,IAAA,aAAa,EAAC,KAZhB;AAaE,IAAA,QAAQ,EAAC,MAbX;AAcE,IAAA,MAAM,EAAC;AAdT,KAeMG,UAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiBG6B,eAAe,IACd,MAAC,eAAD;AACE,IAAA,KAAK,EAAEA,eAAe,CAACG,IADzB;AAEE,IAAA,KAAK,EAAEH,eAAe,CAACpD,KAFzB;AAGE,IAAA,MAAM,EAAEkC,WAHV;AAIE,IAAA,EAAE,EAAEkB,eAAe,CAACvD,EAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,EAyBG4B,WAAW,IAAI,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEN,QAAlB;AAA4B,IAAA,SAAS,EAAErC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBlB,EA0BG,CAAC2C,WAAD,IAAgB,CAAC2B,eAAjB,IACC,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,iBAAd;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3BJ,CADF,EAiCGrC,MAAM,IACL,MAAC,GAAD;AACE,IAAA,GAAG,EAAEM,UADP;AAEE,IAAA,MAAM,EAAE,MAFV;AAGE,IAAA,QAAQ,EAAC,UAHX;AAIE,IAAA,KAAK,EAAC,aAJR;AAKE,IAAA,SAAS,EAAC,MALZ;AAME,IAAA,OAAO,EAAC,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAEIK,IAAAA,OAAO,EAAEb,YAFb;AAGI6B,IAAAA,kBAHJ;AAIID,IAAAA,WAJJ;AAKIhB,IAAAA,WALJ;AAMID,IAAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CAlCJ,CADF;AA0DD,CApIM","sourcesContent":["// @ts-nocheck\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { Box, Icon, Input } from '@chakra-ui/core';\nimport { PopoverWrapper } from '../../../list-view.styles';\nimport { SelectCellEditor } from './editor';\n\nconst SelectInput = forwardRef(({ addOption }: any, ref: any) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (event: any) => {\n    setValue(event.target.value);\n  };\n\n  const handleKeyPress = (e: any) => {\n    if (e.key !== 'Enter') return;\n    if (value === '') return;\n    addOption(value);\n    setValue('');\n  };\n\n  return (\n    <Input\n      ref={ref}\n      variant=\"unstyled\"\n      width=\"auto\"\n      value={value}\n      onChange={handleChange}\n      onKeyPress={handleKeyPress}\n    />\n  );\n});\n\nconst SelectValueItem = (props: any) => {\n  const handleDeleteValue = (event: any) => {\n    event.stopPropagation();\n    props.delete(props.id);\n  };\n\n  return (\n    <div\n      className=\"value-item\"\n      style={{\n        fontSize: 12,\n        backgroundColor: props.color,\n        marginRight: 7.5,\n        padding: '2px 5px',\n        borderRadius: 2,\n        lineHeight: 'normal',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        cursor: 'pointer',\n        ...props.itemStyles,\n      }}\n    >\n      {props.value}\n      <Box\n        marginLeft=\"5px\"\n        display=\"flex\"\n        padding=\"2.5px\"\n        borderRadius=\"2px\"\n        backgroundColor=\"rgba(0,0,0,0.1)\"\n        onClick={handleDeleteValue}\n        className=\"close-icon\"\n      >\n        <Icon name=\"close\" size=\"8px\" cursor=\"pointer\" className=\"close-icon\" />\n      </Box>\n    </div>\n  );\n};\n\nexport const SelectFieldComponent = (props: any) => {\n  const [dummyValue, setDummyValue] = useState<string | number | null>(null);\n  const [dummyOptions, setDummyOptions] = useState([]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [inputFocused, setInputFocused] = useState<boolean>(false);\n\n  const inputRef = useRef(null);\n  const containerRef = useRef(null);\n  const popoverRef = useRef(null);\n\n  const { column, inputProps = {}, optionItemStyles = {}, allowCreate = true } = props;\n\n  useEffect(() => {\n    setDummyValue(props.value);\n    setDummyOptions(props.column.options || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (inputFocused && document.activeElement !== inputRef.current) inputRef.current.focus();\n  }, [inputFocused]);\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleClick = (e: any) => {\n    if (!isOpen) return;\n    // @ts-ignore\n    if (popoverRef.current.contains(e.target)) return;\n    // @ts-ignore\n    if (containerRef.current.contains(e.target)) return;\n    onClose();\n  };\n\n  const deleteValue = async (option_id: string | number) => {\n    setDummyValue(null);\n    props.updateCellValue(null, column.uid);\n  };\n\n  const addOption = async (_value: string) => {\n    const option = await props.addSelectOption(column.uid, _value);\n    // @ts-ignore\n    setDummyOptions([...dummyOptions, option]);\n    updateValue(option.id);\n  };\n\n  const updateSelectOption = async (option_id: string | number, payload: object) => {\n    const updated_options = await props.updateSelectOption(column.uid, option_id, payload);\n    setDummyOptions(updated_options);\n  };\n\n  const updateValue = (_value: any) => {\n    setDummyValue(_value);\n    props.updateCellValue(_value, column.uid);\n  };\n\n  const attachOutsideClickListener = () => {\n    document.addEventListener('mousedown', handleClick);\n  };\n  const detachOutsideClickListener = () => {\n    document.removeEventListener('mousedown', handleClick);\n  };\n\n  useEffect(() => {\n    attachOutsideClickListener();\n    return detachOutsideClickListener;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n\n  let options = dummyOptions.filter((i: any) => !i.isDeleted);\n  const selected_option = options.find((i: any) => Number(i.id) === Number(dummyValue));\n\n  return (\n    <>\n      <Box\n        onClick={() => {\n          setIsOpen(true);\n          if (allowCreate) setInputFocused(true);\n        }}\n        ref={containerRef}\n        padding=\"7.5px 12.5px\"\n        width=\"100%\"\n        borderRadius=\"3px\"\n        display=\"flex\"\n        flexWrap=\"wrap\"\n        alignItems=\"center\"\n        flexDirection=\"row\"\n        fontSize=\"16px\"\n        border=\"1px solid #E2E8F0\"\n        {...inputProps}\n      >\n        {selected_option && (\n          <SelectValueItem\n            value={selected_option.name}\n            color={selected_option.color}\n            delete={deleteValue}\n            id={selected_option.id}\n          />\n        )}\n        {allowCreate && <SelectInput ref={inputRef} addOption={addOption} />}\n        {!allowCreate && !selected_option && (\n          <Box fontSize=\"14px !important\" color=\"#7a7a7a\">\n            Select an Option\n          </Box>\n        )}\n      </Box>\n      {isOpen && (\n        <Box\n          ref={popoverRef}\n          zIndex={100000}\n          position=\"absolute\"\n          width=\"max-content\"\n          boxShadow=\"none\"\n          display=\"flex\"\n        >\n          <PopoverWrapper>\n            <SelectCellEditor\n              {...{\n                options: dummyOptions,\n                updateSelectOption,\n                updateValue,\n                allowCreate,\n                optionItemStyles,\n              }}\n            />\n          </PopoverWrapper>\n        </Box>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}