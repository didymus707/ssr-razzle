{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/lists/list-lists/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useLayoutEffect, useState } from 'react';\nimport { SimpleGrid, Box, Icon, Stack, Tooltip, useDisclosure } from '@chakra-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Select } from 'app/components';\nimport { icons } from 'feather-icons';\nimport { ListItemMenu } from '../../../../../components/list-item-menu';\nimport { DeleteAllConfirmationDialog } from '../../../../../components/delete-all-confirmation-modal';\nimport { useSelector } from 'react-redux';\nimport { selectActiveSubscription } from '../../../../../../settings';\n\nconst useWindowSize = () => {\n  const {\n    0: size,\n    1: setSize\n  } = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n};\n\nconst GridItem = props => {\n  let icon = props.icon && icons[props.icon] ? props.icon : 'database';\n\n  if (props.is_initial) {\n    icon = 'user';\n  }\n\n  const handleClick = () => {\n    if (props.is_trash) return;\n    if (props.is_smart) props.history.push(`/s/lists/view/${props.id}/smart`);else props.history.push(`/s/lists/view/${props.id}`);\n  };\n\n  return __jsx(Box, {\n    title: props.name,\n    className: \"list-item--grid\",\n    opacity: props.locked ? 0.2 : 1,\n    cursor: props.locked ? 'not-allowed !important' : 'pointer',\n    onClick: () => {\n      if (!props.locked) {\n        handleClick();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: \"box\",\n    bg: props.is_initial ? '#3525E6' : props.is_smart ? '#02AAA4' : props.color || 'rgba(15,15,15, 0.8)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    alt: \"list-icon\",\n    src: `data:image/svg+xml;utf8,${icons[icon].toSvg({\n      color: 'white'\n    })}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), !props.is_initial && __jsx(\"div\", {\n    id: `list-${props.id}`,\n    className: \"action-btn-bg\",\n    onClick: event => {\n      event.stopPropagation();\n\n      if (!props.locked) {\n        props.showMenu(event);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"chevron-down\",\n    color: \"white\",\n    size: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, props.is_favorite && __jsx(Icon, {\n    name: \"star\",\n    marginRight: \"3px\",\n    size: \"10px\",\n    style: {\n      color: 'rgba(233,168,0,0.8)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    overflow: \"hidden\" // @ts-ignore\n    ,\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, props.name)), props.is_initial && __jsx(Box, {\n    fontSize: \"10px\",\n    color: \"#32a852\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    backgroundColor: \"rgba(50, 168, 82, 0.2)\",\n    borderRadius: \"5px\",\n    padding: \"2px 5px\",\n    mt: \"5px\",\n    width: \"fit-content\",\n    marginX: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"primary\"));\n};\n\nconst ListItem = props => {\n  let icon = props.icon && icons[props.icon] ? props.icon : 'database';\n\n  if (props.is_initial) {\n    icon = 'user';\n  }\n\n  const handleClick = () => {\n    if (props.is_trash) return;\n    if (props.is_smart) props.history.push(`/s/lists/view/${props.id}/smart`);else props.history.push(`/s/lists/view/${props.id}`);\n  };\n\n  return __jsx(Box, {\n    title: props.name,\n    className: `list-item--list ${props.active && 'active'}`,\n    opacity: props.locked ? 0.2 : 1,\n    cursor: props.locked ? 'not-allowed !important' : 'pointer',\n    onClick: () => {\n      if (!props.locked) {\n        handleClick();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"box\",\n    bg: props.is_initial ? '#3525E6' : props.is_smart ? '#02AAA4' : props.color || 'rgba(15,15,15, 0.8)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    alt: \"list-icon\",\n    src: `data:image/svg+xml;utf8,${icons[icon].toSvg({\n      color: 'white'\n    })}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, props.is_favorite && __jsx(Icon, {\n    name: \"star\",\n    marginRight: \"3px\",\n    size: \"10px\",\n    style: {\n      color: 'rgba(233,168,0,0.8)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\" // @ts-ignore\n    ,\n    textOverflow: \"ellipsis\",\n    maxWidth: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, props.name))), props.is_initial && __jsx(Box, {\n    fontSize: \"10px\",\n    color: \"#32a852\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    backgroundColor: \"rgba(50, 168, 82, 0.2)\",\n    borderRadius: \"5px\",\n    padding: \"2px 5px\",\n    width: \"fit-content\",\n    marginLeft: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"primary\"), !props.is_initial && __jsx(\"div\", {\n    className: \"action-btn-bg\",\n    onClick: event => {\n      event.stopPropagation();\n\n      if (!props.locked) {\n        props.showMenu(event);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"chevron-down\",\n    color: \"white\",\n    size: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst AddButtonGrid = props => __jsx(\"div\", {\n  className: \"add-button--grid\",\n  onClick: props.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 3\n  }\n}, __jsx(\"div\", {\n  className: \"box\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }\n}, __jsx(\"img\", {\n  alt: \"list-icon\",\n  src: `data:image/svg+xml;utf8,${icons['plus'].toSvg({\n    color: 'grey'\n  })}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 7\n  }\n})), __jsx(\"div\", {\n  className: \"label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }\n}, \"Add a list\"));\n\nconst AddButtonList = props => __jsx(\"div\", {\n  className: \"add-button--list\",\n  onClick: props.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 3\n  }\n}, __jsx(Box, {\n  display: \"flex\",\n  alignItems: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"box\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 7\n  }\n}, __jsx(\"img\", {\n  alt: \"list-icon\",\n  src: `data:image/svg+xml;utf8,${icons['plus'].toSvg({\n    color: 'grey'\n  })}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 9\n  }\n})), __jsx(\"div\", {\n  className: \"label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 7\n  }\n}, \"Add a list\")));\n\nconst filterOptions = [{\n  key: 'lists',\n  label: 'Lists'\n}, {\n  key: 'favorites',\n  label: 'Favorites'\n}, {\n  key: 'trash',\n  label: 'Trash'\n}];\nexport const Component = props => {\n  var _activeSubscription$d, _activeSubscription$d2;\n\n  const {\n    0: selectedList,\n    1: setSelectedList\n  } = useState(null);\n  const {\n    0: selectedSmartList,\n    1: setSelectedSmartList\n  } = useState(null);\n  const {\n    0: selectedTrashList,\n    1: setSelectedTrashList\n  } = useState(null);\n  const {\n    0: selectedItemPosition,\n    1: setSelectedItemPosition\n  } = useState({\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0\n  });\n  const {\n    isOpen: isDeleteAllTrashDialogOpen,\n    onOpen: openDeleteAllTrashDialog,\n    onClose: closeDeleteAllTrashDialog\n  } = useDisclosure();\n  const {\n    lists,\n    initial_list,\n    smart_lists,\n    favorite_lists,\n    trash_lists,\n    searchValue,\n    visualization,\n    updateList,\n    deleteList,\n    deleteListPermanently,\n    restoreList,\n    deleteSmartList,\n    updateSmartList,\n    selectedTab,\n    selectTab,\n    markListFavorite,\n    unMarkListFavorite,\n    openNoSubscriptionModal,\n    deleteTrashPermanently\n  } = props;\n  const [window_width] = useWindowSize();\n  const spacing = 30;\n  let padding_ratio = 0.3;\n  if (window_width <= 1400) padding_ratio = 0.2;\n  if (window_width <= 1000) padding_ratio = 0.1;\n  const content_width = (1 - padding_ratio) * window_width - (286 + 40);\n  const max_columns = Math.floor(content_width / (75 + spacing));\n  let allowed_width;\n  if (lists.length + 1 >= max_columns) allowed_width = content_width;else allowed_width = (lists.length + 1) * (75 + spacing);\n  let allowed_width_smart;\n  if (smart_lists.length + 1 >= max_columns) allowed_width_smart = content_width;else allowed_width_smart = smart_lists.length * (75 + spacing);\n  let allowed_width_favorites;\n  if (favorite_lists.length + 1 >= max_columns) allowed_width_favorites = content_width;else allowed_width_favorites = favorite_lists.length * (75 + spacing);\n  let allowed_width_trash;\n  if (trash_lists.length + 1 >= max_columns) allowed_width_trash = content_width;else allowed_width_trash = trash_lists.length * (75 + spacing);\n  let dampen_title_text = false;\n  let dampen_smart_lists_title_text = false;\n  let dampen_favorite_lists_title_text = false;\n  let dampen_trash_lists_title_text = false;\n  let lists_title_text = 'Lists';\n  let smart_lists_title_text = 'Smart lists';\n  let favorite_lists_title_text = 'Favorites';\n  let trash_lists_title_text = 'Trash';\n\n  if (searchValue.length > 0) {\n    if (lists.length > 0) lists_title_text = `Lists found matching \"${searchValue}\"`;else {\n      lists_title_text = 'No lists found';\n      dampen_title_text = true;\n    }\n\n    if (smart_lists.length > 0) {\n      smart_lists_title_text = `Smart lists found matching \"${searchValue}\"`;\n    } else {\n      smart_lists_title_text = 'No smart lists found';\n      dampen_smart_lists_title_text = true;\n    }\n\n    if (favorite_lists.length > 0) {\n      favorite_lists_title_text = `Favorites found matching \"${searchValue}\"`;\n    } else {\n      favorite_lists_title_text = 'No favorites found';\n      dampen_favorite_lists_title_text = true;\n    }\n\n    if (trash_lists.length > 0) {\n      trash_lists_title_text = `Trash found matching \"${searchValue}\"`;\n    } else {\n      trash_lists_title_text = 'No trash found';\n      dampen_trash_lists_title_text = true;\n    }\n  }\n\n  const activeSubscription = useSelector(selectActiveSubscription);\n  const maxDisplay = activeSubscription === null || activeSubscription === void 0 ? void 0 : (_activeSubscription$d = activeSubscription.details) === null || _activeSubscription$d === void 0 ? void 0 : (_activeSubscription$d2 = _activeSubscription$d.lists) === null || _activeSubscription$d2 === void 0 ? void 0 : _activeSubscription$d2.lists;\n  const routerHistory = useHistory();\n\n  const navCreateList = () => routerHistory.push('/s/lists/lists/new');\n\n  const showListMenu = (event, list_id) => {\n    closeItemMenu();\n    const list = lists.find(i => i.id === list_id);\n    if (!list) return;\n    const {\n      top,\n      bottom,\n      left,\n      right\n    } = event.target.getBoundingClientRect();\n    setSelectedItemPosition({\n      top,\n      bottom,\n      left,\n      right\n    });\n    setSelectedList(list);\n  };\n\n  const showSmartListMenu = (event, smart_list_id) => {\n    closeItemMenu();\n    const smart_list = smart_lists.find(i => i.id === smart_list_id);\n    if (!smart_list) return;\n    const {\n      top,\n      bottom,\n      left,\n      right\n    } = event.target.getBoundingClientRect();\n    setSelectedItemPosition({\n      top,\n      bottom,\n      left,\n      right\n    });\n    setSelectedSmartList(smart_list);\n  };\n\n  const showTrashListMenu = (event, trash_list_id) => {\n    closeItemMenu();\n    const trash_list = trash_lists.find(i => i.id === trash_list_id);\n    if (!trash_list) return;\n    const {\n      top,\n      bottom,\n      left,\n      right\n    } = event.target.getBoundingClientRect();\n    setSelectedItemPosition({\n      top,\n      bottom,\n      left,\n      right\n    });\n    setSelectedTrashList(trash_list);\n  };\n\n  const closeItemMenu = () => {\n    setSelectedList(null);\n    setSelectedSmartList(null);\n    setSelectedTrashList(null);\n    setSelectedItemPosition({\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0\n    });\n  };\n\n  const FilterComponent = () => __jsx(Select, {\n    color: \"#333333\",\n    size: \"sm\",\n    value: selectedTab,\n    onChange: e => {\n      selectTab(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 5\n    }\n  }, filterOptions.map(i => __jsx(\"option\", {\n    key: i.key,\n    value: i.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, i.label)));\n\n  return __jsx(React.Fragment, null, __jsx(DeleteAllConfirmationDialog, {\n    isOpen: isDeleteAllTrashDialogOpen,\n    trashCount: trash_lists.length,\n    onClose: closeDeleteAllTrashDialog,\n    onProceed: deleteTrashPermanently,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }\n  }), __jsx(ListItemMenu, {\n    targetPosition: selectedItemPosition,\n    show: !!selectedList || !!selectedSmartList || !!selectedTrashList,\n    initialData: selectedList || selectedSmartList || selectedTrashList,\n    updateList: !!selectedSmartList ? updateSmartList : updateList,\n    deleteList: !!selectedSmartList ? deleteSmartList : deleteList,\n    deleteListPermanently: deleteListPermanently,\n    restoreList: restoreList,\n    markListFavorite: markListFavorite,\n    unMarkListFavorite: unMarkListFavorite,\n    is_favorite: props.favorites.includes(!!selectedList ? selectedList.id : ''),\n    is_smart_list: !!selectedSmartList,\n    is_initial_list: (selectedList === null || selectedList === void 0 ? void 0 : selectedList.id) === initial_list,\n    is_trash: !!selectedTrashList,\n    close: closeItemMenu,\n    openNoSubscriptionModal: openNoSubscriptionModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }\n  }, selectedTab === 'lists' && __jsx(React.Fragment, null, __jsx(Box, {\n    paddingLeft: visualization === 'list' ? '8px' : '0px',\n    paddingRight: visualization === 'grid' ? '10px' : '0px',\n    className: \"section-title\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: `title ${dampen_title_text && 'inactive'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 15\n    }\n  }, lists_title_text), __jsx(FilterComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 15\n    }\n  })), visualization === 'grid' && __jsx(SimpleGrid, {\n    width: allowed_width,\n    minChildWidth: \"75px\",\n    spacing: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }, searchValue.length === 0 && __jsx(AddButtonGrid, {\n    onClick: navCreateList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 46\n    }\n  }), lists.map((i, index) => __jsx(GridItem, _extends({\n    key: i.id,\n    index: index\n  }, i, {\n    history: routerHistory,\n    showMenu: event => showListMenu(event, i.id),\n    is_smart: false,\n    is_favorite: props.favorites.includes(i.id),\n    is_initial: initial_list === i.id,\n    locked: maxDisplay ? index > maxDisplay - 1 : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 19\n    }\n  })))), visualization === 'list' && __jsx(SimpleGrid, {\n    columns: 2,\n    spacing: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 15\n    }\n  }, __jsx(AddButtonList, {\n    onClick: navCreateList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 17\n    }\n  }), lists.map((i, index) => __jsx(ListItem, _extends({\n    key: i.id\n  }, i, {\n    active: (selectedList === null || selectedList === void 0 ? void 0 : selectedList.id) === i.id,\n    history: routerHistory,\n    showMenu: event => showListMenu(event, i.id),\n    is_smart: false,\n    is_favorite: props.favorites.includes(i.id),\n    is_initial: initial_list === i.id,\n    locked: maxDisplay ? index > maxDisplay - 1 : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 19\n    }\n  }))))), ['all', 'smart'].includes(selectedTab) && __jsx(React.Fragment, null, __jsx(Box, {\n    marginTop: selectedTab === 'all' ? '35px' : '0px',\n    paddingLeft: visualization === 'list' ? '8px' : '0px',\n    paddingRight: visualization === 'grid' ? '10px' : '0px',\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    className: `title ${dampen_smart_lists_title_text && 'inactive'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 17\n    }\n  }, smart_lists_title_text), __jsx(Tooltip, {\n    zIndex: 10000,\n    placement: \"right\",\n    \"aria-label\": \"Campaign smart sending\",\n    label: \"A smart list is a list with one or more filters applied to it.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    size: \"0.8rem\",\n    name: \"info\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 19\n    }\n  })))), visualization === 'grid' && __jsx(SimpleGrid, {\n    width: allowed_width_smart,\n    minChildWidth: \"75px\",\n    spacing: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 15\n    }\n  }, smart_lists.map((i, index) => __jsx(GridItem, _extends({\n    key: i.id,\n    index: index\n  }, i, {\n    history: routerHistory,\n    showMenu: event => showSmartListMenu(event, i.id),\n    is_smart: true,\n    is_favorite: false,\n    is_initial: initial_list === i.id,\n    locked: maxDisplay ? index > maxDisplay - 1 : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 19\n    }\n  })))), visualization === 'list' && __jsx(SimpleGrid, {\n    columns: 2,\n    spacing: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 15\n    }\n  }, smart_lists.map((i, index) => __jsx(ListItem, _extends({\n    key: i.id\n  }, i, {\n    active: (selectedList === null || selectedList === void 0 ? void 0 : selectedList.id) === i.id,\n    history: routerHistory,\n    showMenu: event => showSmartListMenu(event, i.id),\n    is_smart: true,\n    is_favorite: false,\n    is_initial: initial_list === i.id,\n    locked: maxDisplay ? index > maxDisplay - 1 : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 19\n    }\n  })))), smart_lists.length === 0 && searchValue.length === 0 && __jsx(Box, {\n    color: \"#757575\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 15\n    }\n  }, \"No smart lists available\")), selectedTab === 'favorites' && __jsx(React.Fragment, null, __jsx(Box, {\n    paddingLeft: visualization === 'list' ? '8px' : '0px',\n    paddingRight: visualization === 'grid' ? '10px' : '0px',\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: `title ${dampen_favorite_lists_title_text && 'inactive'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 15\n    }\n  }, favorite_lists_title_text), __jsx(FilterComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 15\n    }\n  })), visualization === 'grid' && __jsx(SimpleGrid, {\n    width: allowed_width_favorites,\n    minChildWidth: \"75px\",\n    spacing: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 15\n    }\n  }, favorite_lists.map((i, index) => __jsx(GridItem, _extends({\n    key: i.id,\n    index: index\n  }, i, {\n    history: routerHistory,\n    showMenu: event => showListMenu(event, i.id),\n    is_initial: initial_list === i.id,\n    is_favorite: true,\n    locked: maxDisplay ? index > maxDisplay - 1 : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 19\n    }\n  })))), visualization === 'list' && __jsx(SimpleGrid, {\n    columns: 2,\n    spacing: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 15\n    }\n  }, favorite_lists.map((i, index) => __jsx(ListItem, _extends({\n    key: i.id\n  }, i, {\n    active: (selectedList === null || selectedList === void 0 ? void 0 : selectedList.id) === i.id,\n    history: routerHistory,\n    showMenu: event => showListMenu(event, i.id),\n    is_initial: initial_list === i.id,\n    is_favorite: true,\n    locked: maxDisplay ? index > maxDisplay - 1 : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 19\n    }\n  })))), favorite_lists.length === 0 && searchValue.length === 0 && __jsx(Box, {\n    color: \"#757575\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 15\n    }\n  }, \"No favorites available\")), selectedTab === 'trash' && __jsx(React.Fragment, null, __jsx(Box, {\n    paddingLeft: visualization === 'list' ? '8px' : '0px',\n    paddingRight: visualization === 'grid' ? '10px' : '0px',\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: `title ${dampen_trash_lists_title_text && 'inactive'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 15\n    }\n  }, trash_lists_title_text), __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    variant: \"solid\",\n    variantColor: \"red\",\n    size: \"sm\",\n    onClick: openDeleteAllTrashDialog,\n    isDisabled: trash_lists.length === 0,\n    mr: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 17\n    }\n  }, \"Delete All\"), __jsx(FilterComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 17\n    }\n  }))), visualization === 'grid' && __jsx(SimpleGrid, {\n    width: allowed_width_trash,\n    minChildWidth: \"75px\",\n    spacing: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 15\n    }\n  }, trash_lists.map((i, index) => __jsx(GridItem, _extends({\n    key: i.id,\n    index: index\n  }, i, {\n    history: routerHistory,\n    showMenu: event => showTrashListMenu(event, i.id),\n    is_trash: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 19\n    }\n  })))), visualization === 'list' && __jsx(SimpleGrid, {\n    columns: 2,\n    spacing: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 15\n    }\n  }, trash_lists.map(i => __jsx(ListItem, _extends({\n    key: i.id\n  }, i, {\n    active: (selectedList === null || selectedList === void 0 ? void 0 : selectedList.id) === i.id,\n    history: routerHistory,\n    showMenu: event => showTrashListMenu(event, i.id),\n    is_trash: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 19\n    }\n  })))), trash_lists.length === 0 && searchValue.length === 0 && __jsx(Box, {\n    color: \"#757575\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 15\n    }\n  }, \"No trash available\"))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/lists/list-lists/index.tsx"],"names":["React","useLayoutEffect","useState","SimpleGrid","Box","Icon","Stack","Tooltip","useDisclosure","useHistory","Button","Select","icons","ListItemMenu","DeleteAllConfirmationDialog","useSelector","selectActiveSubscription","useWindowSize","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","GridItem","props","icon","is_initial","handleClick","is_trash","is_smart","history","push","id","name","locked","color","toSvg","event","stopPropagation","showMenu","is_favorite","ListItem","active","AddButtonGrid","onClick","AddButtonList","filterOptions","key","label","Component","selectedList","setSelectedList","selectedSmartList","setSelectedSmartList","selectedTrashList","setSelectedTrashList","selectedItemPosition","setSelectedItemPosition","top","bottom","right","left","isOpen","isDeleteAllTrashDialogOpen","onOpen","openDeleteAllTrashDialog","onClose","closeDeleteAllTrashDialog","lists","initial_list","smart_lists","favorite_lists","trash_lists","searchValue","visualization","updateList","deleteList","deleteListPermanently","restoreList","deleteSmartList","updateSmartList","selectedTab","selectTab","markListFavorite","unMarkListFavorite","openNoSubscriptionModal","deleteTrashPermanently","window_width","spacing","padding_ratio","content_width","max_columns","Math","floor","allowed_width","length","allowed_width_smart","allowed_width_favorites","allowed_width_trash","dampen_title_text","dampen_smart_lists_title_text","dampen_favorite_lists_title_text","dampen_trash_lists_title_text","lists_title_text","smart_lists_title_text","favorite_lists_title_text","trash_lists_title_text","activeSubscription","maxDisplay","details","routerHistory","navCreateList","showListMenu","list_id","closeItemMenu","list","find","i","target","getBoundingClientRect","showSmartListMenu","smart_list_id","smart_list","showTrashListMenu","trash_list_id","trash_list","FilterComponent","e","value","map","favorites","includes","index"],"mappings":"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","sourcesContent":["import React, { MouseEvent, useLayoutEffect, useState } from 'react';\nimport { SimpleGrid, Box, Icon, Stack, Tooltip, useDisclosure } from '@chakra-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Select } from 'app/components';\nimport { icons } from 'feather-icons';\nimport { ListItemMenu } from '../../../../../components/list-item-menu';\nimport { List, SmartList } from '../../../../../lists.types';\nimport { DeleteAllConfirmationDialog } from '../../../../../components/delete-all-confirmation-modal';\nimport { useSelector } from 'react-redux';\nimport { selectActiveSubscription } from '../../../../../../settings';\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n};\n\ninterface ItemProps {\n  history: any;\n  showMenu: Function;\n  active?: boolean;\n  is_smart: boolean;\n  is_favorite: boolean;\n  is_trash?: boolean;\n  is_initial?: boolean;\n  locked?: boolean;\n}\n\nconst GridItem = (props: ItemProps & List) => {\n  let icon = props.icon && icons[props.icon] ? props.icon : 'database';\n  if (props.is_initial) {\n    icon = 'user';\n  }\n\n  const handleClick = () => {\n    if (props.is_trash) return;\n    if (props.is_smart) props.history.push(`/s/lists/view/${props.id}/smart`);\n    else props.history.push(`/s/lists/view/${props.id}`);\n  };\n\n  return (\n    <Box\n      title={props.name}\n      className=\"list-item--grid\"\n      opacity={props.locked ? 0.2 : 1}\n      cursor={props.locked ? 'not-allowed !important' : 'pointer'}\n      onClick={() => {\n        if (!props.locked) {\n          handleClick();\n        }\n      }}\n    >\n      <Box\n        className=\"box\"\n        bg={\n          props.is_initial\n            ? '#3525E6'\n            : props.is_smart\n            ? '#02AAA4'\n            : props.color || 'rgba(15,15,15, 0.8)'\n        }\n      >\n        <img\n          alt=\"list-icon\"\n          src={`data:image/svg+xml;utf8,${icons[icon].toSvg({\n            color: 'white',\n          })}`}\n        />\n        {!props.is_initial && (\n          <div\n            id={`list-${props.id}`}\n            className=\"action-btn-bg\"\n            onClick={(event: MouseEvent) => {\n              event.stopPropagation();\n              if (!props.locked) {\n                props.showMenu(event);\n              }\n            }}\n          >\n            <Icon name=\"chevron-down\" color=\"white\" size=\"14px\" />\n          </div>\n        )}\n      </Box>\n      <div className=\"label\">\n        {props.is_favorite && (\n          <Icon\n            name=\"star\"\n            marginRight=\"3px\"\n            size=\"10px\"\n            style={{\n              color: 'rgba(233,168,0,0.8)',\n            }}\n          />\n        )}\n\n        <Box\n          overflow=\"hidden\"\n          // @ts-ignore\n          textOverflow=\"ellipsis\"\n          whiteSpace=\"nowrap\"\n        >\n          {props.name}\n        </Box>\n      </div>\n      {props.is_initial && (\n        <Box\n          fontSize=\"10px\"\n          color=\"#32a852\"\n          textAlign=\"center\"\n          alignSelf=\"center\"\n          backgroundColor=\"rgba(50, 168, 82, 0.2)\"\n          borderRadius=\"5px\"\n          padding=\"2px 5px\"\n          mt=\"5px\"\n          width=\"fit-content\"\n          marginX=\"auto\"\n        >\n          primary\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nconst ListItem = (props: ItemProps & List) => {\n  let icon = props.icon && icons[props.icon] ? props.icon : 'database';\n  if (props.is_initial) {\n    icon = 'user';\n  }\n\n  const handleClick = () => {\n    if (props.is_trash) return;\n    if (props.is_smart) props.history.push(`/s/lists/view/${props.id}/smart`);\n    else props.history.push(`/s/lists/view/${props.id}`);\n  };\n\n  return (\n    <Box\n      title={props.name}\n      className={`list-item--list ${props.active && 'active'}`}\n      opacity={props.locked ? 0.2 : 1}\n      cursor={props.locked ? 'not-allowed !important' : 'pointer'}\n      onClick={() => {\n        if (!props.locked) {\n          handleClick();\n        }\n      }}\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box\n          className=\"box\"\n          bg={\n            props.is_initial\n              ? '#3525E6'\n              : props.is_smart\n              ? '#02AAA4'\n              : props.color || 'rgba(15,15,15, 0.8)'\n          }\n        >\n          <img\n            alt=\"list-icon\"\n            src={`data:image/svg+xml;utf8,${icons[icon].toSvg({\n              color: 'white',\n            })}`}\n          />\n        </Box>\n        <div className=\"label\">\n          {props.is_favorite && (\n            <Icon\n              name=\"star\"\n              marginRight=\"3px\"\n              size=\"10px\"\n              style={{\n                color: 'rgba(233,168,0,0.8)',\n              }}\n            />\n          )}\n          <Box\n            overflow=\"hidden\"\n            whiteSpace=\"nowrap\"\n            // @ts-ignore\n            textOverflow=\"ellipsis\"\n            maxWidth=\"250px\"\n          >\n            {props.name}\n          </Box>\n        </div>\n      </Box>\n      {props.is_initial && (\n        <Box\n          fontSize=\"10px\"\n          color=\"#32a852\"\n          textAlign=\"center\"\n          alignSelf=\"center\"\n          backgroundColor=\"rgba(50, 168, 82, 0.2)\"\n          borderRadius=\"5px\"\n          padding=\"2px 5px\"\n          width=\"fit-content\"\n          marginLeft=\"10px\"\n        >\n          primary\n        </Box>\n      )}\n      {!props.is_initial && (\n        <div\n          className=\"action-btn-bg\"\n          onClick={(event: MouseEvent) => {\n            event.stopPropagation();\n            if (!props.locked) {\n              props.showMenu(event);\n            }\n          }}\n        >\n          <Icon name=\"chevron-down\" color=\"white\" size=\"14px\" />\n        </div>\n      )}\n    </Box>\n  );\n};\n\nconst AddButtonGrid = (props: any) => (\n  <div className=\"add-button--grid\" onClick={props.onClick}>\n    <div className=\"box\">\n      <img\n        alt=\"list-icon\"\n        src={`data:image/svg+xml;utf8,${icons['plus'].toSvg({ color: 'grey' })}`}\n      />\n    </div>\n    <div className=\"label\">Add a list</div>\n  </div>\n);\n\nconst AddButtonList = (props: any) => (\n  <div className=\"add-button--list\" onClick={props.onClick}>\n    <Box display=\"flex\" alignItems=\"center\">\n      <div className=\"box\">\n        <img\n          alt=\"list-icon\"\n          src={`data:image/svg+xml;utf8,${icons['plus'].toSvg({ color: 'grey' })}`}\n        />\n      </div>\n      <div className=\"label\">Add a list</div>\n    </Box>\n  </div>\n);\n\ninterface Props {\n  lists: List[];\n  smart_lists: SmartList[];\n  favorite_lists: List[];\n  trash_lists: List[];\n  favorites: string[];\n  openCreateTableModal: Function;\n  searchValue: string;\n  visualization: string;\n  updateList: Function;\n  deleteList: Function;\n  restoreList: Function;\n  deleteListPermanently: Function;\n  deleteSmartList: Function;\n  updateSmartList: Function;\n  markListFavorite: Function;\n  unMarkListFavorite: Function;\n  selectedTab: string;\n  selectTab: Function;\n  initial_list: string;\n  openNoSubscriptionModal: Function;\n  deleteTrashPermanently: Function;\n}\n\nconst filterOptions: { key: string; label: string }[] = [\n  {\n    key: 'lists',\n    label: 'Lists',\n  },\n  {\n    key: 'favorites',\n    label: 'Favorites',\n  },\n  {\n    key: 'trash',\n    label: 'Trash',\n  },\n];\n\nexport const Component = (props: Props) => {\n  const [selectedList, setSelectedList] = useState<List | null>(null);\n  const [selectedSmartList, setSelectedSmartList] = useState<SmartList | null>(null);\n  const [selectedTrashList, setSelectedTrashList] = useState<List | null>(null);\n  const [selectedItemPosition, setSelectedItemPosition] = useState({\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n  });\n\n  const {\n    isOpen: isDeleteAllTrashDialogOpen,\n    onOpen: openDeleteAllTrashDialog,\n    onClose: closeDeleteAllTrashDialog,\n  } = useDisclosure();\n\n  const {\n    lists,\n    initial_list,\n    smart_lists,\n    favorite_lists,\n    trash_lists,\n    searchValue,\n    visualization,\n    updateList,\n    deleteList,\n    deleteListPermanently,\n    restoreList,\n    deleteSmartList,\n    updateSmartList,\n    selectedTab,\n    selectTab,\n    markListFavorite,\n    unMarkListFavorite,\n    openNoSubscriptionModal,\n    deleteTrashPermanently,\n  } = props;\n\n  const [window_width] = useWindowSize();\n  const spacing: number = 30;\n  let padding_ratio = 0.3;\n  if (window_width <= 1400) padding_ratio = 0.2;\n  if (window_width <= 1000) padding_ratio = 0.1;\n\n  const content_width: number = (1 - padding_ratio) * window_width - (286 + 40);\n  const max_columns: number = Math.floor(content_width / (75 + spacing));\n\n  let allowed_width: number;\n  if (lists.length + 1 >= max_columns) allowed_width = content_width;\n  else allowed_width = (lists.length + 1) * (75 + spacing);\n\n  let allowed_width_smart: number;\n  if (smart_lists.length + 1 >= max_columns) allowed_width_smart = content_width;\n  else allowed_width_smart = smart_lists.length * (75 + spacing);\n\n  let allowed_width_favorites: number;\n  if (favorite_lists.length + 1 >= max_columns) allowed_width_favorites = content_width;\n  else allowed_width_favorites = favorite_lists.length * (75 + spacing);\n\n  let allowed_width_trash: number;\n  if (trash_lists.length + 1 >= max_columns) allowed_width_trash = content_width;\n  else allowed_width_trash = trash_lists.length * (75 + spacing);\n\n  let dampen_title_text: boolean = false;\n  let dampen_smart_lists_title_text: boolean = false;\n  let dampen_favorite_lists_title_text: boolean = false;\n  let dampen_trash_lists_title_text: boolean = false;\n  let lists_title_text = 'Lists';\n  let smart_lists_title_text = 'Smart lists';\n  let favorite_lists_title_text = 'Favorites';\n  let trash_lists_title_text = 'Trash';\n\n  if (searchValue.length > 0) {\n    if (lists.length > 0) lists_title_text = `Lists found matching \"${searchValue}\"`;\n    else {\n      lists_title_text = 'No lists found';\n      dampen_title_text = true;\n    }\n\n    if (smart_lists.length > 0) {\n      smart_lists_title_text = `Smart lists found matching \"${searchValue}\"`;\n    } else {\n      smart_lists_title_text = 'No smart lists found';\n      dampen_smart_lists_title_text = true;\n    }\n\n    if (favorite_lists.length > 0) {\n      favorite_lists_title_text = `Favorites found matching \"${searchValue}\"`;\n    } else {\n      favorite_lists_title_text = 'No favorites found';\n      dampen_favorite_lists_title_text = true;\n    }\n\n    if (trash_lists.length > 0) {\n      trash_lists_title_text = `Trash found matching \"${searchValue}\"`;\n    } else {\n      trash_lists_title_text = 'No trash found';\n      dampen_trash_lists_title_text = true;\n    }\n  }\n\n  const activeSubscription: any = useSelector(selectActiveSubscription);\n  const maxDisplay: number | null = activeSubscription?.details?.lists?.lists;\n\n  const routerHistory = useHistory();\n\n  const navCreateList = () => routerHistory.push('/s/lists/lists/new');\n\n  const showListMenu = (event: any, list_id: string) => {\n    closeItemMenu();\n    const list = lists.find((i: any) => i.id === list_id);\n    if (!list) return;\n    const { top, bottom, left, right } = event.target.getBoundingClientRect();\n    setSelectedItemPosition({\n      top,\n      bottom,\n      left,\n      right,\n    });\n    setSelectedList(list);\n  };\n\n  const showSmartListMenu = (event: any, smart_list_id: string) => {\n    closeItemMenu();\n    const smart_list = smart_lists.find((i: any) => i.id === smart_list_id);\n    if (!smart_list) return;\n    const { top, bottom, left, right } = event.target.getBoundingClientRect();\n    setSelectedItemPosition({\n      top,\n      bottom,\n      left,\n      right,\n    });\n    setSelectedSmartList(smart_list);\n  };\n\n  const showTrashListMenu = (event: any, trash_list_id: string) => {\n    closeItemMenu();\n    const trash_list = trash_lists.find((i: any) => i.id === trash_list_id);\n    if (!trash_list) return;\n    const { top, bottom, left, right } = event.target.getBoundingClientRect();\n    setSelectedItemPosition({\n      top,\n      bottom,\n      left,\n      right,\n    });\n    setSelectedTrashList(trash_list);\n  };\n\n  const closeItemMenu = () => {\n    setSelectedList(null);\n    setSelectedSmartList(null);\n    setSelectedTrashList(null);\n    setSelectedItemPosition({\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n    });\n  };\n\n  const FilterComponent = () => (\n    <Select\n      color=\"#333333\"\n      size=\"sm\"\n      value={selectedTab}\n      onChange={e => {\n        selectTab(e.target.value);\n      }}\n    >\n      {filterOptions.map((i: any) => (\n        <option key={i.key} value={i.key}>\n          {i.label}\n        </option>\n      ))}\n    </Select>\n  );\n\n  return (\n    <>\n      <DeleteAllConfirmationDialog\n        isOpen={isDeleteAllTrashDialogOpen}\n        trashCount={trash_lists.length}\n        onClose={closeDeleteAllTrashDialog}\n        onProceed={deleteTrashPermanently}\n      />\n      <ListItemMenu\n        targetPosition={selectedItemPosition}\n        show={!!selectedList || !!selectedSmartList || !!selectedTrashList}\n        initialData={selectedList || selectedSmartList || selectedTrashList}\n        updateList={!!selectedSmartList ? updateSmartList : updateList}\n        deleteList={!!selectedSmartList ? deleteSmartList : deleteList}\n        deleteListPermanently={deleteListPermanently}\n        restoreList={restoreList}\n        markListFavorite={markListFavorite}\n        unMarkListFavorite={unMarkListFavorite}\n        is_favorite={props.favorites.includes(!!selectedList ? selectedList.id : '')}\n        is_smart_list={!!selectedSmartList}\n        is_initial_list={selectedList?.id === initial_list}\n        is_trash={!!selectedTrashList}\n        close={closeItemMenu}\n        openNoSubscriptionModal={openNoSubscriptionModal}\n      />\n      <Box className=\"content\">\n        {selectedTab === 'lists' && (\n          <>\n            <Box\n              paddingLeft={visualization === 'list' ? '8px' : '0px'}\n              paddingRight={visualization === 'grid' ? '10px' : '0px'}\n              className=\"section-title\"\n              alignItems=\"center\"\n            >\n              <Box className={`title ${dampen_title_text && 'inactive'}`}>{lists_title_text}</Box>\n              <FilterComponent />\n            </Box>\n            {visualization === 'grid' && (\n              <SimpleGrid width={allowed_width} minChildWidth=\"75px\" spacing=\"30px\">\n                {searchValue.length === 0 && <AddButtonGrid onClick={navCreateList} />}\n                {lists.map((i: any, index: number) => (\n                  <GridItem\n                    key={i.id}\n                    index={index}\n                    {...i}\n                    history={routerHistory}\n                    showMenu={(event: any) => showListMenu(event, i.id)}\n                    is_smart={false}\n                    is_favorite={props.favorites.includes(i.id)}\n                    is_initial={initial_list === i.id}\n                    locked={maxDisplay ? index > maxDisplay - 1 : false}\n                  />\n                ))}\n              </SimpleGrid>\n            )}\n            {visualization === 'list' && (\n              <SimpleGrid columns={2} spacing=\"5px\">\n                <AddButtonList onClick={navCreateList} />\n                {lists.map((i: List, index: number) => (\n                  <ListItem\n                    key={i.id}\n                    {...i}\n                    active={selectedList?.id === i.id}\n                    history={routerHistory}\n                    showMenu={(event: any) => showListMenu(event, i.id)}\n                    is_smart={false}\n                    is_favorite={props.favorites.includes(i.id)}\n                    is_initial={initial_list === i.id}\n                    locked={maxDisplay ? index > maxDisplay - 1 : false}\n                  />\n                ))}\n              </SimpleGrid>\n            )}\n          </>\n        )}\n        {['all', 'smart'].includes(selectedTab) && (\n          <>\n            <Box\n              marginTop={selectedTab === 'all' ? '35px' : '0px'}\n              paddingLeft={visualization === 'list' ? '8px' : '0px'}\n              paddingRight={visualization === 'grid' ? '10px' : '0px'}\n              className=\"section-title\"\n            >\n              <Stack isInline alignItems=\"center\">\n                <Box className={`title ${dampen_smart_lists_title_text && 'inactive'}`}>\n                  {smart_lists_title_text}\n                </Box>\n                <Tooltip\n                  zIndex={10000}\n                  placement=\"right\"\n                  aria-label=\"Campaign smart sending\"\n                  label=\"A smart list is a list with one or more filters applied to it.\"\n                >\n                  <Icon size=\"0.8rem\" name=\"info\" color=\"gray.500\" />\n                </Tooltip>\n              </Stack>\n            </Box>\n\n            {visualization === 'grid' && (\n              <SimpleGrid width={allowed_width_smart} minChildWidth=\"75px\" spacing=\"30px\">\n                {smart_lists.map((i: any, index: number) => (\n                  <GridItem\n                    key={i.id}\n                    index={index}\n                    {...i}\n                    history={routerHistory}\n                    showMenu={(event: any) => showSmartListMenu(event, i.id)}\n                    is_smart\n                    is_favorite={false}\n                    is_initial={initial_list === i.id}\n                    locked={maxDisplay ? index > maxDisplay - 1 : false}\n                  />\n                ))}\n              </SimpleGrid>\n            )}\n            {visualization === 'list' && (\n              <SimpleGrid columns={2} spacing=\"5px\">\n                {smart_lists.map((i: any, index: number) => (\n                  <ListItem\n                    key={i.id}\n                    {...i}\n                    active={selectedList?.id === i.id}\n                    history={routerHistory}\n                    showMenu={(event: any) => showSmartListMenu(event, i.id)}\n                    is_smart={true}\n                    is_favorite={false}\n                    is_initial={initial_list === i.id}\n                    locked={maxDisplay ? index > maxDisplay - 1 : false}\n                  />\n                ))}\n              </SimpleGrid>\n            )}\n            {smart_lists.length === 0 && searchValue.length === 0 && (\n              <Box color=\"#757575\">No smart lists available</Box>\n            )}\n          </>\n        )}\n        {selectedTab === 'favorites' && (\n          <>\n            <Box\n              paddingLeft={visualization === 'list' ? '8px' : '0px'}\n              paddingRight={visualization === 'grid' ? '10px' : '0px'}\n              className=\"section-title\"\n            >\n              <Box className={`title ${dampen_favorite_lists_title_text && 'inactive'}`}>\n                {favorite_lists_title_text}\n              </Box>\n              <FilterComponent />\n            </Box>\n\n            {visualization === 'grid' && (\n              <SimpleGrid width={allowed_width_favorites} minChildWidth=\"75px\" spacing=\"30px\">\n                {favorite_lists.map((i: any, index: number) => (\n                  <GridItem\n                    key={i.id}\n                    index={index}\n                    {...i}\n                    history={routerHistory}\n                    showMenu={(event: any) => showListMenu(event, i.id)}\n                    is_initial={initial_list === i.id}\n                    is_favorite\n                    locked={maxDisplay ? index > maxDisplay - 1 : false}\n                  />\n                ))}\n              </SimpleGrid>\n            )}\n            {visualization === 'list' && (\n              <SimpleGrid columns={2} spacing=\"5px\">\n                {favorite_lists.map((i: any, index: number) => (\n                  <ListItem\n                    key={i.id}\n                    {...i}\n                    active={selectedList?.id === i.id}\n                    history={routerHistory}\n                    showMenu={(event: any) => showListMenu(event, i.id)}\n                    is_initial={initial_list === i.id}\n                    is_favorite\n                    locked={maxDisplay ? index > maxDisplay - 1 : false}\n                  />\n                ))}\n              </SimpleGrid>\n            )}\n            {favorite_lists.length === 0 && searchValue.length === 0 && (\n              <Box color=\"#757575\">No favorites available</Box>\n            )}\n          </>\n        )}\n\n        {selectedTab === 'trash' && (\n          <>\n            <Box\n              paddingLeft={visualization === 'list' ? '8px' : '0px'}\n              paddingRight={visualization === 'grid' ? '10px' : '0px'}\n              className=\"section-title\"\n            >\n              <div className={`title ${dampen_trash_lists_title_text && 'inactive'}`}>\n                {trash_lists_title_text}\n              </div>\n              <Box display=\"flex\" alignItems=\"center\">\n                <Button\n                  variant=\"solid\"\n                  variantColor=\"red\"\n                  size=\"sm\"\n                  onClick={openDeleteAllTrashDialog}\n                  isDisabled={trash_lists.length === 0}\n                  mr=\"1rem\"\n                >\n                  Delete All\n                </Button>\n                <FilterComponent />\n              </Box>\n            </Box>\n\n            {visualization === 'grid' && (\n              <SimpleGrid width={allowed_width_trash} minChildWidth=\"75px\" spacing=\"30px\">\n                {trash_lists.map((i: any, index: number) => (\n                  <GridItem\n                    key={i.id}\n                    index={index}\n                    {...i}\n                    history={routerHistory}\n                    showMenu={(event: any) => showTrashListMenu(event, i.id)}\n                    is_trash\n                  />\n                ))}\n              </SimpleGrid>\n            )}\n            {visualization === 'list' && (\n              <SimpleGrid columns={2} spacing=\"5px\">\n                {trash_lists.map((i: any) => (\n                  <ListItem\n                    key={i.id}\n                    {...i}\n                    active={selectedList?.id === i.id}\n                    history={routerHistory}\n                    showMenu={(event: any) => showTrashListMenu(event, i.id)}\n                    is_trash\n                  />\n                ))}\n              </SimpleGrid>\n            )}\n            {trash_lists.length === 0 && searchValue.length === 0 && (\n              <Box color=\"#757575\">No trash available</Box>\n            )}\n          </>\n        )}\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}