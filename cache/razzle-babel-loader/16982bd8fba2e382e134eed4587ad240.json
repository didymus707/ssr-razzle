{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/NewQuickReply.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Stack, useToast } from '@chakra-ui/core';\nimport { PreTitle, ToastBox } from 'app/components';\nimport { convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router';\nimport { createQuickReply } from '../inbox.service';\nimport { PageBack, QuickReplyForm } from './component';\nexport const InboxSettingsNewQuickReply = () => {\n  const toast = useToast();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  const handleGoBack = () => history.push('/s/inbox/settings/quick-replies');\n\n  const {\n    isLoading,\n    mutate\n  } = useMutation(payload => createQuickReply(payload), {\n    onMutate: async data => {\n      const {\n        name,\n        content,\n        subject\n      } = data;\n      const newData = {\n        name,\n        template: {\n          content,\n          subject\n        }\n      };\n      await queryClient.cancelQueries(['quick-replies', 1]);\n      const previousReplies = queryClient.getQueryData(['quick-replies', 1]);\n      queryClient.setQueryData(['quick-replies', 1], old => _objectSpread(_objectSpread({}, old), {}, {\n        //@ts-ignore\n        quick_replies: [...old.quick_replies, newData]\n      }));\n      return {\n        previousReplies\n      };\n    },\n    onSuccess: () => {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Quick reply created successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        })\n      });\n      queryClient.invalidateQueries(['quick-replies', 1]);\n      handleGoBack();\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData(['quick-replies', 1], context.previousReplies);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 36\n          }\n        })\n      });\n    }\n  });\n\n  const handleCreateReply = values => {\n    const rawContentState = (values === null || values === void 0 ? void 0 : values.content) && convertToRaw(values.content.getCurrentContent());\n    const content = rawContentState && draftToHtml(rawContentState, {\n      trigger: '#',\n      separator: ' '\n    });\n\n    const payload = _objectSpread(_objectSpread({}, values), {}, {\n      content\n    });\n\n    mutate(payload);\n  };\n\n  return __jsx(Box, {\n    height: \"100%\",\n    bg: \"white\",\n    overflowY: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(PageBack, {\n    title: \"Back to Quick Replies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    maxW: \"800px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    spacing: \"7rem\",\n    flex: 1,\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(PreTitle, {\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"create quick reply\"), __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(QuickReplyForm, {\n    isLoading: isLoading,\n    onCancel: handleGoBack,\n    onSubmit: handleCreateReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/NewQuickReply.tsx"],"names":["Box","Stack","useToast","PreTitle","ToastBox","convertToRaw","draftToHtml","React","useMutation","useQueryClient","useHistory","createQuickReply","PageBack","QuickReplyForm","InboxSettingsNewQuickReply","toast","history","queryClient","handleGoBack","push","isLoading","mutate","payload","onMutate","data","name","content","subject","newData","template","cancelQueries","previousReplies","getQueryData","setQueryData","old","quick_replies","onSuccess","position","render","onClose","invalidateQueries","onError","error","context","message","handleCreateReply","values","rawContentState","getCurrentContent","trigger","separator"],"mappings":"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","sourcesContent":["import { Box, Stack, useToast } from '@chakra-ui/core';\nimport { PreTitle, ToastBox } from 'app/components';\nimport { AxiosError } from 'axios';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router';\nimport { createQuickReply } from '../inbox.service';\nimport { PageBack, QuickReplyForm } from './component';\n\nexport const InboxSettingsNewQuickReply = () => {\n  const toast = useToast();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  const handleGoBack = () => history.push('/s/inbox/settings/quick-replies');\n\n  const { isLoading, mutate } = useMutation<any, AxiosError, any, any>(\n    (payload: { name: string; subject?: string; content: string }) => createQuickReply(payload),\n    {\n      onMutate: async data => {\n        const { name, content, subject } = data;\n        const newData = {\n          name,\n          template: {\n            content,\n            subject,\n          },\n        };\n        await queryClient.cancelQueries(['quick-replies', 1]);\n        const previousReplies = queryClient.getQueryData(['quick-replies', 1]);\n        queryClient.setQueryData(['quick-replies', 1], old => ({\n          //@ts-ignore\n          ...old,\n          //@ts-ignore\n          quick_replies: [...old.quick_replies, newData],\n        }));\n        return { previousReplies };\n      },\n      onSuccess: () => {\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox\n              status=\"success\"\n              onClose={onClose}\n              message=\"Quick reply created successfully\"\n            />\n          ),\n        });\n        queryClient.invalidateQueries(['quick-replies', 1]);\n        handleGoBack();\n      },\n      onError: (error, newData, context) => {\n        queryClient.setQueryData(['quick-replies', 1], context.previousReplies);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n        });\n      },\n    },\n  );\n\n  const handleCreateReply = (values: { name: string; subject?: string; content?: EditorState }) => {\n    const rawContentState = values?.content && convertToRaw(values.content.getCurrentContent());\n    const content =\n      rawContentState &&\n      draftToHtml(rawContentState, {\n        trigger: '#',\n        separator: ' ',\n      });\n    const payload = { ...values, content };\n    mutate(payload);\n  };\n\n  return (\n    <Box height=\"100%\" bg=\"white\" overflowY=\"auto\">\n      <PageBack title=\"Back to Quick Replies\" />\n      <Box maxW=\"800px\">\n        <Stack spacing=\"7rem\" flex={1} isInline>\n          <PreTitle color=\"black\">create quick reply</PreTitle>\n          <Box flex={1}>\n            <QuickReplyForm\n              isLoading={isLoading}\n              onCancel={handleGoBack}\n              onSubmit={handleCreateReply}\n            />\n          </Box>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}