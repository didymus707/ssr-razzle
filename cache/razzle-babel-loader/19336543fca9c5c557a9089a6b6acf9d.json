{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initial_meta = {\n  page: 0,\n  per_page: 8,\n  count_total: 0,\n  page_total: 1,\n  prev_page: false,\n  next_page: true\n};\nconst initialState = {\n  account: {\n    data: null,\n    loading: false\n  },\n  transactions: {\n    data: {},\n    by_id: [],\n    meta: initial_meta,\n    loading: false\n  }\n};\nexport const managedAccountSlice = createSlice({\n  name: 'managed_account',\n  initialState,\n  reducers: {\n    setManagedAccountData: (state, action) => {\n      const {\n        data\n      } = action.payload;\n      state.account.data = data;\n    },\n    setManagedAccountLoading: (state, action) => {\n      const loading = action.payload;\n      state.account.loading = loading;\n    },\n    setManagedAccountTransactionsLoading: (state, action) => {\n      const loading = action.payload;\n      state.transactions.loading = loading;\n    },\n    setManagedAccountTransactionsData: (state, action) => {\n      const {\n        data,\n        by_id,\n        meta\n      } = action.payload;\n      state.transactions.data = data;\n      state.transactions.by_id = by_id;\n      state.transactions.meta = meta;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/payments/slices/managed_account.ts"],"names":["createSlice","initial_meta","page","per_page","count_total","page_total","prev_page","next_page","initialState","account","data","loading","transactions","by_id","meta","managedAccountSlice","name","reducers","setManagedAccountData","state","action","payload","setManagedAccountLoading","setManagedAccountTransactionsLoading","setManagedAccountTransactionsData"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAkB,GAAG;AACzBC,EAAAA,IAAI,EAAE,CADmB;AAEzBC,EAAAA,QAAQ,EAAE,CAFe;AAGzBC,EAAAA,WAAW,EAAE,CAHY;AAIzBC,EAAAA,UAAU,EAAE,CAJa;AAKzBC,EAAAA,SAAS,EAAE,KALc;AAMzBC,EAAAA,SAAS,EAAE;AANc,CAA3B;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,IADC;AAEPC,IAAAA,OAAO,EAAE;AAFF,GADU;AAKnBC,EAAAA,YAAY,EAAE;AACZF,IAAAA,IAAI,EAAE,EADM;AAEZG,IAAAA,KAAK,EAAE,EAFK;AAGZC,IAAAA,IAAI,EAAEb,YAHM;AAIZU,IAAAA,OAAO,EAAE;AAJG;AALK,CAArB;AAaA,OAAO,MAAMI,mBAAmB,GAAGf,WAAW,CAAC;AAC7CgB,EAAAA,IAAI,EAAE,iBADuC;AAE7CR,EAAAA,YAF6C;AAG7CS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBAAqB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,YAAM;AAAEV,QAAAA;AAAF,UAAWU,MAAM,CAACC,OAAxB;AACAF,MAAAA,KAAK,CAACV,OAAN,CAAcC,IAAd,GAAqBA,IAArB;AACD,KAJO;AAKRY,IAAAA,wBAAwB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3C,YAAMT,OAAO,GAAGS,MAAM,CAACC,OAAvB;AACAF,MAAAA,KAAK,CAACV,OAAN,CAAcE,OAAd,GAAwBA,OAAxB;AACD,KARO;AASRY,IAAAA,oCAAoC,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvD,YAAMT,OAAO,GAAGS,MAAM,CAACC,OAAvB;AACAF,MAAAA,KAAK,CAACP,YAAN,CAAmBD,OAAnB,GAA6BA,OAA7B;AACD,KAZO;AAaRa,IAAAA,iCAAiC,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACpD,YAAM;AAAEV,QAAAA,IAAF;AAAQG,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAAwBM,MAAM,CAACC,OAArC;AACAF,MAAAA,KAAK,CAACP,YAAN,CAAmBF,IAAnB,GAA0BA,IAA1B;AACAS,MAAAA,KAAK,CAACP,YAAN,CAAmBC,KAAnB,GAA2BA,KAA3B;AACAM,MAAAA,KAAK,CAACP,YAAN,CAAmBE,IAAnB,GAA0BA,IAA1B;AACD;AAlBO;AAHmC,CAAD,CAAvC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { Meta } from '../payments.types';\n\nconst initial_meta: Meta = {\n  page: 0,\n  per_page: 8,\n  count_total: 0,\n  page_total: 1,\n  prev_page: false,\n  next_page: true,\n};\n\nconst initialState = {\n  account: {\n    data: null,\n    loading: false,\n  },\n  transactions: {\n    data: {},\n    by_id: [],\n    meta: initial_meta,\n    loading: false,\n  },\n};\n\nexport const managedAccountSlice = createSlice({\n  name: 'managed_account',\n  initialState,\n  reducers: {\n    setManagedAccountData: (state, action) => {\n      const { data } = action.payload;\n      state.account.data = data;\n    },\n    setManagedAccountLoading: (state, action) => {\n      const loading = action.payload;\n      state.account.loading = loading;\n    },\n    setManagedAccountTransactionsLoading: (state, action) => {\n      const loading = action.payload;\n      state.transactions.loading = loading;\n    },\n    setManagedAccountTransactionsData: (state, action) => {\n      const { data, by_id, meta } = action.payload;\n      state.transactions.data = data;\n      state.transactions.by_id = by_id;\n      state.transactions.meta = meta;\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}