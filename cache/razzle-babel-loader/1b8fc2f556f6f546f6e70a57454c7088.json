{"ast":null,"code":"import { buildPaymentURL, client } from '../../../../utils';\nimport { setCardFormLoading, setCardsLoading, setCards, setChangeDefaultCardLoading, setDeleteCardLoading, removeDeleteCardLoading, removeCard, setBanksLoading, setBanks, setBankAccountFormLoading, setBankAccountsLoading, setBankAccounts } from '../settings.reducers';\nimport { setDefaultCard } from '../../payments/reducers';\nimport { sendAmplitudeData } from '../../../../utils/amplitude';\nexport const changeDefaultCard = card_id => async dispatch => {\n  dispatch(setChangeDefaultCardLoading({\n    card_id\n  }));\n\n  try {\n    await client('', {\n      url: buildPaymentURL(`/card/set_default/${card_id}`),\n      method: 'POST'\n    });\n    dispatch(setDefaultCard(card_id));\n    dispatch(setChangeDefaultCardLoading({\n      card_id: null\n    }));\n    return true;\n  } catch (e) {\n    dispatch(setChangeDefaultCardLoading({\n      card_id: null\n    }));\n    return null;\n  }\n};\nexport const initializeCard = provider => async dispatch => {\n  dispatch(setCardFormLoading({\n    loading: true\n  }));\n\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/card/initialize/${provider}`),\n      method: 'GET'\n    });\n    dispatch(setCardFormLoading({\n      loading: false\n    }));\n    return response.data;\n  } catch (e) {\n    dispatch(setCardFormLoading({\n      loading: false\n    }));\n    return null;\n  }\n};\nexport const deleteCard = card_id => async dispatch => {\n  sendAmplitudeData('deleteCard');\n  dispatch(setDeleteCardLoading({\n    card_id\n  }));\n\n  try {\n    await client('', {\n      url: buildPaymentURL(`/card/${card_id}`),\n      method: 'DELETE'\n    });\n    dispatch(removeDeleteCardLoading({\n      card_id\n    }));\n    dispatch(removeCard({\n      card_id\n    }));\n    return true;\n  } catch (e) {\n    dispatch(removeDeleteCardLoading({\n      card_id\n    }));\n    return null;\n  }\n};\nexport const fetchCards = () => async dispatch => {\n  dispatch(setCardsLoading({\n    loading: true\n  }));\n\n  try {\n    const response = await client('', {\n      url: buildPaymentURL('/card/'),\n      method: 'GET'\n    });\n    dispatch(setCardsLoading({\n      loading: false\n    }));\n    dispatch(setCards({\n      cards: response.data\n    }));\n    return response.data;\n  } catch (e) {\n    dispatch(setCardsLoading({\n      loading: false\n    }));\n  }\n};\nexport const getBanks = () => async dispatch => {\n  dispatch(setBanksLoading({\n    loading: true\n  }));\n  const country = 'Nigeria';\n  const provider = 'paystack';\n  const response = await client('', {\n    url: buildPaymentURL(`/bank/${provider}/${country}`),\n    method: 'GET'\n  });\n  dispatch(setBanks({\n    banks: response.data.filter(i => i.currency === 'NGN')\n  }));\n  dispatch(setBanksLoading({\n    loading: false\n  }));\n  return response.data;\n};\nexport const resolveBankAccount = values => async dispatch => {\n  sendAmplitudeData('resolveBankAccount');\n  dispatch(setBankAccountFormLoading({\n    loading: true\n  }));\n  const provider = 'paystack';\n\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/bank/resolve/${provider}`),\n      method: 'POST',\n      data: values\n    });\n    dispatch(setBankAccountFormLoading({\n      loading: false\n    }));\n    return response.data;\n  } catch (e) {\n    dispatch(setBankAccountFormLoading({\n      loading: false\n    }));\n    return null;\n  }\n};\nexport const fetchBankAccounts = () => async dispatch => {\n  dispatch(setBankAccountsLoading({\n    loading: true\n  }));\n\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/bank_account/beneficiary/`),\n      method: 'GET'\n    });\n    dispatch(setBankAccounts({\n      bank_accounts: response.data\n    }));\n    dispatch(setBankAccountsLoading({\n      loading: false\n    }));\n    return response.data;\n  } catch (e) {\n    dispatch(setBankAccountsLoading({\n      loading: false\n    }));\n    return null;\n  }\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/thunks/payment.ts"],"names":["buildPaymentURL","client","setCardFormLoading","setCardsLoading","setCards","setChangeDefaultCardLoading","setDeleteCardLoading","removeDeleteCardLoading","removeCard","setBanksLoading","setBanks","setBankAccountFormLoading","setBankAccountsLoading","setBankAccounts","setDefaultCard","sendAmplitudeData","changeDefaultCard","card_id","dispatch","url","method","e","initializeCard","provider","loading","response","data","deleteCard","fetchCards","cards","getBanks","country","banks","filter","i","currency","resolveBankAccount","values","fetchBankAccounts","bank_accounts"],"mappings":"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","sourcesContent":["import { buildPaymentURL, client } from '../../../../utils';\nimport {\n  setCardFormLoading,\n  setCardsLoading,\n  setCards,\n  setChangeDefaultCardLoading,\n  setDeleteCardLoading,\n  removeDeleteCardLoading,\n  removeCard,\n  setBanksLoading,\n  setBanks,\n  setBankAccountFormLoading,\n  setBankAccountsLoading,\n  setBankAccounts,\n} from '../settings.reducers';\nimport { setDefaultCard } from '../../payments/reducers';\n\nimport { AppThunk } from '../../../../root';\nimport { sendAmplitudeData } from '../../../../utils/amplitude';\n\nexport const changeDefaultCard = (card_id: string): AppThunk => async dispatch => {\n  dispatch(setChangeDefaultCardLoading({ card_id }));\n  try {\n    await client('', {\n      url: buildPaymentURL(`/card/set_default/${card_id}`),\n      method: 'POST',\n    });\n    dispatch(setDefaultCard(card_id));\n    dispatch(setChangeDefaultCardLoading({ card_id: null }));\n    return true;\n  } catch (e) {\n    dispatch(setChangeDefaultCardLoading({ card_id: null }));\n    return null;\n  }\n};\n\nexport const initializeCard = (provider: string): AppThunk => async dispatch => {\n  dispatch(setCardFormLoading({ loading: true }));\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/card/initialize/${provider}`),\n      method: 'GET',\n    });\n    dispatch(setCardFormLoading({ loading: false }));\n    return response.data;\n  } catch (e) {\n    dispatch(setCardFormLoading({ loading: false }));\n    return null;\n  }\n};\n\nexport const deleteCard = (card_id: string): AppThunk => async dispatch => {\n  sendAmplitudeData('deleteCard');\n  dispatch(setDeleteCardLoading({ card_id }));\n  try {\n    await client('', {\n      url: buildPaymentURL(`/card/${card_id}`),\n      method: 'DELETE',\n    });\n    dispatch(removeDeleteCardLoading({ card_id }));\n    dispatch(removeCard({ card_id }));\n    return true;\n  } catch (e) {\n    dispatch(removeDeleteCardLoading({ card_id }));\n    return null;\n  }\n};\n\nexport const fetchCards = (): AppThunk => async dispatch => {\n  dispatch(setCardsLoading({ loading: true }));\n  try {\n    const response = await client('', {\n      url: buildPaymentURL('/card/'),\n      method: 'GET',\n    });\n    dispatch(setCardsLoading({ loading: false }));\n    dispatch(setCards({ cards: response.data }));\n    return response.data;\n  } catch (e) {\n    dispatch(setCardsLoading({ loading: false }));\n  }\n};\n\nexport const getBanks = (): AppThunk => async dispatch => {\n  dispatch(setBanksLoading({ loading: true }));\n  const country = 'Nigeria';\n  const provider = 'paystack';\n  const response = await client('', {\n    url: buildPaymentURL(`/bank/${provider}/${country}`),\n    method: 'GET',\n  });\n  dispatch(setBanks({ banks: response.data.filter((i: any) => i.currency === 'NGN') }));\n  dispatch(setBanksLoading({ loading: false }));\n  return response.data;\n};\n\nexport const resolveBankAccount = (values: any): AppThunk => async dispatch => {\n  sendAmplitudeData('resolveBankAccount');\n  dispatch(setBankAccountFormLoading({ loading: true }));\n  const provider = 'paystack';\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/bank/resolve/${provider}`),\n      method: 'POST',\n      data: values,\n    });\n    dispatch(setBankAccountFormLoading({ loading: false }));\n    return response.data;\n  } catch (e) {\n    dispatch(setBankAccountFormLoading({ loading: false }));\n    return null;\n  }\n};\n\nexport const fetchBankAccounts = (): AppThunk => async dispatch => {\n  dispatch(setBankAccountsLoading({ loading: true }));\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/bank_account/beneficiary/`),\n      method: 'GET',\n    });\n    dispatch(setBankAccounts({ bank_accounts: response.data }));\n    dispatch(setBankAccountsLoading({ loading: false }));\n    return response.data;\n  } catch (e) {\n    dispatch(setBankAccountsLoading({ loading: false }));\n    return null;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}