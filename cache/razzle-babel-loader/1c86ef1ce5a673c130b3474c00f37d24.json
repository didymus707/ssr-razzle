{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/ChannelPreview.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Icon, Image, List, ListItem, Stack, useDisclosure, useToast } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport { fetchCredentials, getIntegrationUrl, getUserChannelConnectedAccounts, removeCredential } from 'app/authenticated-app/channels';\nimport { apps, requestAccessUrls } from 'app/authenticated-app/channels/channels.data';\nimport { BodyText, Button, ConfirmModal, Heading2, PreTitle, SmallText, Subtitle, ToastBox } from 'app/components';\nimport { selectOrganisationID } from 'app/unauthenticated-app/authentication';\nimport React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { WhatsappSetupModal } from '../components';\nimport { QRCodeSetupModal } from '../components/qr-code-setup-modal';\nimport { PageBack, PotentialChannelsModal } from './component';\nimport googleBtnImage from './btn_google_signin.png';\nexport const InboxSettingsChannelPreview = () => {\n  var _obj$key;\n\n  const {\n    id,\n    channel\n  } = useParams();\n  const {\n    name,\n    key,\n    icon,\n    category,\n    description,\n    previewImages,\n    permissions,\n    status\n  } = apps[channel];\n  const isActive = status === 'ready';\n  const queryClient = useQueryClient();\n  const toast = useToast();\n  const history = useHistory();\n  const organisation_id = useSelector(selectOrganisationID);\n  const token = useSelector(state => state.auth.token);\n  const {\n    isOpen: isQRCodeSetupModalOpen,\n    onClose: onCloseQRCodeSetupModal,\n    onOpen: onOpenQRCodeSetupModal\n  } = useDisclosure();\n  const {\n    isOpen,\n    onClose,\n    onOpen: onOpenWhatsappModal\n  } = useDisclosure();\n  const {\n    0: channelToDisconnect,\n    1: setChannelToDisconnect\n  } = useState();\n  const {\n    0: qrCodeChannelId,\n    1: setQrCodeChannelId\n  } = useState();\n  const {\n    0: isPotentialChannelsModalOpen,\n    1: setIsPotentialChannelsModalOpen\n  } = useState(false);\n  useEffect(() => {\n    if (id) {\n      //open modal to fetch potential channels\n      setIsPotentialChannelsModalOpen(true);\n    }\n  }, [id]);\n  const {\n    data: {\n      channels: simpuSupportedChannels = []\n    } = {}\n  } = useQuery('simpu-supported-channels', fetchCredentials, {\n    initialData: queryClient.getQueryData('simpu-supported-channels')\n  });\n  const {\n    data: connectedAccounts\n  } = useQuery(['channel-connected-accounts', key], () => getUserChannelConnectedAccounts(key));\n  const {\n    isLoading: isDisconnectingChannel,\n    mutate: disconnectChannel\n  } = useMutation(channel => removeCredential({\n    credential_id: channel.uuid\n  }), {\n    onMutate: async data => {\n      await queryClient.cancelQueries(['channel-connected-accounts', key]);\n      const previousChannels = queryClient.getQueryData(['channel-connected-accounts', key]);\n      queryClient.setQueryData(['channel-connected-accounts', key], old => //@ts-ignore\n      old === null || old === void 0 ? void 0 : old.filter(item => item.uuid !== data.uuid));\n      return {\n        previousChannels\n      };\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData(['channel-connected-accounts', key], context.previousChannels);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 34\n          }\n        })\n      });\n    },\n    onSuccess: () => {\n      setChannelToDisconnect(undefined);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Channel disconnected successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }\n        })\n      });\n      queryClient.invalidateQueries(['channel-connected-accounts', key]);\n    }\n  });\n  let obj = {};\n\n  for (const iterator of simpuSupportedChannels) {\n    //@ts-ignore\n    obj[iterator.name] = iterator;\n  }\n\n  const handleDisconnectChannel = () => {\n    disconnectChannel(channelToDisconnect);\n  };\n\n  const handleOpenQRCodeModal = () => {\n    if (key === 'whatsapp') {\n      setQrCodeChannelId(obj['whatsapp-web'].uuid);\n    } else {\n      setQrCodeChannelId(obj[key].uuid);\n    }\n\n    onOpenQRCodeSetupModal();\n  };\n\n  const handleClick = () => {\n    if (status === 'request') {\n      window.open(requestAccessUrls[key], '_blank');\n    } else {\n      if (['gmail', 'outlook', 'messenger', 'twitter'].includes(key)) {\n        window.open(getIntegrationUrl({\n          key,\n          token: token || '',\n          channel: obj[key].uuid,\n          organisation_id: organisation_id || ''\n        }), '_blank');\n      } else if (key === 'sms') {\n        console.log('here');\n      } else {\n        onOpenWhatsappModal();\n      }\n    }\n  };\n\n  return __jsx(Box, {\n    height: \"100%\",\n    bg: \"white\",\n    overflowY: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, __jsx(PageBack, {\n    title: \"Back to Channels\",\n    onClick: () => history.push('/s/inbox/settings/channels'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    maxW: \"800px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    pb: \"1rem\",\n    mb: \"1.875rem\",\n    isInline: true,\n    spacing: \"1.2rem\",\n    borderBottomWidth: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: icon,\n    size: \"6.25rem\",\n    color: key === 'sms' ? '#3525E6' : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    mb: \"1rem\",\n    pb: \"1.875rem\",\n    borderBottomWidth: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, __jsx(Heading2, {\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, name), __jsx(BodyText, {\n    pb: \"0.5rem\",\n    color: \"gray.500\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, category), key === 'gmail' ? __jsx(Button, {\n    variant: \"unstyled\",\n    onClick: handleClick,\n    isDisabled: !isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    width: \"200px\",\n    src: googleBtnImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  })) : __jsx(Button, {\n    width: \"100px\",\n    size: \"xs\",\n    rounded: \"100px\",\n    variantColor: \"blue\",\n    onClick: handleClick,\n    isDisabled: !isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Add\"), !!connectedAccounts && !!(connectedAccounts !== null && connectedAccounts !== void 0 && connectedAccounts.length) && __jsx(Box, {\n    pt: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, __jsx(PreTitle, {\n    pb: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, \"Connected Accounts\"), __jsx(Stack, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, connectedAccounts.map(item => __jsx(Box, {\n    key: item.uuid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 23\n    }\n  }, __jsx(ConnectedAccount, {\n    channel: key,\n    platform_nick: item.user.platform_nick,\n    platform_name: item.user.platform_name,\n    onDelete: () => setChannelToDisconnect(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  })))))), __jsx(BodyText, {\n    lineHeight: \"28px\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, description))), !!(previewImages !== null && previewImages !== void 0 && previewImages.length) && __jsx(Box, {\n    pb: \"3rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, __jsx(Subtitle, {\n    pb: \"1rem\",\n    fontSize: \"1.125rem\",\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Preview\"), __jsx(Stack, {\n    spacing: \"1rem\",\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, previewImages.map((item, index) => __jsx(Box, {\n    width: \"100%\",\n    backgroundColor: \"#c4c4c4\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    bgImage: `url(${item})`,\n    key: `${item}-${index}`,\n    rounded: \"8px\",\n    height: \"162px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  })))), !!(permissions !== null && permissions !== void 0 && permissions.length) && __jsx(Box, {\n    pb: \"3rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, __jsx(Subtitle, {\n    pb: \"1rem\",\n    fontSize: \"1.125rem\",\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, \"Permissions\"), __jsx(List, {\n    styleType: \"disc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, permissions.map((item, index) => __jsx(ListItem, {\n    fontSize: \"1rem\",\n    color: \"gray.500\",\n    key: `${item}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, item))))), __jsx(WhatsappSetupModal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    onOpenQrCodeModal: handleOpenQRCodeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }), __jsx(QRCodeSetupModal, {\n    channelID: qrCodeChannelId,\n    isOpen: isQRCodeSetupModalOpen,\n    onClose: onCloseQRCodeSetupModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }), __jsx(ConfirmModal, {\n    title: \"Disconnect channel\",\n    isOpen: !!channelToDisconnect,\n    isLoading: isDisconnectingChannel,\n    onConfirm: handleDisconnectChannel,\n    onClose: () => setChannelToDisconnect(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }), __jsx(PotentialChannelsModal, {\n    id: id,\n    channel: obj === null || obj === void 0 ? void 0 : (_obj$key = obj[key]) === null || _obj$key === void 0 ? void 0 : _obj$key.uuid,\n    isOpen: isPotentialChannelsModalOpen,\n    onClose: () => setIsPotentialChannelsModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ConnectedAccount = props => {\n  var _ref;\n\n  const {\n    channel,\n    platform_name,\n    platform_nick,\n    onDelete\n  } = props;\n  return __jsx(ConnectedAccountContainer, {\n    rounded: \"0.5rem\",\n    cursor: \"pointer\",\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    top: \"0\",\n    left: \"0\",\n    zIndex: 5,\n    bottom: \"0\",\n    opacity: 0,\n    width: \"100%\",\n    position: \"absolute\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    className: \"delete-button\",\n    willChange: \"opacity, background\",\n    transition: \"opacity 0.2s, background 0.2s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    px: \"0\",\n    minW: \"unset\",\n    height: \"unset\",\n    variant: \"unstyled\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    size: \"1.5rem\",\n    name: \"inbox-trash\",\n    color: \"#DA1414\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }))), __jsx(BodyText, {\n    color: \"gray.700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, (_ref = platform_name !== null && platform_name !== void 0 ? platform_name : platform_nick) !== null && _ref !== void 0 ? _ref : 'N/A'), channel && ['outlook', 'gmail'].includes(channel) && __jsx(SmallText, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, platform_nick));\n};\n\nconst ConnectedAccountContainer = styled(Box)`\n  &:hover {\n    opacity: 0.7;\n    padding: 0 0.2rem;\n    background: #f0eefd;\n    .delete-button {\n      opacity: 1;\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/ChannelPreview.tsx"],"names":["Box","Flex","Icon","Image","List","ListItem","Stack","useDisclosure","useToast","styled","fetchCredentials","getIntegrationUrl","getUserChannelConnectedAccounts","removeCredential","apps","requestAccessUrls","BodyText","Button","ConfirmModal","Heading2","PreTitle","SmallText","Subtitle","ToastBox","selectOrganisationID","React","useEffect","useState","useMutation","useQuery","useQueryClient","useSelector","useHistory","useParams","WhatsappSetupModal","QRCodeSetupModal","PageBack","PotentialChannelsModal","googleBtnImage","InboxSettingsChannelPreview","id","channel","name","key","icon","category","description","previewImages","permissions","status","isActive","queryClient","toast","history","organisation_id","token","state","auth","isOpen","isQRCodeSetupModalOpen","onClose","onCloseQRCodeSetupModal","onOpen","onOpenQRCodeSetupModal","onOpenWhatsappModal","channelToDisconnect","setChannelToDisconnect","qrCodeChannelId","setQrCodeChannelId","isPotentialChannelsModalOpen","setIsPotentialChannelsModalOpen","data","channels","simpuSupportedChannels","initialData","getQueryData","connectedAccounts","isLoading","isDisconnectingChannel","mutate","disconnectChannel","credential_id","uuid","onMutate","cancelQueries","previousChannels","setQueryData","old","filter","item","onError","error","newData","context","position","render","message","onSuccess","undefined","invalidateQueries","obj","iterator","handleDisconnectChannel","handleOpenQRCodeModal","handleClick","window","open","includes","console","log","push","length","map","user","platform_nick","platform_name","index","ConnectedAccount","props","onDelete","ConnectedAccountContainer"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Icon,\n  Image,\n  List,\n  ListItem,\n  Stack,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport {\n  fetchCredentials,\n  getIntegrationUrl,\n  getUserChannelConnectedAccounts,\n  removeCredential,\n} from 'app/authenticated-app/channels';\nimport { apps, requestAccessUrls } from 'app/authenticated-app/channels/channels.data';\nimport {\n  BodyText,\n  Button,\n  ConfirmModal,\n  Heading2,\n  PreTitle,\n  SmallText,\n  Subtitle,\n  ToastBox,\n} from 'app/components';\nimport { selectOrganisationID } from 'app/unauthenticated-app/authentication';\nimport { AxiosError } from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { RootState } from 'root';\nimport { WhatsappSetupModal } from '../components';\nimport { QRCodeSetupModal } from '../components/qr-code-setup-modal';\nimport { PageBack, PotentialChannelsModal } from './component';\nimport googleBtnImage from './btn_google_signin.png';\n\nexport const InboxSettingsChannelPreview = () => {\n  const { id, channel } = useParams<{ id?: string; channel: string }>();\n  const { name, key, icon, category, description, previewImages, permissions, status } = apps[\n    channel\n  ];\n\n  const isActive = status === 'ready';\n\n  const queryClient = useQueryClient();\n\n  const toast = useToast();\n  const history = useHistory();\n  const organisation_id = useSelector(selectOrganisationID);\n  const token = useSelector((state: RootState) => state.auth.token);\n\n  const {\n    isOpen: isQRCodeSetupModalOpen,\n    onClose: onCloseQRCodeSetupModal,\n    onOpen: onOpenQRCodeSetupModal,\n  } = useDisclosure();\n  const { isOpen, onClose, onOpen: onOpenWhatsappModal } = useDisclosure();\n\n  const [channelToDisconnect, setChannelToDisconnect] = useState();\n  const [qrCodeChannelId, setQrCodeChannelId] = useState<string | undefined>();\n  const [isPotentialChannelsModalOpen, setIsPotentialChannelsModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      //open modal to fetch potential channels\n      setIsPotentialChannelsModalOpen(true);\n    }\n  }, [id]);\n\n  const { data: { channels: simpuSupportedChannels = [] } = {} } = useQuery(\n    'simpu-supported-channels',\n    fetchCredentials,\n    {\n      initialData: queryClient.getQueryData('simpu-supported-channels'),\n    },\n  );\n  const { data: connectedAccounts } = useQuery(['channel-connected-accounts', key], () =>\n    getUserChannelConnectedAccounts(key),\n  );\n  const { isLoading: isDisconnectingChannel, mutate: disconnectChannel } = useMutation<\n    any,\n    AxiosError,\n    any,\n    any\n  >(channel => removeCredential({ credential_id: channel.uuid }), {\n    onMutate: async data => {\n      await queryClient.cancelQueries(['channel-connected-accounts', key]);\n      const previousChannels = queryClient.getQueryData(['channel-connected-accounts', key]);\n      queryClient.setQueryData(['channel-connected-accounts', key], old =>\n        //@ts-ignore\n        old?.filter(item => item.uuid !== data.uuid),\n      );\n      return { previousChannels };\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData(['channel-connected-accounts', key], context.previousChannels);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n      });\n    },\n    onSuccess: () => {\n      setChannelToDisconnect(undefined);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            status=\"success\"\n            onClose={onClose}\n            message=\"Channel disconnected successfully\"\n          />\n        ),\n      });\n      queryClient.invalidateQueries(['channel-connected-accounts', key]);\n    },\n  });\n\n  let obj = {} as { [key: string]: any };\n\n  for (const iterator of simpuSupportedChannels) {\n    //@ts-ignore\n    obj[iterator.name] = iterator;\n  }\n\n  const handleDisconnectChannel = () => {\n    disconnectChannel(channelToDisconnect);\n  };\n\n  const handleOpenQRCodeModal = () => {\n    if (key === 'whatsapp') {\n      setQrCodeChannelId(obj['whatsapp-web'].uuid);\n    } else {\n      setQrCodeChannelId(obj[key].uuid);\n    }\n    onOpenQRCodeSetupModal();\n  };\n\n  const handleClick = () => {\n    if (status === 'request') {\n      window.open(requestAccessUrls[key], '_blank');\n    } else {\n      if (['gmail', 'outlook', 'messenger', 'twitter'].includes(key)) {\n        window.open(\n          getIntegrationUrl({\n            key,\n            token: token || '',\n            channel: obj[key].uuid,\n            organisation_id: organisation_id || '',\n          }),\n          '_blank',\n        );\n      } else if (key === 'sms') {\n        console.log('here');\n      } else {\n        onOpenWhatsappModal();\n      }\n    }\n  };\n\n  return (\n    <Box height=\"100%\" bg=\"white\" overflowY=\"auto\">\n      <PageBack\n        title=\"Back to Channels\"\n        onClick={() => history.push('/s/inbox/settings/channels')}\n      />\n      <Box maxW=\"800px\">\n        <Stack pb=\"1rem\" mb=\"1.875rem\" isInline spacing=\"1.2rem\" borderBottomWidth=\"1px\">\n          <Icon name={icon} size=\"6.25rem\" color={key === 'sms' ? '#3525E6' : undefined} />\n          <Box>\n            <Box mb=\"1rem\" pb=\"1.875rem\" borderBottomWidth=\"1px\">\n              <Heading2 color=\"gray.900\">{name}</Heading2>\n              <BodyText pb=\"0.5rem\" color=\"gray.500\" fontWeight=\"bold\">\n                {category}\n              </BodyText>\n              {key === 'gmail' ? (\n                <Button variant=\"unstyled\" onClick={handleClick} isDisabled={!isActive}>\n                  <Image width=\"200px\" src={googleBtnImage} />\n                </Button>\n              ) : (\n                <Button\n                  width=\"100px\"\n                  size=\"xs\"\n                  rounded=\"100px\"\n                  variantColor=\"blue\"\n                  onClick={handleClick}\n                  isDisabled={!isActive}\n                >\n                  Add\n                </Button>\n              )}\n              {!!connectedAccounts && !!connectedAccounts?.length && (\n                <Box pt=\"2rem\">\n                  <PreTitle pb=\"0.5rem\">Connected Accounts</PreTitle>\n                  <Stack alignItems=\"flex-start\">\n                    {connectedAccounts.map((item: any) => (\n                      <Box key={item.uuid}>\n                        <ConnectedAccount\n                          channel={key}\n                          platform_nick={item.user.platform_nick}\n                          platform_name={item.user.platform_name}\n                          onDelete={() => setChannelToDisconnect(item)}\n                        />\n                      </Box>\n                    ))}\n                  </Stack>\n                </Box>\n              )}\n            </Box>\n            <BodyText lineHeight=\"28px\" color=\"gray.500\">\n              {description}\n            </BodyText>\n          </Box>\n        </Stack>\n        {!!previewImages?.length && (\n          <Box pb=\"3rem\">\n            <Subtitle pb=\"1rem\" fontSize=\"1.125rem\" color=\"gray.900\">\n              Preview\n            </Subtitle>\n            <Stack spacing=\"1rem\" isInline alignItems=\"center\">\n              {previewImages.map((item, index) => (\n                <Box\n                  width=\"100%\"\n                  backgroundColor=\"#c4c4c4\"\n                  backgroundSize=\"cover\"\n                  backgroundPosition=\"center\"\n                  backgroundRepeat=\"no-repeat\"\n                  bgImage={`url(${item})`}\n                  key={`${item}-${index}`}\n                  rounded=\"8px\"\n                  height=\"162px\"\n                />\n              ))}\n            </Stack>\n          </Box>\n        )}\n        {!!permissions?.length && (\n          <Box pb=\"3rem\">\n            <Subtitle pb=\"1rem\" fontSize=\"1.125rem\" color=\"gray.900\">\n              Permissions\n            </Subtitle>\n            <List styleType=\"disc\">\n              {permissions.map((item, index) => (\n                <ListItem fontSize=\"1rem\" color=\"gray.500\" key={`${item}-${index}`}>\n                  {item}\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        )}\n      </Box>\n      <WhatsappSetupModal\n        isOpen={isOpen}\n        onClose={onClose}\n        onOpenQrCodeModal={handleOpenQRCodeModal}\n      />\n      <QRCodeSetupModal\n        channelID={qrCodeChannelId}\n        isOpen={isQRCodeSetupModalOpen}\n        onClose={onCloseQRCodeSetupModal}\n      />\n      <ConfirmModal\n        title=\"Disconnect channel\"\n        isOpen={!!channelToDisconnect}\n        isLoading={isDisconnectingChannel}\n        onConfirm={handleDisconnectChannel}\n        onClose={() => setChannelToDisconnect(undefined)}\n      />\n      <PotentialChannelsModal\n        id={id}\n        channel={obj?.[key]?.uuid}\n        isOpen={isPotentialChannelsModalOpen}\n        onClose={() => setIsPotentialChannelsModalOpen(false)}\n      />\n    </Box>\n  );\n};\n\ntype ConnectedAccountProps = {\n  channel?: string;\n  onDelete?(): void;\n  platform_name?: string;\n  platform_nick?: string;\n};\n\nconst ConnectedAccount = (props: ConnectedAccountProps) => {\n  const { channel, platform_name, platform_nick, onDelete } = props;\n\n  return (\n    <ConnectedAccountContainer rounded=\"0.5rem\" cursor=\"pointer\" position=\"relative\">\n      <Flex\n        top=\"0\"\n        left=\"0\"\n        zIndex={5}\n        bottom=\"0\"\n        opacity={0}\n        width=\"100%\"\n        position=\"absolute\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        className=\"delete-button\"\n        willChange=\"opacity, background\"\n        transition=\"opacity 0.2s, background 0.2s\"\n      >\n        <Button px=\"0\" minW=\"unset\" height=\"unset\" variant=\"unstyled\" onClick={onDelete}>\n          <Icon size=\"1.5rem\" name=\"inbox-trash\" color=\"#DA1414\" />\n        </Button>\n      </Flex>\n\n      <BodyText color=\"gray.700\">{platform_name ?? platform_nick ?? 'N/A'}</BodyText>\n      {channel && ['outlook', 'gmail'].includes(channel) && (\n        <SmallText color=\"gray.500\">{platform_nick}</SmallText>\n      )}\n    </ConnectedAccountContainer>\n  );\n};\n\nconst ConnectedAccountContainer = styled(Box)`\n  &:hover {\n    opacity: 0.7;\n    padding: 0 0.2rem;\n    background: #f0eefd;\n    .delete-button {\n      opacity: 1;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}