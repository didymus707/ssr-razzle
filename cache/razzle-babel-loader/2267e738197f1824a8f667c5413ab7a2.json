{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/Dashboard/components/OrganizationPicker.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Avatar, Box } from '@chakra-ui/core';\nimport { loadState } from '../../../../utils';\nimport { connect } from 'react-redux';\nimport { authLoading, fetchProfile } from '../../../unauthenticated-app/authentication/service';\nimport { fetchSupportedChannels } from '../../../authenticated-app/channels';\nimport { onOrganisationSwitch } from '../../../authenticated-app/inbox';\nconst connector = connect(state => ({\n  profile: state.auth.profile,\n  isLoading: state.auth.loading\n}), {\n  authLoading,\n  fetchProfile,\n  fetchSupportedChannels,\n  onOrganisationSwitch\n});\nexport const OrganizationPicker = connector(props => {\n  const {\n    organizations,\n    profile,\n    authLoading,\n    fetchProfile\n  } = props;\n\n  const reloadOrganization = async id => {\n    if (!!loadState() && id !== (profile === null || profile === void 0 ? void 0 : profile.organisation_id)) {\n      authLoading(true);\n\n      try {\n        await fetchProfile(id);\n      } catch (e) {}\n\n      window.location.reload();\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"section-organizations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    marginBottom: \"10px\",\n    fontSize: \"14px\",\n    color: \"#757575\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Organizations\"), organizations.map(i => __jsx(Box, {\n    className: \"organization-item\",\n    key: i.id,\n    fontSize: \"14px\",\n    fontWeight: i.id === (profile === null || profile === void 0 ? void 0 : profile.organisation_id) ? 500 : 400,\n    color: i.id === (profile === null || profile === void 0 ? void 0 : profile.organisation_id) ? '#333333' : '#757575',\n    cursor: i.id === (profile === null || profile === void 0 ? void 0 : profile.organisation_id) ? 'default' : 'pointer',\n    onClick: () => {\n      if (i.id === (profile === null || profile === void 0 ? void 0 : profile.organisation_id)) return;\n      reloadOrganization(i.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(Avatar, {\n    size: \"xs\",\n    name: i.name,\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), i.name)));\n});","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/Dashboard/components/OrganizationPicker.tsx"],"names":["React","Avatar","Box","loadState","connect","authLoading","fetchProfile","fetchSupportedChannels","onOrganisationSwitch","connector","state","profile","auth","isLoading","loading","OrganizationPicker","props","organizations","reloadOrganization","id","organisation_id","e","window","location","reload","map","i","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Avatar, Box } from '@chakra-ui/core';\nimport { OrganizationPickerProps } from '../types';\nimport { loadState } from '../../../../utils';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState } from '../../../../root';\nimport { authLoading, fetchProfile } from '../../../unauthenticated-app/authentication/service';\nimport { fetchSupportedChannels } from '../../../authenticated-app/channels';\nimport { onOrganisationSwitch } from '../../../authenticated-app/inbox';\nimport { Organization } from '../../../authenticated-app/settings/settings.types';\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux & OrganizationPickerProps;\n\nconst connector = connect(\n  (state: RootState) => ({\n    profile: state.auth.profile,\n    isLoading: state.auth.loading,\n  }),\n  {\n    authLoading,\n    fetchProfile,\n    fetchSupportedChannels,\n    onOrganisationSwitch,\n  },\n);\n\nexport const OrganizationPicker = connector((props: Props) => {\n  const { organizations, profile, authLoading, fetchProfile } = props;\n\n  const reloadOrganization = async (id: string) => {\n    if (!!loadState() && id !== profile?.organisation_id) {\n      authLoading(true);\n      try {\n        await fetchProfile(id);\n      } catch (e) {}\n      window.location.reload();\n    }\n  };\n\n  return (\n    <div className=\"section-organizations\">\n      <Box marginBottom=\"10px\" fontSize=\"14px\" color=\"#757575\">\n        Organizations\n      </Box>\n\n      {organizations.map((i: Organization) => (\n        <Box\n          className=\"organization-item\"\n          key={i.id}\n          fontSize=\"14px\"\n          fontWeight={i.id === profile?.organisation_id ? 500 : 400}\n          color={i.id === profile?.organisation_id ? '#333333' : '#757575'}\n          cursor={i.id === profile?.organisation_id ? 'default' : 'pointer'}\n          onClick={() => {\n            if (i.id === profile?.organisation_id) return;\n            reloadOrganization(i.id);\n          }}\n        >\n          <Avatar size=\"xs\" name={i.name} mr=\"10px\" />\n          {i.name}\n        </Box>\n      ))}\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}