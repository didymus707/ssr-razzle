{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/enrich-confirmation-modal/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Alert, AlertIcon, IconButton, Modal, ModalOverlay } from '@chakra-ui/core';\nimport { EnrichConfirmationModalWrapper as Wrapper } from './index.styles';\nimport { Button, EmptyState } from 'app/components';\nimport enrichData from '../../assets/enrich.svg';\nimport { useSelector } from 'react-redux';\nimport { selectCreditBalance } from '../../../payments/selectors';\nimport { selectListMeta } from '../../lists.selectors';\nimport { formatCurrency } from '../../../../../utils';\nexport const EnrichConfirmationModal = ({\n  isOpen,\n  onClose,\n  onProceed,\n  isLoading\n}) => {\n  const creditBalance = useSelector(selectCreditBalance);\n  const meta = useSelector(selectListMeta);\n  const unitCheckPrice = 100;\n  const totalCheckPrice = meta.count_total * unitCheckPrice;\n  return __jsx(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    isCentered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(Wrapper, {\n    id: \"enrich-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    position: \"absolute\",\n    \"aria-label\": \"close\",\n    icon: \"small-close\",\n    variant: \"solid\",\n    variantColor: \"blue\",\n    borderRadius: \"15px\",\n    size: \"xs\",\n    right: \"-10px\",\n    top: \"-10px\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(EmptyState, {\n    image: enrichData,\n    heading: \"Check for DND\",\n    subheading: __jsx(React.Fragment, null, \"Immediately detect if your contacts are on the DND list. You can also detect if their lines are ported, their mobile network and the country of registration. NB: Extra charges are accrued for this service, which would be billed from your available campaign credits:\", ' ', __jsx(\"span\", {\n      style: {\n        color: '#333333',\n        fontWeight: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"NGN \", formatCurrency(totalCheckPrice / 100))),\n    subheadingProps: {\n      color: 'rgba(51,51,51, 0.5)',\n      opacity: 1\n    },\n    children: __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, totalCheckPrice > creditBalance ? __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(Alert, {\n      status: \"error\",\n      borderRadius: \"10px\",\n      textAlign: \"left\",\n      fontSize: \"14px\",\n      marginY: \"1rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, __jsx(AlertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), \"Looks like you don't have enough credits in your balance to carry out this DND check\"), __jsx(Button, {\n      size: \"sm\",\n      marginY: \"0.5rem\",\n      variant: \"link\",\n      variantColor: \"blue\",\n      fontWeight: \"500\",\n      onClick: () => window.open('/s/marketing', '_blank'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, \"Manage Credits\")) : __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(Alert, {\n      status: \"info\",\n      borderRadius: \"10px\",\n      textAlign: \"left\",\n      fontSize: \"14px\",\n      marginY: \"1rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, __jsx(AlertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }), \"Because the request is queued, the results of this check are fairly quick, but not immediate, so depending on the quantity of entries, you may need to refresh this list after a short while\"), __jsx(Button, {\n      variantColor: \"blue\",\n      size: \"sm\",\n      marginY: \"0.5rem\",\n      onClick: onProceed // @ts-ignore\n      ,\n      leftIcon: \"premium\",\n      isLoading: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, \"Check for DND\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/enrich-confirmation-modal/index.tsx"],"names":["React","Box","Alert","AlertIcon","IconButton","Modal","ModalOverlay","EnrichConfirmationModalWrapper","Wrapper","Button","EmptyState","enrichData","useSelector","selectCreditBalance","selectListMeta","formatCurrency","EnrichConfirmationModal","isOpen","onClose","onProceed","isLoading","creditBalance","meta","unitCheckPrice","totalCheckPrice","count_total","color","fontWeight","opacity","window","open"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Alert, AlertIcon, IconButton, Modal, ModalOverlay } from '@chakra-ui/core';\nimport { EnrichConfirmationModalWrapper as Wrapper } from './index.styles';\nimport { Button, EmptyState } from 'app/components';\nimport enrichData from '../../assets/enrich.svg';\nimport { useSelector } from 'react-redux';\nimport { selectCreditBalance } from '../../../payments/selectors';\nimport { selectListMeta } from '../../lists.selectors';\nimport { formatCurrency } from '../../../../../utils';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onProceed: () => void;\n  isLoading: boolean;\n}\n\nexport const EnrichConfirmationModal = ({ isOpen, onClose, onProceed, isLoading }: Props) => {\n  const creditBalance = useSelector(selectCreditBalance);\n  const meta = useSelector(selectListMeta);\n\n  const unitCheckPrice = 100;\n  const totalCheckPrice = meta.count_total * unitCheckPrice;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <Wrapper id=\"enrich-modal\">\n        <IconButton\n          position=\"absolute\"\n          aria-label=\"close\"\n          icon=\"small-close\"\n          variant=\"solid\"\n          variantColor=\"blue\"\n          borderRadius=\"15px\"\n          size=\"xs\"\n          right=\"-10px\"\n          top=\"-10px\"\n          onClick={onClose}\n        />\n        <EmptyState\n          image={enrichData}\n          heading=\"Check for DND\"\n          subheading={\n            <>\n              Immediately detect if your contacts are on the DND list. You can also detect if their\n              lines are ported, their mobile network and the country of registration. NB: Extra\n              charges are accrued for this service, which would be billed from your available\n              campaign credits:{' '}\n              <span style={{ color: '#333333', fontWeight: 500 }}>\n                NGN {formatCurrency(totalCheckPrice / 100)}\n              </span>\n            </>\n          }\n          subheadingProps={{\n            color: 'rgba(51,51,51, 0.5)',\n            opacity: 1,\n          }}\n          children={\n            <Box>\n              {totalCheckPrice > creditBalance ? (\n                <Box>\n                  <Alert\n                    status=\"error\"\n                    borderRadius=\"10px\"\n                    textAlign=\"left\"\n                    fontSize=\"14px\"\n                    marginY=\"1rem\"\n                  >\n                    <AlertIcon />\n                    Looks like you don't have enough credits in your balance to carry out this DND\n                    check\n                  </Alert>\n                  <Button\n                    size=\"sm\"\n                    marginY=\"0.5rem\"\n                    variant=\"link\"\n                    variantColor=\"blue\"\n                    fontWeight=\"500\"\n                    onClick={() => window.open('/s/marketing', '_blank')}\n                  >\n                    Manage Credits\n                  </Button>\n                </Box>\n              ) : (\n                <Box>\n                  <Alert\n                    status=\"info\"\n                    borderRadius=\"10px\"\n                    textAlign=\"left\"\n                    fontSize=\"14px\"\n                    marginY=\"1rem\"\n                  >\n                    <AlertIcon />\n                    Because the request is queued, the results of this check are fairly quick, but\n                    not immediate, so depending on the quantity of entries, you may need to refresh\n                    this list after a short while\n                  </Alert>\n                  <Button\n                    variantColor=\"blue\"\n                    size=\"sm\"\n                    marginY=\"0.5rem\"\n                    onClick={onProceed}\n                    // @ts-ignore\n                    leftIcon=\"premium\"\n                    isLoading={isLoading}\n                  >\n                    Check for DND\n                  </Button>\n                </Box>\n              )}\n            </Box>\n          }\n        />\n      </Wrapper>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}