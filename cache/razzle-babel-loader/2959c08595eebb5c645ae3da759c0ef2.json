{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/pages/Login/Login.container.tsx\";\nvar __jsx = React.createElement;\nimport { useToast } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\nimport { ToastBox } from '../../../../components';\nimport { fetchProfile, login, saveUser } from '../../service';\nimport { LoginComponent } from './Login.component';\nimport { sendAmplitudeData, setAmplitudeUserProperties } from '../../../../../utils/amplitude';\nconst connector = connect(null, {\n  saveUser,\n  fetchProfile\n});\n\nfunction Login(props) {\n  const {\n    history,\n    saveUser,\n    fetchProfile\n  } = props;\n  const toast = useToast();\n  const [loading, setLoading] = React.useState(false);\n\n  async function handleLogin(values) {\n    setLoading(true);\n\n    try {\n      Cookie.remove('auth_period');\n      sessionStorage.removeItem('auth_valid');\n      const data = await login(values);\n      saveUser(data);\n\n      if (!values.rememberMe) {\n        Cookie.set('auth_period', 'session');\n        sessionStorage.setItem('auth_valid', 'true');\n      }\n\n      const {\n        profile,\n        user\n      } = await fetchProfile(data.organisations[0].id);\n      setLoading(false);\n      setAmplitudeUserProperties(_objectSpread(_objectSpread({}, profile), {}, {\n        email: user.email\n      }));\n      sendAmplitudeData('login');\n      history.push('/s/home');\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: \"Sorry, unable to login. Please check your credentials\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        })\n      });\n    }\n  }\n\n  return __jsx(LoginComponent, _extends({}, props, {\n    onSubmit: handleLogin,\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport const LoginContainer = connector(Login);","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/pages/Login/Login.container.tsx"],"names":["useToast","React","connect","Cookie","ToastBox","fetchProfile","login","saveUser","LoginComponent","sendAmplitudeData","setAmplitudeUserProperties","connector","Login","props","history","toast","loading","setLoading","useState","handleLogin","values","remove","sessionStorage","removeItem","data","rememberMe","set","setItem","profile","user","organisations","id","email","push","error","position","render","onClose","LoginContainer"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,QAA9B,QAA8C,eAA9C;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,iBAAT,EAA4BC,0BAA5B,QAA8D,gCAA9D;AAEA,MAAMC,SAAS,GAAGT,OAAO,CAAC,IAAD,EAAO;AAAEK,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAP,CAAzB;;AAKA,SAASO,KAAT,CAAeC,KAAf,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWP,IAAAA,QAAX;AAAqBF,IAAAA;AAArB,MAAsCQ,KAA5C;AACA,QAAME,KAAK,GAAGf,QAAQ,EAAtB;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBhB,KAAK,CAACiB,QAAN,CAAwB,KAAxB,CAA9B;;AAEA,iBAAeC,WAAf,CAA2BC,MAA3B,EAAgE;AAC9DH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACFd,MAAAA,MAAM,CAACkB,MAAP,CAAc,aAAd;AACAC,MAAAA,cAAc,CAACC,UAAf,CAA0B,YAA1B;AACA,YAAMC,IAAI,GAAG,MAAMlB,KAAK,CAACc,MAAD,CAAxB;AACAb,MAAAA,QAAQ,CAACiB,IAAD,CAAR;;AACA,UAAI,CAACJ,MAAM,CAACK,UAAZ,EAAwB;AACtBtB,QAAAA,MAAM,CAACuB,GAAP,CAAW,aAAX,EAA0B,SAA1B;AACAJ,QAAAA,cAAc,CAACK,OAAf,CAAuB,YAAvB,EAAqC,MAArC;AACD;;AACD,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAoB,MAAMxB,YAAY,CAACmB,IAAI,CAACM,aAAL,CAAmB,CAAnB,EAAsBC,EAAvB,CAA5C;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,MAAAA,0BAA0B,iCAAMkB,OAAN;AAAeI,QAAAA,KAAK,EAAEH,IAAI,CAACG;AAA3B,SAA1B;AACAvB,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAK,MAAAA,OAAO,CAACmB,IAAR,CAAa,SAAb;AACD,KAdD,CAcE,OAAOC,KAAP,EAAc;AACdjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,KAAK,CAAC;AACJoB,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA;AAAF,SAAD,KACN,MAAC,QAAD;AACE,UAAA,OAAO,EAAEA,OADX;AAEE,UAAA,OAAO,EAAC,uDAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHE,OAAD,CAAL;AASD;AACF;;AAED,SAAO,MAAC,cAAD,eAAoBxB,KAApB;AAA2B,IAAA,QAAQ,EAAEM,WAArC;AAAkD,IAAA,SAAS,EAAEH,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,OAAO,MAAMsB,cAAc,GAAG3B,SAAS,CAACC,KAAD,CAAhC","sourcesContent":["import { useToast } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Cookie from 'js-cookie';\nimport { ToastBox } from '../../../../components';\nimport { LoginFormInitialValuesProps } from '../../components';\nimport { fetchProfile, login, saveUser } from '../../service';\nimport { LoginComponent } from './Login.component';\nimport { sendAmplitudeData, setAmplitudeUserProperties } from '../../../../../utils/amplitude';\n\nconst connector = connect(null, { saveUser, fetchProfile });\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = RouteComponentProps & PropsFromRedux;\n\nfunction Login(props: Props) {\n  const { history, saveUser, fetchProfile } = props;\n  const toast = useToast();\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  async function handleLogin(values: LoginFormInitialValuesProps) {\n    setLoading(true);\n    try {\n      Cookie.remove('auth_period');\n      sessionStorage.removeItem('auth_valid');\n      const data = await login(values);\n      saveUser(data);\n      if (!values.rememberMe) {\n        Cookie.set('auth_period', 'session');\n        sessionStorage.setItem('auth_valid', 'true');\n      }\n      const { profile, user } = await fetchProfile(data.organisations[0].id);\n      setLoading(false);\n      setAmplitudeUserProperties({ ...profile, email: user.email });\n      sendAmplitudeData('login');\n      history.push('/s/home');\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            onClose={onClose}\n            message=\"Sorry, unable to login. Please check your credentials\"\n          />\n        ),\n      });\n    }\n  }\n\n  return <LoginComponent {...props} onSubmit={handleLogin} isLoading={loading} />;\n}\n\nexport const LoginContainer = connector(Login);\n"]},"metadata":{},"sourceType":"module"}