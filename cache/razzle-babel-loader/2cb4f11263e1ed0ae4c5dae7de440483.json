{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/table/table.components/TableSelect.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Flex, List, ListIcon, ListItem, Popover, PopoverBody, PopoverContent, PopoverTrigger, Stack, Text, Button, Icon } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { components } from 'react-select';\nimport CreateSelect from 'react-select/creatable';\nexport function TableSelect({\n  onBlur,\n  isMulti,\n  options,\n  onChange,\n  placeholder,\n  defaultValue,\n  onInputChange,\n  onCreateOptions,\n  value: valueProp,\n  closeMenuOnSelect,\n  defaultInputValue\n}) {\n  const [value, setValue] = React.useState(valueProp);\n  const [updatedOptions, setUpdatedOptions] = React.useState(options);\n  const styles = {\n    control: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      border: 'none',\n      boxShadow: 'none',\n      borderRadius: '0',\n      minHeight: '32px',\n      ':focus': {\n        border: '1px solid #6554c0'\n      }\n    }),\n    multiValue: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      backgroundColor: '#edf2f7'\n    }),\n    multiValueRemove: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      ':hover': {\n        cursor: 'pointer',\n        backgroundColor: '#e2e8f0'\n      }\n    }),\n    option: (styles, {\n      isSelected\n    }) => _objectSpread(_objectSpread({}, styles), {}, {\n      cursor: 'pointer',\n      fontSize: '0.875rem',\n      padding: '0.2rem 0.5rem',\n      color: isSelected ? '#ffffff' : '#333333',\n      backgroundColor: isSelected ? '#2034c5' : 'transparent',\n      '&:hover': {\n        color: isSelected ? '#ffffff' : '#333333',\n        backgroundColor: isSelected ? '#2034c5' : '#f7fafc'\n      }\n    }),\n    indicatorsContainer: () => ({\n      display: 'none'\n    })\n  };\n\n  function createOption(label) {\n    return {\n      label,\n      value: label\n    };\n  }\n\n  function handleChange(newValue) {\n    setValue(newValue);\n    onChange && onChange(newValue);\n  }\n\n  function handleInputChange(inputValue) {\n    onInputChange && onInputChange(inputValue);\n  }\n\n  function handleCreateOption(inputValue) {\n    const newOption = createOption(inputValue);\n    const newOptions = updatedOptions ? [...updatedOptions, newOption] : [newOption];\n    const newValue = Array.isArray(value) ? [...value, newOption] : newOption;\n    const newValueString = Array.isArray(newValue) ? newValue.map(item => item.value) : newValue.value;\n    setUpdatedOptions(newOptions);\n    handleChange(newValue);\n    onCreateOptions && onCreateOptions(newOptions, newValueString);\n  }\n\n  function handleDeleteOption(data) {\n    const emptyOption = {\n      label: '',\n      value: ''\n    };\n    const newOptions = updatedOptions === null || updatedOptions === void 0 ? void 0 : updatedOptions.filter(item => item.value !== data.value);\n\n    if (newOptions) {\n      const newValue = Array.isArray(value) ? [...value] : emptyOption;\n      const newValueString = Array.isArray(newValue) ? newValue.map(item => item.value) : newValue.value;\n      setUpdatedOptions(newOptions);\n      handleChange(newValue);\n      onCreateOptions && onCreateOptions(newOptions, newValueString);\n    } else {\n      const newValueString = isMulti ? [] : '';\n      setUpdatedOptions([]);\n      handleChange(emptyOption);\n      onCreateOptions && onCreateOptions([], newValueString);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(CreateSelect, {\n    isClearable: true,\n    value: value,\n    styles: styles,\n    onBlur: onBlur,\n    isMulti: isMulti,\n    options: options,\n    components: {\n      Option\n    },\n    onChange: handleChange,\n    placeholder: placeholder,\n    \"aria-label\": \"table-select\",\n    defaultValue: defaultValue,\n    onInputChange: handleInputChange,\n    onCreateOption: handleCreateOption,\n    defaultInputValue: defaultInputValue,\n    closeMenuOnSelect: closeMenuOnSelect,\n    onDeleteOption: handleDeleteOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst Option = props => {\n  const {\n    data,\n    isSelected,\n    selectProps\n  } = props;\n  return __jsx(Flex, {\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, __jsx(components.Option, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  })), !data.__isNew__ && __jsx(Popover, {\n    usePortal: true,\n    trigger: \"hover\",\n    placement: \"bottom-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    top: \"0.3rem\",\n    right: \"0.5rem\",\n    display: \"flex\",\n    variant: \"ghost\",\n    position: \"absolute\",\n    alignItems: \"center\",\n    _hover: {\n      bg: 'none'\n    },\n    justifyContent: \"center\",\n    color: isSelected ? 'white' : 'black',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: \"more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }))), __jsx(PopoverContent, {\n    zIndex: 100000,\n    maxWidth: \"200px\",\n    position: \"absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, __jsx(PopoverBody, {\n    padding: \"0.5rem 0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    cursor: \"pointer\",\n    fontSize: \"0.875rem\",\n    padding: \"0.2rem 0.5rem\",\n    _hover: {\n      bg: 'gray.100'\n    },\n    onClick: () => selectProps.onDeleteOption(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, __jsx(ListIcon, {\n    size: \"0.75rem\",\n    icon: \"delete\",\n    color: \"#66788a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"Delete\"))))))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/table/table.components/TableSelect.tsx"],"names":["Flex","List","ListIcon","ListItem","Popover","PopoverBody","PopoverContent","PopoverTrigger","Stack","Text","Button","Icon","React","components","CreateSelect","TableSelect","onBlur","isMulti","options","onChange","placeholder","defaultValue","onInputChange","onCreateOptions","value","valueProp","closeMenuOnSelect","defaultInputValue","setValue","useState","updatedOptions","setUpdatedOptions","styles","control","border","boxShadow","borderRadius","minHeight","multiValue","backgroundColor","multiValueRemove","cursor","option","isSelected","fontSize","padding","color","indicatorsContainer","display","createOption","label","handleChange","newValue","handleInputChange","inputValue","handleCreateOption","newOption","newOptions","Array","isArray","newValueString","map","item","handleDeleteOption","data","emptyOption","filter","Option","props","selectProps","__isNew__","bg","onDeleteOption"],"mappings":"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","sourcesContent":["import {\n  Flex,\n  List,\n  ListIcon,\n  ListItem,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Stack,\n  Text,\n  Button,\n  Icon,\n} from '@chakra-ui/core';\nimport * as React from 'react';\nimport { components, OptionProps } from 'react-select';\nimport CreateSelect from 'react-select/creatable';\nimport { SelectOptions } from '../../../tables.types';\n\nexport interface TableSelectProps<T> {\n  value?: T;\n  defaultValue?: T;\n  isMulti?: boolean;\n  onBlur?: () => void;\n  placeholder?: string;\n  defaultInputValue?: string;\n  closeMenuOnSelect?: boolean;\n  onChange?: (value: T | T[]) => void;\n  onInputChange?: (value: string) => void;\n  options: any | undefined;\n  onCreateOptions?: (options: T[], value?: string | string[]) => void;\n}\n\nexport function TableSelect({\n  onBlur,\n  isMulti,\n  options,\n  onChange,\n  placeholder,\n  defaultValue,\n  onInputChange,\n  onCreateOptions,\n  value: valueProp,\n  closeMenuOnSelect,\n  defaultInputValue,\n}: TableSelectProps<SelectOptions>) {\n  const [value, setValue] = React.useState<SelectOptions | SelectOptions[] | undefined>(valueProp);\n  const [updatedOptions, setUpdatedOptions] = React.useState<SelectOptions[] | undefined>(options);\n\n  const styles = {\n    control: (styles: any) => ({\n      ...styles,\n      border: 'none',\n      boxShadow: 'none',\n      borderRadius: '0',\n      minHeight: '32px',\n      ':focus': {\n        border: '1px solid #6554c0',\n      },\n    }),\n    multiValue: (styles: any) => ({\n      ...styles,\n      backgroundColor: '#edf2f7',\n    }),\n\n    multiValueRemove: (styles: any) => ({\n      ...styles,\n      ':hover': {\n        cursor: 'pointer',\n        backgroundColor: '#e2e8f0',\n      },\n    }),\n    option: (styles: any, { isSelected }: any) => ({\n      ...styles,\n      cursor: 'pointer',\n      fontSize: '0.875rem',\n      padding: '0.2rem 0.5rem',\n      color: isSelected ? '#ffffff' : '#333333',\n      backgroundColor: isSelected ? '#2034c5' : 'transparent',\n      '&:hover': {\n        color: isSelected ? '#ffffff' : '#333333',\n        backgroundColor: isSelected ? '#2034c5' : '#f7fafc',\n      },\n    }),\n    indicatorsContainer: () => ({\n      display: 'none',\n    }),\n  };\n\n  function createOption(label: string) {\n    return {\n      label,\n      value: label,\n    };\n  }\n\n  function handleChange(newValue: any) {\n    setValue(newValue);\n    onChange && onChange(newValue);\n  }\n\n  function handleInputChange(inputValue: any) {\n    onInputChange && onInputChange(inputValue);\n  }\n\n  function handleCreateOption(inputValue: any) {\n    const newOption = createOption(inputValue);\n    const newOptions = updatedOptions ? [...updatedOptions, newOption] : [newOption];\n    const newValue = Array.isArray(value) ? [...value, newOption] : newOption;\n    const newValueString = Array.isArray(newValue)\n      ? newValue.map((item: SelectOptions) => item.value)\n      : newValue.value;\n\n    setUpdatedOptions(newOptions);\n    handleChange(newValue);\n    onCreateOptions && onCreateOptions(newOptions, newValueString);\n  }\n\n  function handleDeleteOption(data: SelectOptions) {\n    const emptyOption = { label: '', value: '' };\n    const newOptions = updatedOptions?.filter(item => item.value !== data.value);\n    if (newOptions) {\n      const newValue = Array.isArray(value) ? [...value] : emptyOption;\n      const newValueString = Array.isArray(newValue)\n        ? newValue.map((item: SelectOptions) => item.value)\n        : newValue.value;\n\n      setUpdatedOptions(newOptions);\n      handleChange(newValue);\n      onCreateOptions && onCreateOptions(newOptions, newValueString);\n    } else {\n      const newValueString = isMulti ? [] : '';\n\n      setUpdatedOptions([]);\n      handleChange(emptyOption);\n      onCreateOptions && onCreateOptions([], newValueString);\n    }\n  }\n\n  return (\n    <>\n      <CreateSelect\n        isClearable\n        value={value}\n        styles={styles}\n        onBlur={onBlur}\n        isMulti={isMulti}\n        options={options}\n        components={{ Option }}\n        onChange={handleChange}\n        placeholder={placeholder}\n        aria-label=\"table-select\"\n        defaultValue={defaultValue}\n        onInputChange={handleInputChange}\n        onCreateOption={handleCreateOption}\n        defaultInputValue={defaultInputValue}\n        closeMenuOnSelect={closeMenuOnSelect}\n        onDeleteOption={handleDeleteOption}\n      />\n    </>\n  );\n}\n\nconst Option = (props: OptionProps<SelectOptions, true>) => {\n  const { data, isSelected, selectProps } = props;\n\n  return (\n    <Flex position=\"relative\">\n      <components.Option {...props} />\n      {!data.__isNew__ && (\n        <Popover usePortal trigger=\"hover\" placement=\"bottom-end\">\n          <PopoverTrigger>\n            <Button\n              size=\"xs\"\n              top=\"0.3rem\"\n              right=\"0.5rem\"\n              display=\"flex\"\n              variant=\"ghost\"\n              position=\"absolute\"\n              alignItems=\"center\"\n              _hover={{ bg: 'none' }}\n              justifyContent=\"center\"\n              color={isSelected ? 'white' : 'black'}\n            >\n              <Icon name=\"more\" />\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent zIndex={100000} maxWidth=\"200px\" position=\"absolute\">\n            <PopoverBody padding=\"0.5rem 0\">\n              <List>\n                <ListItem\n                  cursor=\"pointer\"\n                  fontSize=\"0.875rem\"\n                  padding=\"0.2rem 0.5rem\"\n                  _hover={{ bg: 'gray.100' }}\n                  onClick={() => selectProps.onDeleteOption(data)}\n                >\n                  <Stack isInline alignItems=\"center\">\n                    <ListIcon size=\"0.75rem\" icon=\"delete\" color=\"#66788a\" />\n                    <Text>Delete</Text>\n                  </Stack>\n                </ListItem>\n              </List>\n            </PopoverBody>\n          </PopoverContent>\n        </Popover>\n      )}\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}