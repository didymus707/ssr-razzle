{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/test-planner/test-planner.design.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { PlannerContentDesign } from '../planner/planner.content.design';\nexport const TestPlannerDesign = props => {\n  const {\n    fetchWallet,\n    initialValues,\n    fetchTemplates,\n    credit_balance,\n    templateCategories,\n    fetchSampleTemplates,\n    handleUpdateTemplate\n  } = props;\n  const {\n    variants_count,\n    contents,\n    link,\n    sender_id\n  } = initialValues;\n  const {\n    0: tabIndex,\n    1: setTabIndex\n  } = useState(0);\n  const {\n    0: variants,\n    1: setVariants\n  } = useState(contents !== null && contents !== void 0 ? contents : []);\n  useEffect(() => {\n    if (variants_count && !contents) {\n      const countArray = Array.from(Array(parseFloat(variants_count)).keys());\n      const variants = countArray.map(item => ({\n        action: 'create',\n        content: ''\n      }));\n      setVariants(variants);\n    } else {\n      setVariants(contents !== null && contents !== void 0 ? contents : []);\n    }\n  }, [variants_count, contents]);\n\n  const handleTabsChange = (index, values) => {\n    if (values) {\n      const {\n        content,\n        template_id\n      } = values !== null && values !== void 0 ? values : {};\n      const newVariants = variants.map((v, i) => {\n        if (index === i) {\n          return _objectSpread(_objectSpread({}, v), {}, {\n            content,\n            template_id,\n            action: v.id && v.content !== content ? 'update' : 'create'\n          });\n        }\n\n        return v;\n      });\n      setVariants(newVariants);\n    }\n\n    setTabIndex(index);\n  };\n\n  const handleSubmit = (index, values) => {\n    const {\n      content,\n      template_id\n    } = values !== null && values !== void 0 ? values : {};\n    const newVariants = variants.map((v, i) => {\n      if (index === i) {\n        return _objectSpread(_objectSpread({}, v), {}, {\n          content,\n          template_id,\n          action: v.id && v.content !== content ? 'update' : 'create'\n        });\n      }\n\n      return v;\n    });\n    setVariants(newVariants);\n\n    if (index < variants.length - 1) {\n      handleTabsChange(index + 1);\n    } else {\n      props.onSubmit(_objectSpread(_objectSpread({}, props.initialValues), {}, {\n        contents: newVariants\n      }));\n    }\n  };\n\n  const handleGoBack = () => {\n    if (tabIndex === 0) {\n      props.onGoBack();\n    } else {\n      handleTabsChange(tabIndex - 1);\n    }\n  };\n\n  const handleGetContinueButtonLabel = () => {\n    if (tabIndex < variants.length - 1) {\n      return `Compose message \\n variant ${tabIndex + 1}`;\n    } else {\n      return 'Save & Continue';\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Tabs, {\n    index: tabIndex,\n    onChange: handleTabsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, variants.map((_, index) => __jsx(Tab, {\n    fontWeight: 500,\n    fontSize: \"0.875rem\",\n    key: `${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, `Variant ${index + 1}`))), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, variants.map((variant, index) => __jsx(TabPanel, {\n    p: 4,\n    key: `${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(PlannerContentDesign, {\n    index: index,\n    onGoBack: handleGoBack,\n    onTabChange: handleTabsChange,\n    onSubmit: values => handleSubmit(index, values),\n    continueButtonLabel: handleGetContinueButtonLabel(),\n    initialValues: {\n      link,\n      sender_id,\n      content: variant.content,\n      template_id: variant.template_id\n    },\n    fetchWallet,\n    fetchTemplates,\n    credit_balance,\n    templateCategories,\n    fetchSampleTemplates,\n    handleUpdateTemplate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/test-planner/test-planner.design.tsx"],"names":["Tab","TabList","TabPanel","TabPanels","Tabs","React","useEffect","useState","PlannerContentDesign","TestPlannerDesign","props","fetchWallet","initialValues","fetchTemplates","credit_balance","templateCategories","fetchSampleTemplates","handleUpdateTemplate","variants_count","contents","link","sender_id","tabIndex","setTabIndex","variants","setVariants","countArray","Array","from","parseFloat","keys","map","item","action","content","handleTabsChange","index","values","template_id","newVariants","v","i","id","handleSubmit","length","onSubmit","handleGoBack","onGoBack","handleGetContinueButtonLabel","_","variant"],"mappings":"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","sourcesContent":["import { Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { CampaignVariant } from '../../campaigns.types';\nimport { DesignProps } from '../planner';\nimport {\n  PlannerContentDesign,\n  PlannerContentDesignInitialValuesProp,\n} from '../planner/planner.content.design';\n\nexport const TestPlannerDesign = (props: DesignProps) => {\n  const {\n    fetchWallet,\n    initialValues,\n    fetchTemplates,\n    credit_balance,\n    templateCategories,\n    fetchSampleTemplates,\n    handleUpdateTemplate,\n  } = props;\n  const { variants_count, contents, link, sender_id } = initialValues;\n\n  const [tabIndex, setTabIndex] = useState(0);\n  const [variants, setVariants] = useState<CampaignVariant[]>(contents ?? []);\n\n  useEffect(() => {\n    if (variants_count && !contents) {\n      const countArray = Array.from(Array(parseFloat(variants_count)).keys());\n      const variants: CampaignVariant[] = countArray.map(item => ({\n        action: 'create',\n        content: '',\n      }));\n      setVariants(variants);\n    } else {\n      setVariants(contents ?? []);\n    }\n  }, [variants_count, contents]);\n\n  const handleTabsChange = (index: number, values?: PlannerContentDesignInitialValuesProp) => {\n    if (values) {\n      const { content, template_id } = values ?? {};\n      const newVariants = variants.map((v, i) => {\n        if (index === i) {\n          return {\n            ...v,\n            content,\n            template_id,\n            action: v.id && v.content !== content ? 'update' : 'create',\n          } as CampaignVariant;\n        }\n        return v;\n      });\n\n      setVariants(newVariants);\n    }\n    setTabIndex(index);\n  };\n\n  const handleSubmit = (index: number, values: PlannerContentDesignInitialValuesProp) => {\n    const { content, template_id } = values ?? {};\n    const newVariants = variants.map((v, i) => {\n      if (index === i) {\n        return {\n          ...v,\n          content,\n          template_id,\n          action: v.id && v.content !== content ? 'update' : 'create',\n        } as CampaignVariant;\n      }\n      return v;\n    });\n\n    setVariants(newVariants);\n\n    if (index < variants.length - 1) {\n      handleTabsChange(index + 1);\n    } else {\n      props.onSubmit({\n        ...props.initialValues,\n        contents: newVariants,\n      });\n    }\n  };\n\n  const handleGoBack = () => {\n    if (tabIndex === 0) {\n      props.onGoBack();\n    } else {\n      handleTabsChange(tabIndex - 1);\n    }\n  };\n\n  const handleGetContinueButtonLabel = () => {\n    if (tabIndex < variants.length - 1) {\n      return `Compose message \\n variant ${tabIndex + 1}`;\n    } else {\n      return 'Save & Continue';\n    }\n  };\n\n  return (\n    <>\n      <Tabs index={tabIndex} onChange={handleTabsChange}>\n        <TabList>\n          {variants.map((_, index) => (\n            <Tab fontWeight={500} fontSize=\"0.875rem\" key={`${index}`}>\n              {`Variant ${index + 1}`}\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels>\n          {variants.map((variant, index) => (\n            <TabPanel p={4} key={`${index}`}>\n              <PlannerContentDesign\n                index={index}\n                onGoBack={handleGoBack}\n                onTabChange={handleTabsChange}\n                onSubmit={values => handleSubmit(index, values)}\n                continueButtonLabel={handleGetContinueButtonLabel()}\n                initialValues={{\n                  link,\n                  sender_id,\n                  content: variant.content,\n                  template_id: variant.template_id,\n                }}\n                {...{\n                  fetchWallet,\n                  fetchTemplates,\n                  credit_balance,\n                  templateCategories,\n                  fetchSampleTemplates,\n                  handleUpdateTemplate,\n                }}\n              />\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}