{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/more-info/CloseConversationModal.tsx\";\nvar __jsx = React.createElement;\nimport { ModalBody, ModalFooter, Stack } from '@chakra-ui/core';\nimport { BodyText, Button, ModalContainer, Textarea } from 'app/components';\nimport { useFormik } from 'formik';\nimport React from 'react';\nexport const CloseConversationModal = props => {\n  const {\n    isOpen,\n    onSubmit,\n    userNick,\n    onClose,\n    isLoading\n  } = props;\n\n  const handleClose = () => {\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleSubmit\n  } = useFormik({\n    onSubmit,\n    initialValues: {\n      topic: '',\n      status: '',\n      content: ''\n    }\n  });\n  return __jsx(ModalContainer, {\n    size: \"sm\",\n    isOpen: isOpen,\n    onClose: handleClose,\n    title: \"Close Conversation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(BodyText, {\n    pb: \"1rem\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"You are about to close the conversation with \", userNick), __jsx(Textarea, {\n    mb: \"1rem\",\n    name: \"content\",\n    value: values.content,\n    onChange: handleChange,\n    placeholder: \"Enter Note\",\n    errorMessage: errors.content,\n    isInvalid: !!touched.content && !!errors.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), __jsx(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    width: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    variant: \"outline\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    type: \"submit\",\n    variantColor: \"blue\",\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Close\")))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/more-info/CloseConversationModal.tsx"],"names":["ModalBody","ModalFooter","Stack","BodyText","Button","ModalContainer","Textarea","useFormik","React","CloseConversationModal","props","isOpen","onSubmit","userNick","onClose","isLoading","handleClose","values","errors","touched","handleChange","handleSubmit","initialValues","topic","status","content"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,KAAjC,QAA8C,iBAA9C;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,cAA3B,EAAkEC,QAAlE,QAAkF,gBAAlF;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAQA,OAAO,MAAMC,sBAAsB,GAAIC,KAAD,IAAwC;AAC5E,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA,OAA9B;AAAuCC,IAAAA;AAAvC,MAAqDL,KAA3D;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;AACR,GAFD;;AAIA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA;AAAzC,MAA0Dd,SAAS,CAAC;AACxEK,IAAAA,QADwE;AAExEU,IAAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBC,MAAAA,OAAO,EAAE;AAAlC;AAFyD,GAAD,CAAzE;AAKA,SACE,MAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,IAArB;AAA0B,IAAA,MAAM,EAAEd,MAAlC;AAA0C,IAAA,OAAO,EAAEK,WAAnD;AAAgE,IAAA,KAAK,EAAC,oBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACgDR,QADhD,CADF,EA0BE,MAAC,QAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAEI,MAAM,CAACQ,OAHhB;AAIE,IAAA,QAAQ,EAAEL,YAJZ;AAKE,IAAA,WAAW,EAAC,YALd;AAME,IAAA,YAAY,EAAEF,MAAM,CAACO,OANvB;AAOE,IAAA,SAAS,EAAE,CAAC,CAACN,OAAO,CAACM,OAAV,IAAqB,CAAC,CAACP,MAAM,CAACO,OAP3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF,EAqCE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,KAAK,EAAC,MAAtB;AAA6B,IAAA,cAAc,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,KAAK,EAAC,KAAxB;AAA8B,IAAA,OAAO,EAAC,SAAtC;AAAgD,IAAA,OAAO,EAAET,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,KAAK,EAAC,KAAxB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAA4C,IAAA,YAAY,EAAC,MAAzD;AAAgE,IAAA,SAAS,EAAED,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF,CArCF,CADF,CADF;AAoDD,CAhEM","sourcesContent":["import { ModalBody, ModalFooter, Stack } from '@chakra-ui/core';\nimport { BodyText, Button, ModalContainer, ModalContainerOptions, Textarea } from 'app/components';\nimport { useFormik } from 'formik';\nimport React from 'react';\n\nexport type CloseConversationModalProps = ModalContainerOptions & {\n  userNick: string;\n  isLoading?: boolean;\n  onSubmit(payload: { topic: string; status: string; content: string }): void;\n};\n\nexport const CloseConversationModal = (props: CloseConversationModalProps) => {\n  const { isOpen, onSubmit, userNick, onClose, isLoading } = props;\n\n  const handleClose = () => {\n    onClose?.();\n  };\n\n  const { values, errors, touched, handleChange, handleSubmit } = useFormik({\n    onSubmit,\n    initialValues: { topic: '', status: '', content: '' },\n  });\n\n  return (\n    <ModalContainer size=\"sm\" isOpen={isOpen} onClose={handleClose} title=\"Close Conversation\">\n      <form onSubmit={handleSubmit}>\n        <ModalBody>\n          <BodyText pb=\"1rem\" color=\"gray.500\">\n            You are about to close the conversation with {userNick}\n          </BodyText>\n\n          {/* <Input\n            mb=\"1rem\"\n            name=\"topic\"\n            placeholder=\"Topic\"\n            value={values.topic}\n            onChange={handleChange}\n            errorMessage={errors.topic}\n            isInvalid={!!touched.topic && !!errors.topic}\n          />\n          <Select\n            mb=\"1rem\"\n            name=\"status\"\n            value={values.status}\n            onChange={handleChange}\n            placeholder=\"Choose status\"\n            errorMessage={errors.status}\n            isInvalid={!!touched.status && !!errors.status}\n          >\n            <option value=\"resolved\">Resolved</option>\n            <option value=\"peding\">Pending</option>\n          </Select> */}\n          <Textarea\n            mb=\"1rem\"\n            name=\"content\"\n            value={values.content}\n            onChange={handleChange}\n            placeholder=\"Enter Note\"\n            errorMessage={errors.content}\n            isInvalid={!!touched.content && !!errors.content}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Stack isInline width=\"100%\" justifyContent=\"center\">\n            <Button size=\"sm\" width=\"48%\" variant=\"outline\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button size=\"sm\" width=\"48%\" type=\"submit\" variantColor=\"blue\" isLoading={isLoading}>\n              Close\n            </Button>\n          </Stack>\n        </ModalFooter>\n      </form>\n    </ModalContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}