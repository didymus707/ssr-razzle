{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/PushNotificationPrompter/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Icon, Text, CloseButton, useToast } from '@chakra-ui/core';\nimport usePushNotifications from './useNotification';\nimport { ToastBox } from '../ToastBox';\nimport { Button } from '../Button';\nexport function PushNotificationPrompter({\n  userId = '',\n  email = '',\n  organizationID = '',\n  onToggle\n}) {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n  const {\n    error,\n    isPushNotificationSupported,\n    pushNotificationStatus,\n    askPushNotificationPermission\n  } = usePushNotifications(userId, email, organizationID);\n  const toast = useToast();\n\n  if (error) {\n    toast({\n      position: 'bottom-left',\n      render: ({\n        onClose\n      }) => __jsx(ToastBox, {\n        onClose: onClose,\n        message: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 32\n        }\n      })\n    });\n  }\n\n  const toggleStatus = isOpen && isPushNotificationSupported && pushNotificationStatus === 'default';\n  useEffect(() => {\n    onToggle(toggleStatus);\n  }, [onToggle, toggleStatus]);\n  return toggleStatus ? __jsx(Flex, {\n    fontSize: \".875rem\",\n    backgroundColor: \"yellow.500\",\n    color: \"#fff\",\n    padding: \"0.3rem 1rem\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    name: \"warning-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(Flex, {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Do you want to enable desktop notifications?\"), __jsx(Button, {\n    height: \"auto\",\n    variant: \"unstyled\",\n    fontSize: \".875rem\",\n    marginLeft: \"1.1rem\",\n    textDecoration: \"underline\",\n    onClick: () => askPushNotificationPermission(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Enable\"), __jsx(Button, {\n    height: \"auto\",\n    variant: \"unstyled\",\n    fontSize: \".875rem\",\n    marginLeft: \"1.25rem\",\n    textDecoration: \"underline\",\n    onClick: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Remind me later\")), __jsx(CloseButton, {\n    size: \"sm\",\n    onClick: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  })) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/PushNotificationPrompter/index.tsx"],"names":["React","useState","useEffect","Flex","Icon","Text","CloseButton","useToast","usePushNotifications","ToastBox","Button","PushNotificationPrompter","userId","email","organizationID","onToggle","isOpen","setIsOpen","error","isPushNotificationSupported","pushNotificationStatus","askPushNotificationPermission","toast","position","render","onClose","toggleStatus"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Flex, Icon, Text, CloseButton, useToast } from '@chakra-ui/core';\nimport usePushNotifications from './useNotification';\nimport { ToastBox } from '../ToastBox';\nimport { Button } from '../Button';\n\nexport function PushNotificationPrompter({\n  userId = '',\n  email = '',\n  organizationID = '',\n  onToggle,\n}: {\n  userId?: string;\n  organizationID?: string;\n  email?: string;\n  onToggle: (v: boolean) => void;\n}) {\n  const [isOpen, setIsOpen] = useState(true);\n  const {\n    error,\n    isPushNotificationSupported,\n    pushNotificationStatus,\n    askPushNotificationPermission,\n  } = usePushNotifications(userId, email, organizationID);\n  const toast = useToast();\n\n  if (error) {\n    toast({\n      position: 'bottom-left',\n      render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n    });\n  }\n\n  const toggleStatus =\n    isOpen && isPushNotificationSupported && pushNotificationStatus === 'default';\n\n  useEffect(() => {\n    onToggle(toggleStatus);\n  }, [onToggle, toggleStatus]);\n\n  return toggleStatus ? (\n    <Flex\n      fontSize=\".875rem\"\n      backgroundColor=\"yellow.500\"\n      color=\"#fff\"\n      padding=\"0.3rem 1rem\"\n      alignItems=\"center\"\n    >\n      <Icon name=\"warning-2\" />\n\n      <Flex flex={1} justifyContent=\"center\" alignItems=\"center\">\n        <Text>Do you want to enable desktop notifications?</Text>\n\n        <Button\n          height=\"auto\"\n          variant=\"unstyled\"\n          fontSize=\".875rem\"\n          marginLeft=\"1.1rem\"\n          textDecoration=\"underline\"\n          onClick={() => askPushNotificationPermission()}\n        >\n          Enable\n        </Button>\n\n        <Button\n          height=\"auto\"\n          variant=\"unstyled\"\n          fontSize=\".875rem\"\n          marginLeft=\"1.25rem\"\n          textDecoration=\"underline\"\n          onClick={() => setIsOpen(false)}\n        >\n          Remind me later\n        </Button>\n      </Flex>\n\n      <CloseButton size=\"sm\" onClick={() => setIsOpen(false)} />\n    </Flex>\n  ) : (\n    <div />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}