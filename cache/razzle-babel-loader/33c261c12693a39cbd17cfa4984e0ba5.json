{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/settings/component/billing/subscription-info/components/current-subscription.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Divider } from '@chakra-ui/core/dist';\nimport { useHistory } from 'react-router-dom';\nimport { formatCurrency } from '../../../../../../../utils';\nimport moment from 'moment';\nimport { Button } from 'app/components';\nexport const CurrentSubscription = props => {\n  const {\n    plan,\n    subscription\n  } = props;\n  const router_history = useHistory();\n  const {\n    billing_period\n  } = subscription;\n  const {\n    type: planType,\n    price_monthly,\n    price_yearly\n  } = plan;\n  return __jsx(Box, {\n    className: \"current-sub-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: \"title-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    className: \"billing-period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Your subscription plan \", planType !== 'free' && `(billed ${billing_period})`), __jsx(Box, {\n    className: \"subscription-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, plan.name)), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    variant: \"solid\",\n    variantColor: \"blue\",\n    onClick: () => router_history.push('/s/settings/organization/billing/upgrade'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Upgrade plan\"), planType === 'standard' && __jsx(Box, {\n    marginTop: \"5px\",\n    fontSize: \"14px\",\n    color: \"#757575\",\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Expires on \", moment(subscription.expiry).format('DD/MM/YYYY')))), __jsx(Divider, {\n    marginY: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, subscription.details.organization.users, \" user seat(s)\")), __jsx(Box, {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, subscription.details.organization.teams || 'Unlimited', \" team(s)\")), __jsx(Box, {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, subscription.details.inbox.max_channels || 'Unlimited', \" social channels\")), __jsx(Box, {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, subscription.details.lists.lists || 'Unlimited', \" lists (1000 rows each)\")), __jsx(Divider, {\n    marginY: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Total \", billing_period, \" charge\"), __jsx(Box, {\n    className: \"price_total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"\\u20A6\", ' ', planType !== 'enterprise' ? billing_period === 'monthly' ? formatCurrency(price_monthly['ngn'] / 100) : formatCurrency(price_yearly['ngn'] / 100) : 'ðŸ’°')));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/settings/component/billing/subscription-info/components/current-subscription.tsx"],"names":["React","Box","Divider","useHistory","formatCurrency","moment","Button","CurrentSubscription","props","plan","subscription","router_history","billing_period","type","planType","price_monthly","price_yearly","name","push","expiry","format","details","organization","users","teams","inbox","max_channels","lists"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Divider } from '@chakra-ui/core/dist';\nimport { useHistory } from 'react-router-dom';\nimport { formatCurrency } from '../../../../../../../utils';\nimport moment from 'moment';\nimport { Button } from 'app/components';\n\ninterface Props {\n  plan: { [key: string]: any };\n  subscription: { [key: string]: any };\n}\n\nexport const CurrentSubscription = (props: Props) => {\n  const { plan, subscription } = props;\n  const router_history = useHistory();\n\n  const { billing_period } = subscription;\n  const { type: planType, price_monthly, price_yearly } = plan;\n\n  return (\n    <Box className=\"current-sub-card\">\n      <Box className=\"title-section\">\n        <Box>\n          <Box className=\"billing-period\">\n            Your subscription plan {planType !== 'free' && `(billed ${billing_period})`}\n          </Box>\n          <Box className=\"subscription-name\">{plan.name}</Box>\n        </Box>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"flex-end\">\n          <Button\n            size=\"sm\"\n            variant=\"solid\"\n            variantColor=\"blue\"\n            onClick={() => router_history.push('/s/settings/organization/billing/upgrade')}\n          >\n            Upgrade plan\n          </Button>\n          {planType === 'standard' && (\n            <Box marginTop=\"5px\" fontSize=\"14px\" color=\"#757575\" fontWeight=\"500\">\n              Expires on {moment(subscription.expiry).format('DD/MM/YYYY')}\n            </Box>\n          )}\n        </Box>\n      </Box>\n      <Divider marginY=\"10px\" />\n\n      <Box className=\"item\">\n        <Box className=\"label\">{subscription.details.organization.users} user seat(s)</Box>\n      </Box>\n\n      <Box className=\"item\">\n        <Box className=\"label\">\n          {subscription.details.organization.teams || 'Unlimited'} team(s)\n        </Box>\n      </Box>\n\n      <Box className=\"item\">\n        <Box className=\"label\">\n          {subscription.details.inbox.max_channels || 'Unlimited'} social channels\n        </Box>\n      </Box>\n\n      <Box className=\"item\">\n        <Box className=\"label\">\n          {subscription.details.lists.lists || 'Unlimited'} lists (1000 rows each)\n        </Box>\n      </Box>\n\n      <Divider marginY=\"10px\" />\n\n      <Box className=\"item\">\n        <Box className=\"label\">Total {billing_period} charge</Box>\n        <Box className=\"price_total\">\n          â‚¦{' '}\n          {planType !== 'enterprise'\n            ? billing_period === 'monthly'\n              ? formatCurrency(price_monthly['ngn'] / 100)\n              : formatCurrency(price_yearly['ngn'] / 100)\n            : 'ðŸ’°'}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}