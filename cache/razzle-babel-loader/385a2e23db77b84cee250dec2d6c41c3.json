{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/Signatures.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Skeleton, Stack, useToast } from '@chakra-ui/core';\nimport { ConfirmModal, ToastBox } from 'app/components';\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { deleteSignatures, getSignatures } from '../inbox.service';\nimport { InboxSettingsPage, InboxSettingsPageItem } from './component';\nexport const InboxSettingsSignatures = () => {\n  var _data$signatures;\n\n  const toast = useToast();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const queryClient = useQueryClient();\n  const {\n    0: page\n  } = useState(1);\n  const {\n    0: signatureToDelete,\n    1: setSignatureToDelete\n  } = useState();\n  const {\n    isLoading,\n    data\n  } = useQuery(['signatures', page], () => getSignatures({\n    page\n  }));\n  const {\n    isLoading: isDeleting,\n    mutate\n  } = useMutation(payload => {\n    var _payload$uuid;\n\n    return deleteSignatures({\n      ids: [(_payload$uuid = payload.uuid) !== null && _payload$uuid !== void 0 ? _payload$uuid : '']\n    });\n  }, {\n    onMutate: async payload => {\n      await queryClient.cancelQueries(['signatures', page]);\n      const previousSignatures = queryClient.getQueryData(['signatures', page]);\n      queryClient.setQueryData(['signatures', page], old => {\n        var _old$signatures;\n\n        return _objectSpread(_objectSpread({}, old), {}, {\n          //@ts-ignore\n          signatures: old === null || old === void 0 ? void 0 : (_old$signatures = old.signatures) === null || _old$signatures === void 0 ? void 0 : _old$signatures.filter(item => item.uuid !== payload.uuid)\n        });\n      });\n      return {\n        previousSignatures\n      };\n    },\n    onSuccess: () => {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Signature deleted successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        })\n      });\n      setSignatureToDelete(undefined);\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData(['signatures', page], context.previousSignatures);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 36\n          }\n        })\n      });\n    }\n  });\n\n  const handleDeleteSignature = () => {\n    if (signatureToDelete) {\n      mutate(signatureToDelete);\n    }\n  };\n\n  return __jsx(InboxSettingsPage, {\n    maxW: \"600px\",\n    title: \"Signatures\",\n    helperAlert: {\n      title: 'Signatures',\n      caption: 'An email signature is used to provide the recipient with your name, email address, business contact information It creates a cohesive image throughout your company and shows that your business is well established. You can change the default signature by upgrading to enterprise plan.'\n    },\n    createAction: {\n      label: 'Create a signature',\n      onClick: () => history.push(`${match.path}/new`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, isLoading ? __jsx(Stack, {\n    spacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, Array.from({\n    length: 5\n  }, (v, i) => __jsx(Stack, {\n    isInline: true,\n    py: \"0.5rem\",\n    px: \"0.75rem\",\n    borderBottomWidth: \"1px\",\n    key: `${i.toString()}-${new Date().getTime()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    height: \"50px\",\n    width: \"50px\",\n    rounded: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), __jsx(Stack, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"8px\",\n    width: \"50%\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), __jsx(Skeleton, {\n    height: \"8px\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }))))) : __jsx(Stack, {\n    spacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$signatures = data.signatures) === null || _data$signatures === void 0 ? void 0 : _data$signatures.map(signature => __jsx(Box, {\n    key: signature.uuid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(InboxSettingsPageItem, {\n    heading: signature.content,\n    showDeleteButton: !signature.is_default,\n    onDelete: () => setSignatureToDelete(signature),\n    iconProps: {\n      name: 'inbox-signature',\n      color: 'gray.900'\n    },\n    onClick: () => history.push(`${match.path}/${signature.uuid}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })))), __jsx(ConfirmModal, {\n    isLoading: isDeleting,\n    isOpen: !!signatureToDelete,\n    title: \"Delete Signature\",\n    onConfirm: handleDeleteSignature,\n    onClose: () => setSignatureToDelete(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/Signatures.tsx"],"names":["Box","Skeleton","Stack","useToast","ConfirmModal","ToastBox","React","useState","useMutation","useQuery","useQueryClient","useHistory","useRouteMatch","deleteSignatures","getSignatures","InboxSettingsPage","InboxSettingsPageItem","InboxSettingsSignatures","toast","history","match","queryClient","page","signatureToDelete","setSignatureToDelete","isLoading","data","isDeleting","mutate","payload","ids","uuid","onMutate","cancelQueries","previousSignatures","getQueryData","setQueryData","old","signatures","filter","item","onSuccess","position","render","onClose","undefined","onError","error","newData","context","message","handleDeleteSignature","title","caption","label","onClick","push","path","Array","from","length","v","i","toString","Date","getTime","map","signature","content","is_default","name","color"],"mappings":"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","sourcesContent":["import { Box, Skeleton, Stack, useToast } from '@chakra-ui/core';\nimport { ConfirmModal, ToastBox } from 'app/components';\nimport { AxiosError } from 'axios';\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { deleteSignatures, getSignatures } from '../inbox.service';\nimport { SignatureSchema } from '../inbox.types';\nimport { InboxSettingsPage, InboxSettingsPageItem } from './component';\n\nexport const InboxSettingsSignatures = () => {\n  const toast = useToast();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const queryClient = useQueryClient();\n\n  const [page] = useState(1);\n  const [signatureToDelete, setSignatureToDelete] = useState<SignatureSchema | undefined>();\n\n  const { isLoading, data } = useQuery(['signatures', page], () => getSignatures({ page }));\n\n  const { isLoading: isDeleting, mutate } = useMutation<any, AxiosError, any, any>(\n    (payload: Partial<SignatureSchema>) => deleteSignatures({ ids: [payload.uuid ?? ''] }),\n    {\n      onMutate: async payload => {\n        await queryClient.cancelQueries(['signatures', page]);\n        const previousSignatures = queryClient.getQueryData(['signatures', page]);\n        queryClient.setQueryData(['signatures', page], old => ({\n          //@ts-ignore\n          ...old,\n          //@ts-ignore\n          signatures: old?.signatures?.filter(item => item.uuid !== payload.uuid),\n        }));\n        return { previousSignatures };\n      },\n      onSuccess: () => {\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox status=\"success\" onClose={onClose} message=\"Signature deleted successfully\" />\n          ),\n        });\n        setSignatureToDelete(undefined);\n      },\n      onError: (error, newData, context) => {\n        queryClient.setQueryData(['signatures', page], context.previousSignatures);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n        });\n      },\n    },\n  );\n\n  const handleDeleteSignature = () => {\n    if (signatureToDelete) {\n      mutate(signatureToDelete);\n    }\n  };\n\n  return (\n    <InboxSettingsPage\n      maxW=\"600px\"\n      title=\"Signatures\"\n      helperAlert={{\n        title: 'Signatures',\n        caption:\n          'An email signature is used to provide the recipient with your name, email address, business contact information It creates a cohesive image throughout your company and shows that your business is well established. You can change the default signature by upgrading to enterprise plan.',\n      }}\n      createAction={{\n        label: 'Create a signature',\n        onClick: () => history.push(`${match.path}/new`),\n      }}\n    >\n      {isLoading ? (\n        <Stack spacing=\"0\">\n          {Array.from({ length: 5 }, (v, i) => (\n            <Stack\n              isInline\n              py=\"0.5rem\"\n              px=\"0.75rem\"\n              borderBottomWidth=\"1px\"\n              key={`${i.toString()}-${new Date().getTime()}`}\n            >\n              <Skeleton height=\"50px\" width=\"50px\" rounded=\"50%\" />\n              <Stack flex={1}>\n                <Skeleton height=\"8px\" width=\"50%\" my=\"8px\" />\n                <Skeleton height=\"8px\" my=\"8px\" />\n              </Stack>\n            </Stack>\n          ))}\n        </Stack>\n      ) : (\n        <Stack spacing=\"0\">\n          {data?.signatures?.map((signature: SignatureSchema) => (\n            <Box key={signature.uuid}>\n              <InboxSettingsPageItem\n                heading={signature.content}\n                showDeleteButton={!signature.is_default}\n                onDelete={() => setSignatureToDelete(signature)}\n                iconProps={{ name: 'inbox-signature', color: 'gray.900' }}\n                onClick={() => history.push(`${match.path}/${signature.uuid}`)}\n              />\n            </Box>\n          ))}\n        </Stack>\n      )}\n      <ConfirmModal\n        isLoading={isDeleting}\n        isOpen={!!signatureToDelete}\n        title=\"Delete Signature\"\n        onConfirm={handleDeleteSignature}\n        onClose={() => setSignatureToDelete(undefined)}\n      />\n    </InboxSettingsPage>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}