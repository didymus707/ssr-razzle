{"ast":null,"code":"const _excluded = [\"id\", \"type\", \"name\", \"size\", \"label\", \"value\", \"onBlur\", \"onFocus\", \"onChange\", \"onKeyDown\", \"onKeyUp\", \"isInvalid\", \"isDisabled\", \"placeholder\", \"labelColor\"],\n      _excluded2 = [\"m\", \"ml\", \"mr\", \"mb\", \"mt\", \"mx\", \"my\", \"size\", \"leftIcon\", \"rightIcon\", \"isInvalid\", \"isDisabled\", \"errorMessage\"],\n      _excluded3 = [\"children\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Input/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Box, FormControl, FormErrorMessage, FormLabel as ChakraFormLabel, Input as ChakraInput, InputGroup, InputLeftElement, InputRightElement } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport * as React from 'react';\nexport const InputContainer = styled(Box)`\n  width: 100%;\n  position: relative;\n`;\nexport const SimpuInput = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    id,\n    type,\n    name,\n    size,\n    label,\n    value,\n    onBlur,\n    onFocus,\n    onChange,\n    onKeyDown,\n    onKeyUp,\n    isInvalid,\n    isDisabled,\n    placeholder,\n    labelColor = 'gray.900'\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(ChakraInput, _extends({\n    id: id,\n    ref: ref,\n    name: name,\n    type: type,\n    size: size,\n    value: value,\n    rounded: \"8px\",\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onKeyUp: onKeyUp,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    isDisabled: isDisabled,\n    placeholder: placeholder,\n    backgroundColor: \"white\",\n    borderColor: \"gray.500\",\n    _disabled: {\n      opacity: 0.5,\n      cursor: 'not-allowed',\n      borderColor: 'gray.500'\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), label && __jsx(ChakraFormLabel, {\n    p: \"0 8px\",\n    top: \"-4px\",\n    left: \"16px\",\n    zIndex: 2,\n    opacity: 1,\n    htmlFor: id,\n    rounded: \"8px\",\n    fontWeight: \"400\",\n    color: labelColor,\n    fontSize: \"0.75rem\",\n    position: \"absolute\",\n    transition: \"all 200ms\",\n    backgroundColor: \"white\",\n    transform: \"translate3d(0, -30%, 0)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, label));\n});\nexport const Input = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    m,\n    ml,\n    mr,\n    mb,\n    mt,\n    mx,\n    my,\n    size,\n    leftIcon,\n    rightIcon,\n    isInvalid,\n    isDisabled,\n    errorMessage\n  } = props,\n        rest = _objectWithoutProperties(props, _excluded2);\n\n  let pl = '1rem';\n  let pr = '1rem';\n\n  switch (size) {\n    case 'sm':\n      pl = leftIcon ? '2rem' : '0.75rem';\n      pr = rightIcon ? '2rem' : '0.75rem';\n      break;\n\n    case 'lg':\n      pl = leftIcon ? '2.5rem' : '1rem';\n      pr = rightIcon ? '2.5rem' : '1rem';\n      break;\n\n    default:\n      pl = leftIcon ? '2.5rem' : '1rem';\n      pr = rightIcon ? '2.5rem' : '1rem';\n      break;\n  }\n\n  return __jsx(FormControl, {\n    m: m,\n    mx: mx,\n    my: my,\n    mb: mb,\n    ml: ml,\n    mr: mr,\n    mt: mt,\n    width: \"100%\",\n    isInvalid: isInvalid,\n    isDisabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, __jsx(InputGroup, {\n    width: \"100%\",\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, leftIcon && __jsx(InputLeftElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 22\n    }\n  }, leftIcon), __jsx(SimpuInput, _extends({\n    ref: ref,\n    pl: pl,\n    pr: pr\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })), rightIcon && __jsx(InputRightElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, rightIcon)), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, errorMessage));\n});\nexport const FormLabel = props => {\n  const {\n    children\n  } = props,\n        rest = _objectWithoutProperties(props, _excluded3);\n\n  return __jsx(ChakraFormLabel, _extends({\n    fontWeight: \"400\",\n    fontSize: \"0.75rem\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }), children);\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Input/index.tsx"],"names":["Box","FormControl","FormErrorMessage","FormLabel","ChakraFormLabel","Input","ChakraInput","InputGroup","InputLeftElement","InputRightElement","styled","React","InputContainer","SimpuInput","forwardRef","ref","id","type","name","size","label","value","onBlur","onFocus","onChange","onKeyDown","onKeyUp","isInvalid","isDisabled","placeholder","labelColor","props","opacity","cursor","borderColor","m","ml","mr","mb","mt","mx","my","leftIcon","rightIcon","errorMessage","rest","pl","pr","children"],"mappings":";;;;;;;;;;;;AAAA,SACEA,GADF,EAGEC,WAHF,EAIEC,gBAJF,EAKEC,SAAS,IAAIC,eALf,EAMEC,KAAK,IAAIC,WANX,EAOEC,UAPF,EAQEC,gBARF,EAUEC,iBAVF,QAWO,iBAXP;AAaA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAYA,OAAO,MAAMC,cAAc,GAAGF,MAAM,CAACV,GAAD,CAAM;AAC1C;AACA;AACA,CAHO;AAKP,OAAO,MAAMa,UAAU,gBAAGF,KAAK,CAACG,UAAN,CACxB,OAmBEC,GAnBF,KAoBK;AAAA,MAnBH;AACEC,IAAAA,EADF;AAEEC,IAAAA,IAFF;AAGEC,IAAAA,IAHF;AAIEC,IAAAA,IAJF;AAKEC,IAAAA,KALF;AAMEC,IAAAA,KANF;AAOEC,IAAAA,MAPF;AAQEC,IAAAA,OARF;AASEC,IAAAA,QATF;AAUEC,IAAAA,SAVF;AAWEC,IAAAA,OAXF;AAYEC,IAAAA,SAZF;AAaEC,IAAAA,UAbF;AAcEC,IAAAA,WAdF;AAeEC,IAAAA,UAAU,GAAG;AAff,GAmBG;AAAA,MAHEC,KAGF;;AACH,SACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,EAAE,EAAEf,EADN;AAEE,IAAA,GAAG,EAAED,GAFP;AAGE,IAAA,IAAI,EAAEG,IAHR;AAIE,IAAA,IAAI,EAAED,IAJR;AAKE,IAAA,IAAI,EAAEE,IALR;AAME,IAAA,KAAK,EAAEE,KANT;AAOE,IAAA,OAAO,EAAC,KAPV;AAQE,IAAA,MAAM,EAAEC,MARV;AASE,IAAA,OAAO,EAAEC,OATX;AAUE,IAAA,OAAO,EAAEG,OAVX;AAWE,IAAA,QAAQ,EAAEF,QAXZ;AAYE,IAAA,SAAS,EAAEC,SAZb;AAaE,IAAA,UAAU,EAAEG,UAbd;AAcE,IAAA,WAAW,EAAEC,WAdf;AAeE,IAAA,eAAe,EAAC,OAflB;AAgBE,IAAA,WAAW,EAAC,UAhBd;AAiBE,IAAA,SAAS,EAAE;AACTG,MAAAA,OAAO,EAAE,GADA;AAETC,MAAAA,MAAM,EAAE,aAFC;AAGTC,MAAAA,WAAW,EAAE;AAHJ;AAjBb,KAsBMH,KAtBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAyBGX,KAAK,IACJ,MAAC,eAAD;AACE,IAAA,CAAC,EAAC,OADJ;AAEE,IAAA,GAAG,EAAC,MAFN;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,MAAM,EAAE,CAJV;AAKE,IAAA,OAAO,EAAE,CALX;AAME,IAAA,OAAO,EAAEJ,EANX;AAOE,IAAA,OAAO,EAAC,KAPV;AAQE,IAAA,UAAU,EAAC,KARb;AASE,IAAA,KAAK,EAAEc,UATT;AAUE,IAAA,QAAQ,EAAC,SAVX;AAWE,IAAA,QAAQ,EAAC,UAXX;AAYE,IAAA,UAAU,EAAC,WAZb;AAaE,IAAA,eAAe,EAAC,OAblB;AAcE,IAAA,SAAS,EAAC,yBAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGV,KAhBH,CA1BJ,CADF;AAgDD,CAtEuB,CAAnB;AAyEP,OAAO,MAAMf,KAAK,gBAAGM,KAAK,CAACG,UAAN,CAAiB,CAACiB,KAAD,EAAoBhB,GAApB,KAAiC;AACrE,QAAM;AACJoB,IAAAA,CADI;AAEJC,IAAAA,EAFI;AAGJC,IAAAA,EAHI;AAIJC,IAAAA,EAJI;AAKJC,IAAAA,EALI;AAMJC,IAAAA,EANI;AAOJC,IAAAA,EAPI;AAQJtB,IAAAA,IARI;AASJuB,IAAAA,QATI;AAUJC,IAAAA,SAVI;AAWJhB,IAAAA,SAXI;AAYJC,IAAAA,UAZI;AAaJgB,IAAAA;AAbI,MAeFb,KAfJ;AAAA,QAcKc,IAdL,4BAeId,KAfJ;;AAgBA,MAAIe,EAAE,GAAG,MAAT;AACA,MAAIC,EAAE,GAAG,MAAT;;AAEA,UAAQ5B,IAAR;AACE,SAAK,IAAL;AACE2B,MAAAA,EAAE,GAAGJ,QAAQ,GAAG,MAAH,GAAY,SAAzB;AACAK,MAAAA,EAAE,GAAGJ,SAAS,GAAG,MAAH,GAAY,SAA1B;AACA;;AACF,SAAK,IAAL;AACEG,MAAAA,EAAE,GAAGJ,QAAQ,GAAG,QAAH,GAAc,MAA3B;AACAK,MAAAA,EAAE,GAAGJ,SAAS,GAAG,QAAH,GAAc,MAA5B;AACA;;AACF;AACEG,MAAAA,EAAE,GAAGJ,QAAQ,GAAG,QAAH,GAAc,MAA3B;AACAK,MAAAA,EAAE,GAAGJ,SAAS,GAAG,QAAH,GAAc,MAA5B;AACA;AAZJ;;AAeA,SACE,MAAC,WAAD;AACE,IAAA,CAAC,EAAER,CADL;AAEE,IAAA,EAAE,EAAEK,EAFN;AAGE,IAAA,EAAE,EAAEC,EAHN;AAIE,IAAA,EAAE,EAAEH,EAJN;AAKE,IAAA,EAAE,EAAEF,EALN;AAME,IAAA,EAAE,EAAEC,EANN;AAOE,IAAA,EAAE,EAAEE,EAPN;AAQE,IAAA,KAAK,EAAC,MARR;AASE,IAAA,SAAS,EAAEZ,SATb;AAUE,IAAA,UAAU,EAAEC,UAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,IAAI,EAAET,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGuB,QAAQ,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,QAAnB,CADf,EAEE,MAAC,UAAD;AAAY,IAAA,GAAG,EAAE3B,GAAjB;AAAsB,IAAA,EAAE,EAAE+B,EAA1B;AAA8B,IAAA,EAAE,EAAEC;AAAlC,KAA0CF,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGF,SAAS,IAAI,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBA,SAApB,CAHhB,CAZF,EAiBE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBC,YAAnB,CAjBF,CADF;AAqBD,CAxDoB,CAAd;AA0DP,OAAO,MAAMzC,SAAS,GAAI4B,KAAD,IAA2B;AAClD,QAAM;AAAEiB,IAAAA;AAAF,MAAwBjB,KAA9B;AAAA,QAAqBc,IAArB,4BAA8Bd,KAA9B;;AACA,SACE,MAAC,eAAD;AAAiB,IAAA,UAAU,EAAC,KAA5B;AAAkC,IAAA,QAAQ,EAAC;AAA3C,KAAyDc,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGG,QADH,CADF;AAKD,CAPM","sourcesContent":["import {\n  Box,\n  BoxProps,\n  FormControl,\n  FormErrorMessage,\n  FormLabel as ChakraFormLabel,\n  Input as ChakraInput,\n  InputGroup,\n  InputLeftElement,\n  InputProps as ChakraInputProps,\n  InputRightElement,\n} from '@chakra-ui/core';\nimport { FormLabelProps } from '@chakra-ui/core/dist/FormLabel';\nimport styled from '@emotion/styled';\nimport { FormikErrors } from 'formik';\nimport * as React from 'react';\n\nexport type InputProps = BoxProps &\n  ChakraInputProps & {\n    labelColor?: string;\n    labelBackground?: string;\n    label?: string | React.ReactNode;\n    leftIcon?: React.ReactNode | string;\n    rightIcon?: React.ReactNode | string;\n    errorMessage?: string | string[] | FormikErrors<any> | FormikErrors<any>[];\n  };\n\nexport const InputContainer = styled(Box)`\n  width: 100%;\n  position: relative;\n`;\n\nexport const SimpuInput = React.forwardRef(\n  (\n    {\n      id,\n      type,\n      name,\n      size,\n      label,\n      value,\n      onBlur,\n      onFocus,\n      onChange,\n      onKeyDown,\n      onKeyUp,\n      isInvalid,\n      isDisabled,\n      placeholder,\n      labelColor = 'gray.900',\n      ...props\n    }: InputProps,\n    ref: any,\n  ) => {\n    return (\n      <InputContainer>\n        <ChakraInput\n          id={id}\n          ref={ref}\n          name={name}\n          type={type}\n          size={size}\n          value={value}\n          rounded=\"8px\"\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onKeyUp={onKeyUp}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          isDisabled={isDisabled}\n          placeholder={placeholder}\n          backgroundColor=\"white\"\n          borderColor=\"gray.500\"\n          _disabled={{\n            opacity: 0.5,\n            cursor: 'not-allowed',\n            borderColor: 'gray.500',\n          }}\n          {...props}\n        />\n        {label && (\n          <ChakraFormLabel\n            p=\"0 8px\"\n            top=\"-4px\"\n            left=\"16px\"\n            zIndex={2}\n            opacity={1}\n            htmlFor={id}\n            rounded=\"8px\"\n            fontWeight=\"400\"\n            color={labelColor}\n            fontSize=\"0.75rem\"\n            position=\"absolute\"\n            transition=\"all 200ms\"\n            backgroundColor=\"white\"\n            transform=\"translate3d(0, -30%, 0)\"\n          >\n            {label}\n          </ChakraFormLabel>\n        )}\n      </InputContainer>\n    );\n  },\n);\n\nexport const Input = React.forwardRef((props: InputProps, ref: any) => {\n  const {\n    m,\n    ml,\n    mr,\n    mb,\n    mt,\n    mx,\n    my,\n    size,\n    leftIcon,\n    rightIcon,\n    isInvalid,\n    isDisabled,\n    errorMessage,\n    ...rest\n  } = props;\n  let pl = '1rem';\n  let pr = '1rem';\n\n  switch (size) {\n    case 'sm':\n      pl = leftIcon ? '2rem' : '0.75rem';\n      pr = rightIcon ? '2rem' : '0.75rem';\n      break;\n    case 'lg':\n      pl = leftIcon ? '2.5rem' : '1rem';\n      pr = rightIcon ? '2.5rem' : '1rem';\n      break;\n    default:\n      pl = leftIcon ? '2.5rem' : '1rem';\n      pr = rightIcon ? '2.5rem' : '1rem';\n      break;\n  }\n\n  return (\n    <FormControl\n      m={m}\n      mx={mx}\n      my={my}\n      mb={mb}\n      ml={ml}\n      mr={mr}\n      mt={mt}\n      width=\"100%\"\n      isInvalid={isInvalid}\n      isDisabled={isDisabled}\n    >\n      <InputGroup width=\"100%\" size={size}>\n        {leftIcon && <InputLeftElement>{leftIcon}</InputLeftElement>}\n        <SimpuInput ref={ref} pl={pl} pr={pr} {...rest} />\n        {rightIcon && <InputRightElement>{rightIcon}</InputRightElement>}\n      </InputGroup>\n      <FormErrorMessage>{errorMessage}</FormErrorMessage>\n    </FormControl>\n  );\n});\n\nexport const FormLabel = (props: FormLabelProps) => {\n  const { children, ...rest } = props;\n  return (\n    <ChakraFormLabel fontWeight=\"400\" fontSize=\"0.75rem\" {...rest}>\n      {children}\n    </ChakraFormLabel>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}