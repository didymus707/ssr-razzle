{"ast":null,"code":"const _excluded = [\"onClick\", \"children\"],\n      _excluded2 = [\"value\", \"onBlur\", \"onChange\", \"inputRef\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/tables/components/search/search.components.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { Input, Button, Flex } from '@chakra-ui/core';\nexport function SearchButton(_ref) {\n  let {\n    onClick,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(Button, _extends({}, props, {\n    leftIcon: \"search\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }), children);\n}\nexport function SearchInput(_ref2) {\n  let {\n    value,\n    onBlur,\n    onChange,\n    inputRef\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  function handleBlur(e) {\n    if (!value) {\n      onBlur && onBlur(e);\n    }\n  }\n\n  return __jsx(Input, _extends({}, props, {\n    border: 0,\n    type: \"search\",\n    value: value,\n    ref: inputRef,\n    borderRadius: 0,\n    onBlur: handleBlur,\n    onChange: onChange,\n    placeholder: \"Search\",\n    borderBottom: \"1px solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }));\n}\nexport function Search({\n  value: valueProp,\n  onChange\n}) {\n  const [showInput, setShowInput] = React.useState(false);\n  const [value, setValue] = React.useState(valueProp || '');\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    if (showInput) {\n      inputRef && inputRef.current && inputRef.current.focus();\n    }\n  }, [showInput]);\n\n  function handleChange(e) {\n    let value = e.target.value;\n    setValue(value);\n    onChange && onChange(value);\n  }\n\n  function handleShowInput() {\n    setShowInput(true);\n  }\n\n  function handleHideInput() {\n    setShowInput(false);\n  }\n\n  return __jsx(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, !showInput && __jsx(SearchButton, {\n    size: \"xs\",\n    variant: \"ghost\",\n    onClick: handleShowInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Search\"), showInput && __jsx(SearchInput, {\n    size: \"sm\",\n    value: value,\n    variant: \"flushed\",\n    inputRef: inputRef,\n    onChange: handleChange,\n    onBlur: handleHideInput,\n    focusBorderColor: \"blue.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/tables/components/search/search.components.tsx"],"names":["React","Input","Button","Flex","SearchButton","onClick","children","props","SearchInput","value","onBlur","onChange","inputRef","handleBlur","e","Search","valueProp","showInput","setShowInput","useState","setValue","useRef","useEffect","current","focus","handleChange","target","handleShowInput","handleHideInput"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Input, Button, Flex, ButtonProps, InputProps } from '@chakra-ui/core';\nimport { SearchProps } from './search.types';\n\nexport function SearchButton({ onClick, children, ...props }: ButtonProps) {\n  return (\n    <Button {...props} leftIcon=\"search\" onClick={onClick}>\n      {children}\n    </Button>\n  );\n}\n\nexport function SearchInput({\n  value,\n  onBlur,\n  onChange,\n  inputRef,\n  ...props\n}: InputProps & { inputRef: React.Ref<HTMLInputElement> }) {\n  function handleBlur(e: React.FocusEvent<HTMLInputElement>) {\n    if (!value) {\n      onBlur && onBlur(e);\n    }\n  }\n\n  return (\n    <Input\n      {...props}\n      border={0}\n      type=\"search\"\n      value={value}\n      ref={inputRef}\n      borderRadius={0}\n      onBlur={handleBlur}\n      onChange={onChange}\n      placeholder=\"Search\"\n      borderBottom=\"1px solid\"\n    />\n  );\n}\n\nexport function Search({ value: valueProp, onChange }: SearchProps) {\n  const [showInput, setShowInput] = React.useState<boolean>(false);\n  const [value, setValue] = React.useState<string>(valueProp || '');\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (showInput) {\n      inputRef && inputRef.current && inputRef.current.focus();\n    }\n  }, [showInput]);\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    let value = e.target.value;\n    setValue(value);\n    onChange && onChange(value);\n  }\n\n  function handleShowInput() {\n    setShowInput(true);\n  }\n\n  function handleHideInput() {\n    setShowInput(false);\n  }\n\n  return (\n    <Flex>\n      {!showInput && (\n        <SearchButton size=\"xs\" variant=\"ghost\" onClick={handleShowInput}>\n          Search\n        </SearchButton>\n      )}\n      {showInput && (\n        <SearchInput\n          size=\"sm\"\n          value={value}\n          variant=\"flushed\"\n          inputRef={inputRef}\n          onChange={handleChange}\n          onBlur={handleHideInput}\n          focusBorderColor=\"blue.400\"\n        />\n      )}\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}