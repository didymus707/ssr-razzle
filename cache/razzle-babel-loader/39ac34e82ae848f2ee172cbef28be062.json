{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/Channels.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, Button, Icon, PseudoBox, Stack, useDisclosure } from '@chakra-ui/core';\nimport { fetchCredentials, getIntegrationUrl } from 'app/authenticated-app/channels';\nimport { apps, requestAccessUrls } from 'app/authenticated-app/channels/channels.data';\nimport { BodyText, Subtitle, XSmallText } from 'app/components';\nimport { selectOrganisationID } from 'app/unauthenticated-app/authentication';\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { WhatsappSetupModal } from '../components';\nimport { QRCodeSetupModal } from '../components/qr-code-setup-modal';\nimport { InboxSettingsPage } from './component';\nexport const InboxSettingsChannels = () => {\n  const channelsData = Object.values(apps).filter(item => item.category.toLowerCase() === 'simpu integration');\n  const history = useHistory();\n  const match = useRouteMatch();\n  const {\n    isOpen,\n    onClose,\n    onOpen: onOpenWhatsappModal\n  } = useDisclosure();\n  const {\n    isOpen: isQRCodeSetupModalOpen,\n    onClose: onCloseQRCodeSetupModal,\n    onOpen: onOpenQRCodeSetupModal\n  } = useDisclosure();\n  const organisation_id = useSelector(selectOrganisationID);\n  const token = useSelector(state => state.auth.token);\n  const {\n    data: {\n      channels: simpuSupportedChannels = []\n    } = {}\n  } = useQuery('simpu-supported-channels', fetchCredentials);\n  const {\n    0: qrCodeChannelId,\n    1: setQrCodeChannelId\n  } = useState();\n  let obj = {};\n\n  for (const iterator of simpuSupportedChannels) {\n    //@ts-ignore\n    obj[iterator.name] = iterator;\n  }\n\n  const onChannelClick = key => {\n    history.push(`${match.path}/${key}`);\n  };\n\n  const handleAdd = ({\n    key,\n    status\n  }) => {\n    if (status === 'request') {\n      window.open(requestAccessUrls[key], '_blank');\n    } else {\n      if (['gmail', 'outlook', 'messenger', 'twitter'].includes(key)) {\n        window.open(getIntegrationUrl({\n          key,\n          token: token || '',\n          channel: obj[key].uuid,\n          organisation_id: organisation_id || ''\n        }), '_blank');\n      } else if (key === 'sms') {\n        console.log('here');\n      } else {\n        setQrCodeChannelId(obj['whatsapp-web'].uuid);\n        onOpenWhatsappModal();\n      }\n    }\n  };\n\n  return __jsx(InboxSettingsPage, {\n    title: \"Channels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    flexWrap: \"wrap\",\n    spacing: \"4rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, channelsData.map(channel => {\n    const {\n      icon,\n      key,\n      name,\n      caption,\n      status,\n      category\n    } = channel;\n    const iconProps = {\n      name: icon !== null && icon !== void 0 ? icon : key,\n      color: key === 'sms' ? '#3525E6' : undefined\n    };\n    return __jsx(Box, {\n      key: key,\n      maxH: \"150px\",\n      mb: \"1.25rem\",\n      width: ['100%', 'calc(33.33% - 4rem)', 'calc(33.33% - 4rem)'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(InboxSettingsChannelItem, {\n      name: name,\n      caption: caption,\n      category: category,\n      iconProps: iconProps,\n      isActive: status === 'ready',\n      onClick: () => onChannelClick(key),\n      onAdd: () => {\n        if (key === 'gmail') {\n          onChannelClick(key);\n        } else {\n          handleAdd({\n            key,\n            status\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(WhatsappSetupModal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    onOpenQrCodeModal: onOpenQRCodeSetupModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), __jsx(QRCodeSetupModal, {\n    channelID: qrCodeChannelId,\n    isOpen: isQRCodeSetupModalOpen,\n    onClose: onCloseQRCodeSetupModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\nexport const InboxSettingsChannelItem = props => {\n  const {\n    name,\n    caption,\n    onAdd,\n    onClick,\n    isActive,\n    iconProps,\n    category\n  } = props;\n\n  const handleAdd = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    onAdd === null || onAdd === void 0 ? void 0 : onAdd();\n  };\n\n  return __jsx(Stack, {\n    isInline: true,\n    width: \"100%\",\n    height: \"150px\",\n    cursor: \"pointer\",\n    onClick: onClick,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, _extends({\n    size: \"6.25rem\"\n  }, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }))), __jsx(PseudoBox, {\n    pb: \"1.25rem\",\n    borderBottomWidth: \"1px\",\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(Subtitle, {\n    pb: \"0.25rem\",\n    color: \"gray.900\",\n    fontWeight: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, name), __jsx(BodyText, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, caption), __jsx(XSmallText, {\n    pb: \"0.5rem\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, category), __jsx(Button, {\n    size: \"xs\",\n    width: \"80px\",\n    rounded: \"100px\",\n    onClick: handleAdd,\n    isDisabled: !isActive,\n    _focus: {\n      boxShadow: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/Channels.tsx"],"names":["Box","Button","Icon","PseudoBox","Stack","useDisclosure","fetchCredentials","getIntegrationUrl","apps","requestAccessUrls","BodyText","Subtitle","XSmallText","selectOrganisationID","React","useState","useQuery","useSelector","useHistory","useRouteMatch","WhatsappSetupModal","QRCodeSetupModal","InboxSettingsPage","InboxSettingsChannels","channelsData","Object","values","filter","item","category","toLowerCase","history","match","isOpen","onClose","onOpen","onOpenWhatsappModal","isQRCodeSetupModalOpen","onCloseQRCodeSetupModal","onOpenQRCodeSetupModal","organisation_id","token","state","auth","data","channels","simpuSupportedChannels","qrCodeChannelId","setQrCodeChannelId","obj","iterator","name","onChannelClick","key","push","path","handleAdd","status","window","open","includes","channel","uuid","console","log","map","icon","caption","iconProps","color","undefined","InboxSettingsChannelItem","props","onAdd","onClick","isActive","e","stopPropagation","preventDefault","boxShadow"],"mappings":"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","sourcesContent":["import { Box, Button, Icon, IconProps, PseudoBox, Stack, useDisclosure } from '@chakra-ui/core';\nimport { fetchCredentials, getIntegrationUrl } from 'app/authenticated-app/channels';\nimport { apps, requestAccessUrls } from 'app/authenticated-app/channels/channels.data';\nimport { BodyText, Subtitle, XSmallText } from 'app/components';\nimport { selectOrganisationID } from 'app/unauthenticated-app/authentication';\nimport React, { MouseEvent, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { RootState } from 'root';\nimport { WhatsappSetupModal } from '../components';\nimport { QRCodeSetupModal } from '../components/qr-code-setup-modal';\nimport { InboxSettingsPage } from './component';\n\nexport const InboxSettingsChannels = () => {\n  const channelsData = Object.values(apps).filter(\n    item => item.category.toLowerCase() === 'simpu integration',\n  );\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { isOpen, onClose, onOpen: onOpenWhatsappModal } = useDisclosure();\n  const {\n    isOpen: isQRCodeSetupModalOpen,\n    onClose: onCloseQRCodeSetupModal,\n    onOpen: onOpenQRCodeSetupModal,\n  } = useDisclosure();\n\n  const organisation_id = useSelector(selectOrganisationID);\n  const token = useSelector((state: RootState) => state.auth.token);\n\n  const { data: { channels: simpuSupportedChannels = [] } = {} } = useQuery(\n    'simpu-supported-channels',\n    fetchCredentials,\n  );\n\n  const [qrCodeChannelId, setQrCodeChannelId] = useState<string | undefined>();\n\n  let obj = {} as { [key: string]: any };\n\n  for (const iterator of simpuSupportedChannels) {\n    //@ts-ignore\n    obj[iterator.name] = iterator;\n  }\n\n  const onChannelClick = (key: string) => {\n    history.push(`${match.path}/${key}`);\n  };\n\n  const handleAdd = ({ key, status }: { key: string; status: string }) => {\n    if (status === 'request') {\n      window.open(requestAccessUrls[key], '_blank');\n    } else {\n      if (['gmail', 'outlook', 'messenger', 'twitter'].includes(key)) {\n        window.open(\n          getIntegrationUrl({\n            key,\n            token: token || '',\n            channel: obj[key].uuid,\n            organisation_id: organisation_id || '',\n          }),\n          '_blank',\n        );\n      } else if (key === 'sms') {\n        console.log('here');\n      } else {\n        setQrCodeChannelId(obj['whatsapp-web'].uuid);\n        onOpenWhatsappModal();\n      }\n    }\n  };\n\n  return (\n    <InboxSettingsPage title=\"Channels\">\n      <Stack isInline flexWrap=\"wrap\" spacing=\"4rem\">\n        {channelsData.map(channel => {\n          const { icon, key, name, caption, status, category } = channel;\n          const iconProps = { name: icon ?? key, color: key === 'sms' ? '#3525E6' : undefined };\n\n          return (\n            <Box\n              key={key}\n              maxH=\"150px\"\n              mb=\"1.25rem\"\n              width={['100%', 'calc(33.33% - 4rem)', 'calc(33.33% - 4rem)']}\n            >\n              <InboxSettingsChannelItem\n                name={name}\n                caption={caption}\n                category={category}\n                iconProps={iconProps}\n                isActive={status === 'ready'}\n                onClick={() => onChannelClick(key)}\n                onAdd={() => {\n                  if (key === 'gmail') {\n                    onChannelClick(key);\n                  } else {\n                    handleAdd({ key, status });\n                  }\n                }}\n              />\n            </Box>\n          );\n        })}\n      </Stack>\n      <WhatsappSetupModal\n        isOpen={isOpen}\n        onClose={onClose}\n        onOpenQrCodeModal={onOpenQRCodeSetupModal}\n      />\n      <QRCodeSetupModal\n        channelID={qrCodeChannelId}\n        isOpen={isQRCodeSetupModalOpen}\n        onClose={onCloseQRCodeSetupModal}\n      />\n    </InboxSettingsPage>\n  );\n};\n\ntype ChannelItemProps = {\n  name?: string;\n  iconProps?: IconProps;\n  category?: string;\n  caption?: string;\n  isActive?: boolean;\n  onAdd?(): void;\n  onClick?(): void;\n};\n\nexport const InboxSettingsChannelItem = (props: ChannelItemProps) => {\n  const { name, caption, onAdd, onClick, isActive, iconProps, category } = props;\n\n  const handleAdd = (e: MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onAdd?.();\n  };\n\n  return (\n    <Stack\n      isInline\n      width=\"100%\"\n      height=\"150px\"\n      cursor=\"pointer\"\n      onClick={onClick}\n      alignItems=\"center\"\n    >\n      <Box>\n        <Icon size=\"6.25rem\" {...iconProps} />\n      </Box>\n      <PseudoBox pb=\"1.25rem\" borderBottomWidth=\"1px\" flex={1}>\n        <Subtitle pb=\"0.25rem\" color=\"gray.900\" fontWeight=\"normal\">\n          {name}\n        </Subtitle>\n        <BodyText color=\"gray.500\">{caption}</BodyText>\n        <XSmallText pb=\"0.5rem\" color=\"gray.500\">\n          {category}\n        </XSmallText>\n        <Button\n          size=\"xs\"\n          width=\"80px\"\n          rounded=\"100px\"\n          onClick={handleAdd}\n          isDisabled={!isActive}\n          _focus={{ boxShadow: 'none' }}\n        >\n          Add\n        </Button>\n      </PseudoBox>\n    </Stack>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}