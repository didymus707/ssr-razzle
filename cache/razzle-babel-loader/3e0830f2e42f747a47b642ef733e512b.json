{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/grid/column-menu.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Box, Input, useDisclosure, useToast } from '@chakra-ui/core';\nimport { motion } from 'framer-motion';\nimport { PopoverWrapper } from '../../list-view.styles';\nimport { ToastBox } from 'app/components';\nimport { PopoverListItem } from '../popover-list-item';\nimport { PropertySelect } from './property/property-select';\nimport { customizable_properties } from '../../list.data';\nimport { getColumnCustomizationComponent } from '../../lists.utils';\nimport { EnrichConfirmationModal } from '../enrich-confirmation-modal';\nexport const GridColumnMenu = props => {\n  var _props$column2, _props$column3, _props$column4, _props$column5;\n\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const {\n    0: enrichLoading,\n    1: setEnrichLoading\n  } = useState(false);\n  const {\n    parent_type = 'grid'\n  } = props;\n  const {\n    0: stage,\n    1: setStage\n  } = useState('property');\n  const already_enriched = !!Object.values(props.columns).find(i => {\n    var _props$column;\n\n    return i.type === 'DND' && i.customization.tracked_column === ((_props$column = props.column) === null || _props$column === void 0 ? void 0 : _props$column.id);\n  });\n  const {\n    isOpen: isEnrichDialogOpen,\n    onOpen: openEnrichDialog,\n    onClose: closeEnrichDialog\n  } = useDisclosure();\n  const container = useRef();\n  const toast = useToast();\n  const {\n    0: tempLabel,\n    1: setTempLabel\n  } = useState('');\n  const {\n    0: headerPosition,\n    1: setHeaderPosition\n  } = useState({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  });\n  const col_id = props.columnID;\n\n  const fetchHeaderPosition = () => {\n    const column_header_element = document.querySelectorAll(`[col-id=\"${col_id}\"]`)[0];\n    if (!column_header_element) return;\n    const rect = column_header_element.getBoundingClientRect();\n    setHeaderPosition({\n      left: rect.left,\n      right: rect.right,\n      top: rect.top,\n      bottom: rect.bottom\n    });\n  };\n\n  const fetchFieldPosition = () => {\n    const {\n      field_position: rect\n    } = props;\n    setHeaderPosition({\n      left: rect.left,\n      right: rect.right,\n      top: rect.top,\n      bottom: rect.bottom\n    });\n  };\n\n  const handleTempLabelChange = event => {\n    const value = event.target.value;\n    setTempLabel(value);\n  };\n\n  const handleClick = e => {\n    const enrich_dialog_element = document.getElementById('enrich-modal'); // @ts-ignore\n\n    if (container.current.contains(e.target) || !props.isOpen) return;\n    if (tempLabel !== props.column.label) props.updateLabel(col_id, tempLabel);\n\n    if (enrich_dialog_element) {\n      // @ts-ignore\n      if (enrich_dialog_element.contains(e.target) || !props.isOpen) return;\n    }\n\n    props.close();\n  };\n\n  const handleEnterPressed = e => {\n    if (e.key !== 'Enter') return;\n    if (tempLabel === props.column.label) props.close();\n    props.updateLabel(col_id, tempLabel);\n    props.close();\n  };\n\n  const attachOutsideClickListener = () => {\n    document.addEventListener('mousedown', handleClick);\n  };\n\n  const detachOutsideClickListener = () => {\n    document.removeEventListener('mousedown', handleClick);\n  };\n\n  const attachEnterPressedListener = () => {\n    const input_element = document.getElementById('col-label-input');\n    if (!input_element) return;\n    input_element.addEventListener('keydown', handleEnterPressed);\n  };\n\n  const detachEnterPressedListener = () => {\n    const input_element = document.getElementById('col-label-input');\n    if (!input_element) return;\n    input_element.removeEventListener('keydown', handleEnterPressed);\n  };\n\n  const handleTypeChanged = type => {\n    const payload = {\n      type,\n      label: tempLabel\n    };\n    props.updateColumn(col_id, payload);\n    setStage('property');\n    if (type !== 'DATE') props.close();\n  };\n\n  const handleEnrichProceed = async () => {\n    setEnrichLoading(true);\n    const res = await props.enrichColumnData(props.column.id);\n    setEnrichLoading(false);\n\n    if (res) {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Phone number enrichment started successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }\n        })\n      });\n      return props.close();\n    } else {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"error\",\n          onClose: onClose,\n          message: \"Unable to start phone number enrichment, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }\n        })\n      });\n    }\n  };\n\n  const CustomizationComponent = getColumnCustomizationComponent(props === null || props === void 0 ? void 0 : (_props$column2 = props.column) === null || _props$column2 === void 0 ? void 0 : _props$column2.type);\n  useEffect(() => {\n    if (parent_type === 'grid' && props.isOpen) {\n      fetchHeaderPosition();\n      setInitialized(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.columnID]);\n  useEffect(() => {\n    if (parent_type === 'field' && props.isOpen) {\n      fetchFieldPosition();\n      setInitialized(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.isOpen]);\n  useEffect(() => {\n    setStage('property');\n    attachOutsideClickListener();\n    return detachOutsideClickListener; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen, tempLabel]);\n  useEffect(() => {\n    attachEnterPressedListener();\n    return detachEnterPressedListener; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen, tempLabel]);\n  useEffect(() => {\n    if (props.column) setTempLabel(props.column.label); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.column]);\n  const left_overflow = parent_type === 'field' ? 0 : window.innerWidth - (headerPosition.left + 280);\n  useEffect(() => {\n    closeEnrichDialog();\n    if (!props.isOpen) setInitialized(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen]);\n  let animateProps = {};\n\n  if (parent_type !== 'field') {\n    animateProps = {\n      initial: {\n        opacity: 0,\n        scaleY: 0.5,\n        y: -50\n      },\n      animate: {\n        opacity: 1,\n        scaleY: 1,\n        y: 0\n      },\n      transition: {\n        type: 'spring',\n        duration: 0.005,\n        stiffness: 460,\n        damping: 30\n      }\n    };\n  }\n\n  return __jsx(Box, {\n    width: \"240px\",\n    zIndex: 1000000000000,\n    boxShadow: \"none\",\n    position: \"absolute\",\n    left: parent_type === 'field' ? headerPosition.left - 600 : headerPosition.left + Math.min(left_overflow, 5),\n    top: parent_type === 'field' ? headerPosition.bottom - 80 : headerPosition.bottom - 60,\n    ref: container,\n    onContextMenu: event => {\n      event.preventDefault();\n      return false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, props.isOpen && initialized && __jsx(motion.div, _extends({}, animateProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }), __jsx(PopoverWrapper, {\n    position: \"fixed\",\n    zIndex: 1000000000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"input-item\",\n    width: \"auto\",\n    style: {\n      width: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    value: tempLabel,\n    onChange: handleTempLabelChange,\n    variant: \"filled\",\n    height: 30,\n    fontSize: 13,\n    isInvalid: tempLabel.length === 0,\n    id: \"col-label-input\",\n    style: {\n      backgroundColor: '#EDF2F7'\n    },\n    isFullWidth: true,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"property-type-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, \"PROPERTY TYPE\"), __jsx(PropertySelect, {\n    column: props.column,\n    onChange: handleTypeChanged,\n    disabled: ((_props$column3 = props.column) === null || _props$column3 === void 0 ? void 0 : _props$column3.type) === 'DND',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }), stage === 'property' && __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }), customizable_properties.includes(props === null || props === void 0 ? void 0 : (_props$column4 = props.column) === null || _props$column4 === void 0 ? void 0 : _props$column4.type) && __jsx(PopoverListItem, {\n    label: \"Customize field\",\n    icon: \"settings\",\n    onClick: () => setStage('customize'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 19\n    }\n  }), ((_props$column5 = props.column) === null || _props$column5 === void 0 ? void 0 : _props$column5.type) === 'PHONE NUMBER' && __jsx(React.Fragment, null, !already_enriched ? __jsx(PopoverListItem, {\n    label: \"Enrich data\",\n    icon: \"premium\",\n    onClick: openEnrichDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }) : __jsx(PopoverListItem, {\n    color: \"green\",\n    label: \"Refresh enriched data\",\n    icon: \"premium\",\n    onClick: openEnrichDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }), __jsx(EnrichConfirmationModal, {\n    isOpen: isEnrichDialogOpen,\n    isLoading: enrichLoading,\n    onClose: closeEnrichDialog,\n    onProceed: handleEnrichProceed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  })), props.hideColumn && __jsx(PopoverListItem, {\n    label: \"Hide field\",\n    icon: \"view-off\",\n    onClick: () => props.hideColumn(col_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }), props.deleteColumn && __jsx(PopoverListItem, {\n    label: \"Delete field\",\n    icon: \"trash\",\n    onClick: () => props.deleteColumn(col_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  })), stage === 'customize' && // @ts-ignore\n  __jsx(CustomizationComponent, {\n    columns: props.columns,\n    column: props.column,\n    updateCustomization: props.updateCustomization,\n    close: props.close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/grid/column-menu.tsx"],"names":["React","useEffect","useState","useRef","Box","Input","useDisclosure","useToast","motion","PopoverWrapper","ToastBox","PopoverListItem","PropertySelect","customizable_properties","getColumnCustomizationComponent","EnrichConfirmationModal","GridColumnMenu","props","initialized","setInitialized","enrichLoading","setEnrichLoading","parent_type","stage","setStage","already_enriched","Object","values","columns","find","i","type","customization","tracked_column","column","id","isOpen","isEnrichDialogOpen","onOpen","openEnrichDialog","onClose","closeEnrichDialog","container","toast","tempLabel","setTempLabel","headerPosition","setHeaderPosition","top","bottom","left","right","col_id","columnID","fetchHeaderPosition","column_header_element","document","querySelectorAll","rect","getBoundingClientRect","fetchFieldPosition","field_position","handleTempLabelChange","event","value","target","handleClick","e","enrich_dialog_element","getElementById","current","contains","label","updateLabel","close","handleEnterPressed","key","attachOutsideClickListener","addEventListener","detachOutsideClickListener","removeEventListener","attachEnterPressedListener","input_element","detachEnterPressedListener","handleTypeChanged","payload","updateColumn","handleEnrichProceed","res","enrichColumnData","position","render","CustomizationComponent","left_overflow","window","innerWidth","animateProps","initial","opacity","scaleY","y","animate","transition","duration","stiffness","damping","Math","min","preventDefault","width","length","backgroundColor","includes","hideColumn","deleteColumn","updateCustomization"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Box, Input, useDisclosure, useToast } from '@chakra-ui/core';\nimport { motion } from 'framer-motion';\nimport { PopoverWrapper } from '../../list-view.styles';\nimport { ToastBox } from 'app/components';\nimport { PopoverListItem } from '../popover-list-item';\nimport { PropertySelect } from './property/property-select';\nimport { customizable_properties } from '../../list.data';\nimport { getColumnCustomizationComponent } from '../../lists.utils';\nimport { EnrichConfirmationModal } from '../enrich-confirmation-modal';\n\nexport const GridColumnMenu = (props: any) => {\n  const [initialized, setInitialized] = useState<boolean>(false);\n  const [enrichLoading, setEnrichLoading] = useState<boolean>(false);\n  const { parent_type = 'grid' } = props;\n\n  const [stage, setStage] = useState('property');\n\n  const already_enriched: boolean = !!Object.values(props.columns).find(\n    (i: any) => i.type === 'DND' && i.customization.tracked_column === props.column?.id,\n  );\n\n  const {\n    isOpen: isEnrichDialogOpen,\n    onOpen: openEnrichDialog,\n    onClose: closeEnrichDialog,\n  } = useDisclosure();\n\n  const container = useRef();\n\n  const toast = useToast();\n\n  const [tempLabel, setTempLabel] = useState('');\n  const [headerPosition, setHeaderPosition] = useState({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  });\n  const col_id = props.columnID;\n\n  const fetchHeaderPosition = () => {\n    const column_header_element = document.querySelectorAll(`[col-id=\"${col_id}\"]`)[0];\n    if (!column_header_element) return;\n    const rect = column_header_element.getBoundingClientRect();\n    setHeaderPosition({\n      left: rect.left,\n      right: rect.right,\n      top: rect.top,\n      bottom: rect.bottom,\n    });\n  };\n\n  const fetchFieldPosition = () => {\n    const { field_position: rect } = props;\n    setHeaderPosition({\n      left: rect.left,\n      right: rect.right,\n      top: rect.top,\n      bottom: rect.bottom,\n    });\n  };\n\n  const handleTempLabelChange = (event: any) => {\n    const value = event.target.value;\n    setTempLabel(value);\n  };\n\n  const handleClick = (e: any) => {\n    const enrich_dialog_element = document.getElementById('enrich-modal');\n\n    // @ts-ignore\n    if (container.current.contains(e.target) || !props.isOpen) return;\n    if (tempLabel !== props.column.label) props.updateLabel(col_id, tempLabel);\n    if (enrich_dialog_element) {\n      // @ts-ignore\n      if (enrich_dialog_element.contains(e.target) || !props.isOpen) return;\n    }\n    props.close();\n  };\n\n  const handleEnterPressed = (e: any) => {\n    if (e.key !== 'Enter') return;\n    if (tempLabel === props.column.label) props.close();\n    props.updateLabel(col_id, tempLabel);\n    props.close();\n  };\n\n  const attachOutsideClickListener = () => {\n    document.addEventListener('mousedown', handleClick);\n  };\n  const detachOutsideClickListener = () => {\n    document.removeEventListener('mousedown', handleClick);\n  };\n\n  const attachEnterPressedListener = () => {\n    const input_element = document.getElementById('col-label-input');\n    if (!input_element) return;\n    input_element.addEventListener('keydown', handleEnterPressed);\n  };\n\n  const detachEnterPressedListener = () => {\n    const input_element = document.getElementById('col-label-input');\n    if (!input_element) return;\n    input_element.removeEventListener('keydown', handleEnterPressed);\n  };\n\n  const handleTypeChanged = (type: string) => {\n    const payload = {\n      type,\n      label: tempLabel,\n    };\n    props.updateColumn(col_id, payload);\n    setStage('property');\n    if (type !== 'DATE') props.close();\n  };\n\n  const handleEnrichProceed = async () => {\n    setEnrichLoading(true);\n    const res = await props.enrichColumnData(props.column.id);\n    setEnrichLoading(false);\n    if (res) {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            status=\"success\"\n            onClose={onClose}\n            message=\"Phone number enrichment started successfully\"\n          />\n        ),\n      });\n      return props.close();\n    } else {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            status=\"error\"\n            onClose={onClose}\n            message=\"Unable to start phone number enrichment, please try again\"\n          />\n        ),\n      });\n    }\n  };\n\n  const CustomizationComponent: React.ReactNode = getColumnCustomizationComponent(\n    props?.column?.type,\n  );\n\n  useEffect(() => {\n    if (parent_type === 'grid' && props.isOpen) {\n      fetchHeaderPosition();\n      setInitialized(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.columnID]);\n\n  useEffect(() => {\n    if (parent_type === 'field' && props.isOpen) {\n      fetchFieldPosition();\n      setInitialized(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    setStage('property');\n    attachOutsideClickListener();\n    return detachOutsideClickListener;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen, tempLabel]);\n\n  useEffect(() => {\n    attachEnterPressedListener();\n    return detachEnterPressedListener;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen, tempLabel]);\n\n  useEffect(() => {\n    if (props.column) setTempLabel(props.column.label);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.column]);\n\n  const left_overflow =\n    parent_type === 'field' ? 0 : window.innerWidth - (headerPosition.left + 280);\n\n  useEffect(() => {\n    closeEnrichDialog();\n    if (!props.isOpen) setInitialized(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen]);\n\n  let animateProps = {};\n\n  if (parent_type !== 'field') {\n    animateProps = {\n      initial: { opacity: 0, scaleY: 0.5, y: -50 },\n      animate: { opacity: 1, scaleY: 1, y: 0 },\n      transition: { type: 'spring', duration: 0.005, stiffness: 460, damping: 30 },\n    };\n  }\n\n  return (\n    <Box\n      width=\"240px\"\n      zIndex={1000000000000}\n      boxShadow=\"none\"\n      position=\"absolute\"\n      left={\n        parent_type === 'field'\n          ? headerPosition.left - 600\n          : headerPosition.left + Math.min(left_overflow, 5)\n      }\n      top={parent_type === 'field' ? headerPosition.bottom - 80 : headerPosition.bottom - 60}\n      ref={container}\n      onContextMenu={event => {\n        event.preventDefault();\n        return false;\n      }}\n    >\n      {props.isOpen && initialized && (\n        <motion.div {...animateProps}>\n          <PopoverWrapper position=\"fixed\" zIndex={1000000000}>\n            <Box className=\"input-item\" width=\"auto\" style={{ width: 'auto' }}>\n              <Input\n                value={tempLabel}\n                onChange={handleTempLabelChange}\n                variant=\"filled\"\n                height={30}\n                fontSize={13}\n                isInvalid={tempLabel.length === 0}\n                id=\"col-label-input\"\n                style={{\n                  backgroundColor: '#EDF2F7',\n                }}\n                isFullWidth\n                autoFocus\n              />\n            </Box>\n\n            <div className=\"property-type-label\">PROPERTY TYPE</div>\n            <PropertySelect\n              column={props.column}\n              onChange={handleTypeChanged}\n              disabled={props.column?.type === 'DND'}\n            />\n\n            {stage === 'property' && (\n              <>\n                <hr />\n                {customizable_properties.includes(props?.column?.type) && (\n                  <PopoverListItem\n                    label=\"Customize field\"\n                    icon=\"settings\"\n                    onClick={() => setStage('customize')}\n                  />\n                )}\n                {props.column?.type === 'PHONE NUMBER' && (\n                  <>\n                    {!already_enriched ? (\n                      <PopoverListItem\n                        label=\"Enrich data\"\n                        icon=\"premium\"\n                        onClick={openEnrichDialog}\n                      />\n                    ) : (\n                      <PopoverListItem\n                        color=\"green\"\n                        label=\"Refresh enriched data\"\n                        icon=\"premium\"\n                        onClick={openEnrichDialog}\n                      />\n                    )}\n\n                    <EnrichConfirmationModal\n                      isOpen={isEnrichDialogOpen}\n                      isLoading={enrichLoading}\n                      onClose={closeEnrichDialog}\n                      onProceed={handleEnrichProceed}\n                    />\n                  </>\n                )}\n\n                {props.hideColumn && (\n                  <PopoverListItem\n                    label=\"Hide field\"\n                    icon=\"view-off\"\n                    onClick={() => props.hideColumn(col_id)}\n                  />\n                )}\n                {props.deleteColumn && (\n                  <PopoverListItem\n                    label=\"Delete field\"\n                    icon=\"trash\"\n                    onClick={() => props.deleteColumn(col_id)}\n                  />\n                )}\n              </>\n            )}\n            {stage === 'customize' && (\n              // @ts-ignore\n              <CustomizationComponent\n                columns={props.columns}\n                column={props.column}\n                updateCustomization={props.updateCustomization}\n                close={props.close}\n              />\n            )}\n          </PopoverWrapper>\n        </motion.div>\n      )}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}