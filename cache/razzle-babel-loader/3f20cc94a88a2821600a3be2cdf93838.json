{"ast":null,"code":"import _objectSpread from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/component/signature-form.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Stack } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport { ContentState, convertFromHTML, EditorState, RichUtils } from 'draft-js';\nimport { useFormik } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { BlockStyleControls, DraftEditor, DraftEditorContainer, InlineStyleControls } from '../../components';\nexport const SignatureForm = props => {\n  var _initialValues$conten, _initialValues$conten2, _values$content;\n\n  const {\n    onSubmit,\n    onDelete,\n    onCancel,\n    isLoading,\n    isDeleting,\n    initialValues\n  } = props;\n  const {\n    values,\n    handleSubmit,\n    setFieldValue\n  } = useFormik({\n    initialValues: initialValues ? _objectSpread(_objectSpread({}, initialValues), {}, {\n      content: EditorState.createWithContent(ContentState.createFromBlockArray(convertFromHTML((_initialValues$conten = initialValues.content) !== null && _initialValues$conten !== void 0 ? _initialValues$conten : '').contentBlocks, convertFromHTML((_initialValues$conten2 = initialValues.content) !== null && _initialValues$conten2 !== void 0 ? _initialValues$conten2 : '').entityMap))\n    }) : {\n      content: EditorState.createEmpty()\n    },\n    onSubmit\n  });\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState((_values$content = values.content) !== null && _values$content !== void 0 ? _values$content : EditorState.createEmpty());\n  const editorRef = useRef(null);\n\n  const toggleBlockType = blockType => {\n    setEditorState(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  const toggleInlineStyle = inlineStyle => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, inlineStyle));\n  };\n\n  const handleContentChange = state => {\n    setEditorState(state);\n    setFieldValue('content', state);\n  };\n\n  const handleEditorFocus = () => {\n    if (editorRef.current) {\n      editorRef.current.focus();\n    }\n  };\n\n  useEffect(() => {\n    handleEditorFocus();\n  }, []);\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(DraftEditorContainer, {\n    mb: \"4rem\",\n    onClick: handleEditorFocus,\n    activeButtonColor: '#d2cef9',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    px: \"0.5rem\",\n    height: \"150px\",\n    borderWidth: \"1px\",\n    roundedTopLeft: \"8px\",\n    roundedTopRight: \"8px\",\n    borderColor: \"gray.500\",\n    borderBottomColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(DraftEditor, {\n    ref: editorRef,\n    editorState: editorState,\n    onChange: handleContentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), __jsx(Flex, {\n    py: \"1rem\",\n    px: \"1.5rem\",\n    bg: \"gray.200\",\n    borderWidth: \"1px\",\n    alignItems: \"center\",\n    borderColor: \"gray.500\",\n    roundedBottomLeft: \"8px\",\n    roundedBottomRight: \"8px\",\n    borderTopColor: \"transparent\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: \"1rem\",\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(InlineStyleControls, {\n    editorState: editorState,\n    onToggle: toggleInlineStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(BlockStyleControls, {\n    editorState: editorState,\n    onToggle: toggleBlockType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }))))), __jsx(Flex, {\n    pt: \"1.5rem\",\n    borderTopWidth: \"1px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: onCancel,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, initialValues && __jsx(Button, {\n    isLoading: isDeleting,\n    onClick: onDelete,\n    variantColor: \"red\",\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Delete\"), __jsx(Button, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    isLoading: isLoading,\n    isDisabled: !editorState.getCurrentContent().hasText(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/component/signature-form.tsx"],"names":["Box","Flex","Stack","Button","ContentState","convertFromHTML","EditorState","RichUtils","useFormik","React","useEffect","useRef","useState","BlockStyleControls","DraftEditor","DraftEditorContainer","InlineStyleControls","SignatureForm","props","onSubmit","onDelete","onCancel","isLoading","isDeleting","initialValues","values","handleSubmit","setFieldValue","content","createWithContent","createFromBlockArray","contentBlocks","entityMap","createEmpty","editorState","setEditorState","editorRef","toggleBlockType","blockType","toggleInlineStyle","inlineStyle","handleContentChange","state","handleEditorFocus","current","focus","getCurrentContent","hasText"],"mappings":"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","sourcesContent":["import { Box, Flex, Stack } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport { ContentState, convertFromHTML, Editor, EditorState, RichUtils } from 'draft-js';\nimport { FormikConfig, useFormik } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  BlockStyleControls,\n  DraftEditor,\n  DraftEditorContainer,\n  InlineStyleControls,\n} from '../../components';\n\nexport type SignatureFormValues = {\n  content?: EditorState;\n};\n\nexport type SignatureFormProps = {\n  isLoading?: boolean;\n  isDeleting?: boolean;\n  initialValues?: {\n    id?: string;\n    content?: string;\n  };\n  onDelete?(): void;\n  onCancel?(): void;\n  onSubmit: FormikConfig<SignatureFormValues>['onSubmit'];\n};\n\nexport const SignatureForm = (props: SignatureFormProps) => {\n  const { onSubmit, onDelete, onCancel, isLoading, isDeleting, initialValues } = props;\n  const { values, handleSubmit, setFieldValue } = useFormik<SignatureFormValues>({\n    initialValues: initialValues\n      ? {\n          ...initialValues,\n          content: EditorState.createWithContent(\n            ContentState.createFromBlockArray(\n              convertFromHTML(initialValues.content ?? '').contentBlocks,\n              convertFromHTML(initialValues.content ?? '').entityMap,\n            ),\n          ),\n        }\n      : { content: EditorState.createEmpty() },\n    onSubmit,\n  });\n  const [editorState, setEditorState] = useState(values.content ?? EditorState.createEmpty());\n\n  const editorRef = useRef<Editor>(null);\n\n  const toggleBlockType = (blockType: string) => {\n    setEditorState(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  const toggleInlineStyle = (inlineStyle: string) => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, inlineStyle));\n  };\n\n  const handleContentChange = (state: EditorState) => {\n    setEditorState(state);\n    setFieldValue('content', state);\n  };\n\n  const handleEditorFocus = () => {\n    if (editorRef.current) {\n      editorRef.current.focus();\n    }\n  };\n\n  useEffect(() => {\n    handleEditorFocus();\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <DraftEditorContainer mb=\"4rem\" onClick={handleEditorFocus} activeButtonColor={'#d2cef9'}>\n        <Box\n          px=\"0.5rem\"\n          height=\"150px\"\n          borderWidth=\"1px\"\n          roundedTopLeft=\"8px\"\n          roundedTopRight=\"8px\"\n          borderColor=\"gray.500\"\n          borderBottomColor=\"transparent\"\n        >\n          <DraftEditor ref={editorRef} editorState={editorState} onChange={handleContentChange} />\n        </Box>\n        <Flex\n          py=\"1rem\"\n          px=\"1.5rem\"\n          bg=\"gray.200\"\n          borderWidth=\"1px\"\n          alignItems=\"center\"\n          borderColor=\"gray.500\"\n          roundedBottomLeft=\"8px\"\n          roundedBottomRight=\"8px\"\n          borderTopColor=\"transparent\"\n          justifyContent=\"space-between\"\n        >\n          <Stack spacing=\"1rem\" isInline alignItems=\"center\">\n            <Box>\n              <InlineStyleControls editorState={editorState} onToggle={toggleInlineStyle} />\n            </Box>\n            <Box>\n              <BlockStyleControls editorState={editorState} onToggle={toggleBlockType} />\n            </Box>\n          </Stack>\n        </Flex>\n      </DraftEditorContainer>\n      <Flex pt=\"1.5rem\" borderTopWidth=\"1px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Button onClick={onCancel} variant=\"outline\">\n          Cancel\n        </Button>\n        <Stack isInline alignItems=\"center\">\n          {initialValues && (\n            <Button isLoading={isDeleting} onClick={onDelete} variantColor=\"red\" variant=\"outline\">\n              Delete\n            </Button>\n          )}\n          <Button\n            type=\"submit\"\n            variantColor=\"blue\"\n            isLoading={isLoading}\n            isDisabled={!editorState.getCurrentContent().hasText()}\n          >\n            Save\n          </Button>\n        </Stack>\n      </Flex>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}