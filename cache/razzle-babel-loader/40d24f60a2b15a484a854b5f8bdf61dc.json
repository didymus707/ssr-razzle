{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/campaigns/components/planner/campaign-link-modal.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, FormControl, FormErrorMessage, FormLabel, Input, ModalCloseButton, Text } from '@chakra-ui/core';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { ModalContainer, Button } from 'app/components';\nexport const CampaignLinkModal = ({\n  goBack,\n  isOpen,\n  onClose,\n  isLoading,\n  onSubmit,\n  initialValues\n}) => {\n  const inputRef = React.useRef(null);\n  const validationSchema = yup.object().shape({\n    link: yup.string().required('Campaign link is required')\n  });\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleSubmit\n  } = useFormik({\n    onSubmit,\n    initialValues,\n    validationSchema\n  });\n\n  const handleGoBack = () => {\n    goBack === null || goBack === void 0 ? void 0 : goBack();\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  };\n\n  React.useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  return __jsx(ModalContainer, {\n    size: \"sm\",\n    isOpen: isOpen,\n    onClose: handleGoBack,\n    title: \"Add a short link\",\n    initialFocusRef: inputRef,\n    titleStyleProps: {\n      fontSize: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(ModalCloseButton, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    px: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(FormControl, {\n    mb: \"24px\",\n    isInvalid: !!touched.link && !!errors.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    pb: \"0\",\n    fontSize: \"0.8rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Original URL\"), __jsx(Text, {\n    pb: \"0.5rem\",\n    color: \"gray.600\",\n    fontSize: \"0.7rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Links must be prepended with http:// or https://\"), __jsx(Input, {\n    size: \"sm\",\n    name: \"link\",\n    ref: inputRef,\n    value: values.link,\n    onChange: handleChange,\n    placeholder: \"https://www.google.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, errors.link))), __jsx(Flex, {\n    py: \"1rem\",\n    mt: \"1.5rem\",\n    px: \"1.5rem\",\n    alignItems: \"center\",\n    borderTopWidth: \"1px\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    variant: \"outline\",\n    variantColor: \"blue\",\n    onClick: handleGoBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    variantColor: \"blue\",\n    isLoading: isLoading,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Shorten & insert URL\")));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/campaigns/components/planner/campaign-link-modal.tsx"],"names":["Box","Flex","FormControl","FormErrorMessage","FormLabel","Input","ModalCloseButton","Text","useFormik","React","yup","ModalContainer","Button","CampaignLinkModal","goBack","isOpen","onClose","isLoading","onSubmit","initialValues","inputRef","useRef","validationSchema","object","shape","link","string","required","values","errors","touched","handleChange","handleSubmit","handleGoBack","useEffect","current","focus","fontSize"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  ModalCloseButton,\n  Text,\n} from '@chakra-ui/core';\nimport { FormikConfig, useFormik } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { ModalContainer, ModalContainerOptions, Button } from 'app/components';\n\ntype CampaignLinkModalProps = {\n  goBack?(): void;\n  isLoading?: boolean;\n  initialValues?: any;\n  onSubmit: FormikConfig<any>['onSubmit'];\n} & ModalContainerOptions;\n\nexport const CampaignLinkModal = ({\n  goBack,\n  isOpen,\n  onClose,\n  isLoading,\n  onSubmit,\n  initialValues,\n}: CampaignLinkModalProps) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const validationSchema = yup.object().shape({\n    link: yup.string().required('Campaign link is required'),\n  });\n  const { values, errors, touched, handleChange, handleSubmit } = useFormik({\n    onSubmit,\n    initialValues,\n    validationSchema,\n  });\n\n  const handleGoBack = () => {\n    goBack?.();\n    onClose?.();\n  };\n\n  React.useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <ModalContainer\n      size=\"sm\"\n      isOpen={isOpen}\n      onClose={handleGoBack}\n      title=\"Add a short link\"\n      initialFocusRef={inputRef}\n      titleStyleProps={{ fontSize: '1rem' }}\n    >\n      <ModalCloseButton size=\"sm\" />\n      <Box px=\"1.5rem\">\n        <FormControl mb=\"24px\" isInvalid={!!touched.link && !!errors.link}>\n          <FormLabel pb=\"0\" fontSize=\"0.8rem\">\n            Original URL\n          </FormLabel>\n          <Text pb=\"0.5rem\" color=\"gray.600\" fontSize=\"0.7rem\">\n            Links must be prepended with http:// or https://\n          </Text>\n          <Input\n            size=\"sm\"\n            name=\"link\"\n            ref={inputRef}\n            value={values.link}\n            onChange={handleChange}\n            placeholder=\"https://www.google.com\"\n          />\n          <FormErrorMessage>{errors.link}</FormErrorMessage>\n        </FormControl>\n      </Box>\n      <Flex\n        py=\"1rem\"\n        mt=\"1.5rem\"\n        px=\"1.5rem\"\n        alignItems=\"center\"\n        borderTopWidth=\"1px\"\n        justifyContent=\"space-between\"\n      >\n        <Button size=\"sm\" width=\"48%\" variant=\"outline\" variantColor=\"blue\" onClick={handleGoBack}>\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          width=\"48%\"\n          variantColor=\"blue\"\n          isLoading={isLoading}\n          onClick={handleSubmit}\n        >\n          Shorten & insert URL\n        </Button>\n      </Flex>\n    </ModalContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}