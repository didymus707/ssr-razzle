{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/settings/Rules.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, Flex, Image, Link, Stack } from '@chakra-ui/core';\nimport { BodyText, PreTitle, Subtitle, Button } from 'app/components';\nimport React, { useMemo, useState } from 'react';\nimport { InboxSettingsPage } from './component';\nexport const InboxSettingsRules = () => {\n  const {\n    0: activeSection,\n    1: setActiveSection\n  } = useState(0);\n\n  const onClick = section => {\n    setActiveSection(section);\n  };\n\n  const sectionProps = {\n    0: {\n      image: '/images/inbox/company-rules.png',\n      title: 'Apply rules company-wide',\n      caption: 'Save time and hassle by creating centralized rules that apply to every message across your company inbox'\n    },\n    1: {\n      image: '/images/inbox/load-balancing.png',\n      title: 'Balance your team’s workload',\n      caption: \"Set limits on teammate assignments so your team isn't overwhelmed and your customers receive faster replies.\"\n    },\n    2: {\n      image: '/images/inbox/load-balancing.png',\n      title: 'Balance your team’s workload',\n      caption: \"Set limits on teammate assignments so your team isn't overwhelmed and your customers receive faster replies.\"\n    }\n  };\n  const {\n    title,\n    image,\n    caption\n  } = useMemo(() => sectionProps[activeSection], [activeSection, sectionProps]);\n  return __jsx(InboxSettingsPage, {\n    title: \"Rules\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    spacing: \"3.5rem\",\n    isInline: true,\n    maxW: \"800px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(TabLink, {\n    isActive: activeSection === 0,\n    onClick: () => onClick(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Company rules\"), __jsx(TabLink, {\n    isActive: activeSection === 1,\n    onClick: () => onClick(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Rules Library\"), __jsx(TabLink, {\n    isActive: activeSection === 2,\n    onClick: () => onClick(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Load Balancing\")), __jsx(Box, {\n    flex: 1,\n    pt: \"2rem\",\n    pl: \"1.5rem\",\n    rounded: \"4px\",\n    bg: \"rgba(240, 238, 253, 0.42)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(Flex, {\n    mb: \"1rem\",\n    width: \"180px\",\n    px: \"0.75rem\",\n    bg: \"#E3B51E\",\n    rounded: \"100px\",\n    height: \"1.25rem\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, __jsx(PreTitle, {\n    fontSize: \"0.625rem\",\n    color: \"white\",\n    fontWeight: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Available with enterprise\")), __jsx(Subtitle, {\n    fontSize: \"1.125rem\",\n    pb: \"1rem\",\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, title), __jsx(BodyText, {\n    pb: \"2rem\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, caption), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Talk to an expert\"), __jsx(Button, {\n    size: \"sm\",\n    variant: \"outline\",\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Upgrade\"))), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst TabLink = props => {\n  const {\n    onClick,\n    isActive,\n    children\n  } = props;\n  const styles = isActive ? {\n    color: 'gray.900'\n  } : {\n    color: 'gray.400'\n  };\n  return __jsx(Link, _extends({}, styles, {\n    pb: \"1.25rem\",\n    onClick: onClick,\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    _hover: {\n      textDecoration: 'none'\n    },\n    textTransform: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }), children);\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/settings/Rules.tsx"],"names":["Box","Flex","Image","Link","Stack","BodyText","PreTitle","Subtitle","Button","React","useMemo","useState","InboxSettingsPage","InboxSettingsRules","activeSection","setActiveSection","onClick","section","sectionProps","image","title","caption","TabLink","props","isActive","children","styles","color","textDecoration"],"mappings":"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","sourcesContent":["import { Box, Flex, Image, Link, Stack } from '@chakra-ui/core';\nimport { BodyText, PreTitle, Subtitle, Button } from 'app/components';\nimport React, { ReactNode, useMemo, useState } from 'react';\nimport { InboxSettingsPage } from './component';\n\nexport const InboxSettingsRules = () => {\n  const [activeSection, setActiveSection] = useState(0);\n\n  const onClick = (section: number) => {\n    setActiveSection(section);\n  };\n\n  const sectionProps: { [key: number]: any } = {\n    0: {\n      image: '/images/inbox/company-rules.png',\n      title: 'Apply rules company-wide',\n      caption:\n        'Save time and hassle by creating centralized rules that apply to every message across your company inbox',\n    },\n    1: {\n      image: '/images/inbox/load-balancing.png',\n      title: 'Balance your team’s workload',\n      caption:\n        \"Set limits on teammate assignments so your team isn't overwhelmed and your customers receive faster replies.\",\n    },\n    2: {\n      image: '/images/inbox/load-balancing.png',\n      title: 'Balance your team’s workload',\n      caption:\n        \"Set limits on teammate assignments so your team isn't overwhelmed and your customers receive faster replies.\",\n    },\n  };\n\n  const { title, image, caption } = useMemo(() => sectionProps[activeSection], [\n    activeSection,\n    sectionProps,\n  ]);\n\n  return (\n    <InboxSettingsPage title=\"Rules\">\n      <Stack spacing=\"3.5rem\" isInline maxW=\"800px\">\n        <Stack>\n          <TabLink isActive={activeSection === 0} onClick={() => onClick(0)}>\n            Company rules\n          </TabLink>\n          <TabLink isActive={activeSection === 1} onClick={() => onClick(1)}>\n            Rules Library\n          </TabLink>\n          <TabLink isActive={activeSection === 2} onClick={() => onClick(2)}>\n            Load Balancing\n          </TabLink>\n        </Stack>\n        <Box flex={1} pt=\"2rem\" pl=\"1.5rem\" rounded=\"4px\" bg=\"rgba(240, 238, 253, 0.42)\">\n          <Stack isInline>\n            <Box>\n              <Flex\n                mb=\"1rem\"\n                width=\"180px\"\n                px=\"0.75rem\"\n                bg=\"#E3B51E\"\n                rounded=\"100px\"\n                height=\"1.25rem\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <PreTitle fontSize=\"0.625rem\" color=\"white\" fontWeight=\"normal\">\n                  Available with enterprise\n                </PreTitle>\n              </Flex>\n              <Subtitle fontSize=\"1.125rem\" pb=\"1rem\" color=\"gray.900\">\n                {title}\n              </Subtitle>\n              <BodyText pb=\"2rem\" color=\"gray.500\">\n                {caption}\n              </BodyText>\n              <Stack isInline alignItems=\"center\">\n                <Button size=\"sm\" variantColor=\"blue\">\n                  Talk to an expert\n                </Button>\n                <Button size=\"sm\" variant=\"outline\" variantColor=\"blue\">\n                  Upgrade\n                </Button>\n              </Stack>\n            </Box>\n            <Box>\n              <Image src={image} />\n            </Box>\n          </Stack>\n        </Box>\n      </Stack>\n    </InboxSettingsPage>\n  );\n};\n\ntype TabLinkProps = {\n  onClick?(): void;\n  isActive?: boolean;\n  children?: ReactNode;\n};\n\nconst TabLink = (props: TabLinkProps) => {\n  const { onClick, isActive, children } = props;\n  const styles = isActive ? { color: 'gray.900' } : { color: 'gray.400' };\n\n  return (\n    <Link\n      {...styles}\n      pb=\"1.25rem\"\n      onClick={onClick}\n      fontWeight=\"bold\"\n      fontSize=\"0.75rem\"\n      _hover={{\n        textDecoration: 'none',\n      }}\n      textTransform=\"uppercase\"\n    >\n      {children}\n    </Link>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}