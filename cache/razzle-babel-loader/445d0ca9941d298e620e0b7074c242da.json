{"ast":null,"code":"const _excluded = [\"editorState\", \"onChange\", \"placeholder\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/messages/compose/DraftEditor.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Box, Icon, Stack } from '@chakra-ui/core';\nimport Editor from '@draft-js-plugins/editor';\nimport '@draft-js-plugins/mention/lib/plugin.css';\nimport styled from '@emotion/styled';\nimport { XSmallText } from 'app/components';\nimport { getDefaultKeyBinding, RichUtils } from 'draft-js';\nimport React, { forwardRef } from 'react';\nexport const DraftEditorContainer = styled(Box)`\n  .RichEditor-editor {\n    height: 100%;\n    cursor: text;\n    font-size: 1rem;\n\n    .public-DraftEditor-content {\n      height: 100%;\n      overflow: auto;\n    }\n\n    .public-DraftEditor-content,\n    .public-DraftEditorPlaceholder-root {\n      margin: 0.5rem 0;\n    }\n\n    .public-DraftEditorPlaceholder-inner {\n      position: relative;\n      top: -7px;\n    }\n\n    .RichEditor-blockquote {\n      border-left: 5px solid #eee;\n      color: #666;\n      font-family: 'Hoefler Text', 'Georgia', serif;\n      font-style: italic;\n      margin: 1rem 0;\n      padding: 0.5rem 1.5rem;\n    }\n\n    .public-DraftStyleDefault-pre {\n      font-size: 1rem;\n      padding: 1.5rem;\n      background-color: rgba(0, 0, 0, 0.05);\n      font-family: 'Inconsolata', 'Menlo', 'Consolas', monospace;\n    }\n  }\n\n  .RichEditor-hidePlaceholder {\n    .public-DraftEditorPlaceholder-root {\n      display: none;\n    }\n  }\n\n  .RichEditor-styleButton {\n    color: #999;\n    padding: 4px;\n    cursor: pointer;\n    display: inline-block;\n    border-radius: 8px;\n  }\n\n  .RichEditor-activeButton {\n    background-color: ${props => {\n  var _props$activeButtonCo;\n\n  return (_props$activeButtonCo = props.activeButtonColor) !== null && _props$activeButtonCo !== void 0 ? _props$activeButtonCo : '#f0eefd';\n}};\n  }\n`;\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2\n  }\n};\nconst BLOCK_TYPES = [{\n  style: 'unordered-list-item',\n  icon: 'inbox-compose-ul'\n}, {\n  style: 'ordered-list-item',\n  icon: 'inbox-compose-ol'\n}];\nconst INLINE_STYLES = [{\n  style: 'BOLD',\n  icon: 'inbox-compose-bold'\n}, {\n  style: 'ITALIC',\n  icon: 'inbox-compose-italic'\n}, {\n  style: 'UNDERLINE',\n  icon: 'inbox-compose-underline'\n}, {\n  style: 'CODE',\n  icon: 'inbox-compose-code'\n}];\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote';\n\n    default:\n      return '';\n  }\n}\n\nexport const DraftEditor = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    editorState,\n    onChange,\n    placeholder\n  } = props,\n        rest = _objectWithoutProperties(props, _excluded);\n\n  let className = 'RichEditor-editor';\n  var contentState = editorState.getCurrentContent();\n\n  if (!contentState.hasText()) {\n    if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n      className += ' RichEditor-hidePlaceholder';\n    }\n  }\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      onChange(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  };\n\n  const mapKeyToEditorCommand = e => {\n    if (e.keyCode === 9\n    /* TAB */\n    ) {\n      const newEditorState = RichUtils.onTab(e, editorState, 4\n      /* maxDepth */\n      );\n\n      if (newEditorState !== editorState) {\n        onChange(newEditorState);\n      }\n\n      return 'editor-tab';\n    }\n\n    return getDefaultKeyBinding(e);\n  };\n\n  return __jsx(Box, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, __jsx(Editor, _extends({\n    ref: ref,\n    spellCheck: true,\n    stripPastedStyles: true,\n    onChange: onChange,\n    placeholder: placeholder,\n    customStyleMap: styleMap,\n    editorState: editorState,\n    blockStyleFn: getBlockStyle,\n    handleKeyCommand: handleKeyCommand,\n    keyBindingFn: mapKeyToEditorCommand\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  })));\n});\nexport const BlockStyleControls = props => {\n  const {\n    editorState,\n    onToggle,\n    types = BLOCK_TYPES\n  } = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  return __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    spacing: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, types.map(type => __jsx(Box, {\n    key: type.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, __jsx(StyleButton, {\n    icon: type.icon,\n    key: type.label,\n    label: type.label,\n    style: type.style,\n    onToggle: onToggle,\n    active: type.style === blockType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }))));\n};\nexport const InlineStyleControls = ({\n  editorState,\n  types = INLINE_STYLES,\n  onToggle\n}) => {\n  const currentStyle = editorState.getCurrentInlineStyle();\n  return __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    spacing: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, types.map(type => __jsx(Box, {\n    key: type.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, __jsx(StyleButton, {\n    icon: type.icon,\n    key: type.label,\n    label: type.label,\n    style: type.style,\n    onToggle: onToggle,\n    active: currentStyle.has(type.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst StyleButton = ({\n  style,\n  icon,\n  active,\n  label,\n  onToggle\n}) => {\n  const handleToggle = e => {\n    e.preventDefault();\n    onToggle(style);\n  };\n\n  let className = 'RichEditor-styleButton';\n\n  if (active) {\n    className += ' RichEditor-activeButton';\n  }\n\n  return __jsx(\"span\", {\n    className: className,\n    onMouseDown: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, icon && __jsx(Icon, {\n    name: icon,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 18\n    }\n  }), label && __jsx(XSmallText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, label)));\n};\n\nconst HANDLE_REGEX = /@[\\w]+/g;\nconst HASHTAG_REGEX = /#[\\w\\u0590-\\u05ff]+/g;\nexport function handleStrategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\nexport function hashtagStrategy(contentBlock, callback) {\n  findWithRegex(HASHTAG_REGEX, contentBlock, callback);\n}\nexport function findWithRegex(regex, contentBlock, callback) {\n  const text = contentBlock.getText();\n  let matchArr, start;\n\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\nexport const HandleSpan = props => {\n  return __jsx(\"span\", {\n    style: {\n      direction: 'ltr',\n      unicodeBidi: 'bidi-override',\n      color: 'rgba(98, 177, 254, 1.0)'\n    },\n    \"data-offset-key\": props.offsetKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport const HashtagSpan = props => {\n  return __jsx(\"span\", {\n    style: {\n      color: 'rgba(95, 184, 138, 1.0)'\n    },\n    \"data-offset-key\": props.offsetKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/messages/compose/DraftEditor.tsx"],"names":["Box","Icon","Stack","Editor","styled","XSmallText","getDefaultKeyBinding","RichUtils","React","forwardRef","DraftEditorContainer","props","activeButtonColor","styleMap","CODE","backgroundColor","fontFamily","fontSize","padding","BLOCK_TYPES","style","icon","INLINE_STYLES","getBlockStyle","block","getType","DraftEditor","ref","editorState","onChange","placeholder","rest","className","contentState","getCurrentContent","hasText","getBlockMap","first","handleKeyCommand","command","newState","mapKeyToEditorCommand","e","keyCode","newEditorState","onTab","BlockStyleControls","onToggle","types","selection","getSelection","blockType","getBlockForKey","getStartKey","map","type","label","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","StyleButton","active","handleToggle","preventDefault","HANDLE_REGEX","HASHTAG_REGEX","handleStrategy","contentBlock","callback","findWithRegex","hashtagStrategy","regex","text","getText","matchArr","start","exec","index","length","HandleSpan","direction","unicodeBidi","color","offsetKey","children","HashtagSpan"],"mappings":"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","sourcesContent":["import { Box, BoxProps, Icon, Stack } from '@chakra-ui/core';\nimport Editor, { PluginEditorProps } from '@draft-js-plugins/editor';\nimport '@draft-js-plugins/mention/lib/plugin.css';\nimport styled from '@emotion/styled';\nimport { XSmallText } from 'app/components';\nimport { ContentBlock, ContentState, EditorState, getDefaultKeyBinding, RichUtils } from 'draft-js';\nimport React, { forwardRef } from 'react';\n\ntype StyleButtonProps = {\n  icon?: string;\n  style: string;\n  label?: string;\n  active: boolean;\n  onToggle(e: any): void;\n};\n\ntype DraftEditorControlType = {\n  label?: string;\n  icon?: string;\n  style: string;\n};\n\ntype DraftEditorControlsProps = {\n  editorState: EditorState;\n  types?: DraftEditorControlType[];\n  onToggle: StyleButtonProps['onToggle'];\n};\n\ntype DraftEditorContainerProps = BoxProps & { activeButtonColor?: string };\n\nexport const DraftEditorContainer = styled(Box)<DraftEditorContainerProps>`\n  .RichEditor-editor {\n    height: 100%;\n    cursor: text;\n    font-size: 1rem;\n\n    .public-DraftEditor-content {\n      height: 100%;\n      overflow: auto;\n    }\n\n    .public-DraftEditor-content,\n    .public-DraftEditorPlaceholder-root {\n      margin: 0.5rem 0;\n    }\n\n    .public-DraftEditorPlaceholder-inner {\n      position: relative;\n      top: -7px;\n    }\n\n    .RichEditor-blockquote {\n      border-left: 5px solid #eee;\n      color: #666;\n      font-family: 'Hoefler Text', 'Georgia', serif;\n      font-style: italic;\n      margin: 1rem 0;\n      padding: 0.5rem 1.5rem;\n    }\n\n    .public-DraftStyleDefault-pre {\n      font-size: 1rem;\n      padding: 1.5rem;\n      background-color: rgba(0, 0, 0, 0.05);\n      font-family: 'Inconsolata', 'Menlo', 'Consolas', monospace;\n    }\n  }\n\n  .RichEditor-hidePlaceholder {\n    .public-DraftEditorPlaceholder-root {\n      display: none;\n    }\n  }\n\n  .RichEditor-styleButton {\n    color: #999;\n    padding: 4px;\n    cursor: pointer;\n    display: inline-block;\n    border-radius: 8px;\n  }\n\n  .RichEditor-activeButton {\n    background-color: ${props => props.activeButtonColor ?? '#f0eefd'};\n  }\n`;\n\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n};\n\nconst BLOCK_TYPES: DraftEditorControlType[] = [\n  { style: 'unordered-list-item', icon: 'inbox-compose-ul' },\n  { style: 'ordered-list-item', icon: 'inbox-compose-ol' },\n];\n\nconst INLINE_STYLES: DraftEditorControlType[] = [\n  { style: 'BOLD', icon: 'inbox-compose-bold' },\n  { style: 'ITALIC', icon: 'inbox-compose-italic' },\n  { style: 'UNDERLINE', icon: 'inbox-compose-underline' },\n  { style: 'CODE', icon: 'inbox-compose-code' },\n];\n\nfunction getBlockStyle(block: ContentBlock) {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote';\n    default:\n      return '';\n  }\n}\n\nexport const DraftEditor = forwardRef((props: PluginEditorProps, ref: any) => {\n  const { editorState, onChange, placeholder, ...rest } = props;\n  let className = 'RichEditor-editor';\n  var contentState = editorState.getCurrentContent();\n  if (!contentState.hasText()) {\n    if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n      className += ' RichEditor-hidePlaceholder';\n    }\n  }\n\n  const handleKeyCommand = (command: string, editorState: EditorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      onChange(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  };\n\n  const mapKeyToEditorCommand = (e: any): string | null => {\n    if (e.keyCode === 9 /* TAB */) {\n      const newEditorState = RichUtils.onTab(e, editorState, 4 /* maxDepth */);\n      if (newEditorState !== editorState) {\n        onChange(newEditorState);\n      }\n      return 'editor-tab';\n    }\n    return getDefaultKeyBinding(e);\n  };\n\n  return (\n    <Box className={className}>\n      <Editor\n        ref={ref}\n        spellCheck\n        stripPastedStyles\n        onChange={onChange}\n        placeholder={placeholder}\n        customStyleMap={styleMap}\n        editorState={editorState}\n        blockStyleFn={getBlockStyle}\n        handleKeyCommand={handleKeyCommand}\n        keyBindingFn={mapKeyToEditorCommand}\n        {...rest}\n      />\n    </Box>\n  );\n});\n\nexport const BlockStyleControls = (props: DraftEditorControlsProps) => {\n  const { editorState, onToggle, types = BLOCK_TYPES } = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <Stack isInline alignItems=\"center\" spacing=\"1rem\">\n      {types.map(type => (\n        <Box key={type.style}>\n          <StyleButton\n            icon={type.icon}\n            key={type.label}\n            label={type.label}\n            style={type.style}\n            onToggle={onToggle}\n            active={type.style === blockType}\n          />\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nexport const InlineStyleControls = ({\n  editorState,\n  types = INLINE_STYLES,\n  onToggle,\n}: DraftEditorControlsProps) => {\n  const currentStyle = editorState.getCurrentInlineStyle();\n\n  return (\n    <Stack isInline alignItems=\"center\" spacing=\"1rem\">\n      {types.map(type => (\n        <Box key={type.style}>\n          <StyleButton\n            icon={type.icon}\n            key={type.label}\n            label={type.label}\n            style={type.style}\n            onToggle={onToggle}\n            active={currentStyle.has(type.style)}\n          />\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nconst StyleButton = ({ style, icon, active, label, onToggle }: StyleButtonProps) => {\n  const handleToggle = (e: any) => {\n    e.preventDefault();\n    onToggle(style);\n  };\n\n  let className = 'RichEditor-styleButton';\n  if (active) {\n    className += ' RichEditor-activeButton';\n  }\n\n  return (\n    <span className={className} onMouseDown={handleToggle}>\n      <Stack isInline alignItems=\"center\">\n        {icon && <Icon name={icon} size=\"18px\" />}\n        {label && <XSmallText>{label}</XSmallText>}\n      </Stack>\n    </span>\n  );\n};\n\nconst HANDLE_REGEX = /@[\\w]+/g;\nconst HASHTAG_REGEX = /#[\\w\\u0590-\\u05ff]+/g;\n\nexport function handleStrategy(\n  contentBlock: ContentBlock,\n  callback: (start: number, len: number) => void,\n  contentState: ContentState,\n) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n\nexport function hashtagStrategy(\n  contentBlock: ContentBlock,\n  callback: (start: number, len: number) => void,\n) {\n  findWithRegex(HASHTAG_REGEX, contentBlock, callback);\n}\n\nexport function findWithRegex(\n  regex: RegExp,\n  contentBlock: ContentBlock,\n  callback: (start: number, len: number) => void,\n) {\n  const text = contentBlock.getText();\n  let matchArr, start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n\nexport const HandleSpan = (props: any) => {\n  return (\n    <span\n      style={{\n        direction: 'ltr',\n        unicodeBidi: 'bidi-override',\n        color: 'rgba(98, 177, 254, 1.0)',\n      }}\n      data-offset-key={props.offsetKey}\n    >\n      {props.children}\n    </span>\n  );\n};\n\nexport const HashtagSpan = (props: any) => {\n  return (\n    <span\n      style={{\n        color: 'rgba(95, 184, 138, 1.0)',\n      }}\n      data-offset-key={props.offsetKey}\n    >\n      {props.children}\n    </span>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}