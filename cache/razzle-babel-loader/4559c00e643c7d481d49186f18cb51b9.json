{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/conversation/ThreadItem.tsx\";\nvar __jsx = React.createElement;\nimport { Avatar, Box, Flex, Icon, PseudoBox, Stack, useToast } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport { BodyText, Button, SmallText, ToastBox, XSmallText } from 'app/components';\nimport { selectOrganisationID, selectProfile, selectUserID } from 'app/unauthenticated-app/authentication';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { unescape } from 'lodash';\nimport React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { channelOptions } from '../..';\nimport { assignConversationThread } from '../../inbox.service';\nexport const ThreadItem = props => {\n  var _sender$image_url, _sender$name, _last_message$content, _last_message$content2, _last_message$content3, _channelOptions$chann;\n\n  const {\n    thread,\n    onClick,\n    isActive,\n    onAssign\n  } = props;\n  const {\n    uuid,\n    state,\n    sender = {},\n    unread_count,\n    receiver = {},\n    updated_datetime,\n    last_message = {}\n  } = thread;\n  const channel = sender === null || sender === void 0 ? void 0 : sender.channel_name;\n  const style = isActive ? {\n    bg: 'gray.200',\n    rounded: '8px'\n  } : {\n    borderBottomWidth: '1px'\n  };\n  const toast = useToast();\n  const queryClient = useQueryClient();\n  const user_id = useSelector(selectUserID);\n  const profile = useSelector(selectProfile);\n  const organizationID = useSelector(selectOrganisationID);\n  const {\n    mutate: assignMutate,\n    isLoading: isAssigning\n  } = useMutation(payload => assignConversationThread(payload), {\n    onMutate: async data => {\n      const {\n        thread: newThread\n      } = data;\n      await queryClient.cancelQueries(['threads', newThread.uuid]);\n      const previousThread = queryClient.getQueryData(['threads', thread.uuid]);\n      queryClient.setQueryData(['threads', newThread.uuid], newThread);\n      return {\n        previousThread,\n        newThread\n      };\n    },\n    onError: (err, newThread, context) => {\n      queryClient.setQueryData(['threads', context.newThread.uuid], context.previousTodo);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: err.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }\n        })\n      });\n    },\n    onSettled: response => {\n      const {\n        data\n      } = response;\n      const {\n        thread\n      } = data;\n      onAssign === null || onAssign === void 0 ? void 0 : onAssign(thread);\n      queryClient.invalidateQueries(['threads', thread.uuid]);\n    }\n  });\n\n  const handleClick = () => {\n    onClick === null || onClick === void 0 ? void 0 : onClick(thread);\n  };\n\n  const handleAssign = () => {\n    const assignee_id = user_id;\n    assignMutate({\n      assignee_id,\n      thread_id: uuid,\n      thread: _objectSpread(_objectSpread({}, thread), {}, {\n        assignees: [{\n          user_id,\n          last_name: profile === null || profile === void 0 ? void 0 : profile.last_name,\n          organisation_id: organizationID,\n          first_name: profile === null || profile === void 0 ? void 0 : profile.first_name\n        }]\n      })\n    });\n  };\n\n  return __jsx(ThreadItemContainer, _extends({\n    py: \"0.5rem\",\n    px: \"0.75rem\",\n    cursor: \"pointer\",\n    bg: \"transparent\",\n    position: \"relative\",\n    onClick: handleClick,\n    _hover: {\n      rounded: '8px',\n      borderBottomWidth: '0',\n      bg: isActive ? 'gray.200' : 'rgba(240, 238, 253, 0.66)'\n    }\n  }, style, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), state === 'queued' && __jsx(Flex, {\n    top: \"0\",\n    left: \"0\",\n    \"z-index\": 2,\n    opacity: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    className: \"assign-to-me-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    width: \"132px\",\n    rounded: \"100px\",\n    fontWeight: \"normal\",\n    variantColor: \"blue\",\n    onClick: handleAssign,\n    isLoading: isAssigning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Assign to self\")), __jsx(Stack, {\n    width: \"100%\",\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, __jsx(Avatar, {\n    size: \"sm\",\n    bg: \"#5D34A5\",\n    color: \"white\",\n    name: sender.name,\n    src: (_sender$image_url = sender === null || sender === void 0 ? void 0 : sender.image_url) !== null && _sender$image_url !== void 0 ? _sender$image_url : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, __jsx(BodyText, {\n    flex: 1,\n    pb: \"0.25rem\",\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, (_sender$name = sender.name) !== null && _sender$name !== void 0 ? _sender$name : sender.platform_nick), state === 'queued' ? __jsx(Box, {\n    width: \"0.5rem\",\n    height: \"0.5rem\",\n    rounded: \"50%\",\n    bg: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }) : !!unread_count && __jsx(XSmallText, {\n    color: \"gray.700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, unread_count)), __jsx(SmallText, {\n    mb: \"0.5rem\",\n    width: \"250px\",\n    color: \"gray.700\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    style: {\n      textOverflow: 'ellipsis'\n    },\n    dangerouslySetInnerHTML: {\n      __html: last_message !== null && last_message !== void 0 && (_last_message$content = last_message.content) !== null && _last_message$content !== void 0 && _last_message$content.subject ? unescape(last_message === null || last_message === void 0 ? void 0 : (_last_message$content2 = last_message.content) === null || _last_message$content2 === void 0 ? void 0 : _last_message$content2.subject) : unescape(last_message === null || last_message === void 0 ? void 0 : (_last_message$content3 = last_message.content) === null || _last_message$content3 === void 0 ? void 0 : _last_message$content3.body)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), __jsx(Flex, {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(XSmallText, {\n    color: \"gray.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, formatDistanceToNowStrict(new Date(updated_datetime), {\n    addSuffix: true\n  })), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, __jsx(XSmallText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, receiver.platform_name), __jsx(Icon, {\n    name: (_channelOptions$chann = channelOptions[channel]) === null || _channelOptions$chann === void 0 ? void 0 : _channelOptions$chann.icon,\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }))))));\n};\nconst ThreadItemContainer = styled(PseudoBox)`\n  &:hover {\n    .assign-to-me-btn {\n      opacity: 1;\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/conversation/ThreadItem.tsx"],"names":["Avatar","Box","Flex","Icon","PseudoBox","Stack","useToast","styled","BodyText","Button","SmallText","ToastBox","XSmallText","selectOrganisationID","selectProfile","selectUserID","formatDistanceToNowStrict","unescape","React","useMutation","useQueryClient","useSelector","channelOptions","assignConversationThread","ThreadItem","props","thread","onClick","isActive","onAssign","uuid","state","sender","unread_count","receiver","updated_datetime","last_message","channel","channel_name","style","bg","rounded","borderBottomWidth","toast","queryClient","user_id","profile","organizationID","mutate","assignMutate","isLoading","isAssigning","payload","onMutate","data","newThread","cancelQueries","previousThread","getQueryData","setQueryData","onError","err","context","previousTodo","position","render","onClose","message","onSettled","response","invalidateQueries","handleClick","handleAssign","assignee_id","thread_id","assignees","last_name","organisation_id","first_name","name","image_url","undefined","platform_nick","textOverflow","__html","content","subject","body","Date","addSuffix","platform_name","icon","ThreadItemContainer"],"mappings":"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","sourcesContent":["import { Avatar, Box, Flex, Icon, PseudoBox, Stack, useToast } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport { BodyText, Button, SmallText, ToastBox, XSmallText } from 'app/components';\nimport {\n  selectOrganisationID,\n  selectProfile,\n  selectUserID,\n} from 'app/unauthenticated-app/authentication';\nimport { AxiosError } from 'axios';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { unescape } from 'lodash';\nimport React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { channelOptions } from '../..';\nimport { assignConversationThread } from '../../inbox.service';\nimport { Channel, ThreadSchema } from '../../inbox.types';\n\nexport type ThreadItemProps = {\n  thread: any;\n  isActive?: boolean;\n  onAssign?(thread?: any): void;\n  onClick?(thread: ThreadSchema): void;\n};\n\nexport const ThreadItem = (props: ThreadItemProps) => {\n  const { thread, onClick, isActive, onAssign } = props;\n  const {\n    uuid,\n    state,\n    sender = {},\n    unread_count,\n    receiver = {},\n    updated_datetime,\n    last_message = {},\n  } = thread;\n  const channel: Channel = sender?.channel_name;\n  const style = isActive ? { bg: 'gray.200', rounded: '8px' } : { borderBottomWidth: '1px' };\n\n  const toast = useToast();\n  const queryClient = useQueryClient();\n  const user_id = useSelector(selectUserID);\n  const profile = useSelector(selectProfile);\n  const organizationID = useSelector(selectOrganisationID);\n\n  const { mutate: assignMutate, isLoading: isAssigning } = useMutation<any, AxiosError, any, any>(\n    (payload: { thread: ThreadSchema; assignee_id: string }) => assignConversationThread(payload),\n    {\n      onMutate: async data => {\n        const { thread: newThread } = data;\n        await queryClient.cancelQueries(['threads', newThread.uuid]);\n        const previousThread = queryClient.getQueryData(['threads', thread.uuid]);\n        queryClient.setQueryData(['threads', newThread.uuid], newThread);\n        return { previousThread, newThread };\n      },\n      onError: (err, newThread, context) => {\n        queryClient.setQueryData(['threads', context.newThread.uuid], context.previousTodo);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={err.message} />,\n        });\n      },\n      onSettled: response => {\n        const { data } = response;\n        const { thread } = data;\n        onAssign?.(thread);\n\n        queryClient.invalidateQueries(['threads', thread.uuid]);\n      },\n    },\n  );\n\n  const handleClick = () => {\n    onClick?.(thread);\n  };\n\n  const handleAssign = () => {\n    const assignee_id = user_id;\n    assignMutate({\n      assignee_id,\n      thread_id: uuid,\n      thread: {\n        ...thread,\n        assignees: [\n          {\n            user_id,\n            last_name: profile?.last_name,\n            organisation_id: organizationID,\n            first_name: profile?.first_name,\n          },\n        ],\n      },\n    });\n  };\n\n  return (\n    <ThreadItemContainer\n      py=\"0.5rem\"\n      px=\"0.75rem\"\n      cursor=\"pointer\"\n      bg=\"transparent\"\n      position=\"relative\"\n      onClick={handleClick}\n      _hover={{\n        rounded: '8px',\n        borderBottomWidth: '0',\n        bg: isActive ? 'gray.200' : 'rgba(240, 238, 253, 0.66)',\n      }}\n      {...style}\n    >\n      {state === 'queued' && (\n        <Flex\n          top=\"0\"\n          left=\"0\"\n          z-index={2}\n          opacity={0}\n          width=\"100%\"\n          height=\"100%\"\n          position=\"absolute\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          className=\"assign-to-me-btn\"\n        >\n          <Button\n            size=\"xs\"\n            width=\"132px\"\n            rounded=\"100px\"\n            fontWeight=\"normal\"\n            variantColor=\"blue\"\n            onClick={handleAssign}\n            isLoading={isAssigning}\n          >\n            Assign to self\n          </Button>\n        </Flex>\n      )}\n      <Stack width=\"100%\" isInline>\n        <Avatar\n          size=\"sm\"\n          bg=\"#5D34A5\"\n          color=\"white\"\n          name={sender.name}\n          src={sender?.image_url ?? undefined}\n        />\n        <Box flex={1}>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <BodyText flex={1} pb=\"0.25rem\" color=\"gray.900\">\n              {sender.name ?? sender.platform_nick}\n            </BodyText>\n            {state === 'queued' ? (\n              <Box width=\"0.5rem\" height=\"0.5rem\" rounded=\"50%\" bg=\"blue.500\" />\n            ) : (\n              !!unread_count && <XSmallText color=\"gray.700\">{unread_count}</XSmallText>\n            )}\n          </Flex>\n          <SmallText\n            mb=\"0.5rem\"\n            width=\"250px\"\n            color=\"gray.700\"\n            overflow=\"hidden\"\n            whiteSpace=\"nowrap\"\n            style={{ textOverflow: 'ellipsis' }}\n            dangerouslySetInnerHTML={{\n              __html: last_message?.content?.subject\n                ? unescape(last_message?.content?.subject)\n                : unescape(last_message?.content?.body),\n            }}\n          />\n          <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"space-between\">\n            <XSmallText color=\"gray.400\">\n              {formatDistanceToNowStrict(new Date(updated_datetime), {\n                addSuffix: true,\n              })}\n            </XSmallText>\n            <Stack isInline alignItems=\"center\">\n              <XSmallText>{receiver.platform_name}</XSmallText>\n              <Icon name={channelOptions[channel]?.icon} color=\"gray.500\" />\n            </Stack>\n          </Flex>\n        </Box>\n      </Stack>\n    </ThreadItemContainer>\n  );\n};\n\nconst ThreadItemContainer = styled(PseudoBox)`\n  &:hover {\n    .assign-to-me-btn {\n      opacity: 1;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}