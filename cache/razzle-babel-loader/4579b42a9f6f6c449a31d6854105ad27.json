{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/TabNavigator/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Stack } from '@chakra-ui/core';\nexport const TabNavigator = props => {\n  const {\n    options,\n    onChange,\n    selectedTab\n  } = props;\n  return __jsx(Stack, {\n    spacing: \"0\",\n    isInline: true,\n    rounded: \"4px\",\n    borderWidth: \"1px\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, options.map((item, index) => {\n    const isFirst = index === 0;\n    const isLast = index === options.length - 1;\n    let borderRadiusStyles = {};\n\n    if (isFirst) {\n      borderRadiusStyles = {\n        roundedTopLeft: '4px',\n        roundedBottomLeft: '4px'\n      };\n    }\n\n    if (isLast) {\n      borderRadiusStyles = {\n        roundedTopRight: '4px',\n        roundedBottomRight: '4px'\n      };\n    }\n\n    return __jsx(Box, _extends({\n      key: index,\n      py: \"0.4rem\",\n      width: \"94px\",\n      fontWeight: \"500\",\n      cursor: \"pointer\",\n      textAlign: \"center\",\n      fontSize: \"0.875rem\",\n      borderRightWidth: isLast ? '0' : '1px',\n      onClick: () => onChange(item.value),\n      color: selectedTab === item.value ? 'white' : 'black',\n      backgroundColor: selectedTab === item.value ? 'blue.500' : 'transparent'\n    }, borderRadiusStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }), item.label);\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/TabNavigator/index.tsx"],"names":["React","Box","Stack","TabNavigator","props","options","onChange","selectedTab","map","item","index","isFirst","isLast","length","borderRadiusStyles","roundedTopLeft","roundedBottomLeft","roundedTopRight","roundedBottomRight","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,iBAA3B;AAQA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAkB;AAC5C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAqCH,KAA3C;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,GAAf;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,OAAO,EAAC,KAApC;AAA0C,IAAA,WAAW,EAAC,KAAtD;AAA4D,IAAA,UAAU,EAAC,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACG,GAAR,CAAY,CAACC,IAAD,EAAYC,KAAZ,KAA8B;AACzC,UAAMC,OAAO,GAAGD,KAAK,KAAK,CAA1B;AACA,UAAME,MAAM,GAAGF,KAAK,KAAKL,OAAO,CAACQ,MAAR,GAAiB,CAA1C;AAEA,QAAIC,kBAAkB,GAAG,EAAzB;;AAEA,QAAIH,OAAJ,EAAa;AACXG,MAAAA,kBAAkB,GAAG;AACnBC,QAAAA,cAAc,EAAE,KADG;AAEnBC,QAAAA,iBAAiB,EAAE;AAFA,OAArB;AAID;;AACD,QAAIJ,MAAJ,EAAY;AACVE,MAAAA,kBAAkB,GAAG;AACnBG,QAAAA,eAAe,EAAE,KADE;AAEnBC,QAAAA,kBAAkB,EAAE;AAFD,OAArB;AAID;;AAED,WACE,MAAC,GAAD;AACE,MAAA,GAAG,EAAER,KADP;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,UAAU,EAAC,KAJb;AAKE,MAAA,MAAM,EAAC,SALT;AAME,MAAA,SAAS,EAAC,QANZ;AAOE,MAAA,QAAQ,EAAC,UAPX;AAQE,MAAA,gBAAgB,EAAEE,MAAM,GAAG,GAAH,GAAS,KARnC;AASE,MAAA,OAAO,EAAE,MAAMN,QAAQ,CAACG,IAAI,CAACU,KAAN,CATzB;AAUE,MAAA,KAAK,EAAEZ,WAAW,KAAKE,IAAI,CAACU,KAArB,GAA6B,OAA7B,GAAuC,OAVhD;AAWE,MAAA,eAAe,EAAEZ,WAAW,KAAKE,IAAI,CAACU,KAArB,GAA6B,UAA7B,GAA0C;AAX7D,OAYML,kBAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcGL,IAAI,CAACW,KAdR,CADF;AAkBD,GArCA,CADH,CADF;AA0CD,CA7CM","sourcesContent":["import React from 'react';\nimport { Box, Stack } from '@chakra-ui/core';\n\ninterface Props {\n  options: { value: string; label: string }[];\n  onChange: (value: string) => void;\n  selectedTab: string;\n}\n\nexport const TabNavigator = (props: Props) => {\n  const { options, onChange, selectedTab } = props;\n\n  return (\n    <Stack spacing=\"0\" isInline rounded=\"4px\" borderWidth=\"1px\" alignItems=\"center\">\n      {options.map((item: any, index: number) => {\n        const isFirst = index === 0;\n        const isLast = index === options.length - 1;\n\n        let borderRadiusStyles = {};\n\n        if (isFirst) {\n          borderRadiusStyles = {\n            roundedTopLeft: '4px',\n            roundedBottomLeft: '4px',\n          };\n        }\n        if (isLast) {\n          borderRadiusStyles = {\n            roundedTopRight: '4px',\n            roundedBottomRight: '4px',\n          };\n        }\n\n        return (\n          <Box\n            key={index}\n            py=\"0.4rem\"\n            width=\"94px\"\n            fontWeight=\"500\"\n            cursor=\"pointer\"\n            textAlign=\"center\"\n            fontSize=\"0.875rem\"\n            borderRightWidth={isLast ? '0' : '1px'}\n            onClick={() => onChange(item.value)}\n            color={selectedTab === item.value ? 'white' : 'black'}\n            backgroundColor={selectedTab === item.value ? 'blue.500' : 'transparent'}\n            {...borderRadiusStyles}\n          >\n            {item.label}\n          </Box>\n        );\n      })}\n    </Stack>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}