{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/pages/ResetPassword/ResetPassword.container.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useToast } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { sendAmplitudeData } from '../../../../../utils/amplitude';\nimport { ToastBox } from '../../../../components';\nimport { resetPassword } from '../../service';\nimport { ResetPassword } from './ResetPassword.component';\nexport function ResetPasswordContainer(props) {\n  const toast = useToast();\n  const {\n    match,\n    history\n  } = props;\n  const token = match.params.id;\n  const [loading, setLoading] = React.useState(false);\n\n  async function handleResetPassword(values) {\n    const {\n      newPassword\n    } = values;\n\n    try {\n      setLoading(true);\n      await resetPassword({\n        password: newPassword,\n        token\n      });\n      setLoading(false);\n      sendAmplitudeData('resetPasswordComplete');\n      history.push('/login');\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          status: \"success\",\n          message: \"Password reset successful\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        })\n      });\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  }\n\n  return __jsx(ResetPassword, _extends({}, props, {\n    isLoading: loading,\n    onSubmit: handleResetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/pages/ResetPassword/ResetPassword.container.tsx"],"names":["useToast","React","sendAmplitudeData","ToastBox","resetPassword","ResetPassword","ResetPasswordContainer","props","toast","match","history","token","params","id","loading","setLoading","useState","handleResetPassword","values","newPassword","password","push","position","render","onClose","error"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAA4E;AACjF,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBH,KAA3B;AACA,QAAMI,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA3B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA9B;;AAEA,iBAAeC,mBAAf,CAAmCC,MAAnC,EAAgF;AAC9E,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,MAAxB;;AACA,QAAI;AACFH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMX,aAAa,CAAC;AAAEgB,QAAAA,QAAQ,EAAED,WAAZ;AAAyBR,QAAAA;AAAzB,OAAD,CAAnB;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAb,MAAAA,iBAAiB,CAAC,uBAAD,CAAjB;AACAQ,MAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACAb,MAAAA,KAAK,CAAC;AACJc,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA;AAAF,SAAD,KACN,MAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,OAAnB;AAA4B,UAAA,MAAM,EAAC,SAAnC;AAA6C,UAAA,OAAO,EAAC,2BAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHE,OAAD,CAAL;AAMD,KAZD,CAYE,OAAOC,KAAP,EAAc;AACdV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,MAAAA,KAAK,CAAC;AACJc,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAiB,MAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,OAAnB;AAA4B,UAAA,OAAO,EAAEC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFrB,OAAD,CAAL;AAID;AACF;;AACD,SAAO,MAAC,aAAD,eAAmBlB,KAAnB;AAA0B,IAAA,SAAS,EAAEO,OAArC;AAA8C,IAAA,QAAQ,EAAEG,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import { useToast } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { sendAmplitudeData } from '../../../../../utils/amplitude';\nimport { ToastBox } from '../../../../components';\nimport { ResetPasswordFormInitialValuesProps } from '../../components';\nimport { resetPassword } from '../../service';\nimport { ResetPassword } from './ResetPassword.component';\n\nexport function ResetPasswordContainer(props: RouteComponentProps<{ id: string }>) {\n  const toast = useToast();\n  const { match, history } = props;\n  const token = match.params.id;\n  const [loading, setLoading] = React.useState(false);\n\n  async function handleResetPassword(values: ResetPasswordFormInitialValuesProps) {\n    const { newPassword } = values;\n    try {\n      setLoading(true);\n      await resetPassword({ password: newPassword, token });\n      setLoading(false);\n      sendAmplitudeData('resetPasswordComplete');\n      history.push('/login');\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox onClose={onClose} status=\"success\" message=\"Password reset successful\" />\n        ),\n      });\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  }\n  return <ResetPassword {...props} isLoading={loading} onSubmit={handleResetPassword} />;\n}\n"]},"metadata":{},"sourceType":"module"}