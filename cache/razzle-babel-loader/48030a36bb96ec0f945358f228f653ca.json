{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/filter/filter-item/conjunction-select.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// @ts-nocheck\nimport React from 'react';\nimport { Box, Icon, Popover, PopoverContent, PopoverTrigger } from '@chakra-ui/core';\nimport { available_conjunctions } from '../../../list.data';\nimport { PopoverWrapper } from '../../../list-view.styles';\nexport const ConjunctionSelect = props => {\n  const {\n    selected_conjunction,\n    allow_select\n  } = props;\n  const popover_props = {};\n\n  if (!allow_select) {\n    popover_props['isOpen'] = false;\n  }\n\n  return __jsx(Popover, _extends({}, popover_props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), ({\n    onClose\n  }) => __jsx(React.Fragment, null, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"conjunction-select\",\n    cursor: !allow_select && 'not-allowed !important',\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"selected-label-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, available_conjunctions[selected_conjunction].label), __jsx(Icon, {\n    name: \"chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }))), __jsx(PopoverContent, {\n    zIndex: 4,\n    width: \"max-content\",\n    boxShadow: \"none\",\n    _focus: {\n      boxShadow: 'none',\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(PopoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, Object.values(available_conjunctions).map(conjunction => __jsx(Box, {\n    key: conjunction.key,\n    className: `list-item ${conjunction.key === selected_conjunction ? 'active' : ''}`,\n    style: {\n      fontSize: 14\n    },\n    onClick: () => {\n      props.onChange(conjunction.key);\n      onClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, conjunction.label))))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/filter/filter-item/conjunction-select.tsx"],"names":["React","Box","Icon","Popover","PopoverContent","PopoverTrigger","available_conjunctions","PopoverWrapper","ConjunctionSelect","props","selected_conjunction","allow_select","popover_props","onClose","label","boxShadow","outline","Object","values","map","conjunction","key","fontSize","onChange"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,cAA7B,EAA6CC,cAA7C,QAAmE,iBAAnE;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAgB;AAC/C,QAAM;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MAAyCF,KAA/C;AACA,QAAMG,aAAa,GAAG,EAAtB;;AAEA,MAAI,CAACD,YAAL,EAAmB;AACjBC,IAAAA,aAAa,CAAC,QAAD,CAAb,GAA0B,KAA1B;AACD;;AAED,SACE,MAAC,OAAD,eAAaA,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,MAAM,EAAE,CAACF,YAAD,IAAiB,wBAF3B;AAGE,IAAA,UAAU,EAAC,QAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,sBAAsB,CAACI,oBAAD,CAAtB,CAA6CI,KADhD,CALF,EASE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,EAcE,MAAC,cAAD;AACE,IAAA,MAAM,EAAE,CADV;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE,MADL;AAENC,MAAAA,OAAO,EAAE;AAFH,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,MAAP,CAAcZ,sBAAd,EAAsCa,GAAtC,CAA2CC,WAAD,IACzC,MAAC,GAAD;AACE,IAAA,GAAG,EAAEA,WAAW,CAACC,GADnB;AAEE,IAAA,SAAS,EAAG,aACVD,WAAW,CAACC,GAAZ,KAAoBX,oBAApB,GAA2C,QAA3C,GAAsD,EACvD,EAJH;AAKE,IAAA,KAAK,EAAE;AACLY,MAAAA,QAAQ,EAAE;AADL,KALT;AAQE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,KAAK,CAACc,QAAN,CAAeH,WAAW,CAACC,GAA3B;AACAR,MAAAA,OAAO;AACR,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGO,WAAW,CAACN,KAbf,CADD,CADH,CATF,CAdF,CAFJ,CADF;AAkDD,CA1DM","sourcesContent":["// @ts-nocheck\nimport React from 'react';\nimport { Box, Icon, Popover, PopoverContent, PopoverTrigger } from '@chakra-ui/core';\nimport { available_conjunctions } from '../../../list.data';\nimport { PopoverWrapper } from '../../../list-view.styles';\n\nexport const ConjunctionSelect = (props: any) => {\n  const { selected_conjunction, allow_select } = props;\n  const popover_props = {};\n\n  if (!allow_select) {\n    popover_props['isOpen'] = false;\n  }\n\n  return (\n    <Popover {...popover_props}>\n      {({ onClose }) => (\n        <>\n          <PopoverTrigger>\n            <Box\n              className=\"conjunction-select\"\n              cursor={!allow_select && 'not-allowed !important'}\n              alignItems=\"center\"\n            >\n              <Box className=\"selected-label-text\">\n                {available_conjunctions[selected_conjunction].label}\n              </Box>\n\n              <Icon name=\"chevron-down\" />\n            </Box>\n          </PopoverTrigger>\n          <PopoverContent\n            zIndex={4}\n            width=\"max-content\"\n            boxShadow=\"none\"\n            _focus={{\n              boxShadow: 'none',\n              outline: 'none',\n            }}\n          >\n            <PopoverWrapper>\n              {Object.values(available_conjunctions).map((conjunction: any) => (\n                <Box\n                  key={conjunction.key}\n                  className={`list-item ${\n                    conjunction.key === selected_conjunction ? 'active' : ''\n                  }`}\n                  style={{\n                    fontSize: 14,\n                  }}\n                  onClick={() => {\n                    props.onChange(conjunction.key);\n                    onClose();\n                  }}\n                >\n                  {conjunction.label}\n                </Box>\n              ))}\n            </PopoverWrapper>\n          </PopoverContent>\n        </>\n      )}\n    </Popover>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}