{"ast":null,"code":"const _excluded = [\"left\", \"right\", \"isRight\", \"setIsRight\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/integrations/components/SwitchWithText.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex, Text, Switch } from '@chakra-ui/core';\nexport function SwitchWithText(_ref) {\n  let {\n    left,\n    right,\n    isRight,\n    setIsRight\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(Flex, _extends({\n    alignItems: \"center\",\n    marginBottom: \".625rem\",\n    marginTop: \"3.375rem\",\n    justifyContent: \"flex-end\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }), __jsx(Text, {\n    color: !isRight ? '#3d50df' : 'rgba(0, 0, 0, 0.3)',\n    fontWeight: !isRight ? 600 : 'normal',\n    marginRight: \".625rem\",\n    cursor: \"pointer\",\n    onClick: () => setIsRight(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, left), __jsx(Switch, {\n    size: \"sm\",\n    isChecked: isRight,\n    value: isRight,\n    color: \"blue\",\n    onChange: event => setIsRight(event.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(Text, {\n    color: isRight ? '#3d50df' : 'rgba(0, 0, 0, 0.3)',\n    fontWeight: isRight ? 600 : 'normal',\n    marginLeft: \".625rem\",\n    cursor: \"pointer\",\n    onClick: () => setIsRight(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, right));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/integrations/components/SwitchWithText.tsx"],"names":["React","Flex","Text","Switch","SwitchWithText","left","right","isRight","setIsRight","rest","event","target","checked"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAA8C,iBAA9C;AAEA,OAAO,SAASC,cAAT,OAKJ;AAAA,MAL4B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,GAK5B;AAAA,MALmEC,IAKnE;;AACD,SACE,MAAC,IAAD;AACE,IAAA,UAAU,EAAC,QADb;AAEE,IAAA,YAAY,EAAC,SAFf;AAGE,IAAA,SAAS,EAAC,UAHZ;AAIE,IAAA,cAAc,EAAC;AAJjB,KAKMA,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOE,MAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACF,OAAD,GAAW,SAAX,GAAuB,oBADhC;AAEE,IAAA,UAAU,EAAE,CAACA,OAAD,GAAW,GAAX,GAAiB,QAF/B;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,MAAM,EAAC,SAJT;AAKE,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGH,IAPH,CAPF,EAiBE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,SAAS,EAAEE,OAFb;AAGE,IAAA,KAAK,EAAEA,OAHT;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,QAAQ,EAAGG,KAAD,IAAgDF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,OAAd,CALtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAyBE,MAAC,IAAD;AACE,IAAA,KAAK,EAAEL,OAAO,GAAG,SAAH,GAAe,oBAD/B;AAEE,IAAA,UAAU,EAAEA,OAAO,GAAG,GAAH,GAAS,QAF9B;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,MAAM,EAAC,SAJT;AAKE,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,IAAD,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGF,KAPH,CAzBF,CADF;AAqCD","sourcesContent":["import React from 'react';\nimport { Flex, Text, Switch, FlexProps } from '@chakra-ui/core';\n\nexport function SwitchWithText({ left, right, isRight, setIsRight, ...rest }: FlexProps & {\n  left: string;\n  right: string;\n  isRight: boolean;\n  setIsRight: (v: boolean) => void;\n}) {\n  return (\n    <Flex\n      alignItems=\"center\"\n      marginBottom=\".625rem\"\n      marginTop=\"3.375rem\"\n      justifyContent=\"flex-end\"\n      {...rest}\n    >\n      <Text\n        color={!isRight ? '#3d50df' : 'rgba(0, 0, 0, 0.3)'}\n        fontWeight={!isRight ? 600 : 'normal'}\n        marginRight=\".625rem\"\n        cursor=\"pointer\"\n        onClick={() => setIsRight(false)}\n      >\n        {left}\n      </Text>\n\n      <Switch\n        size=\"sm\"\n        isChecked={isRight}\n        value={isRight}\n        color=\"blue\"\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => setIsRight(event.target.checked)}\n      />\n\n      <Text\n        color={isRight ? '#3d50df' : 'rgba(0, 0, 0, 0.3)'}\n        fontWeight={isRight ? 600 : 'normal'}\n        marginLeft=\".625rem\"\n        cursor=\"pointer\"\n        onClick={() => setIsRight(true)}\n      >\n        {right}\n      </Text>\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}