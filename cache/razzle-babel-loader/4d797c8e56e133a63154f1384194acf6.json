{"ast":null,"code":"const _excluded = [\"value\", \"onChange\", \"placeholder\", \"inputBackground\", \"inputFontSize\", \"inputRef\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Search/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Icon } from '@chakra-ui/core';\nimport { Input } from 'app/components';\nimport * as React from 'react';\nimport { useSearch } from '../../../hooks';\nexport function Search(_ref) {\n  let {\n    value,\n    onChange,\n    placeholder,\n    inputBackground,\n    inputFontSize,\n    inputRef\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const {\n    input,\n    handleChange\n  } = useSearch({\n    initialValue: value,\n    onChange\n  });\n  return __jsx(Input, {\n    size: \"sm\",\n    type: \"search\",\n    ref: inputRef,\n    value: input,\n    border: \"none\",\n    borderRadius: \"0.25rem\",\n    onChange: handleChange,\n    placeholder: placeholder,\n    fontSize: inputFontSize || '.875rem',\n    _hover: {\n      backgroundColor: '#E2E8F0'\n    },\n    background: inputBackground || '#EDF2F7',\n    leftIcon: __jsx(Icon, {\n      name: \"search\",\n      color: \"#c0c3cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }),\n    _focus: {\n      backgroundColor: 'transparent',\n      border: '1px solid #EEEEEE'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Search/index.tsx"],"names":["Icon","Input","React","useSearch","Search","value","onChange","placeholder","inputBackground","inputFontSize","inputRef","rest","input","handleChange","initialValue","backgroundColor","border"],"mappings":";;;;;;;;AAAA,SAASA,IAAT,QAAsC,iBAAtC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAYA,OAAO,SAASC,MAAT,OAQS;AAAA,MARO;AACrBC,IAAAA,KADqB;AAErBC,IAAAA,QAFqB;AAGrBC,IAAAA,WAHqB;AAIrBC,IAAAA,eAJqB;AAKrBC,IAAAA,aALqB;AAMrBC,IAAAA;AANqB,GAQP;AAAA,MADXC,IACW;;AACd,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA0BV,SAAS,CAAC;AAAEW,IAAAA,YAAY,EAAET,KAAhB;AAAuBC,IAAAA;AAAvB,GAAD,CAAzC;AACA,SACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,GAAG,EAAEI,QAHP;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,MAAM,EAAC,MALT;AAME,IAAA,YAAY,EAAC,SANf;AAOE,IAAA,QAAQ,EAAEC,YAPZ;AAQE,IAAA,WAAW,EAAEN,WARf;AASE,IAAA,QAAQ,EAAEE,aAAa,IAAI,SAT7B;AAUE,IAAA,MAAM,EAAE;AAAEM,MAAAA,eAAe,EAAE;AAAnB,KAVV;AAWE,IAAA,UAAU,EAAEP,eAAe,IAAI,SAXjC;AAYE,IAAA,QAAQ,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZZ;AAaE,IAAA,MAAM,EAAE;AAAEO,MAAAA,eAAe,EAAE,aAAnB;AAAkCC,MAAAA,MAAM,EAAE;AAA1C,KAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAiBD","sourcesContent":["import { Icon, InputGroupProps } from '@chakra-ui/core';\nimport { Input } from 'app/components';\nimport * as React from 'react';\nimport { useSearch } from '../../../hooks';\n\ntype SearchProps = {\n  value?: string;\n  placeholder?: string;\n  onChange?: (value: string) => void;\n  minWidth?: string;\n  inputBackground?: string;\n  inputFontSize?: string;\n  inputRef?: React.RefObject<HTMLInputElement>;\n} & Omit<InputGroupProps, 'onChange' | 'children'>;\n\nexport function Search({\n  value,\n  onChange,\n  placeholder,\n  inputBackground,\n  inputFontSize,\n  inputRef,\n  ...rest\n}: SearchProps) {\n  const { input, handleChange } = useSearch({ initialValue: value, onChange });\n  return (\n    <Input\n      size=\"sm\"\n      type=\"search\"\n      ref={inputRef}\n      value={input}\n      border=\"none\"\n      borderRadius=\"0.25rem\"\n      onChange={handleChange}\n      placeholder={placeholder}\n      fontSize={inputFontSize || '.875rem'}\n      _hover={{ backgroundColor: '#E2E8F0' }}\n      background={inputBackground || '#EDF2F7'}\n      leftIcon={<Icon name=\"search\" color=\"#c0c3cc\" />}\n      _focus={{ backgroundColor: 'transparent', border: '1px solid #EEEEEE' }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}