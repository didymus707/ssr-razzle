{"ast":null,"code":"import { buildPaymentURL, client } from '../../../../utils';\nimport { setPaymentSetupData, setPaymentSetupLoading, setPaymentSetupUpdateLoading } from '../reducers';\nimport { sendAmplitudeData } from '../../../../utils/amplitude';\nexport const fetchPaymentSetup = organization_id => async dispatch => {\n  dispatch(setPaymentSetupLoading({\n    loading: true\n  }));\n\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/payment_setup/${organization_id}`),\n      method: 'GET'\n    });\n    dispatch(setPaymentSetupData(response.data));\n    dispatch(setPaymentSetupLoading({\n      loading: false\n    }));\n  } catch (e) {\n    dispatch(setPaymentSetupLoading({\n      loading: false\n    }));\n    return null;\n  }\n};\nexport const updatePaymentSetup = values => async dispatch => {\n  if ((values === null || values === void 0 ? void 0 : values.status) === 'submitted') sendAmplitudeData('submitPaymentSetup');else sendAmplitudeData('updatePaymentSetup');\n  dispatch(setPaymentSetupUpdateLoading({\n    loading: true\n  }));\n  const payload = new FormData();\n  Object.keys(values).forEach(key => {\n    payload.append(key, values[key]);\n  });\n\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/payment_setup/`),\n      method: 'PATCH',\n      data: payload\n    });\n    dispatch(setPaymentSetupData(response.data));\n    dispatch(setPaymentSetupUpdateLoading({\n      loading: false\n    }));\n    return response.data;\n  } catch (e) {\n    dispatch(setPaymentSetupUpdateLoading({\n      loading: false\n    }));\n    return null;\n  }\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/payments/thunks/payment_setup.ts"],"names":["buildPaymentURL","client","setPaymentSetupData","setPaymentSetupLoading","setPaymentSetupUpdateLoading","sendAmplitudeData","fetchPaymentSetup","organization_id","dispatch","loading","response","url","method","data","e","updatePaymentSetup","values","status","payload","FormData","Object","keys","forEach","key","append"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SACEC,mBADF,EAEEC,sBAFF,EAGEC,4BAHF,QAIO,aAJP;AAMA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,eAAD,IAAuC,MAAMC,QAAN,IAAkB;AACxFA,EAAAA,QAAQ,CAACL,sBAAsB,CAAC;AAAEM,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAvB,CAAR;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,MAAM,CAAC,EAAD,EAAK;AAChCU,MAAAA,GAAG,EAAEX,eAAe,CAAE,kBAAiBO,eAAgB,EAAnC,CADY;AAEhCK,MAAAA,MAAM,EAAE;AAFwB,KAAL,CAA7B;AAIAJ,IAAAA,QAAQ,CAACN,mBAAmB,CAACQ,QAAQ,CAACG,IAAV,CAApB,CAAR;AACAL,IAAAA,QAAQ,CAACL,sBAAsB,CAAC;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAvB,CAAR;AACD,GAPD,CAOE,OAAOK,CAAP,EAAU;AACVN,IAAAA,QAAQ,CAACL,sBAAsB,CAAC;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAvB,CAAR;AACA,WAAO,IAAP;AACD;AACF,CAbM;AAeP,OAAO,MAAMM,kBAAkB,GAAIC,MAAD,IAA8C,MAAMR,QAAN,IAAkB;AAChG,MAAI,CAAAQ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,MAAR,MAAmB,WAAvB,EAAoCZ,iBAAiB,CAAC,oBAAD,CAAjB,CAApC,KACKA,iBAAiB,CAAC,oBAAD,CAAjB;AACLG,EAAAA,QAAQ,CAACJ,4BAA4B,CAAC;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAAD,CAA7B,CAAR;AACA,QAAMS,OAAiB,GAAG,IAAIC,QAAJ,EAA1B;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,OAApB,CAA6BC,GAAD,IAAiB;AAC3CL,IAAAA,OAAO,CAACM,MAAR,CAAeD,GAAf,EAAoBP,MAAM,CAACO,GAAD,CAA1B;AACD,GAFD;;AAGA,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMT,MAAM,CAAC,EAAD,EAAK;AAChCU,MAAAA,GAAG,EAAEX,eAAe,CAAE,iBAAF,CADY;AAEhCY,MAAAA,MAAM,EAAE,OAFwB;AAGhCC,MAAAA,IAAI,EAAEK;AAH0B,KAAL,CAA7B;AAKAV,IAAAA,QAAQ,CAACN,mBAAmB,CAACQ,QAAQ,CAACG,IAAV,CAApB,CAAR;AACAL,IAAAA,QAAQ,CAACJ,4BAA4B,CAAC;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAD,CAA7B,CAAR;AACA,WAAOC,QAAQ,CAACG,IAAhB;AACD,GATD,CASE,OAAOC,CAAP,EAAU;AACVN,IAAAA,QAAQ,CAACJ,4BAA4B,CAAC;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAD,CAA7B,CAAR;AACA,WAAO,IAAP;AACD;AACF,CArBM","sourcesContent":["import { buildPaymentURL, client } from '../../../../utils';\nimport {\n  setPaymentSetupData,\n  setPaymentSetupLoading,\n  setPaymentSetupUpdateLoading,\n} from '../reducers';\nimport { AppThunk } from '../../../../root';\nimport { sendAmplitudeData } from '../../../../utils/amplitude';\n\nexport const fetchPaymentSetup = (organization_id: string): AppThunk => async dispatch => {\n  dispatch(setPaymentSetupLoading({ loading: true }));\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/payment_setup/${organization_id}`),\n      method: 'GET',\n    });\n    dispatch(setPaymentSetupData(response.data));\n    dispatch(setPaymentSetupLoading({ loading: false }));\n  } catch (e) {\n    dispatch(setPaymentSetupLoading({ loading: false }));\n    return null;\n  }\n};\n\nexport const updatePaymentSetup = (values: { [key: string]: any }): AppThunk => async dispatch => {\n  if (values?.status === 'submitted') sendAmplitudeData('submitPaymentSetup');\n  else sendAmplitudeData('updatePaymentSetup');\n  dispatch(setPaymentSetupUpdateLoading({ loading: true }));\n  const payload: FormData = new FormData();\n  Object.keys(values).forEach((key: string) => {\n    payload.append(key, values[key]);\n  });\n  try {\n    const response = await client('', {\n      url: buildPaymentURL(`/payment_setup/`),\n      method: 'PATCH',\n      data: payload,\n    });\n    dispatch(setPaymentSetupData(response.data));\n    dispatch(setPaymentSetupUpdateLoading({ loading: false }));\n    return response.data;\n  } catch (e) {\n    dispatch(setPaymentSetupUpdateLoading({ loading: false }));\n    return null;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}