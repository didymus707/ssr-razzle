{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/campaign-preview-modal.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Icon, ModalBody, ModalCloseButton, Stack, Text } from '@chakra-ui/core';\nimport { format } from 'date-fns';\nimport React from 'react';\nimport { ModalContainer } from '../../../../components';\nexport const CampaingPreviewModal = props => {\n  const {\n    isOpen,\n    onClose,\n    campaign\n  } = props;\n  const {\n    name,\n    audience,\n    schedule_start,\n    schedule_end,\n    template,\n    content,\n    template_content\n  } = campaign !== null && campaign !== void 0 ? campaign : {};\n  return __jsx(ModalContainer, {\n    title: name,\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(ModalCloseButton, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), __jsx(ModalBody, {\n    p: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    py: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    px: \"1.5rem\",\n    isInline: true,\n    borderBottomWidth: \"1px\",\n    pb: \"1rem\",\n    mb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    top: \"4px\",\n    position: \"relative\",\n    name: \"check-circle\",\n    color: \"#47B881\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    pb: \"0.5rem\",\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, \"Audience\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, audience === null || audience === void 0 ? void 0 : audience.count))), schedule_start && schedule_end && __jsx(Stack, {\n    px: \"1.5rem\",\n    isInline: true,\n    borderBottomWidth: \"1px\",\n    pb: \"1rem\",\n    mb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    top: \"4px\",\n    position: \"relative\",\n    name: \"check-circle\",\n    color: \"#47B881\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    pb: \"0.5rem\",\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Schedule\"), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    spacing: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Start Date\"), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, __jsx(Icon, {\n    name: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }, format(new Date(schedule_start), 'dd MMM yyyy')))), __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"End Date\"), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, __jsx(Icon, {\n    name: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }\n  }, format(new Date(schedule_end), 'dd MMM yyyy'))))))), __jsx(Stack, {\n    px: \"1.5rem\",\n    isInline: true,\n    borderBottomWidth: \"1px\",\n    pb: \"1rem\",\n    mb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    top: \"4px\",\n    position: \"relative\",\n    name: \"check-circle\",\n    color: \"#47B881\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    pb: \"0.5rem\",\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Message (Text)\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, content || template || template_content))))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/campaign-preview-modal.tsx"],"names":["Box","Icon","ModalBody","ModalCloseButton","Stack","Text","format","React","ModalContainer","CampaingPreviewModal","props","isOpen","onClose","campaign","name","audience","schedule_start","schedule_end","template","content","template_content","count","Date"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,gBAA/B,EAAiDC,KAAjD,EAAwDC,IAAxD,QAAoE,iBAApE;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAAsD,wBAAtD;AASA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAkB;AACpD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAAgCH,KAAtC;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,cAAlB;AAAkCC,IAAAA,YAAlC;AAAgDC,IAAAA,QAAhD;AAA0DC,IAAAA,OAA1D;AAAmEC,IAAAA;AAAnE,MACJP,QADI,aACJA,QADI,cACJA,QADI,GACQ,EADd;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEC,IAAvB;AAA6B,IAAA,MAAM,EAAEH,MAArC;AAA6C,IAAA,OAAO,EAAEC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,CAAC,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,EAAE,EAAC,QAAV;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,iBAAiB,EAAC,KAA9C;AAAoD,IAAA,EAAE,EAAC,MAAvD;AAA8D,IAAA,EAAE,EAAC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC,KAAV;AAAgB,IAAA,QAAQ,EAAC,UAAzB;AAAoC,IAAA,IAAI,EAAC,cAAzC;AAAwD,IAAA,KAAK,EAAC,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,UAAU,EAAE,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAEM,KAAjB,CAJF,CAFF,CADF,EAUGL,cAAc,IAAIC,YAAlB,IACC,MAAC,KAAD;AAAO,IAAA,EAAE,EAAC,QAAV;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,iBAAiB,EAAC,KAA9C;AAAoD,IAAA,EAAE,EAAC,MAAvD;AAA8D,IAAA,EAAE,EAAC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC,KAAV;AAAgB,IAAA,QAAQ,EAAC,UAAzB;AAAoC,IAAA,IAAI,EAAC,cAAzC;AAAwD,IAAA,KAAK,EAAC,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,UAAU,EAAE,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,MAAM,CAAC,IAAIgB,IAAJ,CAASN,cAAT,CAAD,EAA2B,aAA3B,CAAb,CAFF,CAFF,CADF,EAQE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,MAAM,CAAC,IAAIgB,IAAJ,CAASL,YAAT,CAAD,EAAyB,aAAzB,CAAb,CAFF,CAFF,CARF,CAJF,CAFF,CAXJ,EAoCE,MAAC,KAAD;AAAO,IAAA,EAAE,EAAC,QAAV;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,iBAAiB,EAAC,KAA9C;AAAoD,IAAA,EAAE,EAAC,MAAvD;AAA8D,IAAA,EAAE,EAAC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC,KAAV;AAAgB,IAAA,QAAQ,EAAC,UAAzB;AAAoC,IAAA,IAAI,EAAC,cAAzC;AAAwD,IAAA,KAAK,EAAC,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,UAAU,EAAE,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,OAAO,IAAID,QAAX,IAAuBE,gBAA9B,CAJF,CAFF,CApCF,CADF,CAFF,CADF;AAqDD,CAzDM","sourcesContent":["import { Box, Icon, ModalBody, ModalCloseButton, Stack, Text } from '@chakra-ui/core';\nimport { format } from 'date-fns';\nimport React from 'react';\nimport { ModalContainer, ModalContainerOptions } from '../../../../components';\nimport { CampaignData } from '../campaigns.types';\n\ntype Props = {\n  campaign?: CampaignData;\n  isOpen: ModalContainerOptions['isOpen'];\n  onClose: ModalContainerOptions['onClose'];\n};\n\nexport const CampaingPreviewModal = (props: Props) => {\n  const { isOpen, onClose, campaign } = props;\n  const { name, audience, schedule_start, schedule_end, template, content, template_content } =\n    campaign ?? {};\n  return (\n    <ModalContainer title={name} isOpen={isOpen} onClose={onClose}>\n      <ModalCloseButton size=\"sm\" />\n      <ModalBody p=\"0\">\n        <Box py=\"1.5rem\">\n          <Stack px=\"1.5rem\" isInline borderBottomWidth=\"1px\" pb=\"1rem\" mb=\"1rem\">\n            <Icon top=\"4px\" position=\"relative\" name=\"check-circle\" color=\"#47B881\" />\n            <Box>\n              <Text pb=\"0.5rem\" fontWeight={500}>\n                Audience\n              </Text>\n              <Text>{audience?.count}</Text>\n            </Box>\n          </Stack>\n          {schedule_start && schedule_end && (\n            <Stack px=\"1.5rem\" isInline borderBottomWidth=\"1px\" pb=\"1rem\" mb=\"1rem\">\n              <Icon top=\"4px\" position=\"relative\" name=\"check-circle\" color=\"#47B881\" />\n              <Box>\n                <Text pb=\"0.5rem\" fontWeight={500}>\n                  Schedule\n                </Text>\n                <Stack isInline alignItems=\"center\" spacing=\"2rem\">\n                  <Stack>\n                    <Text>Start Date</Text>\n                    <Stack isInline alignItems=\"center\">\n                      <Icon name=\"calendar\" />\n                      <Text>{format(new Date(schedule_start), 'dd MMM yyyy')}</Text>\n                    </Stack>\n                  </Stack>\n                  <Stack>\n                    <Text>End Date</Text>\n                    <Stack isInline alignItems=\"center\">\n                      <Icon name=\"calendar\" />\n                      <Text>{format(new Date(schedule_end), 'dd MMM yyyy')}</Text>\n                    </Stack>\n                  </Stack>\n                </Stack>\n              </Box>\n            </Stack>\n          )}\n          <Stack px=\"1.5rem\" isInline borderBottomWidth=\"1px\" pb=\"1rem\" mb=\"1rem\">\n            <Icon top=\"4px\" position=\"relative\" name=\"check-circle\" color=\"#47B881\" />\n            <Box>\n              <Text pb=\"0.5rem\" fontWeight={500}>\n                Message (Text)\n              </Text>\n              <Text>{content || template || template_content}</Text>\n            </Box>\n          </Stack>\n        </Box>\n      </ModalBody>\n    </ModalContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}