{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/grid/popover-cell-editor.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Box } from '@chakra-ui/core';\nimport { PopoverWrapper } from '../../list-view.styles';\nimport { DateCellEditor, MultiSelectCellEditor, SelectCellEditor } from '../cell-properties';\nexport const PopoverCellEditor = props => {\n  const {\n    0: tempValue,\n    1: setTempValue\n  } = useState(null);\n  const cell_position = props.cellPosition;\n  const container = useRef();\n  const {\n    column,\n    row\n  } = props.cell;\n  const customization = (column === null || column === void 0 ? void 0 : column.customization) || {};\n\n  const handleClick = e => {\n    var _e$target$parentEleme, _e$target$parentEleme2, _e$target$parentEleme3, _e$target$attributes, _e$target$attributes$;\n\n    if (!props.isOpen) return;\n    let col_id = (_e$target$parentEleme = e.target.parentElement) === null || _e$target$parentEleme === void 0 ? void 0 : (_e$target$parentEleme2 = _e$target$parentEleme.attributes) === null || _e$target$parentEleme2 === void 0 ? void 0 : (_e$target$parentEleme3 = _e$target$parentEleme2['row-id']) === null || _e$target$parentEleme3 === void 0 ? void 0 : _e$target$parentEleme3.value;\n    let row_id = (_e$target$attributes = e.target.attributes) === null || _e$target$attributes === void 0 ? void 0 : (_e$target$attributes$ = _e$target$attributes['col-id']) === null || _e$target$attributes$ === void 0 ? void 0 : _e$target$attributes$.value;\n    const same_col = (column === null || column === void 0 ? void 0 : column.uid) === col_id;\n    const same_row = (row === null || row === void 0 ? void 0 : row.uid) === row_id;\n    if (row_id && col_id && same_col && same_row) return; // @ts-ignore\n\n    if (container.current.contains(e.target)) return;\n    props.close();\n  };\n\n  const attachOutsideClickListener = () => {\n    document.addEventListener('mousedown', handleClick);\n  };\n\n  const detachOutsideClickListener = () => {\n    document.removeEventListener('mousedown', handleClick);\n  };\n\n  const handleUpdate = value => {\n    setTempValue(value);\n    props.updateCell(value);\n    if (column.type === 'DATE') return;\n    props.close();\n  };\n\n  const resetTempValue = () => {\n    setTempValue(null);\n  };\n\n  useEffect(() => {\n    if (row && column) {\n      var _row$columns;\n\n      setTempValue(((_row$columns = row.columns) === null || _row$columns === void 0 ? void 0 : _row$columns[column.uid]) || '');\n    }\n\n    return resetTempValue; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen]);\n  useEffect(() => {\n    attachOutsideClickListener();\n    return detachOutsideClickListener; // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n  const left_overflow = window.innerWidth - (cell_position.left + 280);\n  const top_overflow = window.innerHeight - (cell_position.top - 60 + 500);\n  return __jsx(Box, {\n    width: \"max-content\",\n    zIndex: 1000000,\n    boxShadow: \"none\",\n    position: \"absolute\",\n    left: cell_position.left + Math.min(left_overflow, 5),\n    top: cell_position.bottom - 60 + Math.min(top_overflow, 5),\n    ref: container,\n    maxHeight: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, props.isOpen && tempValue !== null && __jsx(PopoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, column.type === 'DATE' && __jsx(DateCellEditor, {\n    value: tempValue,\n    updateValue: handleUpdate,\n    customization: customization,\n    close: props.close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), column.type === 'SELECT' && __jsx(SelectCellEditor, {\n    options: column !== null && column !== void 0 && column.options ? column.options : [],\n    value: tempValue,\n    updateValue: handleUpdate,\n    updateSelectOption: props.updateSelectOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), column.type === 'MULTI SELECT' && __jsx(MultiSelectCellEditor, {\n    options: column !== null && column !== void 0 && column.options ? column.options : [],\n    value: tempValue,\n    updateValue: handleUpdate,\n    updateSelectOption: props.updateSelectOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/grid/popover-cell-editor.tsx"],"names":["React","useEffect","useState","useRef","Box","PopoverWrapper","DateCellEditor","MultiSelectCellEditor","SelectCellEditor","PopoverCellEditor","props","tempValue","setTempValue","cell_position","cellPosition","container","column","row","cell","customization","handleClick","e","isOpen","col_id","target","parentElement","attributes","value","row_id","same_col","uid","same_row","current","contains","close","attachOutsideClickListener","document","addEventListener","detachOutsideClickListener","removeEventListener","handleUpdate","updateCell","type","resetTempValue","columns","left_overflow","window","innerWidth","left","top_overflow","innerHeight","top","Math","min","bottom","options","updateSelectOption"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Box } from '@chakra-ui/core';\nimport { PopoverWrapper } from '../../list-view.styles';\nimport { DateCellEditor, MultiSelectCellEditor, SelectCellEditor } from '../cell-properties';\n\nexport const PopoverCellEditor = (props: any) => {\n  const [tempValue, setTempValue] = useState(null);\n  const cell_position = props.cellPosition;\n  const container = useRef();\n  const { column, row } = props.cell;\n\n  const customization = column?.customization || {};\n\n  const handleClick = (e: any) => {\n    if (!props.isOpen) return;\n    let col_id = e.target.parentElement?.attributes?.['row-id']?.value;\n    let row_id = e.target.attributes?.['col-id']?.value;\n    const same_col = column?.uid === col_id;\n    const same_row = row?.uid === row_id;\n    if (row_id && col_id && same_col && same_row) return;\n    // @ts-ignore\n    if (container.current.contains(e.target)) return;\n    props.close();\n  };\n\n  const attachOutsideClickListener = () => {\n    document.addEventListener('mousedown', handleClick);\n  };\n  const detachOutsideClickListener = () => {\n    document.removeEventListener('mousedown', handleClick);\n  };\n\n  const handleUpdate = (value: any) => {\n    setTempValue(value);\n    props.updateCell(value);\n    if (column.type === 'DATE') return;\n    props.close();\n  };\n\n  const resetTempValue = () => {\n    setTempValue(null);\n  };\n\n  useEffect(() => {\n    if (row && column) {\n      setTempValue(row.columns?.[column.uid] || '');\n    }\n    return resetTempValue;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    attachOutsideClickListener();\n    return detachOutsideClickListener;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n\n  const left_overflow = window.innerWidth - (cell_position.left + 280);\n  const top_overflow = window.innerHeight - (cell_position.top - 60 + 500);\n\n  return (\n    <Box\n      width=\"max-content\"\n      zIndex={1000000}\n      boxShadow=\"none\"\n      position=\"absolute\"\n      left={cell_position.left + Math.min(left_overflow, 5)}\n      top={cell_position.bottom - 60 + Math.min(top_overflow, 5)}\n      ref={container}\n      maxHeight=\"500px\"\n    >\n      {props.isOpen && tempValue !== null && (\n        <PopoverWrapper>\n          {column.type === 'DATE' && (\n            <DateCellEditor\n              value={tempValue}\n              updateValue={handleUpdate}\n              customization={customization}\n              close={props.close}\n            />\n          )}\n          {column.type === 'SELECT' && (\n            <SelectCellEditor\n              options={column?.options ? column.options : []}\n              value={tempValue}\n              updateValue={handleUpdate}\n              updateSelectOption={props.updateSelectOption}\n            />\n          )}\n          {column.type === 'MULTI SELECT' && (\n            <MultiSelectCellEditor\n              options={column?.options ? column.options : []}\n              value={tempValue}\n              updateValue={handleUpdate}\n              updateSelectOption={props.updateSelectOption}\n            />\n          )}\n        </PopoverWrapper>\n      )}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}