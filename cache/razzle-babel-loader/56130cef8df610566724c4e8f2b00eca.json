{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/components/Platform.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, Text, Flex, Spinner } from '@chakra-ui/core';\nimport { SwitchWithText } from './SwitchWithText';\nimport { SocialIcon, PayButton, Button } from 'app/components';\nimport { buildConversationUrl } from '../../../../utils';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { selectProfile, selectUserEmail } from '../../../unauthenticated-app/authentication';\nexport function Platform() {\n  const token = useSelector(state => state.auth.token);\n  const {\n    0: isRecurring,\n    1: setIsRecurring\n  } = useState(false);\n  const {\n    0: pageLoader,\n    1: setPageLoader\n  } = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n  const pathNameArray = location.pathname.split('/');\n  const which = pathNameArray[pathNameArray.length - 1];\n  const whichName = which.split('-').map(item => `${item[0].toUpperCase()}${item.substring(1, item.length)}`).join(' ');\n  const {\n    organisation_id,\n    first_name,\n    last_name\n  } = useSelector(selectProfile) || {\n    organisation_id: '',\n    first_name: '',\n    last_name: ''\n  };\n  const email = useSelector(selectUserEmail);\n\n  const connectToChannel = () => {\n    setPageLoader(true);\n\n    if (true && which === 'messenger') {\n      window.location.href = `http://localhost:5556/api/v1/auth/${which}?token=${token}&organisation_id=${organisation_id}`;\n      return;\n    }\n\n    window.location.href = buildConversationUrl(`auth/${which}?token=${token}&organisation_id=${organisation_id}`);\n  };\n\n  const descriptions = {\n    twitter: 'Handle tweets & DMs directly in Inbox.',\n    messenger: 'Connect Messenger directly to Simpu, to receive DMs.'\n  };\n  return __jsx(Box, {\n    height: \"100vh\",\n    backgroundColor: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, pageLoader ? __jsx(Box, {\n    textAlign: \"center\",\n    paddingTop: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Spinner, {\n    color: \"blue.500\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })) : __jsx(React.Fragment, null, __jsx(Box, {\n    p: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    variant: \"ghost\",\n    leftIcon: \"chevron-left\",\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Go back to directory\")), __jsx(Box, {\n    paddingTop: \"3.25rem\",\n    marginX: \"auto\",\n    maxWidth: \"20.125rem\",\n    color: \"brandBlack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    fontSize: \"1.125rem\",\n    fontWeight: 600,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, `Connect ${whichName}`), __jsx(SwitchWithText, {\n    left: \"One Time\",\n    right: \"Recurring\",\n    isRight: isRecurring,\n    setIsRight: setIsRecurring,\n    fontSize: \".875rem\",\n    marginTop: \"5.3125rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), __jsx(Flex, {\n    backgroundColor: \"rgba(0, 0, 0, 0.03)\",\n    borderRadius: \".3125rem\",\n    fontSize: \".75rem\",\n    padding: \"1.25rem 1.5rem\",\n    marginTop: \".625rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(SocialIcon, {\n    which: which,\n    size: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    marginLeft: \".5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, __jsx(Flex, {\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    fontSize: \"1.25rem\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, \"$20\"), __jsx(Text, {\n    color: \"rgba(17, 17, 17, 0.5)\",\n    marginLeft: \".3125rem\",\n    marginBottom: \".25rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"/mo per channel\")), __jsx(Text, {\n    color: \"rgba(17, 17, 17, 0.5)\",\n    marginTop: \".625rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, descriptions[which]))), __jsx(PayButton, {\n    variantColor: \"blue\",\n    width: \"100%\",\n    marginTop: \"1.25rem\",\n    fontSize: \".865rem\",\n    email: email || '',\n    amount: 759000,\n    first_name: first_name,\n    last_name: last_name,\n    callback: () => connectToChannel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, `Connect ${whichName}`))));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/components/Platform.tsx"],"names":["React","useState","Box","Text","Flex","Spinner","SwitchWithText","SocialIcon","PayButton","Button","buildConversationUrl","useSelector","useHistory","useLocation","selectProfile","selectUserEmail","Platform","token","state","auth","isRecurring","setIsRecurring","pageLoader","setPageLoader","history","location","pathNameArray","pathname","split","which","length","whichName","map","item","toUpperCase","substring","join","organisation_id","first_name","last_name","email","connectToChannel","window","href","descriptions","twitter","messenger","goBack"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Text, Flex, Spinner } from '@chakra-ui/core';\nimport { SwitchWithText } from './SwitchWithText';\nimport { SocialIcon, PayButton, Button } from 'app/components';\nimport { buildConversationUrl } from '../../../../utils';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../root';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { selectProfile, selectUserEmail } from '../../../unauthenticated-app/authentication';\n\nexport function Platform() {\n  const token = useSelector((state: RootState) => state.auth.token);\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [pageLoader, setPageLoader] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n  const pathNameArray = location.pathname.split('/');\n  const which = pathNameArray[pathNameArray.length - 1];\n  const whichName = which\n    .split('-')\n    .map((item: string) => `${item[0].toUpperCase()}${item.substring(1, item.length)}`)\n    .join(' ');\n  const { organisation_id, first_name, last_name } = useSelector(selectProfile) || {\n    organisation_id: '',\n    first_name: '',\n    last_name: '',\n  };\n  const email = useSelector(selectUserEmail);\n\n  const connectToChannel = () => {\n    setPageLoader(true);\n\n    if (process.env.NODE_ENV === 'development' && which === 'messenger') {\n      window.location.href = `http://localhost:5556/api/v1/auth/${which}?token=${token}&organisation_id=${organisation_id}`;\n\n      return;\n    }\n\n    window.location.href = buildConversationUrl(\n      `auth/${which}?token=${token}&organisation_id=${organisation_id}`,\n    );\n  };\n\n  const descriptions: { [keys: string]: string } = {\n    twitter: 'Handle tweets & DMs directly in Inbox.',\n    messenger: 'Connect Messenger directly to Simpu, to receive DMs.',\n  };\n\n  return (\n    <Box height=\"100vh\" backgroundColor=\"white\">\n      {pageLoader ? (\n        <Box textAlign=\"center\" paddingTop=\"2rem\">\n          <Spinner color=\"blue.500\" size=\"md\" />\n        </Box>\n      ) : (\n        <>\n          <Box p=\"1rem\">\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              leftIcon=\"chevron-left\"\n              onClick={() => history.goBack()}\n            >\n              Go back to directory\n            </Button>\n          </Box>\n          <Box paddingTop=\"3.25rem\" marginX=\"auto\" maxWidth=\"20.125rem\" color=\"brandBlack\">\n            <Text fontSize=\"1.125rem\" fontWeight={600} textAlign=\"center\">\n              {`Connect ${whichName}`}\n            </Text>\n\n            <SwitchWithText\n              left=\"One Time\"\n              right=\"Recurring\"\n              isRight={isRecurring}\n              setIsRight={setIsRecurring}\n              fontSize=\".875rem\"\n              marginTop=\"5.3125rem\"\n            />\n\n            <Flex\n              backgroundColor=\"rgba(0, 0, 0, 0.03)\"\n              borderRadius=\".3125rem\"\n              fontSize=\".75rem\"\n              padding=\"1.25rem 1.5rem\"\n              marginTop=\".625rem\"\n            >\n              <SocialIcon which={which} size=\"1.5rem\" />\n\n              <Box marginLeft=\".5rem\">\n                <Flex alignItems=\"flex-end\">\n                  <Text fontSize=\"1.25rem\" fontWeight=\"bold\">\n                    $20\n                  </Text>\n                  <Text color=\"rgba(17, 17, 17, 0.5)\" marginLeft=\".3125rem\" marginBottom=\".25rem\">\n                    /mo per channel\n                  </Text>\n                </Flex>\n\n                <Text color=\"rgba(17, 17, 17, 0.5)\" marginTop=\".625rem\">\n                  {descriptions[which]}\n                </Text>\n              </Box>\n            </Flex>\n\n            <PayButton\n              variantColor=\"blue\"\n              width=\"100%\"\n              marginTop=\"1.25rem\"\n              fontSize=\".865rem\"\n              email={email || ''}\n              amount={759000}\n              first_name={first_name}\n              last_name={last_name}\n              callback={() => connectToChannel()}\n            >\n              {`Connect ${whichName}`}\n            </PayButton>\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}