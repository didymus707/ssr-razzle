{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/components/Dropdown.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Icon } from '@chakra-ui/core';\nimport React from 'react';\nimport Select, { components } from 'react-select';\nexport function Dropdown({\n  list,\n  selected,\n  setSelected,\n  placeholder,\n  formatOptionLabel,\n  components: dComponents\n}) {\n  let comps = {\n    DropdownIndicator: props => __jsx(components.DropdownIndicator, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }), __jsx(Icon, {\n      name: \"triangle-down\",\n      width: \".875rem\",\n      height: \".625rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }))\n  };\n  let value = selected;\n\n  if (placeholder) {\n    if (selected && selected.label === '' && selected.value === '') {\n      value = '';\n    }\n  } else if (value && value.label === '' && value.value === '') {\n    value = list[0];\n  }\n\n  if (dComponents) {\n    comps = _objectSpread(_objectSpread({}, comps), dComponents);\n  }\n\n  return __jsx(Select, {\n    components: comps,\n    formatOptionLabel: formatOptionLabel,\n    value: value,\n    onChange: newValue => setSelected && setSelected(newValue),\n    options: list,\n    placeholder: placeholder,\n    styles: {\n      valueContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n        fontSize: '0.875rem',\n        color: 'brandBlack',\n        paddingTop: '.75rem',\n        paddingBottom: '.75rem',\n        paddingLeft: '0'\n      }),\n      singleValue: styles => _objectSpread(_objectSpread({}, styles), {}, {\n        margin: '0'\n      }),\n      indicatorSeparator: () => ({\n        display: 'none'\n      }),\n      control: (styles, {\n        isFocused\n      }) => _objectSpread(_objectSpread({}, styles), {}, {\n        borderRadius: '0',\n        border: 'none',\n        borderBottom: '1px solid rgba(0, 0, 0, 0.08)',\n        paddingRight: isFocused ? '.5rem' : '0',\n        paddingLeft: isFocused ? '.5rem' : '0',\n        marginRight: isFocused ? '-.5rem' : '0',\n        marginLeft: isFocused ? '-.5rem' : '0',\n        '&:focus': {\n          outline: 'none'\n        }\n      }),\n      dropdownIndicator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n        opacity: 1,\n        color: '#637381',\n        paddingRight: '0',\n        '&:hover': {\n          opacity: 1,\n          color: '#637381'\n        }\n      }),\n      placeholder: styles => _objectSpread(_objectSpread({}, styles), {}, {\n        color: '#8ca0b5'\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/components/Dropdown.tsx"],"names":["Icon","React","Select","components","Dropdown","list","selected","setSelected","placeholder","formatOptionLabel","dComponents","comps","DropdownIndicator","props","value","label","newValue","valueContainer","styles","fontSize","color","paddingTop","paddingBottom","paddingLeft","singleValue","margin","indicatorSeparator","display","control","isFocused","borderRadius","border","borderBottom","paddingRight","marginRight","marginLeft","outline","dropdownIndicator","opacity"],"mappings":"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","sourcesContent":["import { Icon } from '@chakra-ui/core';\nimport React from 'react';\nimport Select, { components } from 'react-select';\n\nexport type DropDownItemSchema = {\n  label: string;\n  value: string;\n}\n\nexport function Dropdown({\n  list, selected, setSelected, placeholder, formatOptionLabel,\n  components: dComponents\n}: {\n  placeholder?: string\n  list: DropDownItemSchema[]\n  selected?: DropDownItemSchema\n  setSelected?: (v: DropDownItemSchema) => void\n  components?: any\n  formatOptionLabel?: any\n}) {\n  let comps = {\n    DropdownIndicator: (props: any) => (\n      <components.DropdownIndicator {...props}>\n        <Icon name=\"triangle-down\" width=\".875rem\" height=\".625rem\" />\n      </components.DropdownIndicator>\n    )\n  }\n\n  let value: any = selected;\n  if (placeholder) {\n    if (selected && selected.label === '' && selected.value === '') {\n      value = '';\n    }\n  } else if (value && value.label === '' && value.value === '') {\n    value = list[0];\n  }\n\n  if (dComponents) {\n    comps = { ...comps, ...dComponents };\n  }\n\n  return (\n    <Select\n      components={comps}\n      formatOptionLabel={formatOptionLabel}\n      value={value}\n      onChange={(newValue: any) => setSelected && setSelected(newValue)}\n      options={list}\n      placeholder={placeholder}\n      styles={{\n        valueContainer: (styles: any) => ({\n          ...styles,\n          fontSize: '0.875rem',\n          color: 'brandBlack',\n          paddingTop: '.75rem',\n          paddingBottom: '.75rem',\n          paddingLeft: '0',\n        }),\n        singleValue: (styles: any) => ({\n          ...styles,\n          margin: '0'\n        }),\n        indicatorSeparator: () => ({\n          display: 'none',\n        }),\n        control: (styles: any, { isFocused }) => ({\n          ...styles,\n          borderRadius: '0',\n          border: 'none',\n          borderBottom: '1px solid rgba(0, 0, 0, 0.08)',\n          paddingRight: isFocused ? '.5rem' : '0',\n          paddingLeft: isFocused ? '.5rem' : '0',\n          marginRight: isFocused ? '-.5rem' : '0',\n          marginLeft: isFocused ? '-.5rem' : '0',\n          '&:focus': {\n            outline: 'none'\n          }\n        }),\n        dropdownIndicator: (styles: any) => ({\n          ...styles,\n          opacity: 1,\n          color: '#637381',\n          paddingRight: '0',\n          '&:hover': {\n            opacity: 1,\n            color: '#637381',\n          },\n        }),\n        placeholder: (styles: any) => ({\n          ...styles,\n          color: '#8ca0b5',\n        }),\n      }}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}