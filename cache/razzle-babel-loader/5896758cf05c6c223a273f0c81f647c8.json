{"ast":null,"code":"import { combineReducers, createSlice } from '@reduxjs/toolkit';\nimport { getSupportedCountries } from './channel.thunks';\nimport { connectivitysReducer, credentialsReducer, uiReducer } from './slices'; ////////////////////////////////////////////////////////////////////////////////////\n// Channel Reducer and Actions\n\nconst channelInitialState = {\n  supportedChannels: {},\n  supportedCountries: []\n};\nconst channelSlice = createSlice({\n  name: 'channel',\n  initialState: channelInitialState,\n  reducers: {\n    getAllSupportedChannels(state, action) {\n      const {\n        supportedChannels\n      } = action.payload;\n      state.supportedChannels = supportedChannels;\n    }\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(getSupportedCountries.fulfilled, (state, action) => {\n      const {\n        supportedCountries\n      } = action.payload;\n      state.supportedCountries = supportedCountries;\n    });\n  }\n\n});\nexport const {\n  getAllSupportedChannels\n} = channelSlice.actions;\nexport const reducer = channelSlice.reducer;\nexport const channelReducer = combineReducers({\n  ui: uiReducer,\n  entities: combineReducers({\n    credentials: credentialsReducer,\n    connectivities: connectivitysReducer\n  })\n});","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/channels/channel.reducer.ts"],"names":["combineReducers","createSlice","getSupportedCountries","connectivitysReducer","credentialsReducer","uiReducer","channelInitialState","supportedChannels","supportedCountries","channelSlice","name","initialState","reducers","getAllSupportedChannels","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","reducer","channelReducer","ui","entities","credentials","connectivities"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA4D,kBAA5D;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AAEA,SAASC,oBAAT,EAA+BC,kBAA/B,EAAmDC,SAAnD,QAAoE,UAApE,C,CAEA;AACA;;AACA,MAAMC,mBAAiC,GAAG;AACxCC,EAAAA,iBAAiB,EAAE,EADqB;AAExCC,EAAAA,kBAAkB,EAAE;AAFoB,CAA1C;AAKA,MAAMC,YAAY,GAAGR,WAAW,CAAC;AAC/BS,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,uBAAuB,CACrBC,KADqB,EAErBC,MAFqB,EAGrB;AACA,YAAM;AAAER,QAAAA;AAAF,UAAwBQ,MAAM,CAACC,OAArC;AACAF,MAAAA,KAAK,CAACP,iBAAN,GAA0BA,iBAA1B;AACD;;AAPO,GAHqB;;AAY/BU,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACNC,OADD,CACSjB,qBAAqB,CAACkB,SAD/B,EAC0C,CAACN,KAAD,EAAQC,MAAR,KAAwB;AAChE,YAAM;AAAEP,QAAAA;AAAF,UAAyBO,MAAM,CAACC,OAAtC;AACAF,MAAAA,KAAK,CAACN,kBAAN,GAA2BA,kBAA3B;AACD,KAJD;AAKD;;AAlB8B,CAAD,CAAhC;AAqBA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAA8BJ,YAAY,CAACY,OAAjD;AACP,OAAO,MAAMC,OAAO,GAAGb,YAAY,CAACa,OAA7B;AAEP,OAAO,MAAMC,cAAc,GAAGvB,eAAe,CAAC;AAC5CwB,EAAAA,EAAE,EAAEnB,SADwC;AAE5CoB,EAAAA,QAAQ,EAAEzB,eAAe,CAAC;AACxB0B,IAAAA,WAAW,EAAEtB,kBADW;AAExBuB,IAAAA,cAAc,EAAExB;AAFQ,GAAD;AAFmB,CAAD,CAAtC","sourcesContent":["import { combineReducers, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getSupportedCountries } from './channel.thunks'\nimport { ChannelState } from './channels.types'\nimport { connectivitysReducer, credentialsReducer, uiReducer } from './slices'\n\n////////////////////////////////////////////////////////////////////////////////////\n// Channel Reducer and Actions\nconst channelInitialState: ChannelState = {\n  supportedChannels: {},\n  supportedCountries: [],\n}\n\nconst channelSlice = createSlice({\n  name: 'channel',\n  initialState: channelInitialState,\n  reducers: {\n    getAllSupportedChannels (\n      state,\n      action: PayloadAction<{ supportedChannels: ChannelState['supportedChannels'] }>\n    ) {\n      const { supportedChannels } = action.payload\n      state.supportedChannels = supportedChannels\n    }\n  },\n  extraReducers(builder) {\n    builder\n    .addCase(getSupportedCountries.fulfilled, (state, action: any) => {\n      const { supportedCountries } = action.payload;\n      state.supportedCountries = supportedCountries;\n    });\n  },\n})\n\nexport const { getAllSupportedChannels } = channelSlice.actions\nexport const reducer = channelSlice.reducer\n\nexport const channelReducer = combineReducers({\n  ui: uiReducer,\n  entities: combineReducers({\n    credentials: credentialsReducer,\n    connectivities: connectivitysReducer,\n  }),\n});\n"]},"metadata":{},"sourceType":"module"}