{"ast":null,"code":"import _objectSpread from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/settings/index.tsx\";\nvar __jsx = React.createElement;\nimport { Box, FormControl, FormErrorMessage, Heading, Stack, Text, useToast } from '@chakra-ui/core';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { AdvancedSelect, Button, getTimeArray, SmallText, ToastBox } from 'app/components';\nimport { getMarketingSettings, saveMarketingSettings } from '../campaigns';\nexport const MarketingSettings = () => {\n  var _marketing$quiet_hour, _marketing$quiet_hour2;\n\n  const {\n    data\n  } = useQuery('marketing-settings', getMarketingSettings);\n  const {\n    marketing\n  } = data !== null && data !== void 0 ? data : {};\n  const toast = useToast();\n  const queryClient = useQueryClient();\n  const {\n    mutate,\n    isLoading: isSavingSettings\n  } = useMutation(payload => saveMarketingSettings(payload), {\n    onMutate: async data => {\n      await queryClient.cancelQueries('marketing-settings');\n      const previousData = queryClient.getQueryData('marketing-settings');\n      queryClient.setQueryData('marketing-settings', data);\n      return {\n        previousData,\n        data\n      };\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries('marketing-settings');\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          message: \"Settings saved successfully\",\n          onClose: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }\n        })\n      });\n    },\n    onError: (error, newTodo, context) => {\n      queryClient.setQueryData('marketing-settings', context.previousTodo);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          message: error.message,\n          onClose: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }\n        })\n      });\n    }\n  });\n\n  const handleSaveSettigns = values => {\n    const {\n      smart_sending_hours,\n      quiet_hour_start,\n      quiet_hour_end\n    } = values;\n\n    const payload = _objectSpread(_objectSpread({}, data), {}, {\n      marketing: {\n        smart_send: parseFloat(smart_sending_hours),\n        quiet_hour: {\n          from: quiet_hour_start,\n          to: quiet_hour_end\n        }\n      }\n    });\n\n    mutate(payload);\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    setFieldValue\n  } = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      smart_sending_hours: marketing === null || marketing === void 0 ? void 0 : marketing.smart_send.toString(),\n      quiet_hour_start: marketing === null || marketing === void 0 ? void 0 : (_marketing$quiet_hour = marketing.quiet_hour) === null || _marketing$quiet_hour === void 0 ? void 0 : _marketing$quiet_hour.from,\n      quiet_hour_end: marketing === null || marketing === void 0 ? void 0 : (_marketing$quiet_hour2 = marketing.quiet_hour) === null || _marketing$quiet_hour2 === void 0 ? void 0 : _marketing$quiet_hour2.to\n    },\n    onSubmit: values => handleSaveSettigns(values)\n  });\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    as: \"h4\",\n    pb: \"2rem\",\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Message Settings\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    mb: \"2rem\",\n    pb: \"2rem\",\n    borderBottomWidth: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    as: \"h6\",\n    pb: \"0.2rem\",\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Smart Sending\"), __jsx(SmallText, {\n    pb: \"1.5rem\",\n    maxW: \"640px\",\n    color: \"#4f4f4f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Smart Sending protects you from inadvertently sending messages too often - recipients will be skipped if they've already received a message within the Smart Sending period.\"), __jsx(SmallText, {\n    pb: \"1.5rem\",\n    maxW: \"640px\",\n    color: \"#4f4f4f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"The default Smart Sending period is \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 49\n    }\n  }, \"8 hours\"), \", meaning any recipient who have received a message from you within the last 8 hours will be skipped.\"), __jsx(Stack, {\n    maxW: \"640px\",\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    width: ['100%', '100%', '48%'],\n    isInvalid: !!touched.smart_sending_hours && !!errors.smart_sending_hours,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(AdvancedSelect, {\n    size: \"sm\",\n    isSearchable: true,\n    value: values === null || values === void 0 ? void 0 : values.smart_sending_hours,\n    placeholder: \"Select Smart Sending Hour\",\n    isInvalid: !!touched.smart_sending_hours && !!errors.smart_sending_hours,\n    onChange: ({\n      value\n    }) => setFieldValue('smart_sending_hours', [value]),\n    options: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'].map(item => ({\n      label: item,\n      value: item\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, errors.smart_sending_hours)), __jsx(Text, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Hour(s)\"))), __jsx(Box, {\n    mb: \"2rem\",\n    pb: \"2rem\",\n    borderBottomWidth: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    as: \"h6\",\n    pb: \"0.2rem\",\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Quiet Hours\"), __jsx(SmallText, {\n    pb: \"1.5rem\",\n    maxW: \"640px\",\n    color: \"#4f4f4f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Quiet Hours prevent your recipients from receiving automated messages during specified hours, delaying delivery until the window is over.\"), __jsx(SmallText, {\n    pb: \"1.5rem\",\n    maxW: \"640px\",\n    color: \"#4f4f4f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Default Quiet Hours are \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }, \"9pm\"), \" to \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 61\n    }\n  }, \"12pm\"), \", based on the receipients time zone. This means that all scheduled messages will be delayed until 12pm.\"), __jsx(Stack, {\n    maxW: \"640px\",\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    width: ['100%', '100%', '48%'],\n    isInvalid: !!touched.quiet_hour_start && !!errors.quiet_hour_start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(AdvancedSelect, {\n    size: \"sm\",\n    isSearchable: true,\n    placeholder: \"Select time\",\n    value: values !== null && values !== void 0 && values.quiet_hour_start ? values.quiet_hour_start : '',\n    isInvalid: !!touched.quiet_hour_start && !!errors.quiet_hour_start,\n    onChange: ({\n      value\n    }) => setFieldValue('quiet_hour_start', [value]),\n    options: getTimeArray().map(item => ({\n      label: item,\n      value: item\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, errors.quiet_hour_start)), __jsx(FormControl, {\n    width: ['100%', '100%', '48%'],\n    isInvalid: !!touched.quiet_hour_end && !!errors.quiet_hour_end,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, __jsx(AdvancedSelect, {\n    size: \"sm\",\n    isSearchable: true,\n    placeholder: \"Select time\",\n    value: values !== null && values !== void 0 && values.quiet_hour_end ? values.quiet_hour_end : '',\n    isInvalid: !!touched.quiet_hour_end && !!errors.quiet_hour_end,\n    onChange: ({\n      value\n    }) => setFieldValue('quiet_hour_end', [value]),\n    options: getTimeArray().map(item => ({\n      label: item,\n      value: item\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, errors.quiet_hour_end)))), __jsx(Button, {\n    size: \"sm\",\n    type: \"submit\",\n    variantColor: \"blue\",\n    isLoading: isSavingSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, \"Save changes\")));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/settings/index.tsx"],"names":["Box","FormControl","FormErrorMessage","Heading","Stack","Text","useToast","useFormik","React","useMutation","useQuery","useQueryClient","AdvancedSelect","Button","getTimeArray","SmallText","ToastBox","getMarketingSettings","saveMarketingSettings","MarketingSettings","data","marketing","toast","queryClient","mutate","isLoading","isSavingSettings","payload","onMutate","cancelQueries","previousData","getQueryData","setQueryData","onSuccess","invalidateQueries","position","render","onClose","onError","error","newTodo","context","previousTodo","message","handleSaveSettigns","values","smart_sending_hours","quiet_hour_start","quiet_hour_end","smart_send","parseFloat","quiet_hour","from","to","errors","touched","handleSubmit","setFieldValue","enableReinitialize","initialValues","toString","onSubmit","value","map","item","label"],"mappings":"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","sourcesContent":["import {\n  Box,\n  FormControl,\n  FormErrorMessage,\n  Heading,\n  Stack,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\nimport { AxiosError } from 'axios';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { AdvancedSelect, Button, getTimeArray, SmallText, ToastBox } from 'app/components';\nimport { getMarketingSettings, saveMarketingSettings } from '../campaigns';\nimport { MarketingSettingsSchema } from '../campaigns/campaigns.types';\n\ntype MarketingSettingsFormValues = {\n  smart_sending_hours: string;\n  quiet_hour_start: string;\n  quiet_hour_end: string;\n};\n\nexport const MarketingSettings = () => {\n  const { data } = useQuery('marketing-settings', getMarketingSettings);\n  const { marketing } = data ?? {};\n\n  const toast = useToast();\n  const queryClient = useQueryClient();\n  const { mutate, isLoading: isSavingSettings } = useMutation<any, AxiosError, any, any>(\n    (payload: MarketingSettingsSchema) => saveMarketingSettings(payload),\n    {\n      onMutate: async data => {\n        await queryClient.cancelQueries('marketing-settings');\n\n        const previousData = queryClient.getQueryData('marketing-settings');\n\n        queryClient.setQueryData('marketing-settings', data);\n\n        return { previousData, data };\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries('marketing-settings');\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox status=\"success\" message=\"Settings saved successfully\" onClose={onClose} />\n          ),\n        });\n      },\n      onError: (error, newTodo, context) => {\n        queryClient.setQueryData('marketing-settings', context.previousTodo);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox message={error.message} onClose={onClose} />,\n        });\n      },\n    },\n  );\n\n  const handleSaveSettigns = (values: MarketingSettingsFormValues) => {\n    const { smart_sending_hours, quiet_hour_start, quiet_hour_end } = values;\n    const payload = {\n      ...data,\n      marketing: {\n        smart_send: parseFloat(smart_sending_hours),\n        quiet_hour: {\n          from: quiet_hour_start,\n          to: quiet_hour_end,\n        },\n      },\n    };\n    mutate(payload);\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    setFieldValue,\n  } = useFormik<MarketingSettingsFormValues>({\n    enableReinitialize: true,\n    initialValues: {\n      smart_sending_hours: marketing?.smart_send.toString(),\n      quiet_hour_start: marketing?.quiet_hour?.from,\n      quiet_hour_end: marketing?.quiet_hour?.to,\n    },\n    onSubmit: values => handleSaveSettigns(values),\n  });\n\n  return (\n    <Box>\n      <Heading as=\"h4\" pb=\"2rem\" fontSize=\"1.2rem\" fontWeight={600} color=\"black\">\n        Message Settings\n      </Heading>\n      <form onSubmit={handleSubmit}>\n        <Box mb=\"2rem\" pb=\"2rem\" borderBottomWidth=\"1px\">\n          <Heading as=\"h6\" pb=\"0.2rem\" fontSize=\"1.2rem\" fontWeight={600} color=\"black\">\n            Smart Sending\n          </Heading>\n          <SmallText pb=\"1.5rem\" maxW=\"640px\" color=\"#4f4f4f\">\n            Smart Sending protects you from inadvertently sending messages too often - recipients\n            will be skipped if they've already received a message within the Smart Sending period.\n          </SmallText>\n          <SmallText pb=\"1.5rem\" maxW=\"640px\" color=\"#4f4f4f\">\n            The default Smart Sending period is <strong>8 hours</strong>, meaning any recipient who\n            have received a message from you within the last 8 hours will be skipped.\n          </SmallText>\n          <Stack maxW=\"640px\" isInline alignItems=\"center\">\n            <FormControl\n              width={['100%', '100%', '48%']}\n              isInvalid={!!touched.smart_sending_hours && !!errors.smart_sending_hours}\n            >\n              <AdvancedSelect\n                size=\"sm\"\n                isSearchable\n                value={values?.smart_sending_hours}\n                placeholder=\"Select Smart Sending Hour\"\n                isInvalid={!!touched.smart_sending_hours && !!errors.smart_sending_hours}\n                onChange={({ value }) => setFieldValue('smart_sending_hours', [value])}\n                options={['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'].map(\n                  item => ({\n                    label: item,\n                    value: item,\n                  }),\n                )}\n              />\n              <FormErrorMessage>{errors.smart_sending_hours}</FormErrorMessage>\n            </FormControl>\n            <Text fontWeight={600}>Hour(s)</Text>\n          </Stack>\n        </Box>\n        <Box mb=\"2rem\" pb=\"2rem\" borderBottomWidth=\"1px\">\n          <Heading as=\"h6\" pb=\"0.2rem\" fontSize=\"1.2rem\" fontWeight={600} color=\"black\">\n            Quiet Hours\n          </Heading>\n          <SmallText pb=\"1.5rem\" maxW=\"640px\" color=\"#4f4f4f\">\n            Quiet Hours prevent your recipients from receiving automated messages during specified\n            hours, delaying delivery until the window is over.\n          </SmallText>\n          <SmallText pb=\"1.5rem\" maxW=\"640px\" color=\"#4f4f4f\">\n            Default Quiet Hours are <strong>9pm</strong> to <strong>12pm</strong>, based on the\n            receipients time zone. This means that all scheduled messages will be delayed until\n            12pm.\n          </SmallText>\n          <Stack maxW=\"640px\" isInline alignItems=\"center\">\n            <FormControl\n              width={['100%', '100%', '48%']}\n              isInvalid={!!touched.quiet_hour_start && !!errors.quiet_hour_start}\n            >\n              <AdvancedSelect\n                size=\"sm\"\n                isSearchable\n                placeholder=\"Select time\"\n                value={values?.quiet_hour_start ? values.quiet_hour_start : ''}\n                isInvalid={!!touched.quiet_hour_start && !!errors.quiet_hour_start}\n                onChange={({ value }) => setFieldValue('quiet_hour_start', [value])}\n                options={getTimeArray().map(item => ({ label: item, value: item }))}\n              />\n              <FormErrorMessage>{errors.quiet_hour_start}</FormErrorMessage>\n            </FormControl>\n            <FormControl\n              width={['100%', '100%', '48%']}\n              isInvalid={!!touched.quiet_hour_end && !!errors.quiet_hour_end}\n            >\n              <AdvancedSelect\n                size=\"sm\"\n                isSearchable\n                placeholder=\"Select time\"\n                value={values?.quiet_hour_end ? values.quiet_hour_end : ''}\n                isInvalid={!!touched.quiet_hour_end && !!errors.quiet_hour_end}\n                onChange={({ value }) => setFieldValue('quiet_hour_end', [value])}\n                options={getTimeArray().map(item => ({ label: item, value: item }))}\n              />\n              <FormErrorMessage>{errors.quiet_hour_end}</FormErrorMessage>\n            </FormControl>\n          </Stack>\n        </Box>\n        <Button size=\"sm\" type=\"submit\" variantColor=\"blue\" isLoading={isSavingSettings}>\n          Save changes\n        </Button>\n      </form>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}