{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/qr-code-setup-modal.tsx\";\nvar __jsx = React.createElement;\nimport { Box, List, ListItem, ModalBody, Skeleton, useToast } from '@chakra-ui/core';\nimport { generateQRCode } from 'app/authenticated-app/channels';\nimport { Button, ModalContainer, Subtitle, ToastBox } from 'app/components';\nimport QRCode from 'qrcode.react';\nimport React, { useEffect, useState } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router';\nexport const QRCodeSetupModal = props => {\n  const {\n    isOpen,\n    onClose,\n    channelID\n  } = props;\n  const toast = useToast();\n  const {\n    0: qrcode,\n    1: setQrCode\n  } = useState('');\n  const {\n    0: viewControl,\n    1: setViewControl\n  } = useState('qr-code');\n  const queryClient = useQueryClient();\n  useEffect(() => {\n    const mirrorWhatsApp = async () => {\n      try {\n        var _response$body;\n\n        const response = await generateQRCode(channelID !== null && channelID !== void 0 ? channelID : '');\n        const reader = await ((_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader());\n\n        if (reader) {\n          let done, value;\n\n          while (!done) {\n            ({\n              value,\n              done\n            } = await reader.read());\n\n            if (done) {\n              console.log('The stream was already closed!');\n            }\n\n            const s = new TextDecoder().decode(value);\n\n            if (s === 'scanned') {}\n\n            if (s === 'error: Account already connected') {\n              toast({\n                render: ({\n                  onClose\n                }) => __jsx(ToastBox, {\n                  onClose: onClose,\n                  message: \"Whatsapp account already connected on another Simpu account\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 19\n                  }\n                }),\n                position: 'bottom-left'\n              });\n              onClose === null || onClose === void 0 ? void 0 : onClose();\n            }\n\n            if (s.includes('{\"uuid\":\"')) {\n              setViewControl('internet');\n            }\n\n            setQrCode(s);\n          }\n        }\n      } catch (error) {}\n    };\n\n    if (isOpen) {\n      mirrorWhatsApp();\n    }\n  }, [channelID, isOpen, onClose, toast]);\n\n  const handleClosed = () => {\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setViewControl('qr-code');\n    queryClient.invalidateQueries(['channel-connected-accounts', 'whatsapp']);\n  };\n\n  let view = __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }\n  });\n\n  if (viewControl === 'qr-code') {\n    view = __jsx(QrCode, {\n      qrcode: qrcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    });\n  } else {\n    view = __jsx(Warning, {\n      onClose: handleClosed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(ModalContainer, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, view));\n};\n\nfunction QrCode({\n  qrcode\n}) {\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    py: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, !qrcode ? __jsx(Skeleton, {\n    size: \"9.375rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }) : __jsx(QRCode, {\n    level: \"L\",\n    size: 200,\n    value: qrcode,\n    renderAs: \"canvas\",\n    bgColor: \"#ffffff\",\n    fgColor: \"#000000\",\n    includeMargin: false,\n    style: {\n      borderRadius: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), __jsx(Subtitle, {\n    pb: \"1rem\",\n    color: \"gray.900\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"To use WhatsApp on Simpu:\"), __jsx(List, {\n    mb: \"5rem\",\n    spacing: \"0.5rem\",\n    as: \"ol\",\n    fontSize: \"1rem\",\n    styleType: \"decimal\",\n    lineHeight: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, __jsx(ListItem, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Open WhatsApp or WhatsApp Business App on your Phone.\"), __jsx(ListItem, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Tap Menu or Settings and select WhatsApp Web/ Desktop.\"), __jsx(ListItem, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Log out from all devices and click Scan QR code.\"), __jsx(ListItem, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Point your phone to this screen to capture code.\")));\n}\n\nfunction Warning({\n  onClose\n}) {\n  const history = useHistory();\n\n  const handleClose = () => {\n    onClose();\n    history.push('/s/inbox/settings/channels/whatsapp');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Subtitle, {\n    pt: \"2rem\",\n    pb: \"2rem\",\n    color: \"gray.900\",\n    fontWeight: \"bold\",\n    lineHeight: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"Your WhatsApp account has been connected.\"), __jsx(List, {\n    as: \"ol\",\n    spacing: \"0.5rem\",\n    fontSize: \"1rem\",\n    styleType: \"decimal\",\n    lineHeight: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, __jsx(ListItem, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Keep your phone charged and connected to the internet at all time to avoid disconnection.\"), __jsx(ListItem, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Do not use WhatsApp Web/ Desktop simultaneously since WhatsApp only allows 1 active web session at any given time.\"), __jsx(ListItem, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"If you logout Simpu from Whatsapp on your phone, all your Whatsapp messages will be deleted from your Simpu inbox this is to ensure your privacy.\")), __jsx(Box, {\n    my: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    isFullWidth: true,\n    variantColor: \"blue\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Finish\")));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/qr-code-setup-modal.tsx"],"names":["Box","List","ListItem","ModalBody","Skeleton","useToast","generateQRCode","Button","ModalContainer","Subtitle","ToastBox","QRCode","React","useEffect","useState","useQueryClient","useHistory","QRCodeSetupModal","props","isOpen","onClose","channelID","toast","qrcode","setQrCode","viewControl","setViewControl","queryClient","mirrorWhatsApp","response","reader","body","getReader","done","value","read","console","log","s","TextDecoder","decode","render","position","includes","error","handleClosed","invalidateQueries","view","QrCode","borderRadius","Warning","history","handleClose","push"],"mappings":"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","sourcesContent":["import { Box, List, ListItem, ModalBody, Skeleton, useToast } from '@chakra-ui/core';\nimport { generateQRCode } from 'app/authenticated-app/channels';\nimport { Button, ModalContainer, ModalContainerOptions, Subtitle, ToastBox } from 'app/components';\nimport QRCode from 'qrcode.react';\nimport React, { useEffect, useState } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router';\n\nexport type QRCodeSetupModalProps = ModalContainerOptions & {\n  channelID?: string;\n};\n\ntype ViewControl = 'qr-code' | 'set_name' | 'internet' | 'warning';\n\nexport const QRCodeSetupModal = (props: QRCodeSetupModalProps) => {\n  const { isOpen, onClose, channelID } = props;\n  const toast = useToast();\n  const [qrcode, setQrCode] = useState('');\n  const [viewControl, setViewControl] = useState<ViewControl>('qr-code');\n\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    const mirrorWhatsApp = async () => {\n      try {\n        const response = await generateQRCode(channelID ?? '');\n        const reader = await response.body?.getReader();\n\n        if (reader) {\n          let done, value;\n          while (!done) {\n            ({ value, done } = await reader.read());\n            if (done) {\n              console.log('The stream was already closed!');\n            }\n            const s = new TextDecoder().decode(value);\n            if (s === 'scanned') {\n            }\n            if (s === 'error: Account already connected') {\n              toast({\n                render: ({ onClose }) => (\n                  <ToastBox\n                    onClose={onClose}\n                    message=\"Whatsapp account already connected on another Simpu account\"\n                  />\n                ),\n                position: 'bottom-left',\n              });\n              onClose?.();\n            }\n            if (s.includes('{\"uuid\":\"')) {\n              setViewControl('internet');\n            }\n            setQrCode(s);\n          }\n        }\n      } catch (error) {}\n    };\n    if (isOpen) {\n      mirrorWhatsApp();\n    }\n  }, [channelID, isOpen, onClose, toast]);\n\n  const handleClosed = () => {\n    onClose?.();\n    setViewControl('qr-code');\n    queryClient.invalidateQueries(['channel-connected-accounts', 'whatsapp']);\n  };\n\n  let view = <Box />;\n  if (viewControl === 'qr-code') {\n    view = <QrCode qrcode={qrcode} />;\n  } else {\n    view = <Warning onClose={handleClosed} />;\n  }\n\n  return (\n    <ModalContainer isOpen={isOpen} onClose={onClose}>\n      <ModalBody>{view}</ModalBody>\n    </ModalContainer>\n  );\n};\n\nfunction QrCode({ qrcode }: { qrcode: string }) {\n  return (\n    <>\n      <Box py=\"2rem\">\n        {!qrcode ? (\n          <Skeleton size=\"9.375rem\" />\n        ) : (\n          <QRCode\n            level=\"L\"\n            size={200}\n            value={qrcode}\n            renderAs=\"canvas\"\n            bgColor=\"#ffffff\"\n            fgColor=\"#000000\"\n            includeMargin={false}\n            style={{ borderRadius: '8px' }}\n          />\n        )}\n      </Box>\n\n      <Subtitle pb=\"1rem\" color=\"gray.900\" fontWeight=\"bold\">\n        To use WhatsApp on Simpu:\n      </Subtitle>\n\n      <List\n        mb=\"5rem\"\n        spacing=\"0.5rem\"\n        as=\"ol\"\n        fontSize=\"1rem\"\n        styleType=\"decimal\"\n        lineHeight=\"1.5rem\"\n      >\n        <ListItem color=\"gray.500\">Open WhatsApp or WhatsApp Business App on your Phone.</ListItem>\n        <ListItem color=\"gray.500\">Tap Menu or Settings and select WhatsApp Web/ Desktop.</ListItem>\n        <ListItem color=\"gray.500\">Log out from all devices and click Scan QR code.</ListItem>\n        <ListItem color=\"gray.500\">Point your phone to this screen to capture code.</ListItem>\n      </List>\n    </>\n  );\n}\n\nfunction Warning({ onClose }: { onClose: () => void }) {\n  const history = useHistory();\n\n  const handleClose = () => {\n    onClose();\n    history.push('/s/inbox/settings/channels/whatsapp');\n  };\n\n  return (\n    <>\n      <Subtitle pt=\"2rem\" pb=\"2rem\" color=\"gray.900\" fontWeight=\"bold\" lineHeight=\"30px\">\n        Your WhatsApp account has been connected.\n      </Subtitle>\n      <List as=\"ol\" spacing=\"0.5rem\" fontSize=\"1rem\" styleType=\"decimal\" lineHeight=\"1.5rem\">\n        <ListItem color=\"gray.500\">\n          Keep your phone charged and connected to the internet at all time to avoid disconnection.\n        </ListItem>\n        <ListItem color=\"gray.500\">\n          Do not use WhatsApp Web/ Desktop simultaneously since WhatsApp only allows 1 active web\n          session at any given time.\n        </ListItem>\n        <ListItem color=\"gray.500\">\n          If you logout Simpu from Whatsapp on your phone, all your Whatsapp messages will be\n          deleted from your Simpu inbox this is to ensure your privacy.\n        </ListItem>\n      </List>\n      <Box my=\"1.5rem\">\n        <Button isFullWidth variantColor=\"blue\" onClick={handleClose}>\n          Finish\n        </Button>\n      </Box>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}