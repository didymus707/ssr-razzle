{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/integrations/components/ConnectedAccts.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Stack, Text, Flex, Link, Avatar } from '@chakra-ui/core';\nimport { ConfirmModal, Button } from 'app/components';\nimport { selectActiveOrgChannelCredentials } from '../../channels';\nimport { requestAccessUrls } from '../../channels/channels.data';\nimport { useSelector } from 'react-redux';\nimport { INBOX_INIT, selectCustomerById } from '../../inbox';\nimport { ChannelConnectBtn } from '../../channels/components';\n\nfunction AcctItem({\n  customer_id,\n  credential_id,\n  index,\n  baseUrl,\n  disconnectBtnText,\n  onAccountDeleteSelect\n}) {\n  const {\n    image_url,\n    platform_name,\n    platform_nick\n  } = useSelector(state => selectCustomerById(state, customer_id)) || INBOX_INIT.customer;\n  return __jsx(Flex, {\n    key: platform_nick,\n    alignItems: \"center\",\n    paddingY: \"1.1875rem\",\n    borderTop: index === 0 ? 'none' : 'solid 1px rgba(0, 0, 0, 0.08)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, image_url && __jsx(Avatar, {\n    src: image_url,\n    name: platform_name || platform_nick,\n    marginRight: \".5rem\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), platform_nick && baseUrl ? __jsx(Link, {\n    isExternal: true,\n    href: `${baseUrl}/${platform_nick}`,\n    fontWeight: 600,\n    fontSize: \".875rem\",\n    color: \"#3d50df\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, `@${platform_nick}`) : __jsx(Text, {\n    fontWeight: 600,\n    fontSize: \".875rem\",\n    color: \"#3d50df\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, platform_name), __jsx(Button, {\n    variant: \"ghost\",\n    variantColor: \"red\",\n    fontSize: \".75rem\",\n    leftIcon: \"delete\",\n    height: \"auto\",\n    marginLeft: \"auto\",\n    padding: \".25rem .5rem\",\n    onClick: () => onAccountDeleteSelect({\n      credential_id,\n      user: {\n        platform_name,\n        platform_nick\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, disconnectBtnText || 'Remove'));\n}\n\nexport function ConnectedAccounts({\n  history,\n  channel,\n  disconnectAccount,\n  isDisconnectLoading,\n  handleModelOpen,\n  isModalOpen,\n  data: {\n    subHeading,\n    baseUrl,\n    disconnectBtnText = ''\n  }\n}) {\n  const {\n    0: selectedAccount,\n    1: setSelectedAccount\n  } = useState({\n    user: {\n      platform_nick: '',\n      platform_name: ''\n    },\n    credential_id: ''\n  });\n  const accounts = useSelector(state => selectActiveOrgChannelCredentials(state, channel));\n  const {\n    credential_id,\n    user: {\n      platform_nick,\n      platform_name\n    }\n  } = selectedAccount;\n  const addMoreText = `+ Add${accounts.length > 0 ? '  more' : ''}`;\n\n  const handleAccountDeleteSelect = item => {\n    handleModelOpen(true);\n    setSelectedAccount(item);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Text, {\n    fontWeight: 500,\n    textAlign: \"center\",\n    color: channel !== 'phone' ? 'rgba(17, 17, 17, 0.5)' : 'initial',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Connected Account\"), __jsx(Text, {\n    marginTop: \"1.875rem\",\n    fontSize: \".75rem\",\n    opacity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, subHeading), __jsx(Stack, {\n    spacing: \".5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, accounts.length === 0 ? __jsx(Text, {\n    fontSize: \".875rem\",\n    marginTop: \".5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"No account connected yet\") : accounts.map(({\n    user_id,\n    uuid\n  }, index) => __jsx(AcctItem, {\n    key: uuid,\n    index: index,\n    baseUrl: baseUrl,\n    customer_id: user_id,\n    credential_id: uuid,\n    disconnectBtnText: disconnectBtnText,\n    onAccountDeleteSelect: handleAccountDeleteSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }))), ['instagram'].includes(channel) ? __jsx(Link, {\n    isExternal: true,\n    href: requestAccessUrls[channel],\n    fontSize: \".875rem\",\n    fontWeight: 500,\n    marginTop: \".5em\",\n    _hover: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, addMoreText) : __jsx(ChannelConnectBtn, {\n    which: channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"unstyled\",\n    fontSize: \".875rem\",\n    fontWeight: 500,\n    height: \"auto\",\n    marginTop: \".5em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, addMoreText)), __jsx(Text, {\n    fontSize: \".875rem\",\n    marginTop: \"3.5rem\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"Subscription is due on\", __jsx(Text, {\n    as: \"span\",\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, ' ', \"August 21st, 2021\")), __jsx(Flex, {\n    marginTop: \"1rem\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    isExternal: true,\n    href: \"/s/settings/organization/billing\",\n    fontWeight: 500,\n    fontSize: \".875rem\",\n    color: \"#3d50df\",\n    textDecoration: \"underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"View billing to cancel subscription\")), __jsx(ConfirmModal, {\n    isOpen: isModalOpen,\n    onClose: () => handleModelOpen(false),\n    title: `Disconnect ${platform_nick && baseUrl ? platform_nick : platform_name}`,\n    description: \"Performing this action will close all the open and unassigned conversations of the account.\",\n    isLoading: isDisconnectLoading,\n    onConfirm: () => disconnectAccount(platform_nick || platform_name || '', credential_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/integrations/components/ConnectedAccts.tsx"],"names":["React","useState","Stack","Text","Flex","Link","Avatar","ConfirmModal","Button","selectActiveOrgChannelCredentials","requestAccessUrls","useSelector","INBOX_INIT","selectCustomerById","ChannelConnectBtn","AcctItem","customer_id","credential_id","index","baseUrl","disconnectBtnText","onAccountDeleteSelect","image_url","platform_name","platform_nick","state","customer","user","ConnectedAccounts","history","channel","disconnectAccount","isDisconnectLoading","handleModelOpen","isModalOpen","data","subHeading","selectedAccount","setSelectedAccount","accounts","addMoreText","length","handleAccountDeleteSelect","item","map","user_id","uuid","includes","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Stack, Text, Flex, Link, Avatar } from '@chakra-ui/core';\nimport { ConnectedAccountDataProps, ConnectedAccountProps } from '../integrations.type';\nimport { ConfirmModal, Button } from 'app/components';\nimport { CredentialSchema, selectActiveOrgChannelCredentials } from '../../channels';\nimport { requestAccessUrls } from '../../channels/channels.data';\nimport { RootState } from '../../../../root';\nimport { useSelector } from 'react-redux';\nimport { CustomerSchema, INBOX_INIT, selectCustomerById } from '../../inbox';\nimport { ChannelConnectBtn } from '../../channels/components';\n\ntype AccountSchema = {\n  user: Pick<CustomerSchema, 'platform_name' | 'platform_nick'>;\n  credential_id: CredentialSchema['uuid'];\n};\n\nfunction AcctItem({\n  customer_id,\n  credential_id,\n  index,\n  baseUrl,\n  disconnectBtnText,\n  onAccountDeleteSelect,\n}: {\n  index: number;\n  customer_id: string;\n  credential_id: string;\n  onAccountDeleteSelect: (item: AccountSchema) => void;\n} & Pick<ConnectedAccountDataProps, 'baseUrl' | 'disconnectBtnText'>) {\n  const { image_url, platform_name, platform_nick } =\n    useSelector((state: RootState) => selectCustomerById(state, customer_id)) ||\n    INBOX_INIT.customer;\n\n  return (\n    <Flex\n      key={platform_nick}\n      alignItems=\"center\"\n      paddingY=\"1.1875rem\"\n      borderTop={index === 0 ? 'none' : 'solid 1px rgba(0, 0, 0, 0.08)'}\n    >\n      {image_url && (\n        <Avatar\n          src={image_url}\n          name={platform_name || platform_nick}\n          marginRight=\".5rem\"\n          size=\"sm\"\n        />\n      )}\n\n      {platform_nick && baseUrl ? (\n        <Link\n          isExternal\n          href={`${baseUrl}/${platform_nick}`}\n          fontWeight={600}\n          fontSize=\".875rem\"\n          color=\"#3d50df\"\n        >\n          {`@${platform_nick}`}\n        </Link>\n      ) : (\n        <Text fontWeight={600} fontSize=\".875rem\" color=\"#3d50df\">\n          {platform_name}\n        </Text>\n      )}\n\n      <Button\n        variant=\"ghost\"\n        variantColor=\"red\"\n        fontSize=\".75rem\"\n        leftIcon=\"delete\"\n        height=\"auto\"\n        marginLeft=\"auto\"\n        padding=\".25rem .5rem\"\n        onClick={() =>\n          onAccountDeleteSelect({ credential_id, user: { platform_name, platform_nick } })\n        }\n      >\n        {disconnectBtnText || 'Remove'}\n      </Button>\n    </Flex>\n  );\n}\n\nexport function ConnectedAccounts({\n  history,\n  channel,\n  disconnectAccount,\n  isDisconnectLoading,\n  handleModelOpen,\n  isModalOpen,\n  data: { subHeading, baseUrl, disconnectBtnText = '' },\n}: ConnectedAccountProps) {\n  const [selectedAccount, setSelectedAccount] = useState<AccountSchema>({\n    user: { platform_nick: '', platform_name: '' },\n    credential_id: '',\n  });\n\n  const accounts = useSelector((state: RootState) =>\n    selectActiveOrgChannelCredentials(state, channel),\n  );\n\n  const {\n    credential_id,\n    user: { platform_nick, platform_name },\n  } = selectedAccount;\n  const addMoreText = `+ Add${accounts.length > 0 ? '  more' : ''}`;\n\n  const handleAccountDeleteSelect = (item: AccountSchema) => {\n    handleModelOpen(true);\n    setSelectedAccount(item);\n  };\n\n  return (\n    <>\n      <Text\n        fontWeight={500}\n        textAlign=\"center\"\n        color={channel !== 'phone' ? 'rgba(17, 17, 17, 0.5)' : 'initial'}\n      >\n        Connected Account\n      </Text>\n\n      <Text marginTop=\"1.875rem\" fontSize=\".75rem\" opacity={0.5}>\n        {subHeading}\n      </Text>\n\n      <Stack spacing=\".5rem\">\n        {accounts.length === 0 ? (\n          <Text fontSize=\".875rem\" marginTop=\".5rem\">\n            No account connected yet\n          </Text>\n        ) : (\n          accounts.map(({ user_id, uuid }, index) => (\n            <AcctItem\n              key={uuid}\n              index={index}\n              baseUrl={baseUrl}\n              customer_id={user_id}\n              credential_id={uuid}\n              disconnectBtnText={disconnectBtnText}\n              onAccountDeleteSelect={handleAccountDeleteSelect}\n            />\n          ))\n        )}\n      </Stack>\n\n      {['instagram'].includes(channel) ? (\n        <Link\n          isExternal\n          href={requestAccessUrls[channel]}\n          fontSize=\".875rem\"\n          fontWeight={500}\n          marginTop=\".5em\"\n          _hover={{\n            textDecoration: 'none',\n          }}\n        >\n          {addMoreText}\n        </Link>\n      ) : (\n        <ChannelConnectBtn which={channel}>\n          <Button\n            variant=\"unstyled\"\n            fontSize=\".875rem\"\n            fontWeight={500}\n            height=\"auto\"\n            marginTop=\".5em\"\n          >\n            {addMoreText}\n          </Button>\n        </ChannelConnectBtn>\n      )}\n\n      <Text fontSize=\".875rem\" marginTop=\"3.5rem\" textAlign=\"center\">\n        Subscription is due on\n        <Text as=\"span\" fontWeight={600}>\n          {' '}\n          August 21st, 2021\n        </Text>\n      </Text>\n\n      <Flex marginTop=\"1rem\" justifyContent=\"center\">\n        <Link\n          isExternal\n          href=\"/s/settings/organization/billing\"\n          fontWeight={500}\n          fontSize=\".875rem\"\n          color=\"#3d50df\"\n          textDecoration=\"underline\"\n        >\n          View billing to cancel subscription\n        </Link>\n      </Flex>\n\n      <ConfirmModal\n        isOpen={isModalOpen}\n        onClose={() => handleModelOpen(false)}\n        title={`Disconnect ${platform_nick && baseUrl ? platform_nick : platform_name}`}\n        description=\"Performing this action will close all the open and unassigned conversations of the account.\"\n        isLoading={isDisconnectLoading}\n        onConfirm={() => disconnectAccount(platform_nick || platform_name || '', credential_id)}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}