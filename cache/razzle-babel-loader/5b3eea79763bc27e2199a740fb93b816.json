{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/Menu/index.tsx\";\nvar __jsx = React.createElement;\nimport { Menu as ChakraMenu, MenuButton, MenuDivider, MenuGroup, MenuItem as ChakraMenuItem, MenuList } from '@chakra-ui/core';\nimport React, { forwardRef } from 'react';\nexport const MenuItem = props => __jsx(ChakraMenuItem, _extends({}, props, {\n  color: \"gray.900\",\n  _hover: {\n    bg: 'gray.200'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}));\nexport const Menu = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    options,\n    renderItem,\n    renderEmptyState,\n    menuButtonProps,\n    menuListProps\n  } = props;\n  return __jsx(ChakraMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(MenuButton, _extends({}, menuButtonProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(MenuList, _extends({\n    ref: ref,\n    borderWidth: \"0\",\n    boxShadow: \"0px 10px 15px rgba(0, 0, 0, 0.06)\"\n  }, menuListProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), options.length ? options.map(renderItem) : renderEmptyState));\n});\nexport const MenuWithGroup = props => {\n  const {\n    menuButtonProps,\n    renderItem,\n    groups,\n    renderEmptyState,\n    menuListProps\n  } = props;\n  return __jsx(ChakraMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(MenuButton, _extends({}, menuButtonProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  })), __jsx(MenuList, _extends({\n    borderWidth: \"0\",\n    boxShadow: \"0px 10px 15px rgba(0, 0, 0, 0.06)\"\n  }, menuListProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), groups.length ? groups.map((group, index) => __jsx(React.Fragment, null, __jsx(MenuGroup, {\n    title: group.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, group.options.map(renderItem)), index !== groups.length - 1 && __jsx(MenuDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 49\n    }\n  }))) : renderEmptyState));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/Menu/index.tsx"],"names":["Menu","ChakraMenu","MenuButton","MenuDivider","MenuGroup","MenuItem","ChakraMenuItem","MenuList","React","forwardRef","props","bg","ref","options","renderItem","renderEmptyState","menuButtonProps","menuListProps","length","map","MenuWithGroup","groups","group","index","title"],"mappings":";;;AAAA,SACEA,IAAI,IAAIC,UADV,EAEEC,UAFF,EAIEC,WAJF,EAKEC,SALF,EAOEC,QAAQ,IAAIC,cAPd,EASEC,QATF,QAYO,iBAZP;AAaA,OAAOC,KAAP,IAAgBC,UAAhB,QAA6C,OAA7C;AAqBA,OAAO,MAAMJ,QAAQ,GAAIK,KAAD,IACtB,MAAC,cAAD,eACMA,KADN;AAEE,EAAA,KAAK,EAAC,UAFR;AAGE,EAAA,MAAM,EAAE;AACNC,IAAAA,EAAE,EAAE;AADE,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMX,IAAI,gBAAGS,UAAU,CAC5B,CAACC,KAAD,EAAkFE,GAAlF,KAA+F;AAC7F,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,gBAAvB;AAAyCC,IAAAA,eAAzC;AAA0DC,IAAAA;AAA1D,MAA4EP,KAAlF;AACA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,eAAgBM,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,QAAD;AACE,IAAA,GAAG,EAAEJ,GADP;AAEE,IAAA,WAAW,EAAC,GAFd;AAGE,IAAA,SAAS,EAAC;AAHZ,KAIMK,aAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGJ,OAAO,CAACK,MAAR,GAAiBL,OAAO,CAACM,GAAR,CAAYL,UAAZ,CAAjB,GAA2CC,gBAN9C,CAFF,CADF;AAaD,CAhB2B,CAAvB;AAmBP,OAAO,MAAMK,aAAa,GAAIV,KAAD,IAA+B;AAC1D,QAAM;AAAEM,IAAAA,eAAF;AAAmBF,IAAAA,UAAnB;AAA+BO,IAAAA,MAA/B;AAAuCN,IAAAA,gBAAvC;AAAyDE,IAAAA;AAAzD,MAA2EP,KAAjF;AACA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,eAAgBM,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,QAAD;AAAU,IAAA,WAAW,EAAC,GAAtB;AAA0B,IAAA,SAAS,EAAC;AAApC,KAA4EC,aAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGI,MAAM,CAACH,MAAP,GACGG,MAAM,CAACF,GAAP,CAAW,CAACG,KAAD,EAAQC,KAAR,KACT,4BACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAED,KAAK,CAACE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCF,KAAK,CAACT,OAAN,CAAcM,GAAd,CAAkBL,UAAlB,CAAhC,CADF,EAEGS,KAAK,KAAKF,MAAM,CAACH,MAAP,GAAgB,CAA1B,IAA+B,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlC,CADF,CADH,GAOGH,gBARN,CAFF,CADF;AAeD,CAjBM","sourcesContent":["import {\n  Menu as ChakraMenu,\n  MenuButton,\n  MenuButtonProps,\n  MenuDivider,\n  MenuGroup,\n  MenuGroupProps as ChakraMenuGroupProps,\n  MenuItem as ChakraMenuItem,\n  MenuItemProps,\n  MenuList,\n  MenuListProps,\n  MenuProps as ChakraMenuProps,\n} from '@chakra-ui/core';\nimport React, { forwardRef, ReactNode } from 'react';\n\ntype MenuGroupProps = {\n  title: ChakraMenuGroupProps['title'];\n  options: any[];\n};\n\nexport type MenuProps = ChakraMenuProps & {\n  options: any[];\n  menuButtonProps: MenuButtonProps;\n  renderEmptyState?: () => ReactNode;\n  renderItem: (option: any, index?: number) => void;\n};\n\nexport type MenuWithGroupProps = ChakraMenuProps & {\n  groups: MenuGroupProps[];\n  menuButtonProps: MenuButtonProps;\n  renderEmptyState?: () => ReactNode;\n  renderItem: (option: any, index?: number) => void;\n} & { menuListProps?: Partial<MenuListProps> };\n\nexport const MenuItem = (props: MenuItemProps) => (\n  <ChakraMenuItem\n    {...props}\n    color=\"gray.900\"\n    _hover={{\n      bg: 'gray.200',\n    }}\n  />\n);\n\nexport const Menu = forwardRef(\n  (props: Omit<MenuProps, 'children'> & { menuListProps?: Partial<MenuListProps> }, ref: any) => {\n    const { options, renderItem, renderEmptyState, menuButtonProps, menuListProps } = props;\n    return (\n      <ChakraMenu>\n        <MenuButton {...menuButtonProps} />\n        <MenuList\n          ref={ref}\n          borderWidth=\"0\"\n          boxShadow=\"0px 10px 15px rgba(0, 0, 0, 0.06)\"\n          {...menuListProps}\n        >\n          {options.length ? options.map(renderItem) : renderEmptyState}\n        </MenuList>\n      </ChakraMenu>\n    );\n  },\n);\n\nexport const MenuWithGroup = (props: MenuWithGroupProps) => {\n  const { menuButtonProps, renderItem, groups, renderEmptyState, menuListProps } = props;\n  return (\n    <ChakraMenu>\n      <MenuButton {...menuButtonProps} />\n      <MenuList borderWidth=\"0\" boxShadow=\"0px 10px 15px rgba(0, 0, 0, 0.06)\" {...menuListProps}>\n        {groups.length\n          ? groups.map((group, index) => (\n              <>\n                <MenuGroup title={group.title}>{group.options.map(renderItem)}</MenuGroup>\n                {index !== groups.length - 1 && <MenuDivider />}\n              </>\n            ))\n          : renderEmptyState}\n      </MenuList>\n    </ChakraMenu>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}