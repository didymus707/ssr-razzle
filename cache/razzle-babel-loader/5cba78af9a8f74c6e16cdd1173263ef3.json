{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/resources/list-resources/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Alert, AlertIcon, Box, CloseButton, Icon, Menu, MenuButton, MenuItem, MenuList, SimpleGrid, useDisclosure } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { selectListResources } from '../../../../../lists.selectors';\nimport { useHistory } from 'react-router';\nimport { DeleteResourceDialog } from '../delete-resource-dialog';\nimport { UpdateResourceDialog } from '../update-resource-dialog';\nimport { EmptyState } from '../../../../../../../components';\nimport noResources from '../../../../../assets/no-resources.svg';\nimport { getListResourceIcon } from '../../../../../lists.utils';\nimport { useQuery } from '../../../../../../../../hooks';\n\nconst StatusAlert = props => {\n  let message = '';\n  if (props.status === 'success') message = `${props.type} connection successful!`;else message = `Unable to add ${props.type} connection, please try again`;\n  return __jsx(Alert // @ts-ignore\n  , {\n    status: props.status,\n    color: \"#333333\",\n    fontSize: \"14px\",\n    borderRadius: \"8px\",\n    paddingY: \"15px\",\n    marginBottom: \"25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), message, __jsx(CloseButton, {\n    position: \"absolute\",\n    size: \"sm\",\n    right: \"10px\",\n    onClick: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ResourceItem = props => {\n  return __jsx(Menu, {\n    closeOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, ({\n    isOpen\n  }) => __jsx(React.Fragment, null, __jsx(MenuButton, {\n    as: Box,\n    className: `list-item--list ${isOpen && 'active'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    className: \"box\",\n    name: getListResourceIcon(props.provider),\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    className: \"label\" // @ts-ignore\n    ,\n    flexDirection: \"column !important\",\n    alignItems: \"flex-start !important\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    overflow: \"hidden\" // @ts-ignore\n    ,\n    textOverflow: \"ellipsis\",\n    maxWidth: \"260px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, props.name), __jsx(Box, {\n    fontSize: \"12px\",\n    color: \"#A5ABB3\",\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    color: \"#6cce6c\",\n    mr: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, \"[Read Only]\"), moment(props.created_datetime).format('DD/MM/YYYY')))), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"action-btn-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: \"chevron-down\",\n    color: \"white\",\n    size: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))), __jsx(MenuList, {\n    minWidth: \"150px\",\n    placement: \"bottom-end\",\n    color: \"#333333\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(MenuItem, {\n    onClick: props.onUpdateClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: \"edit\",\n    size: \"14px\",\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), \"Update connection\"), __jsx(MenuItem, {\n    color: \"#E73D51\",\n    onClick: props.onDeleteClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: \"trash\",\n    size: \"14px\",\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), \"Delete connection\")))));\n};\n\nexport const ListResources = props => {\n  const {\n    0: selectedResource,\n    1: setSelectedResource\n  } = useState(null);\n  const {\n    searchValue,\n    deleteResource,\n    updateResource,\n    enableResourceWebhook,\n    disableResourceWebhook\n  } = props;\n  const resources = useSelector(selectListResources);\n  const routerHistory = useHistory();\n  const query = useQuery();\n  const connectStatus = query.get('connectStatus');\n  const connectType = query.get('connectType');\n  const filteredResources = resources.filter(i => i.name.toLowerCase().includes(searchValue.toLowerCase()));\n  const {\n    isOpen: isUpdateDialogOpen,\n    onClose: closeUpdateDialog,\n    onOpen: openUpdateDialog\n  } = useDisclosure();\n  const {\n    isOpen: isDeleteDialogOpen,\n    onClose: closeDeleteDialog,\n    onOpen: openDeleteDialog\n  } = useDisclosure();\n  return __jsx(React.Fragment, null, __jsx(DeleteResourceDialog, {\n    isOpen: isDeleteDialogOpen,\n    onClose: closeDeleteDialog,\n    selectedResource: selectedResource,\n    deleteResource: deleteResource,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), __jsx(UpdateResourceDialog, {\n    isOpen: isUpdateDialogOpen,\n    onClose: closeUpdateDialog,\n    selectedResource: selectedResource,\n    updateResource: updateResource,\n    enableResourceWebhook: enableResourceWebhook,\n    disableResourceWebhook: disableResourceWebhook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, !searchValue && __jsx(Box, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 28\n    }\n  }, \"Connections\"), !!searchValue && __jsx(React.Fragment, null, !!filteredResources.length ? __jsx(Box, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"Connections found matching \\\"\", searchValue, \"\\\"\") : __jsx(Box, {\n    className: \"title inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"No connections found\")), __jsx(Button, {\n    variantColor: \"blue\",\n    size: \"sm\",\n    variant: \"solid\",\n    onClick: () => routerHistory.push('/s/lists/connections/new'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Connect a data source\")), connectType && ['success', 'error'].includes(connectStatus || '') && __jsx(StatusAlert, {\n    status: connectStatus,\n    type: connectType,\n    onClose: () => routerHistory.push('/s/lists/connections'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }), resources.length === 0 && __jsx(EmptyState, {\n    image: noResources,\n    paddingY: \"15vh\",\n    heading: \"Oops, no connections here\",\n    subheading: \"Setup a connection to enable easier, faster and realtime imports and data synchronization between data sources\",\n    subheadingProps: {\n      width: '500px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }), filteredResources.length > 0 && __jsx(SimpleGrid, {\n    columns: 2,\n    spacing: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, filteredResources.map(i => __jsx(ResourceItem, _extends({}, i, {\n    key: i.id,\n    id: i.id,\n    name: i.name,\n    onDeleteClicked: () => {\n      setSelectedResource(i.id);\n      openDeleteDialog();\n    },\n    onUpdateClicked: () => {\n      setSelectedResource(i.id);\n      openUpdateDialog();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/resources/list-resources/index.tsx"],"names":["React","useState","Alert","AlertIcon","Box","CloseButton","Icon","Menu","MenuButton","MenuItem","MenuList","SimpleGrid","useDisclosure","Button","moment","useSelector","selectListResources","useHistory","DeleteResourceDialog","UpdateResourceDialog","EmptyState","noResources","getListResourceIcon","useQuery","StatusAlert","props","message","status","type","onClose","ResourceItem","isOpen","provider","name","created_datetime","format","onUpdateClicked","onDeleteClicked","ListResources","selectedResource","setSelectedResource","searchValue","deleteResource","updateResource","enableResourceWebhook","disableResourceWebhook","resources","routerHistory","query","connectStatus","get","connectType","filteredResources","filter","i","toLowerCase","includes","isUpdateDialogOpen","closeUpdateDialog","onOpen","openUpdateDialog","isDeleteDialogOpen","closeDeleteDialog","openDeleteDialog","length","push","width","map","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Alert,\n  AlertIcon,\n  Box,\n  CloseButton,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  SimpleGrid,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { selectListResources } from '../../../../../lists.selectors';\nimport { useHistory } from 'react-router';\nimport { DeleteResourceDialog } from '../delete-resource-dialog';\nimport { UpdateResourceDialog } from '../update-resource-dialog';\nimport { EmptyState } from '../../../../../../../components';\nimport noResources from '../../../../../assets/no-resources.svg';\nimport { getListResourceIcon } from '../../../../../lists.utils';\nimport { useQuery } from '../../../../../../../../hooks';\nimport { Resource } from '../../../../../lists.types';\n\ninterface StatusAlertProps {\n  status: string | null;\n  type: string;\n  onClose: () => void;\n}\n\nconst StatusAlert = (props: StatusAlertProps) => {\n  let message: string = '';\n\n  if (props.status === 'success') message = `${props.type} connection successful!`;\n  else message = `Unable to add ${props.type} connection, please try again`;\n\n  return (\n    <Alert\n      // @ts-ignore\n      status={props.status}\n      color=\"#333333\"\n      fontSize=\"14px\"\n      borderRadius=\"8px\"\n      paddingY=\"15px\"\n      marginBottom=\"25px\"\n    >\n      <AlertIcon />\n      {message}\n      <CloseButton position=\"absolute\" size=\"sm\" right=\"10px\" onClick={props.onClose} />\n    </Alert>\n  );\n};\n\ninterface ItemProps {\n  id: string;\n  name: string;\n  type?: string;\n  provider: string;\n  created_datetime?: string;\n  active?: boolean;\n  onDeleteClicked: () => void;\n  onUpdateClicked: () => void;\n}\n\nconst ResourceItem = (props: ItemProps) => {\n  return (\n    <Menu closeOnSelect>\n      {({ isOpen }) => (\n        <>\n          <MenuButton as={Box} className={`list-item--list ${isOpen && 'active'}`}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Icon className=\"box\" name={getListResourceIcon(props.provider)} size=\"20px\" />\n              <Box\n                className=\"label\"\n                // @ts-ignore\n                flexDirection=\"column !important\"\n                alignItems=\"flex-start !important\"\n              >\n                <Box\n                  overflow=\"hidden\"\n                  // @ts-ignore\n                  textOverflow=\"ellipsis\"\n                  maxWidth=\"260px\"\n                >\n                  {props.name}\n                </Box>\n                <Box fontSize=\"12px\" color=\"#A5ABB3\" display=\"flex\">\n                  <Box color=\"#6cce6c\" mr=\"0.5rem\">\n                    [Read Only]\n                  </Box>\n                  {moment(props.created_datetime).format('DD/MM/YYYY')}\n                </Box>\n              </Box>\n            </Box>\n            <Box>\n              <Box className=\"action-btn-bg\">\n                <Icon name=\"chevron-down\" color=\"white\" size=\"12px\" />\n              </Box>\n            </Box>\n\n            <MenuList minWidth=\"150px\" placement=\"bottom-end\" color=\"#333333\" fontSize=\"12px\">\n              <MenuItem onClick={props.onUpdateClicked}>\n                <Icon name=\"edit\" size=\"14px\" mr=\"10px\" />\n                Update connection\n              </MenuItem>\n              <MenuItem color=\"#E73D51\" onClick={props.onDeleteClicked}>\n                <Icon name=\"trash\" size=\"14px\" mr=\"10px\" />\n                Delete connection\n              </MenuItem>\n            </MenuList>\n          </MenuButton>\n        </>\n      )}\n    </Menu>\n  );\n};\n\ninterface Props {\n  searchValue: string;\n  deleteResource: Function;\n  updateResource: Function;\n  enableResourceWebhook: Function;\n  disableResourceWebhook: Function;\n}\n\nexport const ListResources = (props: Props) => {\n  const [selectedResource, setSelectedResource] = useState<string | null>(null);\n\n  const {\n    searchValue,\n    deleteResource,\n    updateResource,\n    enableResourceWebhook,\n    disableResourceWebhook,\n  } = props;\n\n  const resources: Resource[] = useSelector(selectListResources);\n  const routerHistory = useHistory();\n\n  const query = useQuery();\n\n  const connectStatus = query.get('connectStatus');\n  const connectType = query.get('connectType');\n\n  const filteredResources = resources.filter((i: Resource) =>\n    i.name.toLowerCase().includes(searchValue.toLowerCase()),\n  );\n\n  const {\n    isOpen: isUpdateDialogOpen,\n    onClose: closeUpdateDialog,\n    onOpen: openUpdateDialog,\n  } = useDisclosure();\n\n  const {\n    isOpen: isDeleteDialogOpen,\n    onClose: closeDeleteDialog,\n    onOpen: openDeleteDialog,\n  } = useDisclosure();\n\n  return (\n    <>\n      <DeleteResourceDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        selectedResource={selectedResource}\n        deleteResource={deleteResource}\n      />\n\n      <UpdateResourceDialog\n        isOpen={isUpdateDialogOpen}\n        onClose={closeUpdateDialog}\n        selectedResource={selectedResource}\n        updateResource={updateResource}\n        enableResourceWebhook={enableResourceWebhook}\n        disableResourceWebhook={disableResourceWebhook}\n      />\n\n      <Box className=\"content\">\n        <Box className=\"section-title\">\n          {!searchValue && <Box className=\"title\">Connections</Box>}\n          {!!searchValue && (\n            <>\n              {!!filteredResources.length ? (\n                <Box className=\"title\">Connections found matching \"{searchValue}\"</Box>\n              ) : (\n                <Box className=\"title inactive\">No connections found</Box>\n              )}\n            </>\n          )}\n          <Button\n            variantColor=\"blue\"\n            size=\"sm\"\n            variant=\"solid\"\n            onClick={() => routerHistory.push('/s/lists/connections/new')}\n          >\n            Connect a data source\n          </Button>\n        </Box>\n\n        {connectType && ['success', 'error'].includes(connectStatus || '') && (\n          <StatusAlert\n            status={connectStatus}\n            type={connectType}\n            onClose={() => routerHistory.push('/s/lists/connections')}\n          />\n        )}\n\n        {resources.length === 0 && (\n          <EmptyState\n            image={noResources}\n            paddingY=\"15vh\"\n            heading=\"Oops, no connections here\"\n            subheading=\"Setup a connection to enable easier, faster and realtime imports and data synchronization between data sources\"\n            subheadingProps={{\n              width: '500px',\n            }}\n          />\n        )}\n\n        {filteredResources.length > 0 && (\n          <SimpleGrid columns={2} spacing=\"5px\">\n            {filteredResources.map((i: Resource) => (\n              <ResourceItem\n                {...i}\n                key={i.id}\n                id={i.id}\n                name={i.name}\n                onDeleteClicked={() => {\n                  setSelectedResource(i.id);\n                  openDeleteDialog();\n                }}\n                onUpdateClicked={() => {\n                  setSelectedResource(i.id);\n                  openUpdateDialog();\n                }}\n              />\n            ))}\n          </SimpleGrid>\n        )}\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}