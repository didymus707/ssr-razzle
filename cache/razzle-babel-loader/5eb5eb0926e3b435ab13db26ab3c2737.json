{"ast":null,"code":"import _objectSpread from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/EditQuickReply.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Stack, useToast } from '@chakra-ui/core';\nimport { FullPageSpinner, PreTitle, ToastBox } from 'app/components';\nimport { convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport React from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useHistory, useParams } from 'react-router';\nimport { deleteQuickReplies, getQuickReply, updateQuickReply } from '../inbox.service';\nimport { PageBack, QuickReplyForm } from './component';\nexport const InboxSettingsEditQuickReply = () => {\n  var _data$name;\n\n  const {\n    id\n  } = useParams();\n  const toast = useToast();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isLoading\n  } = useQuery(['quick-reply', id], () => getQuickReply(id));\n\n  const handleGoBack = () => history.push('/s/inbox/settings/quick-replies');\n\n  const {\n    isLoading: isEditing,\n    mutate\n  } = useMutation(payload => updateQuickReply(payload.id, payload), {\n    onMutate: async payload => {\n      const {\n        id,\n        name,\n        subject,\n        content\n      } = payload;\n      const newReply = {\n        id,\n        name,\n        template: {\n          subject,\n          content\n        }\n      };\n      await queryClient.cancelQueries(['quick-reply', id]);\n      const previousReply = queryClient.getQueryData(['quick-reply', id]);\n      queryClient.setQueryData(['quick-reply', id], newReply);\n      return {\n        previousReply,\n        newReply\n      };\n    },\n    onSuccess: () => {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Quick reply updated successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        })\n      });\n      queryClient.invalidateQueries(['quick-replies', 1]);\n      handleGoBack();\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData(['quick-reply', id], context.previousReply);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 36\n          }\n        })\n      });\n    }\n  });\n  const {\n    isLoading: isDeleting,\n    mutate: mutateQuickReplyDelete\n  } = useMutation(payload => deleteQuickReplies({\n    ids: [payload.uuid]\n  }), {\n    onMutate: async payload => {\n      await queryClient.cancelQueries(['quick-replies', 1]);\n      const previousReplies = queryClient.getQueryData(['quick-replies', 1]);\n      queryClient.setQueryData(['quick-replies', 1], old => _objectSpread(_objectSpread({}, old), {}, {\n        //@ts-ignore\n        quick_replies: old === null || old === void 0 ? void 0 : old.quick_replies.filter(item => item.uuid !== payload.uuid)\n      }));\n      return {\n        previousReplies\n      };\n    },\n    onSuccess: () => {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Quick reply deleted successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        })\n      });\n      handleGoBack();\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData('quick-replies', context.previousReplies);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  });\n\n  const handleEditReply = values => {\n    const rawContentState = (values === null || values === void 0 ? void 0 : values.content) && convertToRaw(values.content.getCurrentContent());\n    const content = rawContentState && draftToHtml(rawContentState, {\n      trigger: '#',\n      separator: ' '\n    });\n\n    const payload = _objectSpread(_objectSpread({}, values), {}, {\n      content\n    });\n\n    mutate(payload);\n  };\n\n  const handleDeleteReply = () => {\n    mutateQuickReplyDelete(data);\n  };\n\n  return __jsx(Box, {\n    height: \"100%\",\n    bg: \"white\",\n    overflowY: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, __jsx(PageBack, {\n    title: \"Back to Quick Replies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), isLoading ? __jsx(FullPageSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }) : __jsx(Box, {\n    maxW: \"800px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: \"7rem\",\n    flex: 1,\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, __jsx(PreTitle, {\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"edit quick reply\"), __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, __jsx(QuickReplyForm, {\n    isLoading: isEditing,\n    isDeleting: isDeleting,\n    initialValues: {\n      id,\n      name: (_data$name = data === null || data === void 0 ? void 0 : data.name) !== null && _data$name !== void 0 ? _data$name : '',\n      subject: data === null || data === void 0 ? void 0 : data.template.subject,\n      content: data === null || data === void 0 ? void 0 : data.template.content\n    },\n    onCancel: handleGoBack,\n    onSubmit: handleEditReply,\n    onDelete: handleDeleteReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/EditQuickReply.tsx"],"names":["Box","Stack","useToast","FullPageSpinner","PreTitle","ToastBox","convertToRaw","draftToHtml","React","useMutation","useQuery","useQueryClient","useHistory","useParams","deleteQuickReplies","getQuickReply","updateQuickReply","PageBack","QuickReplyForm","InboxSettingsEditQuickReply","id","toast","history","queryClient","data","isLoading","handleGoBack","push","isEditing","mutate","payload","onMutate","name","subject","content","newReply","template","cancelQueries","previousReply","getQueryData","setQueryData","onSuccess","position","render","onClose","invalidateQueries","onError","error","newData","context","message","isDeleting","mutateQuickReplyDelete","ids","uuid","previousReplies","old","quick_replies","filter","item","handleEditReply","values","rawContentState","getCurrentContent","trigger","separator","handleDeleteReply"],"mappings":"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","sourcesContent":["import { Box, Stack, useToast } from '@chakra-ui/core';\nimport { FullPageSpinner, PreTitle, ToastBox } from 'app/components';\nimport { AxiosError } from 'axios';\nimport { convertToRaw, EditorState } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport React from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useHistory, useParams } from 'react-router';\nimport { deleteQuickReplies, getQuickReply, updateQuickReply } from '../inbox.service';\nimport { QuickReplySchema } from '../inbox.types';\nimport { PageBack, QuickReplyForm } from './component';\n\nexport const InboxSettingsEditQuickReply = () => {\n  const { id } = useParams<{ id: string }>();\n\n  const toast = useToast();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  const { data, isLoading } = useQuery<QuickReplySchema, any>(['quick-reply', id], () =>\n    getQuickReply(id),\n  );\n\n  const handleGoBack = () => history.push('/s/inbox/settings/quick-replies');\n\n  const { isLoading: isEditing, mutate } = useMutation<any, AxiosError, any, any>(\n    (payload: { id: string; name: string; subject?: string; content: string }) =>\n      updateQuickReply(payload.id, payload),\n    {\n      onMutate: async payload => {\n        const { id, name, subject, content } = payload;\n        const newReply = {\n          id,\n          name,\n          template: {\n            subject,\n            content,\n          },\n        };\n        await queryClient.cancelQueries(['quick-reply', id]);\n        const previousReply = queryClient.getQueryData(['quick-reply', id]);\n        queryClient.setQueryData(['quick-reply', id], newReply);\n        return { previousReply, newReply };\n      },\n      onSuccess: () => {\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox\n              status=\"success\"\n              onClose={onClose}\n              message=\"Quick reply updated successfully\"\n            />\n          ),\n        });\n        queryClient.invalidateQueries(['quick-replies', 1]);\n        handleGoBack();\n      },\n      onError: (error, newData, context) => {\n        queryClient.setQueryData(['quick-reply', id], context.previousReply);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n        });\n      },\n    },\n  );\n\n  const { isLoading: isDeleting, mutate: mutateQuickReplyDelete } = useMutation<\n    any,\n    AxiosError,\n    any,\n    any\n  >((payload: QuickReplySchema) => deleteQuickReplies({ ids: [payload.uuid] }), {\n    onMutate: async payload => {\n      await queryClient.cancelQueries(['quick-replies', 1]);\n      const previousReplies = queryClient.getQueryData(['quick-replies', 1]);\n      queryClient.setQueryData(['quick-replies', 1], old => ({\n        //@ts-ignore\n        ...old,\n        //@ts-ignore\n        quick_replies: old?.quick_replies.filter(item => item.uuid !== payload.uuid),\n      }));\n      return { previousReplies };\n    },\n    onSuccess: () => {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox status=\"success\" onClose={onClose} message=\"Quick reply deleted successfully\" />\n        ),\n      });\n      handleGoBack();\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData('quick-replies', context.previousReplies);\n\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n      });\n    },\n  });\n\n  const handleEditReply = (values: {\n    id?: string;\n    name: string;\n    subject?: string;\n    content?: EditorState;\n  }) => {\n    const rawContentState = values?.content && convertToRaw(values.content.getCurrentContent());\n    const content =\n      rawContentState &&\n      draftToHtml(rawContentState, {\n        trigger: '#',\n        separator: ' ',\n      });\n    const payload = { ...values, content };\n    mutate(payload);\n  };\n\n  const handleDeleteReply = () => {\n    mutateQuickReplyDelete(data);\n  };\n\n  return (\n    <Box height=\"100%\" bg=\"white\" overflowY=\"auto\">\n      <PageBack title=\"Back to Quick Replies\" />\n      {isLoading ? (\n        <FullPageSpinner />\n      ) : (\n        <Box maxW=\"800px\">\n          <Stack spacing=\"7rem\" flex={1} isInline>\n            <PreTitle color=\"black\">edit quick reply</PreTitle>\n            <Box flex={1}>\n              <QuickReplyForm\n                isLoading={isEditing}\n                isDeleting={isDeleting}\n                initialValues={{\n                  id,\n                  name: data?.name ?? '',\n                  subject: data?.template.subject,\n                  content: data?.template.content,\n                }}\n                onCancel={handleGoBack}\n                onSubmit={handleEditReply}\n                onDelete={handleDeleteReply}\n              />\n            </Box>\n          </Stack>\n        </Box>\n      )}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}