{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nexport const selectListCount = createSelector(state => state.lists, lists => lists.lists_by_id.length);\nexport const selectLists = createSelector(state => state.lists, list => list.lists);\nexport const selectSmartLists = createSelector(state => state.lists, list => list.smart_lists);\nexport const selectListsById = createSelector(state => state.lists, list => list.lists_by_id);\nexport const selectSmartListsById = createSelector(state => state.lists, list => list.smart_lists_by_id);\nexport const selectListFilters = createSelector(state => state.lists.filters, state => state.lists.filters_by_id, (filters, filters_by_id) => ({\n  filters,\n  filters_by_id\n}));\nexport const selectColumnsData = createSelector(state => state.lists.columns, state => state.lists.columns_by_id, state => state.lists.column_id_map, (columns, columns_by_id, column_id_map) => ({\n  columns,\n  columns_by_id,\n  column_id_map\n}));\nexport const selectRowsCount = createSelector(state => state.lists.rows_by_id, rows_by_id => rows_by_id.length);\nexport const selectListResources = createSelector(state => state.resources, resources => {\n  // @ts-ignore\n  return resources.by_id.map(i => resources.data[i]);\n});\nexport const selectDataModels = createSelector(state => state.dataModels, dataModels => {\n  // @ts-ignore\n  return dataModels.by_id.map(i => dataModels.data[i]);\n});\nexport const selectSegments = createSelector(state => state.segments, segments => {\n  // @ts-ignore\n  return segments.by_id.map(i => segments.data[i]);\n});\nexport const selectColumns = createSelector(state => state.lists, list => list.lists_by_id);\nexport const selectListMeta = createSelector(state => state.lists, list => list.meta);\nexport const selectInitialListId = createSelector(state => state.lists, list => list.initial_list);","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/lists.selectors.ts"],"names":["createSelector","selectListCount","state","lists","lists_by_id","length","selectLists","list","selectSmartLists","smart_lists","selectListsById","selectSmartListsById","smart_lists_by_id","selectListFilters","filters","filters_by_id","selectColumnsData","columns","columns_by_id","column_id_map","selectRowsCount","rows_by_id","selectListResources","resources","by_id","map","i","data","selectDataModels","dataModels","selectSegments","segments","selectColumns","selectListMeta","meta","selectInitialListId","initial_list"],"mappings":"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","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from '../../../root';\n\nexport const selectListCount = createSelector(\n  (state: RootState) => state.lists,\n  lists => lists.lists_by_id.length,\n);\n\nexport const selectLists = createSelector(\n  (state: RootState) => state.lists,\n  list => list.lists,\n);\n\nexport const selectSmartLists = createSelector(\n  (state: RootState) => state.lists,\n  list => list.smart_lists,\n);\n\nexport const selectListsById = createSelector(\n  (state: RootState) => state.lists,\n  list => list.lists_by_id,\n);\n\nexport const selectSmartListsById = createSelector(\n  (state: RootState) => state.lists,\n  list => list.smart_lists_by_id,\n);\n\nexport const selectListFilters = createSelector(\n  (state: RootState) => state.lists.filters,\n  (state: RootState) => state.lists.filters_by_id,\n  (filters, filters_by_id) => ({ filters, filters_by_id }),\n);\n\nexport const selectColumnsData = createSelector(\n  (state: RootState) => state.lists.columns,\n  (state: RootState) => state.lists.columns_by_id,\n  (state: RootState) => state.lists.column_id_map,\n  (columns, columns_by_id, column_id_map) => ({ columns, columns_by_id, column_id_map }),\n);\n\nexport const selectRowsCount = createSelector(\n  (state: RootState) => state.lists.rows_by_id,\n  rows_by_id => rows_by_id.length,\n);\n\nexport const selectListResources = createSelector(\n  (state: RootState) => state.resources,\n  resources => {\n    // @ts-ignore\n    return resources.by_id.map((i: string) => resources.data[i]);\n  },\n);\n\nexport const selectDataModels = createSelector(\n  (state: RootState) => state.dataModels,\n  dataModels => {\n    // @ts-ignore\n    return dataModels.by_id.map((i: string) => dataModels.data[i]);\n  },\n);\n\nexport const selectSegments = createSelector(\n  (state: RootState) => state.segments,\n  segments => {\n    // @ts-ignore\n    return segments.by_id.map((i: string) => segments.data[i]);\n  },\n);\n\nexport const selectColumns = createSelector(\n  (state: RootState) => state.lists,\n  list => list.lists_by_id,\n);\n\nexport const selectListMeta = createSelector(\n  (state: RootState) => state.lists,\n  list => list.meta,\n);\n\nexport const selectInitialListId = createSelector(\n  (state: RootState) => state.lists,\n  list => list.initial_list,\n);\n"]},"metadata":{},"sourceType":"module"}