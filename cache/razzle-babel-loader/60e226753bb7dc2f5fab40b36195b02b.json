{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/container.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteList, deleteListPermanently, deleteSmartList, deleteTrashPermanently, markListFavorite, resetSelectedList, restoreList, unMarkListFavorite, updateList, updateSmartList } from '../../lists.reducer';\nimport { openNoSubscriptionModal } from '../../../globals';\nimport { Component } from './component';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nconst mapStateToProps = state => _objectSpread({}, state.lists);\n\nconst stateConnector = connect(mapStateToProps, {\n  resetSelectedList,\n  updateList,\n  deleteList,\n  restoreList,\n  deleteSmartList,\n  updateSmartList,\n  markListFavorite,\n  unMarkListFavorite,\n  deleteListPermanently,\n  openNoSubscriptionModal,\n  deleteTrashPermanently\n});\n\nconst Container = props => __jsx(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }\n}, __jsx(Route, {\n  path: \"/s/lists/segments*\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, props, {\n  selectedTab: \"segments\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }\n}))), __jsx(Route, {\n  path: \"/s/lists/connections*\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, props, {\n  selectedTab: \"connections\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}))), __jsx(Route, {\n  path: \"/s/lists/data-models*\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, props, {\n  selectedTab: \"data-models\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n}))), __jsx(Route, {\n  path: \"/s/lists/smart\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, props, {\n  selectedTab: \"smart\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}))), __jsx(Route, {\n  path: \"/s/lists/smart\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, props, {\n  selectedTab: \"smart\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }\n}))), __jsx(Route, {\n  path: \"/s/lists/favorites\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, props, {\n  selectedTab: \"favorites\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }\n}))), __jsx(Route, {\n  path: \"/s/lists/trash\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, props, {\n  selectedTab: \"trash\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }\n}))), __jsx(Route, {\n  path: \"/s/lists/lists*\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, props, {\n  selectedTab: \"lists\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }\n}))), __jsx(Redirect, {\n  to: \"/s/lists/lists\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }\n}));\n\nexport const Lists = stateConnector(Container);","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/container.tsx"],"names":["React","connect","deleteList","deleteListPermanently","deleteSmartList","deleteTrashPermanently","markListFavorite","resetSelectedList","restoreList","unMarkListFavorite","updateList","updateSmartList","openNoSubscriptionModal","Component","Redirect","Route","Switch","mapStateToProps","state","lists","stateConnector","Container","props","Lists"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { RootState } from '../../../../../root';\nimport { connect } from 'react-redux';\nimport {\n  deleteList,\n  deleteListPermanently,\n  deleteSmartList,\n  deleteTrashPermanently,\n  markListFavorite,\n  resetSelectedList,\n  restoreList,\n  unMarkListFavorite,\n  updateList,\n  updateSmartList,\n} from '../../lists.reducer';\nimport { openNoSubscriptionModal } from '../../../globals';\nimport { Component } from './component';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nconst mapStateToProps = (state: RootState) => ({\n  ...state.lists,\n});\n\nconst stateConnector = connect(mapStateToProps, {\n  resetSelectedList,\n  updateList,\n  deleteList,\n  restoreList,\n  deleteSmartList,\n  updateSmartList,\n  markListFavorite,\n  unMarkListFavorite,\n  deleteListPermanently,\n  openNoSubscriptionModal,\n  deleteTrashPermanently,\n});\n\nconst Container = (props: any) => (\n  <Switch>\n    <Route path=\"/s/lists/segments*\">\n      <Component {...props} selectedTab=\"segments\" />\n    </Route>\n    <Route path=\"/s/lists/connections*\">\n      <Component {...props} selectedTab=\"connections\" />\n    </Route>\n    <Route path=\"/s/lists/data-models*\">\n      <Component {...props} selectedTab=\"data-models\" />\n    </Route>\n    <Route path=\"/s/lists/smart\">\n      <Component {...props} selectedTab=\"smart\" />\n    </Route>\n    <Route path=\"/s/lists/smart\">\n      <Component {...props} selectedTab=\"smart\" />\n    </Route>\n    <Route path=\"/s/lists/favorites\">\n      <Component {...props} selectedTab=\"favorites\" />\n    </Route>\n    <Route path=\"/s/lists/trash\">\n      <Component {...props} selectedTab=\"trash\" />\n    </Route>\n    <Route path=\"/s/lists/lists*\">\n      <Component {...props} selectedTab=\"lists\" />\n    </Route>\n    <Redirect to=\"/s/lists/lists\" />\n  </Switch>\n);\n\nexport const Lists = stateConnector(Container);\n"]},"metadata":{},"sourceType":"module"}