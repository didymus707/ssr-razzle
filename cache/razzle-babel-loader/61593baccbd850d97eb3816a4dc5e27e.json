{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"textAreaRef\", \"onUserOverViewToggled\", \"onMobileUserOverViewOpen\", \"onCloseMobileMessageDrawer\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/messages/Message.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex } from '@chakra-ui/core';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js/mobile';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { EmptyState } from '../../../../components';\nimport emptyViewImage from '../../empty.svg';\nimport { Content } from './Content';\nimport { ThreadStarter } from './ThreadStarter';\nexport function Message(_ref) {\n  let {\n    textAreaRef,\n    onUserOverViewToggled,\n    onMobileUserOverViewOpen,\n    onCloseMobileMessageDrawer\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const params = useParams();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: shouldShowContentCompose,\n    1: setShouldShowContentCompose\n  } = useState(false);\n  const {\n    0: shouldShowStarterCompose,\n    1: setShouldShowStarterCompose\n  } = useState(false);\n  const {\n    0: twoWayPayload,\n    1: setTwoWayPayload\n  } = useState({\n    senderPlatformNick: ''\n  });\n  const currentThreadID = params.id === 'new' ? '' : params.id;\n  const threadRef = useRef(null);\n\n  const handleTextChange = (text, isTemplateMode) => {\n    setText(text);\n  };\n\n  useEffect(() => {\n    if (currentThreadID !== 'start' || parsePhoneNumberFromString(twoWayPayload.senderPlatformNick || '') && currentThreadID === 'start') {\n      var _textAreaRef$current;\n\n      textAreaRef === null || textAreaRef === void 0 ? void 0 : (_textAreaRef$current = textAreaRef.current) === null || _textAreaRef$current === void 0 ? void 0 : _textAreaRef$current.focus();\n      setText('');\n    }\n  }, [currentThreadID, shouldShowStarterCompose, textAreaRef, twoWayPayload.senderPlatformNick]);\n  return __jsx(Flex, _extends({\n    bg: \"#fff\",\n    flexDirection: \"column\",\n    borderRadius: \".3125rem\",\n    borderRight: \"1px solid rgba(213, 219, 230, 0.27)\",\n    position: \"relative\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), params.id === 'start' ? __jsx(ThreadStarter, {\n    flex: \"1\",\n    text: text,\n    setText: handleTextChange,\n    twoWayPayload: twoWayPayload,\n    setTwoWayPayload: setTwoWayPayload,\n    showCompose: shouldShowStarterCompose,\n    setShowCompose: setShouldShowStarterCompose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }) : !params.id ? __jsx(Box, {\n    flex: \"1\",\n    borderLeft: \"1px solid #e9edf0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(EmptyState, {\n    image: emptyViewImage,\n    subheading: \"No messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })) : __jsx(Content, {\n    threadRef: threadRef,\n    currentThreadID: currentThreadID,\n    showCompose: shouldShowContentCompose,\n    setShowCompose: setShouldShowContentCompose,\n    onCloseMobileMessageDrawer: onCloseMobileMessageDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/messages/Message.tsx"],"names":["Box","Flex","parsePhoneNumberFromString","React","useEffect","useRef","useState","useParams","EmptyState","emptyViewImage","Content","ThreadStarter","Message","textAreaRef","onUserOverViewToggled","onMobileUserOverViewOpen","onCloseMobileMessageDrawer","rest","params","text","setText","shouldShowContentCompose","setShouldShowContentCompose","shouldShowStarterCompose","setShouldShowStarterCompose","twoWayPayload","setTwoWayPayload","senderPlatformNick","currentThreadID","id","threadRef","handleTextChange","isTemplateMode","current","focus"],"mappings":"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","sourcesContent":["import { Box, Flex } from '@chakra-ui/core';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js/mobile';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { EmptyState } from '../../../../components';\nimport emptyViewImage from '../../empty.svg';\nimport { MessageProps, TwoWayPayloadSchema } from '../../inbox.types';\nimport { Content } from './Content';\nimport { ThreadStarter } from './ThreadStarter';\n\nexport function Message({\n  textAreaRef,\n  onUserOverViewToggled,\n  onMobileUserOverViewOpen,\n  onCloseMobileMessageDrawer,\n  ...rest\n}: MessageProps) {\n  const params = useParams<{ id: string }>();\n\n  const [text, setText] = useState('');\n  const [shouldShowContentCompose, setShouldShowContentCompose] = useState(false);\n  const [shouldShowStarterCompose, setShouldShowStarterCompose] = useState(false);\n  const [twoWayPayload, setTwoWayPayload] = useState<TwoWayPayloadSchema>({\n    senderPlatformNick: '',\n  });\n\n  const currentThreadID = params.id === 'new' ? '' : params.id;\n\n  const threadRef = useRef<HTMLDivElement>(null);\n\n  const handleTextChange = (text: string, isTemplateMode?: boolean) => {\n    setText(text);\n  };\n\n  useEffect(() => {\n    if (\n      currentThreadID !== 'start' ||\n      (parsePhoneNumberFromString(twoWayPayload.senderPlatformNick || '') &&\n        currentThreadID === 'start')\n    ) {\n      textAreaRef?.current?.focus();\n      setText('');\n    }\n  }, [currentThreadID, shouldShowStarterCompose, textAreaRef, twoWayPayload.senderPlatformNick]);\n\n  return (\n    <Flex\n      bg=\"#fff\"\n      flexDirection=\"column\"\n      borderRadius=\".3125rem\"\n      borderRight=\"1px solid rgba(213, 219, 230, 0.27)\"\n      position=\"relative\"\n      {...rest}\n    >\n      {params.id === 'start' ? (\n        <ThreadStarter\n          flex=\"1\"\n          text={text}\n          setText={handleTextChange}\n          twoWayPayload={twoWayPayload}\n          setTwoWayPayload={setTwoWayPayload as any}\n          showCompose={shouldShowStarterCompose}\n          setShowCompose={setShouldShowStarterCompose}\n        />\n      ) : !params.id ? (\n        <Box flex=\"1\" borderLeft=\"1px solid #e9edf0\">\n          <EmptyState image={emptyViewImage} subheading=\"No messages\" />\n        </Box>\n      ) : (\n        <Content\n          threadRef={threadRef}\n          currentThreadID={currentThreadID}\n          showCompose={shouldShowContentCompose}\n          setShowCompose={setShouldShowContentCompose}\n          onCloseMobileMessageDrawer={onCloseMobileMessageDrawer}\n        />\n      )}\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}