{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/grid/header-select.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { Checkbox } from '@chakra-ui/core';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  selected_rows: state.lists.selected_rows,\n  rows_by_id: state.lists.rows_by_id\n});\n\nconst connector = connect(mapStateToProps, {}, null, {\n  forwardRef: true\n});\nconst Container = /*#__PURE__*/forwardRef((props, ref) => {\n  useImperativeHandle(ref, () => ({}));\n  return __jsx(Component, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }));\n});\nexport const Component = props => {\n  const {\n    rows_by_id,\n    selected_rows\n  } = props;\n  const isChecked = rows_by_id.length > 0 && selected_rows.length === rows_by_id.length;\n  const isIndeterminate = selected_rows.length > 0 && selected_rows.length !== rows_by_id.length;\n  const isDisabled = rows_by_id.length === 0;\n\n  const handleChange = () => {\n    if (isChecked) props.selectRows([]);\n    if (!isChecked) props.selectRows(rows_by_id, 'id');\n  };\n\n  return __jsx(\"div\", {\n    id: \"col_select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Checkbox, {\n    size: \"sm\",\n    border: \"1px solid #8c8c8c !important\",\n    borderRadius: \"3px\",\n    boxShadow: \"none\",\n    isChecked: isChecked,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\nexport const HeaderSelect = connector(Container);","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/grid/header-select.tsx"],"names":["React","forwardRef","useImperativeHandle","Checkbox","connect","mapStateToProps","state","selected_rows","lists","rows_by_id","connector","Container","props","ref","Component","isChecked","length","isIndeterminate","isDisabled","handleChange","selectRows","HeaderSelect"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,mBAA5B,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAuB;AAC7CC,EAAAA,aAAa,EAAED,KAAK,CAACE,KAAN,CAAYD,aADkB;AAE7CE,EAAAA,UAAU,EAAEH,KAAK,CAACE,KAAN,CAAYC;AAFqB,CAAvB,CAAxB;;AAKA,MAAMC,SAAS,GAAGN,OAAO,CAACC,eAAD,EAAkB,EAAlB,EAAsB,IAAtB,EAA4B;AAAEJ,EAAAA,UAAU,EAAE;AAAd,CAA5B,CAAzB;AAEA,MAAMU,SAAS,gBAAGV,UAAU,CAAC,CAACW,KAAD,EAAaC,GAAb,KAA0B;AACrDX,EAAAA,mBAAmB,CAACW,GAAD,EAAM,OAAO,EAAP,CAAN,CAAnB;AACA,SAAO,MAAC,SAAD,eAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAH2B,CAA5B;AAKA,OAAO,MAAME,SAAS,GAAIF,KAAD,IAAgB;AACvC,QAAM;AAAEH,IAAAA,UAAF;AAAcF,IAAAA;AAAd,MAAgCK,KAAtC;AAEA,QAAMG,SAAS,GAAGN,UAAU,CAACO,MAAX,GAAoB,CAApB,IAAyBT,aAAa,CAACS,MAAd,KAAyBP,UAAU,CAACO,MAA/E;AACA,QAAMC,eAAe,GAAGV,aAAa,CAACS,MAAd,GAAuB,CAAvB,IAA4BT,aAAa,CAACS,MAAd,KAAyBP,UAAU,CAACO,MAAxF;AACA,QAAME,UAAU,GAAGT,UAAU,CAACO,MAAX,KAAsB,CAAzC;;AAEA,QAAMG,YAAY,GAAG,MAAM;AACzB,QAAIJ,SAAJ,EAAeH,KAAK,CAACQ,UAAN,CAAiB,EAAjB;AACf,QAAI,CAACL,SAAL,EAAgBH,KAAK,CAACQ,UAAN,CAAiBX,UAAjB,EAA6B,IAA7B;AACjB,GAHD;;AAKA,SACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,MAAM,EAAC,8BAFT;AAGE,IAAA,YAAY,EAAC,KAHf;AAIE,IAAA,SAAS,EAAC,MAJZ;AAKE,IAAA,SAAS,EAAEM,SALb;AAME,IAAA,eAAe,EAAEE,eANnB;AAOE,IAAA,UAAU,EAAEC,UAPd;AAQE,IAAA,QAAQ,EAAEC,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CA1BM;AA4BP,OAAO,MAAME,YAAY,GAAGX,SAAS,CAACC,SAAD,CAA9B","sourcesContent":["import React, { forwardRef, useImperativeHandle } from 'react';\nimport { Checkbox } from '@chakra-ui/core';\nimport { RootState } from '../../../../../root';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state: RootState) => ({\n  selected_rows: state.lists.selected_rows,\n  rows_by_id: state.lists.rows_by_id,\n});\n\nconst connector = connect(mapStateToProps, {}, null, { forwardRef: true });\n\nconst Container = forwardRef((props: any, ref: any) => {\n  useImperativeHandle(ref, () => ({}));\n  return <Component {...props} />;\n});\n\nexport const Component = (props: any) => {\n  const { rows_by_id, selected_rows } = props;\n\n  const isChecked = rows_by_id.length > 0 && selected_rows.length === rows_by_id.length;\n  const isIndeterminate = selected_rows.length > 0 && selected_rows.length !== rows_by_id.length;\n  const isDisabled = rows_by_id.length === 0;\n\n  const handleChange = () => {\n    if (isChecked) props.selectRows([]);\n    if (!isChecked) props.selectRows(rows_by_id, 'id');\n  };\n\n  return (\n    <div id=\"col_select\">\n      <Checkbox\n        size=\"sm\"\n        border=\"1px solid #8c8c8c !important\"\n        borderRadius=\"3px\"\n        boxShadow=\"none\"\n        isChecked={isChecked}\n        isIndeterminate={isIndeterminate}\n        isDisabled={isDisabled}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport const HeaderSelect = connector(Container);\n"]},"metadata":{},"sourceType":"module"}