{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/coupons/components/coupon-review.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Heading, Icon, Stack, Text, Tooltip, useDisclosure, useToast } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport React from 'react';\nimport { useLoading } from '../../../../../hooks';\nimport { numberWithCommas } from '../../../../../utils';\nimport { sendAmplitudeData } from '../../../../../utils/amplitude';\nimport { ToastBox } from '../../../../components';\nimport { html2Text } from '../../templates/templates.utils';\nimport { sendTestCampaignMessage, TestMessageModal, SectionFooter, SendCampaignModal } from '../../campaigns/';\nexport const CouponReview = ({\n  onGoBack,\n  payload,\n  isSaving,\n  onSubmit,\n  onGoToSection,\n  credit_balance\n}) => {\n  const {\n    count,\n    unique,\n    content,\n    sender_id\n  } = payload;\n  const {\n    isOpen: testMessageIsOpen,\n    onOpen: onOpenTestMessage,\n    onClose: onCloseTestMessage\n  } = useDisclosure();\n  const {\n    isOpen: sendCampaignIsOpen,\n    onOpen: onOpenSendCampaignModal,\n    onClose: onCloseSendCampaignModal\n  } = useDisclosure();\n  const toast = useToast();\n  const {\n    dispatch,\n    loading\n  } = useLoading();\n\n  const handleSendTestMessage = async ({\n    recipients\n  }, {\n    resetForm\n  }) => {\n    if (content) {\n      const payload = {\n        recipients,\n        content,\n        sender_id\n      };\n\n      try {\n        dispatch({\n          type: 'LOADING_STARTED'\n        });\n        await sendTestCampaignMessage(payload);\n        dispatch({\n          type: 'LOADING_RESOLVED'\n        });\n        onCloseTestMessage();\n        resetForm();\n        toast({\n          position: 'bottom-left',\n          render: ({\n            onClose\n          }) => __jsx(ToastBox, {\n            status: \"success\",\n            onClose: onClose,\n            message: \"Test message sent successfully\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }\n          })\n        });\n        sendAmplitudeData('campaignTestMessageSent');\n      } catch (error) {\n        dispatch({\n          type: 'LOADING_RESOLVED'\n        });\n        toast({\n          position: 'bottom-left',\n          render: ({\n            onClose\n          }) => __jsx(ToastBox, {\n            onClose: onClose,\n            message: error,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 36\n            }\n          })\n        });\n      }\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"left-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(Stack, {\n    py: \"1rem\",\n    isInline: true,\n    spacing: \"0.2rem\",\n    borderBottomWidth: \"1px\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(Heading, {\n    fontSize: \"0.875rem\",\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Estimated recipients\"), __jsx(Text, {\n    fontSize: \"0.75rem\",\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, numberWithCommas(count)), __jsx(Text, {\n    fontSize: \"0.75rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"This campaign will be sent to all subscribers.\"), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    fontSize: \"0.75rem\",\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"Unique Sending \", unique ? 'ON' : 'OFF'), __jsx(Tooltip, {\n    zIndex: 10000,\n    placement: \"right\",\n    \"aria-label\": \"Campaign sender id\",\n    label: \"A Sender ID is a quick way to let recipients of your campaign know exactly who it is from.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    size: \"0.75rem\",\n    name: \"info\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  })))), __jsx(Button, {\n    size: \"sm\",\n    variant: \"outline\",\n    variantColor: \"blue\",\n    onClick: () => onGoToSection && onGoToSection(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Edit recipients\")), __jsx(Stack, {\n    py: \"1rem\",\n    isInline: true,\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, __jsx(Heading, {\n    pb: \"0.5rem\",\n    fontSize: \"0.875rem\",\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Campaign design\"), __jsx(Box, {\n    p: \"1rem\",\n    width: \"340px\",\n    borderWidth: \"1px\",\n    borderRadius: \"4px\",\n    borderLeftWidth: \"4px\",\n    borderLeftColor: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, content && __jsx(Text, {\n    maxH: \"150px\",\n    pb: \"0.5rem\",\n    overflowY: \"auto\",\n    fontSize: \"0.75rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, html2Text(content)), __jsx(Button, {\n    size: \"sm\",\n    isFullWidth: true,\n    variant: \"outline\",\n    variantColor: \"blue\",\n    onClick: onOpenTestMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, \"Send test message\"))), __jsx(Button, {\n    size: \"sm\",\n    onClick: onGoBack,\n    variant: \"outline\",\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"Edit design\"))), __jsx(SectionFooter, {\n    onGoBack: onGoBack,\n    goBackLabel: \"Back\",\n    onContinue: onOpenSendCampaignModal,\n    continueLabel: \"Schedule or Send Now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }))), __jsx(SendCampaignModal, {\n    campaign: payload,\n    isLoading: isSaving,\n    isOpen: sendCampaignIsOpen,\n    onCreateCampaign: onSubmit,\n    credit_balance: credit_balance,\n    onClose: onCloseSendCampaignModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), __jsx(TestMessageModal, {\n    isOpen: testMessageIsOpen,\n    onClose: onCloseTestMessage,\n    credit_balance: credit_balance,\n    isLoading: loading === 'pending',\n    onSubmit: handleSendTestMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/coupons/components/coupon-review.tsx"],"names":["Box","Heading","Icon","Stack","Text","Tooltip","useDisclosure","useToast","Button","React","useLoading","numberWithCommas","sendAmplitudeData","ToastBox","html2Text","sendTestCampaignMessage","TestMessageModal","SectionFooter","SendCampaignModal","CouponReview","onGoBack","payload","isSaving","onSubmit","onGoToSection","credit_balance","count","unique","content","sender_id","isOpen","testMessageIsOpen","onOpen","onOpenTestMessage","onClose","onCloseTestMessage","sendCampaignIsOpen","onOpenSendCampaignModal","onCloseSendCampaignModal","toast","dispatch","loading","handleSendTestMessage","recipients","resetForm","type","position","render","error"],"mappings":"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","sourcesContent":["import { Box, Heading, Icon, Stack, Text, Tooltip, useDisclosure, useToast } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport { FormikHelpers } from 'formik';\nimport React from 'react';\nimport { useLoading } from '../../../../../hooks';\nimport { numberWithCommas } from '../../../../../utils';\nimport { sendAmplitudeData } from '../../../../../utils/amplitude';\nimport { ToastBox } from '../../../../components';\nimport { html2Text } from '../../templates/templates.utils';\nimport {\n  sendTestCampaignMessage,\n  TestMessageModal,\n  SectionFooter,\n  SectionFooterProps,\n  SendCampaignModal,\n} from '../../campaigns/';\nimport { CouponPayload } from './create-coupon';\n\ninterface CouponReviewProps {\n  isSaving?: boolean;\n  credit_balance: number;\n  isSavingDraft?: boolean;\n  payload: CouponPayload;\n  onGoToSection?(section: number): void;\n  onGoBack: SectionFooterProps['onGoBack'];\n  onSubmit: (payload: Partial<CouponPayload>) => Promise<any>;\n}\n\nexport const CouponReview = ({\n  onGoBack,\n  payload,\n  isSaving,\n  onSubmit,\n  onGoToSection,\n  credit_balance,\n}: CouponReviewProps) => {\n  const { count, unique, content, sender_id } = payload;\n  const {\n    isOpen: testMessageIsOpen,\n    onOpen: onOpenTestMessage,\n    onClose: onCloseTestMessage,\n  } = useDisclosure();\n  const {\n    isOpen: sendCampaignIsOpen,\n    onOpen: onOpenSendCampaignModal,\n    onClose: onCloseSendCampaignModal,\n  } = useDisclosure();\n\n  const toast = useToast();\n  const { dispatch, loading } = useLoading();\n\n  const handleSendTestMessage = async (\n    { recipients }: { recipients: string },\n    { resetForm }: FormikHelpers<{ recipients: string }>,\n  ) => {\n    if (content) {\n      const payload = { recipients, content, sender_id };\n      try {\n        dispatch({ type: 'LOADING_STARTED' });\n        await sendTestCampaignMessage(payload);\n        dispatch({ type: 'LOADING_RESOLVED' });\n        onCloseTestMessage();\n        resetForm();\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox status=\"success\" onClose={onClose} message=\"Test message sent successfully\" />\n          ),\n        });\n        sendAmplitudeData('campaignTestMessageSent');\n      } catch (error) {\n        dispatch({ type: 'LOADING_RESOLVED' });\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n        });\n      }\n    }\n  };\n\n  return (\n    <>\n      <Box className=\"content\">\n        <Box className=\"left-section\">\n          <Box>\n            <Stack\n              py=\"1rem\"\n              isInline\n              spacing=\"0.2rem\"\n              borderBottomWidth=\"1px\"\n              justifyContent=\"space-between\"\n            >\n              <Stack>\n                <Heading fontSize=\"0.875rem\" fontWeight={600}>\n                  Estimated recipients\n                </Heading>\n                <Text fontSize=\"0.75rem\" fontWeight={600}>\n                  {numberWithCommas(count)}\n                </Text>\n                <Text fontSize=\"0.75rem\">This campaign will be sent to all subscribers.</Text>\n                <Stack isInline alignItems=\"center\">\n                  <Text fontSize=\"0.75rem\" fontWeight={600}>\n                    Unique Sending {unique ? 'ON' : 'OFF'}\n                  </Text>\n                  <Tooltip\n                    zIndex={10000}\n                    placement=\"right\"\n                    aria-label=\"Campaign sender id\"\n                    label=\"A Sender ID is a quick way to let recipients of your campaign know exactly who it is from.\"\n                  >\n                    <Icon size=\"0.75rem\" name=\"info\" color=\"gray.500\" />\n                  </Tooltip>\n                </Stack>\n              </Stack>\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                variantColor=\"blue\"\n                onClick={() => onGoToSection && onGoToSection(0)}\n              >\n                Edit recipients\n              </Button>\n            </Stack>\n            <Stack py=\"1rem\" isInline justifyContent=\"space-between\">\n              <Box>\n                <Heading pb=\"0.5rem\" fontSize=\"0.875rem\" fontWeight={600}>\n                  Campaign design\n                </Heading>\n                <Box\n                  p=\"1rem\"\n                  width=\"340px\"\n                  borderWidth=\"1px\"\n                  borderRadius=\"4px\"\n                  borderLeftWidth=\"4px\"\n                  borderLeftColor=\"blue.500\"\n                >\n                  {content && (\n                    <Text maxH=\"150px\" pb=\"0.5rem\" overflowY=\"auto\" fontSize=\"0.75rem\">\n                      {html2Text(content)}\n                    </Text>\n                  )}\n                  <Button\n                    size=\"sm\"\n                    isFullWidth\n                    variant=\"outline\"\n                    variantColor=\"blue\"\n                    onClick={onOpenTestMessage}\n                  >\n                    Send test message\n                  </Button>\n                </Box>\n              </Box>\n              <Button size=\"sm\" onClick={onGoBack} variant=\"outline\" variantColor=\"blue\">\n                Edit design\n              </Button>\n            </Stack>\n          </Box>\n          <SectionFooter\n            onGoBack={onGoBack}\n            goBackLabel=\"Back\"\n            onContinue={onOpenSendCampaignModal}\n            continueLabel=\"Schedule or Send Now\"\n          />\n        </Box>\n      </Box>\n      <SendCampaignModal\n        campaign={payload}\n        isLoading={isSaving}\n        isOpen={sendCampaignIsOpen}\n        onCreateCampaign={onSubmit}\n        credit_balance={credit_balance}\n        onClose={onCloseSendCampaignModal}\n      />\n      <TestMessageModal\n        isOpen={testMessageIsOpen}\n        onClose={onCloseTestMessage}\n        credit_balance={credit_balance}\n        isLoading={loading === 'pending'}\n        onSubmit={handleSendTestMessage}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}