{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"heading\", \"subheading\"],\n      _excluded2 = [\"onGoBack\", \"onContinue\", \"goBackLabel\", \"continueLabel\", \"actionButtonType\", \"buttonWidth\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/planner/planner.layout.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Divider, Flex, Heading, Icon, Image, Stack, Text } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport phoneImage from '../../assets/screen-1.svg';\nexport const SectionContainer = styled(Box)`\n  margin: 0 auto;\n  max-width: 940px;\n  padding-bottom: 4rem;\n\n  .content {\n    display: flex;\n    justify-content: space-between;\n\n    .left-section {\n      width: 50%;\n    }\n\n    .right-section {\n      width: 30%;\n    }\n\n    .editable {\n      padding: 0;\n      border: none;\n\n      &:focus {\n        border: none;\n        box-shadow: none;\n      }\n\n      &:hover {\n        border: none;\n        box-shadow: none;\n      }\n    }\n  }\n`;\nexport const SectionHeader = _ref => {\n  let {\n    heading,\n    subheading\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(Box, _extends({\n    maxWidth: \"480px\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), __jsx(Heading, {\n    as: \"h4\",\n    pb: \"0.2rem\",\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, heading), __jsx(Text, {\n    color: \"gray.600\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, subheading));\n};\nexport const SectionFooter = _ref2 => {\n  let {\n    onGoBack,\n    onContinue,\n    goBackLabel,\n    continueLabel,\n    actionButtonType = 'button',\n    buttonWidth = ['auto', 'auto', '50%']\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  return __jsx(Stack, _extends({\n    flex: 1,\n    isInline: true,\n    alignItems: \"center\",\n    mt: \"2rem\",\n    py: \"1rem\",\n    borderTopWidth: \"1px\",\n    justifyContent: \"flex-end\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), __jsx(Button, {\n    size: \"sm\",\n    onClick: onGoBack,\n    width: buttonWidth,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, goBackLabel), __jsx(Button, {\n    size: \"sm\",\n    onClick: onContinue,\n    variantColor: \"blue\",\n    width: buttonWidth,\n    type: actionButtonType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, continueLabel));\n};\nexport const PhoneContainer = ({\n  children\n}) => __jsx(Box, {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"relative\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 3\n  }\n}, __jsx(Image, {\n  src: phoneImage,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }\n}), __jsx(Box, {\n  top: \"14px\",\n  bg: \"white\",\n  left: \"16px\",\n  borderRadius: \"32px\",\n  position: \"absolute\",\n  width: \"calc(100% - 32px)\",\n  height: ['45%', '90%', '95%'],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }\n}, __jsx(Flex, {\n  pt: \"1rem\",\n  bg: \"white\",\n  pb: \"0.8rem\",\n  px: \"0.8rem\",\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: \"28px\",\n  flexDirection: \"column\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 7\n  }\n}, __jsx(Flex, {\n  mb: \"2rem\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }\n}, __jsx(Box, {\n  mb: \"0.5rem\",\n  bg: \"#f1f1f1\",\n  width: \"25px\",\n  height: \"25px\",\n  borderRadius: \"50%\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 11\n  }\n}), __jsx(Box, {\n  bg: \"#f1f1f1\",\n  height: \"0.5rem\",\n  width: \"50px\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 11\n  }\n})), children)));\nexport const FlowStep = ({\n  count,\n  label,\n  isActive,\n  isComplete\n}) => {\n  const style = isActive ? {\n    bg: 'primary',\n    color: 'white'\n  } : {\n    bg: 'transparent',\n    color: 'primary'\n  };\n  return __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, isComplete ? __jsx(Icon, {\n    name: \"check\",\n    color: \"primary\",\n    size: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }) : __jsx(Flex, _extends({\n    w: \"20px\",\n    height: \"20px\",\n    fontWeight: 600,\n    borderWidth: \"1px\",\n    borderRadius: \"50%\",\n    fontSize: \"0.75rem\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    borderColor: \"primary\"\n  }, style, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), count), __jsx(Text, {\n    fontWeight: 500,\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, label));\n};\nexport const FlowSteps = ({\n  sections,\n  activeSection\n}) => {\n  var _sections;\n\n  sections = (_sections = sections) !== null && _sections !== void 0 ? _sections : [{\n    count: 0,\n    label: 'Setup'\n  }, {\n    count: 1,\n    label: 'Design'\n  }, {\n    count: 2,\n    label: 'Review & send'\n  }];\n  return __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, sections.map(({\n    count,\n    label\n  }, index) => {\n    var _sections2;\n\n    const sectionsLength = (_sections2 = sections) !== null && _sections2 !== void 0 && _sections2.length ? sections.length - 1 : 0;\n    return __jsx(Stack, {\n      isInline: true,\n      alignItems: \"center\",\n      key: `${label}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, __jsx(FlowStep, {\n      label: label,\n      count: count + 1,\n      key: `${label}-${index}`,\n      isActive: activeSection === count,\n      isComplete: activeSection > count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    })), index < sectionsLength && __jsx(Divider, {\n      width: \"100px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 40\n      }\n    }));\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/planner/planner.layout.tsx"],"names":["Box","Divider","Flex","Heading","Icon","Image","Stack","Text","Button","styled","React","phoneImage","SectionContainer","SectionHeader","heading","subheading","rest","SectionFooter","onGoBack","onContinue","goBackLabel","continueLabel","actionButtonType","buttonWidth","PhoneContainer","children","FlowStep","count","label","isActive","isComplete","style","bg","color","FlowSteps","sections","activeSection","map","index","sectionsLength","length"],"mappings":"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","sourcesContent":["import {\n  Box,\n  BoxProps,\n  ButtonProps,\n  Divider,\n  Flex,\n  Heading,\n  Icon,\n  Image,\n  Stack,\n  Text,\n} from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport phoneImage from '../../assets/screen-1.svg';\n\nexport type SectionHeaderProps = {\n  heading: string;\n  subheading: string;\n} & BoxProps;\n\nexport interface FlowStepProps {\n  label: string;\n  count: number;\n  isActive?: boolean;\n  isComplete?: boolean;\n}\n\nexport type SectionFooterProps = {\n  onGoBack(): void;\n  onContinue(): void;\n  goBackLabel: string;\n  continueLabel: string;\n  buttonWidth?: ButtonProps['width'];\n  actionButtonType?: 'submit' | 'button';\n} & BoxProps;\n\nexport const SectionContainer = styled(Box)`\n  margin: 0 auto;\n  max-width: 940px;\n  padding-bottom: 4rem;\n\n  .content {\n    display: flex;\n    justify-content: space-between;\n\n    .left-section {\n      width: 50%;\n    }\n\n    .right-section {\n      width: 30%;\n    }\n\n    .editable {\n      padding: 0;\n      border: none;\n\n      &:focus {\n        border: none;\n        box-shadow: none;\n      }\n\n      &:hover {\n        border: none;\n        box-shadow: none;\n      }\n    }\n  }\n`;\n\nexport const SectionHeader = ({ heading, subheading, ...rest }: SectionHeaderProps) => {\n  return (\n    <Box maxWidth=\"480px\" {...rest}>\n      <Heading as=\"h4\" pb=\"0.2rem\" fontSize=\"1.2rem\" fontWeight={600} color=\"black\">\n        {heading}\n      </Heading>\n      <Text color=\"gray.600\" fontSize=\"0.875rem\">\n        {subheading}\n      </Text>\n    </Box>\n  );\n};\n\nexport const SectionFooter = ({\n  onGoBack,\n  onContinue,\n  goBackLabel,\n  continueLabel,\n  actionButtonType = 'button',\n  buttonWidth = ['auto', 'auto', '50%'],\n  ...rest\n}: SectionFooterProps) => {\n  return (\n    <Stack\n      flex={1}\n      isInline\n      alignItems=\"center\"\n      mt=\"2rem\"\n      py=\"1rem\"\n      borderTopWidth=\"1px\"\n      justifyContent=\"flex-end\"\n      {...rest}\n    >\n      <Button size=\"sm\" onClick={onGoBack} width={buttonWidth} type=\"button\">\n        {goBackLabel}\n      </Button>\n      <Button\n        size=\"sm\"\n        onClick={onContinue}\n        variantColor=\"blue\"\n        width={buttonWidth}\n        type={actionButtonType}\n      >\n        {continueLabel}\n      </Button>\n    </Stack>\n  );\n};\n\nexport const PhoneContainer = ({ children }: { children?: React.ReactNode }) => (\n  <Box width=\"100%\" height=\"100%\" position=\"relative\">\n    <Image src={phoneImage} />\n    <Box\n      top=\"14px\"\n      bg=\"white\"\n      left=\"16px\"\n      borderRadius=\"32px\"\n      position=\"absolute\"\n      width=\"calc(100% - 32px)\"\n      height={['45%', '90%', '95%']}\n    >\n      <Flex\n        pt=\"1rem\"\n        bg=\"white\"\n        pb=\"0.8rem\"\n        px=\"0.8rem\"\n        width=\"100%\"\n        height=\"100%\"\n        borderRadius=\"28px\"\n        flexDirection=\"column\"\n      >\n        <Flex mb=\"2rem\" alignItems=\"center\" flexDirection=\"column\" justifyContent=\"center\">\n          <Box mb=\"0.5rem\" bg=\"#f1f1f1\" width=\"25px\" height=\"25px\" borderRadius=\"50%\" />\n          <Box bg=\"#f1f1f1\" height=\"0.5rem\" width=\"50px\" />\n        </Flex>\n        {children}\n      </Flex>\n    </Box>\n  </Box>\n);\n\nexport const FlowStep = ({ count, label, isActive, isComplete }: FlowStepProps) => {\n  const style = isActive\n    ? {\n        bg: 'primary',\n        color: 'white',\n      }\n    : {\n        bg: 'transparent',\n        color: 'primary',\n      };\n  return (\n    <Stack isInline alignItems=\"center\">\n      {isComplete ? (\n        <Icon name=\"check\" color=\"primary\" size=\"1rem\" />\n      ) : (\n        <Flex\n          w=\"20px\"\n          height=\"20px\"\n          fontWeight={600}\n          borderWidth=\"1px\"\n          borderRadius=\"50%\"\n          fontSize=\"0.75rem\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\"\n          borderColor=\"primary\"\n          {...style}\n        >\n          {count}\n        </Flex>\n      )}\n      <Text fontWeight={500} fontSize=\"0.875rem\">\n        {label}\n      </Text>\n    </Stack>\n  );\n};\n\nexport const FlowSteps = ({\n  sections,\n  activeSection,\n}: {\n  sections?: {\n    count: number;\n    label: string;\n  }[];\n  activeSection: number;\n}) => {\n  sections = sections ?? [\n    { count: 0, label: 'Setup' },\n    { count: 1, label: 'Design' },\n    { count: 2, label: 'Review & send' },\n  ];\n  return (\n    <Stack isInline alignItems=\"center\">\n      {sections.map(({ count, label }, index) => {\n        const sectionsLength = sections?.length ? sections.length - 1 : 0;\n        return (\n          <Stack isInline alignItems=\"center\" key={`${label}-${index}`}>\n            <Box>\n              <FlowStep\n                label={label}\n                count={count + 1}\n                key={`${label}-${index}`}\n                isActive={activeSection === count}\n                isComplete={activeSection > count}\n              />\n            </Box>\n            {index < sectionsLength && <Divider width=\"100px\" />}\n          </Stack>\n        );\n      })}\n    </Stack>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}