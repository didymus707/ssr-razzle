{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"isUnique\", \"campaign_id\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/coupons/components/coupon-setup.tsx\";\nvar __jsx = React.createElement;\nimport { Box, FormControl, FormErrorMessage, FormLabel, Icon, IconButton, Radio, RadioGroup, Stack, Text, Tooltip, useToast } from '@chakra-ui/core';\nimport { selectOrganisations } from 'app/authenticated-app/settings/slices';\nimport { Button, Input, ToastBox } from 'app/components';\nimport { selectOrganisationID } from 'app/unauthenticated-app/authentication';\nimport { useFormik } from 'formik';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { sendAmplitudeData } from 'utils/amplitude';\nimport * as yup from 'yup';\nimport { numberWithCommas } from '../../../../../utils';\nimport { AdvancedSelect, FileUploader } from '../../../../components';\nimport { getCampaignAudience } from '../../campaigns';\nimport { SectionFooter } from '../../campaigns/components/planner/planner.layout';\nexport const CouponSetup = props => {\n  var _values$file;\n\n  const {\n    lists,\n    onSubmit,\n    onCancel,\n    initialValues\n  } = props;\n  const toast = useToast();\n  const organisations = useSelector(selectOrganisations);\n  const organizationID = useSelector(selectOrganisationID);\n  const currentOrganization = organisations === null || organisations === void 0 ? void 0 : organisations.find(i => i.id === organizationID);\n  const organisationName = currentOrganization === null || currentOrganization === void 0 ? void 0 : currentOrganization['name'];\n  const {\n    values,\n    errors,\n    touched,\n    setFieldValue,\n    handleChange,\n    submitForm\n  } = useFormik({\n    onSubmit: values => {\n      const {\n        isUnique,\n        campaign_id\n      } = values,\n            rest = _objectWithoutProperties(values, _excluded);\n\n      onSubmit(_objectSpread(_objectSpread({}, rest), {}, {\n        unique: !!(isUnique === '1')\n      }));\n    },\n    enableReinitialize: true,\n    //@ts-ignore\n    initialValues: isEmpty(initialValues) ? {\n      name: '',\n      count: 0,\n      unique: '1',\n      table_id: '',\n      type: 'coupon',\n      campaign_id: '',\n      file: undefined,\n      sender_id: organisationName\n    } : _objectSpread(_objectSpread({}, initialValues), {}, {\n      isUnique: initialValues !== null && initialValues !== void 0 && initialValues.unique ? '1' : '0',\n      campaign_id: (initialValues === null || initialValues === void 0 ? void 0 : initialValues.smart_list_id) || (initialValues === null || initialValues === void 0 ? void 0 : initialValues.table_id) || (initialValues === null || initialValues === void 0 ? void 0 : initialValues.audience_id) || (initialValues === null || initialValues === void 0 ? void 0 : initialValues.segment_id)\n    }),\n    validationSchema: yup.object().shape({\n      name: yup.string().required('Coupon name is required'),\n      campaign_id: yup.string().required('Select coupon recipients'),\n      file: yup.string().required('File is required')\n    })\n  });\n  const inputRef = React.useRef(null);\n\n  const handleUpload = files => {\n    setFieldValue('file', files[0]);\n  };\n\n  const handleRemoveFile = () => {\n    setFieldValue('file', undefined);\n  };\n\n  const handleGetListCount = async payload => {\n    try {\n      const {\n        audience\n      } = await getCampaignAudience(payload);\n      return audience.count;\n    } catch (error) {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  };\n\n  const handleAudienceChange = async value => {\n    var _value, _value2;\n\n    if ((_value = value) !== null && _value !== void 0 && _value.endsWith('-smartList')) {\n      value = value.replace('-smartList', '');\n      const count = await handleGetListCount({\n        smart_list_id: value,\n        audience_type: 2\n      });\n      setFieldValue('smart_list_id', value);\n      setFieldValue('campaign_id', value);\n      setFieldValue('table_id', null);\n      setFieldValue('segment_id', null);\n      setFieldValue('count', count);\n      setFieldValue('audience_type', 2);\n      sendAmplitudeData('couponListSelected', {\n        smart_list_id: value\n      });\n    } else if ((_value2 = value) !== null && _value2 !== void 0 && _value2.endsWith('-segment')) {\n      value = value.replace('-segment', '');\n      const count = await handleGetListCount({\n        segment_id: value,\n        audience_type: 2\n      });\n      setFieldValue('segment_id', value);\n      setFieldValue('campaign_id', value);\n      setFieldValue('table_id', null);\n      setFieldValue('smart_list_id', null);\n      setFieldValue('count', count);\n      setFieldValue('audience_type', 2);\n      sendAmplitudeData('couponListSelected', {\n        smart_list_id: value\n      });\n    } else {\n      const count = await handleGetListCount({\n        table_id: value,\n        audience_type: 2\n      });\n      setFieldValue('table_id', value);\n      setFieldValue('campaign_id', value);\n      setFieldValue('smart_list_id', null);\n      setFieldValue('segment_id', null);\n      setFieldValue('count', count);\n      setFieldValue('audience_type', 2);\n      sendAmplitudeData('campaignListSelected', {\n        table_id: value\n      });\n    }\n  };\n\n  const getAudienceValue = () => {\n    const {\n      table_id,\n      smart_list_id,\n      segment_id\n    } = values;\n\n    if (!!table_id) {\n      return table_id;\n    }\n\n    if (!!smart_list_id) {\n      return `${smart_list_id}-smartList`;\n    }\n\n    if (!!segment_id) {\n      return `${segment_id}-segment`;\n    }\n\n    return '';\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"left-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    mb: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    ref: inputRef,\n    value: values.name,\n    label: \"Coupon set name\",\n    onChange: handleChange,\n    errorMessage: errors.name,\n    isInvalid: !!touched.name && !!errors.name,\n    placeholder: \"Give your coupon set a name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, __jsx(FormLabel, {\n    fontSize: \"0.875rem\",\n    marginBottom: \"0.2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"Select coupons to upload\"), __jsx(Tooltip, {\n    zIndex: 10000,\n    placement: \"right\",\n    \"aria-label\": \"Coupon set upload\",\n    label: \"File must be in CSV format with a single column and no header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    size: \"0.75rem\",\n    name: \"info\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  })))), __jsx(FormControl, {\n    mb: \"2rem\",\n    isInvalid: !!errors.file,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, __jsx(FileUploader, {\n    maxSize: 52428800,\n    onUpload: handleUpload,\n    accept: '.csv, .xls, .xlsx',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    w: \"200px\",\n    variant: \"outline\",\n    variantColor: \"blue\",\n    size: \"sm\",\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, \"Choose file\")), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, values === null || values === void 0 ? void 0 : (_values$file = values.file) === null || _values$file === void 0 ? void 0 : _values$file.name), !!values.file && __jsx(IconButton, {\n    size: \"sm\",\n    rounded: \"50%\",\n    variant: \"ghost\",\n    icon: \"small-close\",\n    \"aria-label\": \"remove file\",\n    onClick: handleRemoveFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }))), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, errors.file))), __jsx(FormControl, {\n    mb: \"1rem\",\n    isInvalid: !!touched.campaign_id && !!errors.campaign_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, __jsx(AdvancedSelect, {\n    isGroup: true,\n    isSearchable: true,\n    options: lists,\n    value: getAudienceValue(),\n    label: __jsx(Stack, {\n      isInline: true,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 19\n      }\n    }, \"Who will you send this campaign to?\")),\n    placeholder: \"Search & Select a list\",\n    isInvalid: !!touched.campaign_id && !!errors.campaign_id,\n    onChange: ({\n      value\n    }) => handleAudienceChange(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, errors.campaign_id)), __jsx(Stack, {\n    spacing: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, __jsx(FormLabel, {\n    pb: \"0\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"Do you want the coupons to be unique for each recipient?\"))), __jsx(RadioGroup, {\n    isInline: true,\n    spacing: 5,\n    name: \"isUnique\",\n    onChange: handleChange,\n    value: values.isUnique,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, __jsx(Radio, {\n    size: \"sm\",\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, \"Yes\"), __jsx(Radio, {\n    size: \"sm\",\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, \"No\"))), __jsx(SectionFooter, {\n    onGoBack: onCancel,\n    goBackLabel: \"Cancel\",\n    onContinue: submitForm,\n    continueLabel: \"Save & Continue \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    className: \"right-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    px: \"2rem\",\n    py: \"1rem\",\n    width: \"80%\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    pb: \"0.5rem\",\n    fontSize: \"0.875rem\",\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, \"Estimated recipients\"), __jsx(Text, {\n    fontSize: \"1rem\",\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, numberWithCommas(values.count))))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/coupons/components/coupon-setup.tsx"],"names":["Box","FormControl","FormErrorMessage","FormLabel","Icon","IconButton","Radio","RadioGroup","Stack","Text","Tooltip","useToast","selectOrganisations","Button","Input","ToastBox","selectOrganisationID","useFormik","isEmpty","React","useEffect","useSelector","sendAmplitudeData","yup","numberWithCommas","AdvancedSelect","FileUploader","getCampaignAudience","SectionFooter","CouponSetup","props","lists","onSubmit","onCancel","initialValues","toast","organisations","organizationID","currentOrganization","find","i","id","organisationName","values","errors","touched","setFieldValue","handleChange","submitForm","isUnique","campaign_id","rest","unique","enableReinitialize","name","count","table_id","type","file","undefined","sender_id","smart_list_id","audience_id","segment_id","validationSchema","object","shape","string","required","inputRef","useRef","handleUpload","files","handleRemoveFile","handleGetListCount","payload","audience","error","position","render","onClose","handleAudienceChange","value","endsWith","replace","audience_type","getAudienceValue","current","focus"],"mappings":"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","sourcesContent":["import {\n  Box,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Icon,\n  IconButton,\n  Radio,\n  RadioGroup,\n  Stack,\n  Text,\n  Tooltip,\n  useToast,\n} from '@chakra-ui/core';\nimport { selectOrganisations } from 'app/authenticated-app/settings/slices';\nimport { Button, Input, ToastBox } from 'app/components';\nimport { selectOrganisationID } from 'app/unauthenticated-app/authentication';\nimport { useFormik } from 'formik';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { sendAmplitudeData } from 'utils/amplitude';\nimport * as yup from 'yup';\nimport { numberWithCommas } from '../../../../../utils';\nimport { AdvancedSelect, FileUploader } from '../../../../components';\nimport { getCampaignAudience } from '../../campaigns';\nimport { SectionFooter } from '../../campaigns/components/planner/planner.layout';\nimport { CouponPayload } from './create-coupon';\n\ntype FormValues = CouponPayload & { campaign_id: string; isUnique: string };\n\nexport type CouponSetupProps = {\n  lists?: any;\n  onCancel(): void;\n  type?: 'static' | 'upload';\n  initialValues?: CouponPayload;\n  onSubmit(payload: Partial<CouponPayload>): void;\n};\n\nexport const CouponSetup = (props: CouponSetupProps) => {\n  const { lists, onSubmit, onCancel, initialValues } = props;\n\n  const toast = useToast();\n  const organisations = useSelector(selectOrganisations);\n  const organizationID = useSelector(selectOrganisationID);\n  const currentOrganization = organisations?.find((i: any) => i.id === organizationID);\n\n  const organisationName = currentOrganization?.['name'];\n  const {\n    values,\n    errors,\n    touched,\n    setFieldValue,\n    handleChange,\n    submitForm,\n  } = useFormik<FormValues>({\n    onSubmit: values => {\n      const { isUnique, campaign_id, ...rest } = values;\n      onSubmit({ ...rest, unique: !!(isUnique === '1') });\n    },\n    enableReinitialize: true,\n    //@ts-ignore\n    initialValues: isEmpty(initialValues)\n      ? {\n          name: '',\n          count: 0,\n          unique: '1',\n          table_id: '',\n          type: 'coupon',\n          campaign_id: '',\n          file: undefined,\n          sender_id: organisationName,\n        }\n      : {\n          ...initialValues,\n          isUnique: initialValues?.unique ? '1' : '0',\n          campaign_id:\n            initialValues?.smart_list_id ||\n            initialValues?.table_id ||\n            initialValues?.audience_id ||\n            initialValues?.segment_id,\n        },\n    validationSchema: yup.object().shape({\n      name: yup.string().required('Coupon name is required'),\n      campaign_id: yup.string().required('Select coupon recipients'),\n      file: yup.string().required('File is required'),\n    }),\n  });\n\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const handleUpload = (files: File[]) => {\n    setFieldValue('file', files[0]);\n  };\n\n  const handleRemoveFile = () => {\n    setFieldValue('file', undefined);\n  };\n\n  const handleGetListCount = async (payload: {\n    smart_list_id?: string;\n    table_id?: string;\n    group_id?: string;\n    segment_id?: string;\n    audience_type: number;\n  }) => {\n    try {\n      const { audience } = await getCampaignAudience(payload);\n      return audience.count;\n    } catch (error) {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  };\n\n  const handleAudienceChange = async (value?: string) => {\n    if (value?.endsWith('-smartList')) {\n      value = value.replace('-smartList', '');\n      const count = await handleGetListCount({ smart_list_id: value, audience_type: 2 });\n      setFieldValue('smart_list_id', value);\n      setFieldValue('campaign_id', value);\n      setFieldValue('table_id', null);\n      setFieldValue('segment_id', null);\n      setFieldValue('count', count);\n      setFieldValue('audience_type', 2);\n      sendAmplitudeData('couponListSelected', {\n        smart_list_id: value,\n      });\n    } else if (value?.endsWith('-segment')) {\n      value = value.replace('-segment', '');\n      const count = await handleGetListCount({ segment_id: value, audience_type: 2 });\n      setFieldValue('segment_id', value);\n      setFieldValue('campaign_id', value);\n      setFieldValue('table_id', null);\n      setFieldValue('smart_list_id', null);\n      setFieldValue('count', count);\n      setFieldValue('audience_type', 2);\n      sendAmplitudeData('couponListSelected', {\n        smart_list_id: value,\n      });\n    } else {\n      const count = await handleGetListCount({ table_id: value, audience_type: 2 });\n      setFieldValue('table_id', value);\n      setFieldValue('campaign_id', value);\n      setFieldValue('smart_list_id', null);\n      setFieldValue('segment_id', null);\n      setFieldValue('count', count);\n      setFieldValue('audience_type', 2);\n      sendAmplitudeData('campaignListSelected', {\n        table_id: value,\n      });\n    }\n  };\n\n  const getAudienceValue = () => {\n    const { table_id, smart_list_id, segment_id } = values;\n    if (!!table_id) {\n      return table_id;\n    }\n    if (!!smart_list_id) {\n      return `${smart_list_id}-smartList`;\n    }\n    if (!!segment_id) {\n      return `${segment_id}-segment`;\n    }\n    return '';\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <>\n      <Box className=\"content\">\n        <Box className=\"left-section\">\n          <Box mb=\"2rem\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              ref={inputRef}\n              value={values.name}\n              label=\"Coupon set name\"\n              onChange={handleChange}\n              errorMessage={errors.name}\n              isInvalid={!!touched.name && !!errors.name}\n              placeholder=\"Give your coupon set a name\"\n            />\n          </Box>\n          <Box>\n            <FormLabel fontSize=\"0.875rem\" marginBottom=\"0.2rem\">\n              <Stack isInline alignItems=\"center\">\n                <Text>Select coupons to upload</Text>\n                <Tooltip\n                  zIndex={10000}\n                  placement=\"right\"\n                  aria-label=\"Coupon set upload\"\n                  label=\"File must be in CSV format with a single column and no header\"\n                >\n                  <Icon size=\"0.75rem\" name=\"info\" color=\"gray.500\" />\n                </Tooltip>\n              </Stack>\n            </FormLabel>\n            <FormControl mb=\"2rem\" isInvalid={!!errors.file}>\n              <Stack isInline alignItems=\"center\">\n                <FileUploader\n                  maxSize={52428800}\n                  onUpload={handleUpload}\n                  accept={'.csv, .xls, .xlsx'}\n                >\n                  <Button\n                    w=\"200px\"\n                    variant=\"outline\"\n                    variantColor=\"blue\"\n                    size=\"sm\"\n                    fontWeight=\"500\"\n                  >\n                    Choose file\n                  </Button>\n                </FileUploader>\n                <Stack isInline alignItems=\"center\">\n                  <Text>{values?.file?.name}</Text>\n                  {!!values.file && (\n                    <IconButton\n                      size=\"sm\"\n                      rounded=\"50%\"\n                      variant=\"ghost\"\n                      icon=\"small-close\"\n                      aria-label=\"remove file\"\n                      onClick={handleRemoveFile}\n                    />\n                  )}\n                </Stack>\n              </Stack>\n\n              <FormErrorMessage>{errors.file}</FormErrorMessage>\n            </FormControl>\n          </Box>\n          <FormControl mb=\"1rem\" isInvalid={!!touched.campaign_id && !!errors.campaign_id}>\n            <AdvancedSelect\n              isGroup\n              isSearchable\n              options={lists}\n              value={getAudienceValue()}\n              label={\n                <Stack isInline alignItems=\"center\">\n                  <Text>Who will you send this campaign to?</Text>\n                </Stack>\n              }\n              placeholder=\"Search & Select a list\"\n              isInvalid={!!touched.campaign_id && !!errors.campaign_id}\n              onChange={({ value }) => handleAudienceChange(value)}\n            />\n            <FormErrorMessage>{errors.campaign_id}</FormErrorMessage>\n          </FormControl>\n          <Stack spacing=\"0.5rem\">\n            <FormLabel pb=\"0\" fontSize=\"0.875rem\">\n              <Stack isInline alignItems=\"center\">\n                <Text>Do you want the coupons to be unique for each recipient?</Text>\n              </Stack>\n            </FormLabel>\n            <RadioGroup\n              isInline\n              spacing={5}\n              name=\"isUnique\"\n              onChange={handleChange}\n              value={values.isUnique}\n            >\n              <Radio size=\"sm\" value=\"1\">\n                Yes\n              </Radio>\n              <Radio size=\"sm\" value=\"0\">\n                No\n              </Radio>\n            </RadioGroup>\n          </Stack>\n\n          <SectionFooter\n            onGoBack={onCancel}\n            goBackLabel=\"Cancel\"\n            onContinue={submitForm}\n            continueLabel=\"Save & Continue \"\n          />\n        </Box>\n        <Box className=\"right-section\">\n          <Box\n            px=\"2rem\"\n            py=\"1rem\"\n            width=\"80%\"\n            borderRadius=\"8px\"\n            boxShadow=\"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\"\n          >\n            <Text pb=\"0.5rem\" fontSize=\"0.875rem\" fontWeight={500}>\n              Estimated recipients\n            </Text>\n            <Text fontSize=\"1rem\" fontWeight={600}>\n              {numberWithCommas(values.count)}\n            </Text>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}