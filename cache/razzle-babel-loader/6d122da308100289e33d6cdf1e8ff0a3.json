{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { rootReducer } from './root.reducer';\nexport const isServer = !(false && window.document && window.document.createElement);\nexport function configureAppStore(preloadedState = {}) {\n  const store = configureStore({\n    preloadedState,\n    reducer: rootReducer,\n    middleware: [...getDefaultMiddleware({\n      serializableCheck: false,\n      immutableCheck: false\n    })]\n  });\n\n  if (true && module && module.hot) {\n    module.hot.accept('./root.reducer', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/root/root.store.ts"],"names":["configureStore","getDefaultMiddleware","rootReducer","isServer","window","document","createElement","configureAppStore","preloadedState","store","reducer","middleware","serializableCheck","immutableCheck","module","hot","accept","replaceReducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAIA,OAAO,MAAMC,QAAQ,GAAG,EACtB,SACAC,MAAM,CAACC,QADP,IAEAD,MAAM,CAACC,QAAP,CAAgBC,aAHM,CAAjB;AAMP,OAAO,SAASC,iBAAT,CAA2BC,cAAc,GAAG,EAA5C,EAAgD;AACrD,QAAMC,KAAK,GAAGT,cAAc,CAAC;AAC3BQ,IAAAA,cAD2B;AAE3BE,IAAAA,OAAO,EAAER,WAFkB;AAG3BS,IAAAA,UAAU,EAAE,CACV,GAAGV,oBAAoB,CAAC;AACtBW,MAAAA,iBAAiB,EAAE,KADG;AAEtBC,MAAAA,cAAc,EAAE;AAFM,KAAD,CADb;AAHe,GAAD,CAA5B;;AAWA,MAAI,QAAyCC,MAAzC,IAAmDA,MAAM,CAACC,GAA9D,EAAmE;AACjED,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,gBAAlB,EAAoC,MAAMP,KAAK,CAACQ,cAAN,CAAqBf,WAArB,CAA1C;AACD;;AAED,SAAOO,KAAP;AACD","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { rootReducer } from './root.reducer';\n\ndeclare const module: any;\n\nexport const isServer = !(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n)\n\nexport function configureAppStore(preloadedState = {}) {\n  const store = configureStore({\n    preloadedState,\n    reducer: rootReducer,\n    middleware: [\n      ...getDefaultMiddleware({\n        serializableCheck: false,\n        immutableCheck: false,\n      }),\n    ],\n  });\n\n  if (process.env.NODE_ENV !== 'production' && module && module.hot) {\n    module.hot.accept('./root.reducer', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}