{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/credit-topup-card.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Heading, Stack, Text, useDisclosure } from '@chakra-ui/core';\nimport React from 'react';\nimport { Button } from 'app/components';\nimport { connect, useSelector } from 'react-redux';\nimport { fetchWallet } from '../../../payments';\nimport { CreditTopupModal } from './credit-topup-modal';\nimport { formatToCurrency } from '../../../inbox/inbox.utils';\nimport { selectOrganisationID } from '../../../../unauthenticated-app/authentication';\n\nfunction mapStateToProps(state) {\n  return {\n    cards: state.payment.cards,\n    wallet_id: state.payments.wallet.data.id,\n    wallet_email: state.payments.wallet.data.email,\n    default_card: state.payments.wallet.data.card_default,\n    credit_balance: state.payments.wallet.data.credit_balance,\n    billingData: state.billing.subscription.data\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchWallet\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst CreditTopupCardUI = ({\n  cards,\n  amount,\n  content,\n  wallet_id,\n  fetchWallet,\n  billingData,\n  wallet_email,\n  default_card,\n  credit_balance\n}) => {\n  const {\n    isOpen,\n    onClose,\n    onOpen\n  } = useDisclosure();\n  const organisationId = useSelector(selectOrganisationID);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    p: \"0.75rem 1rem\",\n    bg: \"#e8f7ff\",\n    rounded: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    pb: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    fontSize: \"0.875rem\",\n    size: \"sm\",\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Campaign Credit: \", formatToCurrency(credit_balance)), __jsx(Text, {\n    fontSize: \"0.75rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, content)), __jsx(Button, {\n    variantColor: \"blue\",\n    size: \"xs\",\n    onClick: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Top up now\")), __jsx(CreditTopupModal, {\n    cards: cards,\n    amount: amount,\n    isOpen: isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    wallet_id: wallet_id,\n    fetchWallet: fetchWallet,\n    billingData: billingData,\n    wallet_email: wallet_email,\n    default_card: default_card // @ts-ignore\n    ,\n    organisationId: organisationId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const CreditTopupCard = connector(CreditTopupCardUI);","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/credit-topup-card.tsx"],"names":["Box","Heading","Stack","Text","useDisclosure","React","Button","connect","useSelector","fetchWallet","CreditTopupModal","formatToCurrency","selectOrganisationID","mapStateToProps","state","cards","payment","wallet_id","payments","wallet","data","id","wallet_email","email","default_card","card_default","credit_balance","billingData","billing","subscription","mapDispatchToProps","connector","CreditTopupCardUI","amount","content","isOpen","onClose","onOpen","organisationId","CreditTopupCard"],"mappings":"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","sourcesContent":["import { Box, Heading, Stack, Text, useDisclosure } from '@chakra-ui/core';\nimport React from 'react';\nimport { Button } from 'app/components';\nimport { connect, useSelector } from 'react-redux';\nimport { RootState } from '../../../../../root';\nimport { fetchWallet } from '../../../payments';\nimport { CreditTopupModal } from './credit-topup-modal';\nimport { formatToCurrency } from '../../../inbox/inbox.utils';\nimport { selectOrganisationID } from '../../../../unauthenticated-app/authentication';\n\ninterface CreditTopCardUIProps {\n  cards: any[];\n  wallet_id: any;\n  content: string;\n  amount?: number;\n  default_card: any;\n  billingData?: any;\n  wallet_email?: any;\n  credit_balance: number;\n  fetchWallet: (organization_id: any) => void;\n}\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    cards: state.payment.cards,\n    wallet_id: state.payments.wallet.data.id,\n    wallet_email: state.payments.wallet.data.email,\n    default_card: state.payments.wallet.data.card_default,\n    credit_balance: state.payments.wallet.data.credit_balance,\n    billingData: state.billing.subscription.data,\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchWallet,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst CreditTopupCardUI = ({\n  cards,\n  amount,\n  content,\n  wallet_id,\n  fetchWallet,\n  billingData,\n  wallet_email,\n  default_card,\n  credit_balance,\n}: CreditTopCardUIProps) => {\n  const { isOpen, onClose, onOpen } = useDisclosure();\n\n  const organisationId = useSelector(selectOrganisationID);\n\n  return (\n    <>\n      <Box p=\"0.75rem 1rem\" bg=\"#e8f7ff\" rounded=\"5px\">\n        <Stack pb=\"0.5rem\">\n          <Heading fontSize=\"0.875rem\" size=\"sm\" fontWeight={500}>\n            Campaign Credit: {formatToCurrency(credit_balance)}\n          </Heading>\n          <Text fontSize=\"0.75rem\">{content}</Text>\n        </Stack>\n        <Button variantColor=\"blue\" size=\"xs\" onClick={onOpen}>\n          Top up now\n        </Button>\n      </Box>\n      <CreditTopupModal\n        cards={cards}\n        amount={amount}\n        isOpen={isOpen}\n        onOpen={onOpen}\n        onClose={onClose}\n        wallet_id={wallet_id}\n        fetchWallet={fetchWallet}\n        billingData={billingData}\n        wallet_email={wallet_email}\n        default_card={default_card}\n        // @ts-ignore\n        organisationId={organisationId}\n      />\n    </>\n  );\n};\n\nexport const CreditTopupCard = connector(CreditTopupCardUI);\n"]},"metadata":{},"sourceType":"module"}