{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/Provider.tsx\";\nvar __jsx = React.createElement;\nimport { useDisclosure } from '@chakra-ui/core';\nimport { createContext } from 'hooks';\nimport React, { useState } from 'react';\nexport const [Provider, useInbox] = createContext();\nexport const InboxProvider = ({\n  children\n}) => {\n  const {\n    0: activeFilter,\n    1: setActiveFilter\n  } = useState('queued');\n  const {\n    0: isNewConversation,\n    1: setIsNewConversation\n  } = useState(false);\n  const {\n    0: qrCodeChannelId,\n    1: setQrCodeChannelId\n  } = useState();\n  const {\n    isOpen: isWhatsappModalOpen,\n    onClose: onCloseWhatsappModal,\n    onOpen: onOpenWhatsappModal\n  } = useDisclosure();\n  const {\n    isOpen: isQRCodeSetupModalOpen,\n    onClose: onCloseQRCodeSetupModal,\n    onOpen: onOpenQRCodeSetupModal\n  } = useDisclosure();\n  return __jsx(Provider, {\n    value: {\n      activeFilter,\n      qrCodeChannelId,\n      setActiveFilter,\n      isNewConversation,\n      setQrCodeChannelId,\n      isWhatsappModalOpen,\n      onOpenWhatsappModal,\n      setIsNewConversation,\n      onCloseWhatsappModal,\n      isQRCodeSetupModalOpen,\n      onCloseQRCodeSetupModal,\n      onOpenQRCodeSetupModal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/Provider.tsx"],"names":["useDisclosure","createContext","React","useState","Provider","useInbox","InboxProvider","children","activeFilter","setActiveFilter","isNewConversation","setIsNewConversation","qrCodeChannelId","setQrCodeChannelId","isOpen","isWhatsappModalOpen","onClose","onCloseWhatsappModal","onOpen","onOpenWhatsappModal","isQRCodeSetupModalOpen","onCloseQRCodeSetupModal","onOpenQRCodeSetupModal"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBJ,aAAa,EAA1C;AAeP,OAAO,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AACtE,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,QAAD,CAAhD;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAACS,eAAD;AAAA,OAAkBC;AAAlB,MAAwCV,QAAQ,EAAtD;AAEA,QAAM;AACJW,IAAAA,MAAM,EAAEC,mBADJ;AAEJC,IAAAA,OAAO,EAAEC,oBAFL;AAGJC,IAAAA,MAAM,EAAEC;AAHJ,MAIFnB,aAAa,EAJjB;AAKA,QAAM;AACJc,IAAAA,MAAM,EAAEM,sBADJ;AAEJJ,IAAAA,OAAO,EAAEK,uBAFL;AAGJH,IAAAA,MAAM,EAAEI;AAHJ,MAIFtB,aAAa,EAJjB;AAMA,SACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,YADK;AAELI,MAAAA,eAFK;AAGLH,MAAAA,eAHK;AAILC,MAAAA,iBAJK;AAKLG,MAAAA,kBALK;AAMLE,MAAAA,mBANK;AAOLI,MAAAA,mBAPK;AAQLR,MAAAA,oBARK;AASLM,MAAAA,oBATK;AAULG,MAAAA,sBAVK;AAWLC,MAAAA,uBAXK;AAYLC,MAAAA;AAZK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGf,QAhBH,CADF;AAoBD,CApCM","sourcesContent":["import { useDisclosure } from '@chakra-ui/core';\nimport { createContext } from 'hooks';\nimport React, { ReactNode, useState } from 'react';\n\nexport const [Provider, useInbox] = createContext<{\n  activeFilter: string;\n  qrCodeChannelId?: string;\n  isNewConversation: boolean;\n  isWhatsappModalOpen: boolean;\n  onCloseWhatsappModal(): void;\n  onOpenWhatsappModal(): void;\n  isQRCodeSetupModalOpen: boolean;\n  onCloseQRCodeSetupModal(): void;\n  onOpenQRCodeSetupModal(): void;\n  setActiveFilter: React.Dispatch<React.SetStateAction<string>>;\n  setIsNewConversation: React.Dispatch<React.SetStateAction<boolean>>;\n  setQrCodeChannelId: React.Dispatch<React.SetStateAction<string | undefined>>;\n}>();\n\nexport const InboxProvider = ({ children }: { children: ReactNode }) => {\n  const [activeFilter, setActiveFilter] = useState('queued');\n  const [isNewConversation, setIsNewConversation] = useState(false);\n  const [qrCodeChannelId, setQrCodeChannelId] = useState<string | undefined>();\n\n  const {\n    isOpen: isWhatsappModalOpen,\n    onClose: onCloseWhatsappModal,\n    onOpen: onOpenWhatsappModal,\n  } = useDisclosure();\n  const {\n    isOpen: isQRCodeSetupModalOpen,\n    onClose: onCloseQRCodeSetupModal,\n    onOpen: onOpenQRCodeSetupModal,\n  } = useDisclosure();\n\n  return (\n    <Provider\n      value={{\n        activeFilter,\n        qrCodeChannelId,\n        setActiveFilter,\n        isNewConversation,\n        setQrCodeChannelId,\n        isWhatsappModalOpen,\n        onOpenWhatsappModal,\n        setIsNewConversation,\n        onCloseWhatsappModal,\n        isQRCodeSetupModalOpen,\n        onCloseQRCodeSetupModal,\n        onOpenQRCodeSetupModal,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}