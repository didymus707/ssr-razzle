{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"value\", \"onBlur\", \"onChange\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/tables/components/property/property.components/PropertyForm.tsx\";\nvar __jsx = React.createElement;\nimport { Box, FormLabel, Icon, Input, PseudoBox, Text } from '@chakra-ui/core';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport { PROPERTIES } from '../property.data';\nimport { PropertyType } from './PropertyType';\nconst PropertyInput = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    value,\n    onBlur,\n    onChange\n  } = props,\n        rest = _objectWithoutProperties(props, _excluded);\n\n  return __jsx(Input, _extends({\n    size: \"sm\",\n    ref: ref,\n    value: value,\n    onBlur: onBlur,\n    onChange: onChange,\n    marginBottom: \"1rem\",\n    placeholder: \"Enter property name\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }));\n});\nexport function PropertyForm({\n  onChange,\n  property,\n  firstFieldRef\n}) {\n  const [name, setName] = React.useState(property ? property.label : '');\n  const [type, setType] = React.useState(property ? property.type : '');\n  const [activeType, setActiveType] = React.useState();\n  React.useEffect(() => {\n    setActiveType(PROPERTIES.find(item => item.label.toLowerCase() === type.toLowerCase()));\n  }, [type]);\n\n  function handleNameChange(e) {\n    const value = e.target.value;\n    setName(value);\n  }\n\n  function handleBlur() {\n    if (name && type && onChange) {\n      const data = _objectSpread(_objectSpread({}, property), {}, {\n        label: name,\n        name: camelCase(name),\n        type: type.toUpperCase()\n      });\n\n      onChange(data);\n    }\n  }\n\n  function handleTypeChange(value) {\n    setType(value);\n\n    if (name && onChange && value) {\n      const data = _objectSpread(_objectSpread({}, property), {}, {\n        label: name,\n        name: camelCase(name),\n        type: value.toUpperCase()\n      });\n\n      onChange(data);\n    }\n  }\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    paddingTop: \"1rem\",\n    paddingX: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(PropertyInput, {\n    value: name,\n    onBlur: handleBlur,\n    ref: firstFieldRef,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), __jsx(FormLabel, {\n    fontSize: \"14px\",\n    paddingX: \"1rem\",\n    paddingBottom: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Property type\"), __jsx(PropertyType, {\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(PseudoBox, {\n    paddingX: \"1rem\",\n    display: \"flex\",\n    paddingY: \"0.5rem\",\n    cursor: \"pointer\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    _hover: {\n      bg: 'gray.100'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, activeType ? __jsx(PseudoBox, {\n    display: \"flex\",\n    fontWeight: \"normal\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    size: \"0.75rem\",\n    name: activeType.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), __jsx(Text, {\n    fontSize: \"0.875rem\",\n    marginLeft: \"0.4rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, activeType.label)) : __jsx(Text, {\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Column\"), __jsx(Icon, {\n    size: \"0.5rem\",\n    name: \"caret-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/tables/components/property/property.components/PropertyForm.tsx"],"names":["Box","FormLabel","Icon","Input","PseudoBox","Text","React","camelCase","PROPERTIES","PropertyType","PropertyInput","forwardRef","props","ref","value","onBlur","onChange","rest","PropertyForm","property","firstFieldRef","name","setName","useState","label","type","setType","activeType","setActiveType","useEffect","find","item","toLowerCase","handleNameChange","e","target","handleBlur","data","toUpperCase","handleTypeChange","bg","icon"],"mappings":"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","sourcesContent":["import { Box, FormLabel, Icon, Input, InputProps, PseudoBox, Text } from '@chakra-ui/core';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport { PROPERTIES } from '../property.data';\nimport { PropertySchema, TypeProps } from '../property.types';\nimport { PropertyType } from './PropertyType';\n\nconst PropertyInput = React.forwardRef((props: InputProps, ref: React.Ref<HTMLInputElement>) => {\n  const { value, onBlur, onChange, ...rest } = props;\n  return (\n    <Input\n      size=\"sm\"\n      ref={ref}\n      value={value}\n      onBlur={onBlur}\n      onChange={onChange}\n      marginBottom=\"1rem\"\n      placeholder=\"Enter property name\"\n      {...rest}\n    />\n  );\n});\n\nexport function PropertyForm({\n  onChange,\n  property,\n  firstFieldRef,\n}: {\n  property?: PropertySchema;\n  firstFieldRef?: React.Ref<any>;\n  onChange?: (property: PropertySchema) => void;\n}) {\n  const [name, setName] = React.useState(property ? property.label : '');\n  const [type, setType] = React.useState(property ? property.type : '');\n  const [activeType, setActiveType] = React.useState<TypeProps | undefined>();\n\n  React.useEffect(() => {\n    setActiveType(PROPERTIES.find(item => item.label.toLowerCase() === type.toLowerCase()));\n  }, [type]);\n\n  function handleNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = e.target.value;\n    setName(value);\n  }\n\n  function handleBlur() {\n    if (name && type && onChange) {\n      const data = {\n        ...property,\n        label: name,\n        name: camelCase(name),\n        type: type.toUpperCase(),\n      } as PropertySchema;\n      onChange(data);\n    }\n  }\n\n  function handleTypeChange(value: string) {\n    setType(value);\n    if (name && onChange && value) {\n      const data = {\n        ...property,\n        label: name,\n        name: camelCase(name),\n        type: value.toUpperCase(),\n      } as PropertySchema;\n      onChange(data);\n    }\n  }\n\n  return (\n    <Box>\n      <Box paddingTop=\"1rem\" paddingX=\"1rem\">\n        <PropertyInput\n          value={name}\n          onBlur={handleBlur}\n          ref={firstFieldRef}\n          onChange={handleNameChange}\n        />\n      </Box>\n      <FormLabel fontSize=\"14px\" paddingX=\"1rem\" paddingBottom=\"1rem\">\n        Property type\n      </FormLabel>\n      <PropertyType onChange={handleTypeChange}>\n        <PseudoBox\n          paddingX=\"1rem\"\n          display=\"flex\"\n          paddingY=\"0.5rem\"\n          cursor=\"pointer\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          _hover={{ bg: 'gray.100' }}\n        >\n          {activeType ? (\n            <PseudoBox display=\"flex\" fontWeight=\"normal\" alignItems=\"center\">\n              <Icon size=\"0.75rem\" name={activeType.icon} />\n              <Text fontSize=\"0.875rem\" marginLeft=\"0.4rem\">\n                {activeType.label}\n              </Text>\n            </PseudoBox>\n          ) : (\n            <Text fontSize=\"14px\">Column</Text>\n          )}\n          <Icon size=\"0.5rem\" name=\"caret-right\" />\n        </PseudoBox>\n      </PropertyType>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}