{"ast":null,"code":"import Pusher from \"pusher-js\";\nimport { buildConversationUrl } from \"./api-client\";\nlet pusher = {\n  subscribe: value => console.log(\"pusher is not initialized\")\n};\n\nconst initializePusher = userId => {\n  pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY || \"\", {\n    cluster: process.env.REACT_APP_PUSHER_APP_CLUSTER,\n    forceTLS: true,\n    authEndpoint: buildConversationUrl(`auth/pusher/${userId}`)\n  });\n  pusher.connection.bind(\"error\", function (error) {\n    console.error(\"connection error\", error);\n  });\n};\n\nexport { pusher, initializePusher };","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/utils/pusher.ts"],"names":["Pusher","buildConversationUrl","pusher","subscribe","value","console","log","initializePusher","userId","process","env","REACT_APP_PUSHER_APP_KEY","cluster","REACT_APP_PUSHER_APP_CLUSTER","forceTLS","authEndpoint","connection","bind","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,SAASC,oBAAT,QAAqC,cAArC;AAEA,IAAIC,MAAW,GAAG;AAChBC,EAAAA,SAAS,EAAGC,KAAD,IACTC,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAFc,CAAlB;;AAKA,MAAMC,gBAAgB,GAAIC,MAAD,IAAqB;AAC5CN,EAAAA,MAAM,GAAG,IAAIF,MAAJ,CAAWS,OAAO,CAACC,GAAR,CAAYC,wBAAZ,IAAwC,EAAnD,EAAuD;AAC9DC,IAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,4BADyC;AAE9DC,IAAAA,QAAQ,EAAE,IAFoD;AAG9DC,IAAAA,YAAY,EAAEd,oBAAoB,CAAE,eAAcO,MAAO,EAAvB;AAH4B,GAAvD,CAAT;AAMAN,EAAAA,MAAM,CAACc,UAAP,CAAkBC,IAAlB,CAAuB,OAAvB,EAAgC,UAAUC,KAAV,EAAsB;AACpDb,IAAAA,OAAO,CAACa,KAAR,CAAc,kBAAd,EAAkCA,KAAlC;AACD,GAFD;AAGD,CAVD;;AAYA,SAAShB,MAAT,EAAiBK,gBAAjB","sourcesContent":["import Pusher from \"pusher-js\";\nimport * as PusherTypes from \"pusher-js\";\nimport { buildConversationUrl } from \"./api-client\";\n\nlet pusher: any = {\n  subscribe: (value: string): void | PusherTypes.Channel =>\n    console.log(\"pusher is not initialized\"),\n};\n\nconst initializePusher = (userId?: string) => {\n  pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY || \"\", {\n    cluster: process.env.REACT_APP_PUSHER_APP_CLUSTER,\n    forceTLS: true,\n    authEndpoint: buildConversationUrl(`auth/pusher/${userId}`),\n  });\n\n  pusher.connection.bind(\"error\", function (error: any) {\n    console.error(\"connection error\", error);\n  });\n};\n\nexport { pusher, initializePusher };\n"]},"metadata":{},"sourceType":"module"}