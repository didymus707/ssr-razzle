{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"value\", \"onDayChange\", \"size\", \"showIcon\", \"isInvalid\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/DatePicker/index.tsx\";\nvar __jsx = React.createElement;\nimport { Icon, PseudoBox } from '@chakra-ui/core';\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\nimport React from 'react';\nimport { DateUtils } from 'react-day-picker';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport './styles.css';\nconst sizes = {\n  sm: '2rem',\n  md: '2.5rem',\n  lg: '3rem'\n};\n\nfunction parseDate(str, format, locale) {\n  const parsed = dateFnsParse(str, format, new Date(), {\n    locale\n  });\n\n  if (DateUtils.isDate(parsed)) {\n    return parsed;\n  }\n\n  return undefined;\n}\n\nfunction formatDate(date, format, locale) {\n  const dateString = dateFnsFormat(date, format, {\n    locale\n  });\n  const split = dateString.split(' ');\n\n  if (split.length === 3 && split[2].startsWith('0')) {\n    return dateString.replace('0', '');\n  } else {\n    return dateString;\n  }\n}\n\nexport function DatePickerComponent(_ref) {\n  let {\n    value,\n    onDayChange,\n    size = 'md',\n    showIcon = true,\n    isInvalid\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const FORMAT = 'dd MMMM yyyy';\n  const containerRef = React.useRef(null);\n\n  function handleFocus() {\n    if (containerRef.current) {\n      containerRef.current.focus();\n    }\n  }\n\n  return __jsx(PseudoBox, {\n    display: \"flex\",\n    padding: \"0 1rem\",\n    borderRadius: \"8px\",\n    ref: containerRef,\n    alignItems: \"center\",\n    height: sizes[size],\n    justifyContent: \"space-between\",\n    border: `1px solid ${isInvalid ? '#e53e3e' : '#858C94'}`,\n    _hover: {\n      border: `1px solid ${isInvalid ? '#e53e3e' : '#DADEE3'}`\n    },\n    _focus: {\n      boxShadow: `0 0 0 1px ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n      border: `1px solid ${isInvalid ? '#e53e3e' : '#3525E6'}`\n    },\n    _active: {\n      border: `1px solid ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n      boxShadow: `0 0 0 1px ${isInvalid ? '#e53e3e' : '#3525E6'}`\n    },\n    boxShadow: isInvalid ? '0 0 0 1px #e53e3e' : 'none',\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(DayPickerInput, _extends({\n    inputProps: {\n      style: {\n        width: '100%',\n        outline: 'none',\n        fontSize: 'inherit',\n        background: 'transparent'\n      },\n      onFocus: handleFocus\n    },\n    value: value,\n    format: FORMAT,\n    parseDate: parseDate,\n    formatDate: formatDate,\n    onDayChange: onDayChange,\n    placeholder: `${dateFnsFormat(new Date(), FORMAT)}`\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  })), showIcon && __jsx(Icon, {\n    name: \"calendar\",\n    size: \"14px\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 20\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/DatePicker/index.tsx"],"names":["Icon","PseudoBox","dateFnsFormat","dateFnsParse","React","DateUtils","DayPickerInput","sizes","sm","md","lg","parseDate","str","format","locale","parsed","Date","isDate","undefined","formatDate","date","dateString","split","length","startsWith","replace","DatePickerComponent","value","onDayChange","size","showIcon","isInvalid","rest","FORMAT","containerRef","useRef","handleFocus","current","focus","border","boxShadow","style","width","outline","fontSize","background","onFocus"],"mappings":"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","sourcesContent":["import { Icon, PseudoBox } from '@chakra-ui/core';\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\nimport React from 'react';\nimport { DateUtils, DayPickerInputProps } from 'react-day-picker';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport { OptionTypeBase } from 'react-select';\nimport './styles.css';\n\ntype DatePickerComponentProps = DayPickerInputProps & {\n  size?: string;\n  showIcon?: boolean;\n  isInvalid?: boolean;\n};\n\nconst sizes = { sm: '2rem', md: '2.5rem', lg: '3rem' } as OptionTypeBase;\n\nfunction parseDate(str: string, format: any, locale: any) {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  if (DateUtils.isDate(parsed)) {\n    return parsed;\n  }\n  return undefined;\n}\n\nfunction formatDate(date: any, format: any, locale: any) {\n  const dateString = dateFnsFormat(date, format, { locale });\n  const split = dateString.split(' ');\n  if (split.length === 3 && split[2].startsWith('0')) {\n    return dateString.replace('0', '');\n  } else {\n    return dateString;\n  }\n}\n\nexport function DatePickerComponent({\n  value,\n  onDayChange,\n  size = 'md',\n  showIcon = true,\n  isInvalid,\n  ...rest\n}: DatePickerComponentProps) {\n  const FORMAT = 'dd MMMM yyyy';\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  function handleFocus() {\n    if (containerRef.current) {\n      containerRef.current.focus();\n    }\n  }\n\n  return (\n    <PseudoBox\n      display=\"flex\"\n      padding=\"0 1rem\"\n      borderRadius=\"8px\"\n      ref={containerRef}\n      alignItems=\"center\"\n      height={sizes[size]}\n      justifyContent=\"space-between\"\n      border={`1px solid ${isInvalid ? '#e53e3e' : '#858C94'}`}\n      _hover={{\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#DADEE3'}`,\n      }}\n      _focus={{\n        boxShadow: `0 0 0 1px ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n      }}\n      _active={{\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n        boxShadow: `0 0 0 1px ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n      }}\n      boxShadow={isInvalid ? '0 0 0 1px #e53e3e' : 'none'}\n      fontSize=\"0.875rem\"\n    >\n      <DayPickerInput\n        inputProps={{\n          style: {\n            width: '100%',\n            outline: 'none',\n            fontSize: 'inherit',\n            background: 'transparent',\n          },\n          onFocus: handleFocus,\n        }}\n        value={value}\n        format={FORMAT}\n        parseDate={parseDate}\n        formatDate={formatDate}\n        onDayChange={onDayChange}\n        placeholder={`${dateFnsFormat(new Date(), FORMAT)}`}\n        {...rest}\n      />\n      {showIcon && <Icon name=\"calendar\" size=\"14px\" color=\"gray.500\" />}\n    </PseudoBox>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}