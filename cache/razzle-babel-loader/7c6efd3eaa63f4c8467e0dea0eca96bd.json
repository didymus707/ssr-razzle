{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/components/data-models/list-data-models/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, Icon, Menu, MenuButton, MenuItem, MenuList, useDisclosure } from '@chakra-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { Button, EmptyState } from 'app/components';\nimport noResources from '../../../../../assets/no-resources.svg';\nimport { useSelector } from 'react-redux';\nimport { selectDataModels } from '../../../../../lists.selectors';\nimport { SimpleGrid } from '@chakra-ui/core/dist';\nimport { icons } from 'feather-icons';\nimport { DeleteDataModelDialog } from './delete-data-model-dialog';\n\nconst DataModelItem = props => {\n  return __jsx(Menu, {\n    closeOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, ({\n    isOpen\n  }) => __jsx(React.Fragment, null, __jsx(MenuButton, {\n    as: Box,\n    className: `list-item--list ${isOpen && 'active'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"box\",\n    bg: \"rgba(15,15,15, 0.8)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    alt: \"list-icon\",\n    src: `data:image/svg+xml;utf8,${icons['database'].toSvg({\n      color: 'white'\n    })}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), __jsx(Box, {\n    className: \"label\" // @ts-ignore\n    ,\n    flexDirection: \"column !important\",\n    alignItems: \"flex-start !important\",\n    maxWidth: \"260px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    overflow: \"hidden\" // @ts-ignore\n    ,\n    textOverflow: \"ellipsis\",\n    maxWidth: \"260px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, props.name))), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"action-btn-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: \"chevron-down\",\n    color: \"white\",\n    size: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }))), __jsx(MenuList, {\n    minWidth: \"150px\",\n    placement: \"bottom-end\",\n    color: \"#333333\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(MenuItem, {\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: \"edit\",\n    size: \"14px\",\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), \"Update data model\"), __jsx(MenuItem, {\n    color: \"#E73D51\",\n    onClick: () => props.onDeleteClicked(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: \"trash\",\n    size: \"14px\",\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), \"Delete data model\")))));\n};\n\nexport const ListDataModels = props => {\n  const {\n    0: selectedDataModel,\n    1: setSelectedDataModel\n  } = useState(null);\n  const routerHistory = useHistory();\n  const dataModels = useSelector(selectDataModels);\n  const {\n    searchValue,\n    deleteDataModel\n  } = props;\n  const filteredDataModels = dataModels.filter(i => i.name.toLowerCase().includes(searchValue.toLowerCase()));\n  const {\n    isOpen: isDeleteDialogOpen,\n    onClose: closeDeleteDialog,\n    onOpen: openDeleteDialog\n  } = useDisclosure();\n  return __jsx(React.Fragment, null, __jsx(DeleteDataModelDialog, {\n    isOpen: isDeleteDialogOpen,\n    onClose: closeDeleteDialog,\n    selectedDataModel: selectedDataModel,\n    deleteDataModel: deleteDataModel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, !searchValue && __jsx(Box, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 28\n    }\n  }, \"Data Models\"), !!searchValue && __jsx(React.Fragment, null, !!filteredDataModels.length ? __jsx(Box, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Data Models found matching \\\"\", searchValue, \"\\\"\") : __jsx(Box, {\n    className: \"title inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"No Data Models found\")), __jsx(Button, {\n    variantColor: \"blue\",\n    size: \"sm\",\n    variant: \"solid\",\n    onClick: () => routerHistory.push('/s/lists/data-models/new'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Create Data Model\")), dataModels.length === 0 && __jsx(React.Fragment, null, __jsx(EmptyState, {\n    image: noResources,\n    paddingTop: \"15vh\",\n    heading: \"Oops, no data models here\",\n    subheading: \"Setup a data model from your resources to create segments and run campaigns from your own data sources\",\n    subheadingProps: {\n      width: '500px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    marginTop: \"25px\",\n    padding: \"10px 15px\",\n    borderRadius: \"5px\",\n    color: \"#333333\",\n    backgroundColor: \"#F7F7F7\",\n    textAlign: \"center\",\n    maxWidth: \"45vw\",\n    marginX: \"auto\",\n    fontSize: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Before you can build a view and utilize your data, you must first connect Simpu to your database. Simpu supports connecting to a wide variety of databases, and data models can only be used with one of those supported databases.\")), filteredDataModels.length > 0 && __jsx(SimpleGrid, {\n    columns: 2,\n    spacing: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, filteredDataModels.map((i, index) => __jsx(DataModelItem, {\n    key: index,\n    name: i.name,\n    description: i.description,\n    onDeleteClicked: () => {\n      setSelectedDataModel(i.id);\n      openDeleteDialog();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/components/data-models/list-data-models/index.tsx"],"names":["React","useState","Box","Icon","Menu","MenuButton","MenuItem","MenuList","useDisclosure","useHistory","Button","EmptyState","noResources","useSelector","selectDataModels","SimpleGrid","icons","DeleteDataModelDialog","DataModelItem","props","isOpen","toSvg","color","name","onDeleteClicked","ListDataModels","selectedDataModel","setSelectedDataModel","routerHistory","dataModels","searchValue","deleteDataModel","filteredDataModels","filter","i","toLowerCase","includes","isDeleteDialogOpen","onClose","closeDeleteDialog","onOpen","openDeleteDialog","length","push","width","map","index","description","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Icon, Menu, MenuButton, MenuItem, MenuList, useDisclosure } from '@chakra-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { Button, EmptyState } from 'app/components';\nimport noResources from '../../../../../assets/no-resources.svg';\nimport { useSelector } from 'react-redux';\nimport { selectDataModels } from '../../../../../lists.selectors';\nimport { SimpleGrid } from '@chakra-ui/core/dist';\nimport { icons } from 'feather-icons';\nimport { DataModel } from '../../../../../lists.types';\nimport { DeleteDataModelDialog } from './delete-data-model-dialog';\n\ninterface ItemProps {\n  name: string;\n  description: string;\n  onDeleteClicked: Function;\n}\n\nconst DataModelItem = (props: ItemProps) => {\n  return (\n    <Menu closeOnSelect>\n      {({ isOpen }) => (\n        <>\n          <MenuButton as={Box} className={`list-item--list ${isOpen && 'active'}`}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box className=\"box\" bg=\"rgba(15,15,15, 0.8)\">\n                <img\n                  alt=\"list-icon\"\n                  src={`data:image/svg+xml;utf8,${icons['database'].toSvg({\n                    color: 'white',\n                  })}`}\n                />\n              </Box>\n              <Box\n                className=\"label\"\n                // @ts-ignore\n                flexDirection=\"column !important\"\n                alignItems=\"flex-start !important\"\n                maxWidth=\"260px\"\n              >\n                <Box\n                  overflow=\"hidden\"\n                  // @ts-ignore\n                  textOverflow=\"ellipsis\"\n                  maxWidth=\"260px\"\n                >\n                  {props.name}\n                </Box>\n              </Box>\n            </Box>\n            <Box>\n              <Box className=\"action-btn-bg\">\n                <Icon name=\"chevron-down\" color=\"white\" size=\"12px\" />\n              </Box>\n            </Box>\n\n            <MenuList minWidth=\"150px\" placement=\"bottom-end\" color=\"#333333\" fontSize=\"12px\">\n              <MenuItem onClick={() => {}}>\n                <Icon name=\"edit\" size=\"14px\" mr=\"10px\" />\n                Update data model\n              </MenuItem>\n              <MenuItem color=\"#E73D51\" onClick={() => props.onDeleteClicked()}>\n                <Icon name=\"trash\" size=\"14px\" mr=\"10px\" />\n                Delete data model\n              </MenuItem>\n            </MenuList>\n          </MenuButton>\n        </>\n      )}\n    </Menu>\n  );\n};\n\ninterface Props {\n  searchValue: string;\n  deleteDataModel: Function;\n}\n\nexport const ListDataModels = (props: Props) => {\n  const [selectedDataModel, setSelectedDataModel] = useState<string | null>(null);\n\n  const routerHistory = useHistory();\n  const dataModels: DataModel[] = useSelector(selectDataModels);\n\n  const { searchValue, deleteDataModel } = props;\n  const filteredDataModels = dataModels.filter((i: DataModel) =>\n    i.name.toLowerCase().includes(searchValue.toLowerCase()),\n  );\n\n  const {\n    isOpen: isDeleteDialogOpen,\n    onClose: closeDeleteDialog,\n    onOpen: openDeleteDialog,\n  } = useDisclosure();\n\n  return (\n    <>\n      <DeleteDataModelDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        selectedDataModel={selectedDataModel}\n        deleteDataModel={deleteDataModel}\n      />\n\n      <Box className=\"content\">\n        <Box className=\"section-title\">\n          {!searchValue && <Box className=\"title\">Data Models</Box>}\n          {!!searchValue && (\n            <>\n              {!!filteredDataModels.length ? (\n                <Box className=\"title\">Data Models found matching \"{searchValue}\"</Box>\n              ) : (\n                <Box className=\"title inactive\">No Data Models found</Box>\n              )}\n            </>\n          )}\n          <Button\n            variantColor=\"blue\"\n            size=\"sm\"\n            variant=\"solid\"\n            onClick={() => routerHistory.push('/s/lists/data-models/new')}\n          >\n            Create Data Model\n          </Button>\n        </Box>\n\n        {dataModels.length === 0 && (\n          <>\n            <EmptyState\n              image={noResources}\n              paddingTop=\"15vh\"\n              heading=\"Oops, no data models here\"\n              subheading=\"Setup a data model from your resources to create segments and run campaigns from your own data sources\"\n              subheadingProps={{\n                width: '500px',\n              }}\n            />\n            <Box\n              marginTop=\"25px\"\n              padding=\"10px 15px\"\n              borderRadius=\"5px\"\n              color=\"#333333\"\n              backgroundColor=\"#F7F7F7\"\n              textAlign=\"center\"\n              maxWidth=\"45vw\"\n              marginX=\"auto\"\n              fontSize=\"16px\"\n            >\n              Before you can build a view and utilize your data, you must first connect Simpu to\n              your database. Simpu supports connecting to a wide variety of databases, and data\n              models can only be used with one of those supported databases.\n            </Box>\n          </>\n        )}\n\n        {filteredDataModels.length > 0 && (\n          <SimpleGrid columns={2} spacing=\"5px\">\n            {filteredDataModels.map((i: any, index: number) => (\n              <DataModelItem\n                key={index}\n                name={i.name}\n                description={i.description}\n                onDeleteClicked={() => {\n                  setSelectedDataModel(i.id);\n                  openDeleteDialog();\n                }}\n              />\n            ))}\n          </SimpleGrid>\n        )}\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}