{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/record-modal/index.component.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// @ts-nocheck\nimport React, { useRef, useState } from 'react';\nimport { Modal, Box, ModalOverlay, Icon, IconButton, Menu, MenuButton, MenuList, MenuItem, useDisclosure, useToast } from '@chakra-ui/core';\nimport { useReactToPrint } from 'react-to-print';\nimport { RecordModalWrapper as Wrapper } from './index.styles';\nimport { getColumnHeaderIcon, getFieldRenderer } from '../../lists.utils';\nimport { GridColumnMenu } from '../grid/column-menu';\nimport { ToastBox, Button } from 'app/components';\nimport { ModalCloseButton } from '@chakra-ui/core/dist';\nexport const Field = props => {\n  const FieldComponent = getFieldRenderer(props.column.type);\n  return __jsx(FieldComponent, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst Header = props => {\n  const {\n    isOpen,\n    onClose,\n    onOpen\n  } = useDisclosure();\n  const {\n    0: triggerPosition,\n    1: setTriggerPosition\n  } = useState({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  });\n  const {\n    column\n  } = props;\n  const triggerRef = useRef(null);\n\n  const handleTriggerPressed = () => {\n    const rect = triggerRef.current.getBoundingClientRect();\n    setTriggerPosition(_objectSpread(_objectSpread({}, rect), {}, {\n      top: rect.top - 20,\n      bottom: rect.bottom - 20\n    }));\n    onOpen();\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleUpdateLabel = (columnID, label) => {\n    props.updateColumnLabel(columnID, label);\n  };\n\n  const handleUpdateType = (columnID, type) => {\n    props.updateColumnType(columnID, type);\n  };\n\n  const handleDelete = columnID => {\n    handleClose();\n    props.deleteColumn(columnID);\n  };\n\n  const handleHide = columnID => {\n    handleClose();\n    props.hideColumn(columnID);\n  };\n\n  const handleUpdate = (columnID, payload) => {\n    props.updateColumn(columnID, payload);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"label\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: getColumnHeaderIcon(column.type),\n    size: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    className: \"column-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, column.label), __jsx(IconButton, {\n    ref: triggerRef,\n    mx: \"15px\",\n    className: \"icon\",\n    icon: \"chevron-down\",\n    size: \"12px\",\n    onClick: handleTriggerPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), __jsx(GridColumnMenu, {\n    parent_type: \"field\",\n    column: column,\n    columns: props.columns,\n    isOpen: isOpen,\n    close: handleClose,\n    columnID: column.uid,\n    field_position: triggerPosition,\n    deleteColumn: handleDelete,\n    hideColumn: handleHide,\n    updateLabel: handleUpdateLabel,\n    updateType: handleUpdateType,\n    updateColumn: handleUpdate,\n    updateCustomization: props.updateColumnCustomization,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const RecordModalComponent = props => {\n  const modalRef = useRef();\n  const {\n    isOpen,\n    onClose,\n    node: {\n      data,\n      rowIndex\n    },\n    row_count,\n    createColumn,\n    deleteColumn,\n    updateColumnCustomization,\n    updateColumnLabel,\n    updateColumnType,\n    updateColumn,\n    hideColumn,\n    selectRows,\n    deleteRows\n  } = props;\n  const toast = useToast();\n  const {\n    updateSelectOption,\n    addSelectOption\n  } = props;\n  const title_column = props.columns_by_id[0];\n  const columns = props.columns_by_id.map(col_id => props.columns[col_id]);\n\n  const updateCellValue = (value, columnID) => {\n    props.updateRowCell({\n      row_id: data.uid,\n      columnID,\n      value\n    });\n  };\n\n  const handleCreateColumn = async () => {\n    await createColumn();\n    await modalRef.current.scrollTo({\n      top: 100000000000,\n      behavior: 'auto'\n    });\n  };\n\n  const deleteRow = async () => {\n    await selectRows([data.uid], 'id');\n    onClose();\n    deleteRows();\n    toast({\n      position: 'bottom-left',\n      render: ({\n        onClose\n      }) => __jsx(ToastBox, {\n        status: \"success\",\n        onClose: onClose,\n        message: \"Record deleted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      })\n    });\n  };\n\n  const handlePrint = useReactToPrint({\n    content: () => modalRef.current\n  });\n  return __jsx(Modal, {\n    preserveScrollBarGap: true,\n    scrollBehavior: \"inside\",\n    isCentered: true,\n    size: \"sm\",\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }), __jsx(Wrapper, {\n    borderRadius: \"5px\",\n    ref: modalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, __jsx(ModalCloseButton, {\n    borderRadius: \"15px\",\n    position: \"fixed\",\n    top: \"calc(10vh - 10px)\",\n    right: \"calc(50vw - 305px)\",\n    backgroundColor: \"#3d43df\",\n    color: \"white\",\n    _hover: {\n      backgroundColor: '#3d43df'\n    },\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    className: \"section-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    className: \"actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, __jsx(IconButton, {\n    borderRadius: \"15px\",\n    variant: \"outline\",\n    variantColor: \"blue\",\n    \"aria-label\": \"close\",\n    size: \"xs\",\n    icon: \"chevron-up\",\n    isDisabled: rowIndex === 0,\n    onClick: () => props.openRow(rowIndex - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }), __jsx(IconButton, {\n    marginX: \"5px\",\n    borderRadius: \"15px\",\n    variant: \"outline\",\n    variantColor: \"blue\",\n    \"aria-label\": \"close\",\n    size: \"xs\",\n    icon: \"chevron-down\",\n    isDisabled: rowIndex === row_count - 1,\n    onClick: () => props.openRow(rowIndex + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), __jsx(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, __jsx(MenuButton, {\n    as: IconButton // @ts-ignore\n    ,\n    icon: \"overflow\",\n    marginX: \"5px\",\n    borderRadius: \"15px\",\n    variant: \"ghost\",\n    variantColor: \"blue\",\n    \"aria-label\": \"close\",\n    size: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }), __jsx(MenuList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, __jsx(MenuItem, {\n    color: \"red\",\n    fontSize: \"12px\",\n    onClick: handlePrint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: \"download\",\n    size: \"14px\",\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }), \"Print record\"), __jsx(MenuItem, {\n    color: \"#E73D51\",\n    fontSize: \"12px\",\n    onClick: deleteRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: \"trash\",\n    size: \"14px\",\n    mr: \"10px\",\n    color: \"#E73D51\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }), \"Delete record\")))), __jsx(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, data[title_column]))), __jsx(Box, {\n    className: \"section-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, columns.map(column => __jsx(\"div\", {\n    key: column.uid,\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, __jsx(Header, {\n    column,\n    columns: props.columns,\n    deleteColumn,\n    updateColumnCustomization,\n    updateColumnLabel,\n    updateColumnType,\n    hideColumn,\n    updateColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, __jsx(Field, {\n    value: data[column.uid],\n    columns: props.columns,\n    column,\n    updateCellValue,\n    updateSelectOption,\n    addSelectOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }))))), __jsx(Button, {\n    size: \"sm\",\n    variant: \"link\",\n    variantColor: \"blue\",\n    className: \"add-button\",\n    onClick: handleCreateColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, \"Add a column to this list\")));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/record-modal/index.component.tsx"],"names":["React","useRef","useState","Modal","Box","ModalOverlay","Icon","IconButton","Menu","MenuButton","MenuList","MenuItem","useDisclosure","useToast","useReactToPrint","RecordModalWrapper","Wrapper","getColumnHeaderIcon","getFieldRenderer","GridColumnMenu","ToastBox","Button","ModalCloseButton","Field","props","FieldComponent","column","type","Header","isOpen","onClose","onOpen","triggerPosition","setTriggerPosition","left","right","top","bottom","triggerRef","handleTriggerPressed","rect","current","getBoundingClientRect","handleClose","handleUpdateLabel","columnID","label","updateColumnLabel","handleUpdateType","updateColumnType","handleDelete","deleteColumn","handleHide","hideColumn","handleUpdate","payload","updateColumn","columns","uid","updateColumnCustomization","RecordModalComponent","modalRef","node","data","rowIndex","row_count","createColumn","selectRows","deleteRows","toast","updateSelectOption","addSelectOption","title_column","columns_by_id","map","col_id","updateCellValue","value","updateRowCell","row_id","handleCreateColumn","scrollTo","behavior","deleteRow","position","render","handlePrint","content","backgroundColor","openRow"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, { useRef, useState } from 'react';\nimport {\n  Modal,\n  Box,\n  ModalOverlay,\n  Icon,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/core';\nimport { useReactToPrint } from 'react-to-print';\nimport { RecordModalWrapper as Wrapper } from './index.styles';\nimport { getColumnHeaderIcon, getFieldRenderer } from '../../lists.utils';\nimport { GridColumnMenu } from '../grid/column-menu';\nimport { ToastBox, Button } from 'app/components';\nimport { ModalCloseButton } from '@chakra-ui/core/dist';\n\ninterface FieldProps {\n  value: any;\n  column: any;\n  updateCellValue: Function;\n  updateSelectOption: Function;\n}\n\nexport const Field = (props: FieldProps) => {\n  const FieldComponent = getFieldRenderer(props.column.type);\n  return <FieldComponent {...props} />;\n};\n\nconst Header = (props: any) => {\n  const { isOpen, onClose, onOpen } = useDisclosure();\n\n  const [triggerPosition, setTriggerPosition] = useState({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n  });\n\n  const { column } = props;\n  const triggerRef = useRef(null);\n\n  const handleTriggerPressed = () => {\n    const rect = triggerRef.current.getBoundingClientRect();\n    setTriggerPosition({ ...rect, top: rect.top - 20, bottom: rect.bottom - 20 });\n    onOpen();\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleUpdateLabel = (columnID: string, label: string) => {\n    props.updateColumnLabel(columnID, label);\n  };\n\n  const handleUpdateType = (columnID: string, type: string) => {\n    props.updateColumnType(columnID, type);\n  };\n\n  const handleDelete = (columnID: string) => {\n    handleClose();\n    props.deleteColumn(columnID);\n  };\n\n  const handleHide = (columnID: string) => {\n    handleClose();\n    props.hideColumn(columnID);\n  };\n  const handleUpdate = (columnID: string, payload: {}) => {\n    props.updateColumn(columnID, payload);\n  };\n\n  return (\n    <>\n      <Box className=\"label\" display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Icon className=\"icon\" name={getColumnHeaderIcon(column.type)} size=\"14px\" />\n        <Box className=\"column-name\">{column.label}</Box>\n        <IconButton\n          ref={triggerRef}\n          mx=\"15px\"\n          className=\"icon\"\n          icon=\"chevron-down\"\n          size=\"12px\"\n          onClick={handleTriggerPressed}\n        />\n      </Box>\n      <GridColumnMenu\n        parent_type=\"field\"\n        column={column}\n        columns={props.columns}\n        isOpen={isOpen}\n        close={handleClose}\n        columnID={column.uid}\n        field_position={triggerPosition}\n        deleteColumn={handleDelete}\n        hideColumn={handleHide}\n        updateLabel={handleUpdateLabel}\n        updateType={handleUpdateType}\n        updateColumn={handleUpdate}\n        updateCustomization={props.updateColumnCustomization}\n      />\n    </>\n  );\n};\n\nexport const RecordModalComponent = (props: any) => {\n  const modalRef = useRef();\n  const {\n    isOpen,\n    onClose,\n    node: { data, rowIndex },\n    row_count,\n    createColumn,\n    deleteColumn,\n    updateColumnCustomization,\n    updateColumnLabel,\n    updateColumnType,\n    updateColumn,\n    hideColumn,\n    selectRows,\n    deleteRows,\n  } = props;\n\n  const toast = useToast();\n\n  const { updateSelectOption, addSelectOption } = props;\n\n  const title_column = props.columns_by_id[0];\n\n  const columns = props.columns_by_id.map((col_id: string) => props.columns[col_id]);\n\n  const updateCellValue = (value, columnID) => {\n    props.updateRowCell({\n      row_id: data.uid,\n      columnID,\n      value,\n    });\n  };\n\n  const handleCreateColumn = async () => {\n    await createColumn();\n    await modalRef.current.scrollTo({\n      top: 100000000000,\n      behavior: 'auto',\n    });\n  };\n\n  const deleteRow = async () => {\n    await selectRows([data.uid], 'id');\n    onClose();\n    deleteRows();\n    toast({\n      position: 'bottom-left',\n      render: ({ onClose }) => (\n        <ToastBox status=\"success\" onClose={onClose} message=\"Record deleted\" />\n      ),\n    });\n  };\n\n  const handlePrint = useReactToPrint({\n    content: () => modalRef.current,\n  });\n\n  return (\n    <Modal\n      preserveScrollBarGap\n      scrollBehavior=\"inside\"\n      isCentered\n      size=\"sm\"\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <ModalOverlay />\n\n      <Wrapper borderRadius=\"5px\" ref={modalRef}>\n        <ModalCloseButton\n          borderRadius=\"15px\"\n          position=\"fixed\"\n          top=\"calc(10vh - 10px)\"\n          right=\"calc(50vw - 305px)\"\n          backgroundColor=\"#3d43df\"\n          color=\"white\"\n          _hover={{\n            backgroundColor: '#3d43df',\n          }}\n          size=\"sm\"\n        />\n        <Box className=\"section-header\">\n          <Box className=\"actions\">\n            <IconButton\n              borderRadius=\"15px\"\n              variant=\"outline\"\n              variantColor=\"blue\"\n              aria-label=\"close\"\n              size=\"xs\"\n              icon=\"chevron-up\"\n              isDisabled={rowIndex === 0}\n              onClick={() => props.openRow(rowIndex - 1)}\n            />\n            <IconButton\n              marginX=\"5px\"\n              borderRadius=\"15px\"\n              variant=\"outline\"\n              variantColor=\"blue\"\n              aria-label=\"close\"\n              size=\"xs\"\n              icon=\"chevron-down\"\n              isDisabled={rowIndex === row_count - 1}\n              onClick={() => props.openRow(rowIndex + 1)}\n            />\n\n            <Menu>\n              <MenuButton\n                as={IconButton}\n                // @ts-ignore\n                icon=\"overflow\"\n                marginX=\"5px\"\n                borderRadius=\"15px\"\n                variant=\"ghost\"\n                variantColor=\"blue\"\n                aria-label=\"close\"\n                size=\"xs\"\n              />\n              <MenuList>\n                <MenuItem color=\"red\" fontSize=\"12px\" onClick={handlePrint}>\n                  <Icon name=\"download\" size=\"14px\" mr=\"10px\" />\n                  Print record\n                </MenuItem>\n                <MenuItem color=\"#E73D51\" fontSize=\"12px\" onClick={deleteRow}>\n                  <Icon name=\"trash\" size=\"14px\" mr=\"10px\" color=\"#E73D51\" />\n                  Delete record\n                </MenuItem>\n              </MenuList>\n            </Menu>\n          </Box>\n\n          <Box display=\"flex\">\n            <Box className=\"heading\">{data[title_column]}</Box>\n          </Box>\n        </Box>\n\n        <Box className=\"section-info\">\n          {columns.map((column: any) => (\n            <div key={column.uid} className=\"info-item\">\n              <Header\n                {...{\n                  column,\n                  columns: props.columns,\n                  deleteColumn,\n                  updateColumnCustomization,\n                  updateColumnLabel,\n                  updateColumnType,\n                  hideColumn,\n                  updateColumn,\n                }}\n              />\n              <div className=\"value\">\n                <Field\n                  {...{\n                    value: data[column.uid],\n                    columns: props.columns,\n                    column,\n                    updateCellValue,\n                    updateSelectOption,\n                    addSelectOption,\n                  }}\n                />\n              </div>\n            </div>\n          ))}\n        </Box>\n        <Button\n          size=\"sm\"\n          variant=\"link\"\n          variantColor=\"blue\"\n          className=\"add-button\"\n          onClick={handleCreateColumn}\n        >\n          Add a column to this list\n        </Button>\n      </Wrapper>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}