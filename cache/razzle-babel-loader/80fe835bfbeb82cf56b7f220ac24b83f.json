{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"textAreaRef\", \"handleSubmit\", \"isTemplateMode\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/messages/compose/Editor.tsx\";\nvar __jsx = React.createElement;\nimport TextareaAutosize from 'react-textarea-autosize';\nimport React from 'react';\nimport ContentEditable from 'react-contenteditable';\nexport function Editor(_ref) {\n  var _ref2;\n\n  let {\n    textAreaRef,\n    handleSubmit,\n    isTemplateMode\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const keysPressed = {};\n\n  const handleKeyDown = e => {\n    keysPressed[e.key] = true;\n\n    if (keysPressed['Shift'] && keysPressed['Enter']) {\n      return;\n    }\n\n    if (keysPressed['Enter']) {\n      e.preventDefault();\n      return handleSubmit && handleSubmit();\n    }\n  };\n\n  const handleKeyUp = v => {\n    keysPressed[v] = false;\n  };\n\n  return isTemplateMode ? // <div\n  //   style={rest.style}\n  //   contentEditable={true}\n  //   className=\"message-compose\"\n  //   dangerouslySetInnerHTML={{ __html: rest.value as string }}\n  // />\n  __jsx(ContentEditable, {\n    disabled: false,\n    placeholder: rest.placeholder,\n    html: (_ref2 = rest.value) !== null && _ref2 !== void 0 ? _ref2 : '',\n    style: _objectSpread({\n      height: 150\n    }, rest.style),\n    onPaste: event => {\n      event.preventDefault();\n      const text = event.clipboardData.getData('text/plain');\n      document.execCommand('insertHTML', false, text);\n    },\n    onKeyDown: event => {\n      if (event.key === 'Enter') {\n        document.execCommand('insertLineBreak');\n        event.preventDefault();\n      }\n    },\n    onChange: event => {\n      var _rest$setText;\n\n      return rest === null || rest === void 0 ? void 0 : (_rest$setText = rest.setText) === null || _rest$setText === void 0 ? void 0 : _rest$setText.call(rest, event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }) : __jsx(TextareaAutosize, _extends({\n    id: \"message\",\n    className: \"message\",\n    onKeyDown: handleKeyDown,\n    onKeyUp: e => handleKeyUp(e.key),\n    ref: textAreaRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/messages/compose/Editor.tsx"],"names":["TextareaAutosize","React","ContentEditable","Editor","textAreaRef","handleSubmit","isTemplateMode","rest","keysPressed","handleKeyDown","e","key","preventDefault","handleKeyUp","v","placeholder","value","height","style","event","text","clipboardData","getData","document","execCommand","setText","target"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,uBAA5B;AAEA,OAAO,SAASC,MAAT,OAAqF;AAAA;;AAAA,MAArE;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,GAAqE;AAAA,MAArBC,IAAqB;;AAC1F,QAAMC,WAAgB,GAAG,EAAzB;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAY;AAChCF,IAAAA,WAAW,CAACE,CAAC,CAACC,GAAH,CAAX,GAAqB,IAArB;;AAEA,QAAIH,WAAW,CAAC,OAAD,CAAX,IAAwBA,WAAW,CAAC,OAAD,CAAvC,EAAkD;AAChD;AACD;;AAED,QAAIA,WAAW,CAAC,OAAD,CAAf,EAA0B;AACxBE,MAAAA,CAAC,CAACE,cAAF;AACA,aAAOP,YAAY,IAAIA,YAAY,EAAnC;AACD;AACF,GAXD;;AAaA,QAAMQ,WAAW,GAAIC,CAAD,IAAe;AACjCN,IAAAA,WAAW,CAACM,CAAD,CAAX,GAAiB,KAAjB;AACD,GAFD;;AAIA,SAAOR,cAAc,GACnB;AACA;AACA;AACA;AACA;AACA;AACA,QAAC,eAAD;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,WAAW,EAAEC,IAAI,CAACQ,WAFpB;AAGE,IAAA,IAAI,WAAGR,IAAI,CAACS,KAAR,yCAA4B,EAHlC;AAIE,IAAA,KAAK;AAAIC,MAAAA,MAAM,EAAE;AAAZ,OAAoBV,IAAI,CAACW,KAAzB,CAJP;AAKE,IAAA,OAAO,EAAGC,KAAD,IAAgB;AACvBA,MAAAA,KAAK,CAACP,cAAN;AACA,YAAMQ,IAAI,GAAGD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4B,YAA5B,CAAb;AACAC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0CJ,IAA1C;AACD,KATH;AAUE,IAAA,SAAS,EAAED,KAAK,IAAI;AAClB,UAAIA,KAAK,CAACR,GAAN,KAAc,OAAlB,EAA2B;AACzBY,QAAAA,QAAQ,CAACC,WAAT,CAAqB,iBAArB;AACAL,QAAAA,KAAK,CAACP,cAAN;AACD;AACF,KAfH;AAgBE,IAAA,QAAQ,EAAEO,KAAK;AAAA;;AAAA,aAAIZ,IAAJ,aAAIA,IAAJ,wCAAIA,IAAI,CAAEkB,OAAV,kDAAI,mBAAAlB,IAAI,EAAYY,KAAK,CAACO,MAAN,CAAaV,KAAzB,CAAR;AAAA,KAhBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPmB,GA0BnB,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,SAAS,EAAC,SAFZ;AAGE,IAAA,SAAS,EAAEP,aAHb;AAIE,IAAA,OAAO,EAAGC,CAAD,IAAYG,WAAW,CAACH,CAAC,CAACC,GAAH,CAJlC;AAKE,IAAA,GAAG,EAAEP;AALP,KAMMG,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1BF;AAmCD","sourcesContent":["import TextareaAutosize from 'react-textarea-autosize';\nimport React from 'react';\nimport { EditorProps } from '../../../inbox.types';\nimport ContentEditable from 'react-contenteditable';\n\nexport function Editor({ textAreaRef, handleSubmit, isTemplateMode, ...rest }: EditorProps) {\n  const keysPressed: any = {};\n\n  const handleKeyDown = (e: any) => {\n    keysPressed[e.key] = true;\n\n    if (keysPressed['Shift'] && keysPressed['Enter']) {\n      return;\n    }\n\n    if (keysPressed['Enter']) {\n      e.preventDefault();\n      return handleSubmit && handleSubmit();\n    }\n  };\n\n  const handleKeyUp = (v: string) => {\n    keysPressed[v] = false;\n  };\n\n  return isTemplateMode ? (\n    // <div\n    //   style={rest.style}\n    //   contentEditable={true}\n    //   className=\"message-compose\"\n    //   dangerouslySetInnerHTML={{ __html: rest.value as string }}\n    // />\n    <ContentEditable\n      disabled={false}\n      placeholder={rest.placeholder}\n      html={(rest.value as string) ?? ''}\n      style={{ height: 150, ...rest.style }}\n      onPaste={(event: any) => {\n        event.preventDefault();\n        const text = event.clipboardData.getData('text/plain');\n        document.execCommand('insertHTML', false, text);\n      }}\n      onKeyDown={event => {\n        if (event.key === 'Enter') {\n          document.execCommand('insertLineBreak');\n          event.preventDefault();\n        }\n      }}\n      onChange={event => rest?.setText?.(event.target.value)}\n    />\n  ) : (\n    <TextareaAutosize\n      id=\"message\"\n      className=\"message\"\n      onKeyDown={handleKeyDown}\n      onKeyUp={(e: any) => handleKeyUp(e.key)}\n      ref={textAreaRef}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}