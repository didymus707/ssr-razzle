{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"title\", \"isOpen\", \"onClose\", \"children\", \"size\", \"showCloseButton\", \"initialFocusRef\", \"isCentered\", \"titleStyleProps\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/ModalContainer/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton } from '@chakra-ui/core';\nexport function ModalContainer(_ref) {\n  let {\n    title,\n    isOpen,\n    onClose,\n    children,\n    size = 'lg',\n    showCloseButton,\n    initialFocusRef,\n    isCentered = true,\n    titleStyleProps\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(React.Fragment, null, __jsx(Modal, _extends({\n    size: size,\n    isOpen: isOpen,\n    onClose: onClose,\n    isCentered: isCentered,\n    initialFocusRef: initialFocusRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(ModalContent, {\n    borderRadius: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, title && __jsx(ModalHeader, _extends({}, titleStyleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), title), showCloseButton && __jsx(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }\n  }), children)));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/ModalContainer/index.tsx"],"names":["React","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalContainer","title","isOpen","onClose","children","size","showCloseButton","initialFocusRef","isCentered","titleStyleProps","rest"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,gBALF,QASO,iBATP;AAsBA,OAAO,SAASC,cAAT,OAW4B;AAAA,MAXJ;AAC7BC,IAAAA,KAD6B;AAE7BC,IAAAA,MAF6B;AAG7BC,IAAAA,OAH6B;AAI7BC,IAAAA,QAJ6B;AAK7BC,IAAAA,IAAI,GAAG,IALsB;AAM7BC,IAAAA,eAN6B;AAO7BC,IAAAA,eAP6B;AAQ7BC,IAAAA,UAAU,GAAG,IARgB;AAS7BC,IAAAA;AAT6B,GAWI;AAAA,MAD9BC,IAC8B;;AACjC,SACE,4BACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,MAAM,EAAEH,MAFV;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,UAAU,EAAEK,UAJd;AAKE,IAAA,eAAe,EAAED;AALnB,KAMMG,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,MAAC,YAAD;AAAc,IAAA,YAAY,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,IAAI,MAAC,WAAD,eAAiBQ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAmCR,KAAnC,CADZ,EAEGK,eAAe,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtB,EAGGF,QAHH,CATF,CADF,CADF;AAmBD","sourcesContent":["import React from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalSizes,\n  IModal,\n  BoxProps,\n} from '@chakra-ui/core';\n\nexport interface ModalContainerOptions {\n  title?: string;\n  isOpen?: boolean;\n  size?: ModalSizes;\n  onOpen?: () => void;\n  onClose?: () => void;\n  showCloseButton?: boolean;\n  children?: React.ReactNode;\n  titleStyleProps?: BoxProps;\n}\n\nexport function ModalContainer({\n  title,\n  isOpen,\n  onClose,\n  children,\n  size = 'lg',\n  showCloseButton,\n  initialFocusRef,\n  isCentered = true,\n  titleStyleProps,\n  ...rest\n}: ModalContainerOptions & IModal) {\n  return (\n    <>\n      <Modal\n        size={size}\n        isOpen={isOpen}\n        onClose={onClose}\n        isCentered={isCentered}\n        initialFocusRef={initialFocusRef}\n        {...rest}\n      >\n        <ModalOverlay />\n        <ModalContent borderRadius=\"16px\">\n          {title && <ModalHeader {...titleStyleProps}>{title}</ModalHeader>}\n          {showCloseButton && <ModalCloseButton />}\n          {children}\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}