{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/payments/component/payments/components/payment-requests/mark-paid-dialog/index.tsx\";\nvar __jsx = React.createElement;\n// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Modal, ModalOverlay, SlideIn, Box, Icon, useToast } from '@chakra-ui/core';\nimport { PaymentRequestMarkPaidDialogWrapper as Wrapper } from './index.styles';\nimport { formatToCurrency } from '../../../../../../inbox/inbox.utils';\nimport moment from 'moment';\nimport { ToastBox, Button } from 'app/components';\nexport const PaymentRequestMarkPaidDialog = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    isOpen,\n    onClose,\n    payment_request,\n    mark_request_paid\n  } = props;\n  const toast = useToast();\n\n  const handleMarkRequestPaid = async () => {\n    setLoading(true);\n    const res = await mark_request_paid(payment_request['id']);\n\n    if (res) {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Payment request marked as paid successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        })\n      });\n      onClose();\n    } else {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: \"An issue occurred while trying to mark this request as paid, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        })\n      });\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(SlideIn, {\n    in: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, styles => __jsx(Modal, {\n    size: \"sm\",\n    isOpen: true,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(Wrapper, _extends({}, styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Cancel Payment Request\"), __jsx(Box, {\n    className: \"info-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    className: \"customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, payment_request.platform_name), __jsx(Box, {\n    className: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, payment_request.code)), __jsx(Box, {\n    className: \"status-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    size: \"16px\",\n    name: \"send\",\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }), moment(payment_request.created_datetime).format('MMM D'))), __jsx(Box, {\n    className: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"\\u20A6 \", formatToCurrency(payment_request.amount))), __jsx(Box, {\n    mt: \"15px\",\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    mr: \"20px\",\n    size: \"sm\",\n    variant: \"ghost\",\n    onClick: onClose,\n    isDisabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Close\"), __jsx(Button, {\n    size: \"sm\",\n    variant: \"solid\",\n    variantColor: \"red\",\n    isLoading: loading,\n    onClick: handleMarkRequestPaid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Mark Request Paid\")))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/payments/component/payments/components/payment-requests/mark-paid-dialog/index.tsx"],"names":["React","useState","Modal","ModalOverlay","SlideIn","Box","Icon","useToast","PaymentRequestMarkPaidDialogWrapper","Wrapper","formatToCurrency","moment","ToastBox","Button","PaymentRequestMarkPaidDialog","props","loading","setLoading","isOpen","onClose","payment_request","mark_request_paid","toast","handleMarkRequestPaid","res","position","render","styles","platform_name","code","created_datetime","format","amount"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Modal, ModalOverlay, SlideIn, Box, Icon, useToast } from '@chakra-ui/core';\nimport { PaymentRequest } from '../../../../../payments.types';\nimport { PaymentRequestMarkPaidDialogWrapper as Wrapper } from './index.styles';\nimport { formatToCurrency } from '../../../../../../inbox/inbox.utils';\nimport moment from 'moment';\nimport { ToastBox, Button } from 'app/components';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  payment_request: PaymentRequest;\n  mark_request_paid: Function;\n}\n\nexport const PaymentRequestMarkPaidDialog = (props: Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const { isOpen, onClose, payment_request, mark_request_paid } = props;\n\n  const toast = useToast();\n\n  const handleMarkRequestPaid = async () => {\n    setLoading(true);\n    const res = await mark_request_paid(payment_request['id']);\n\n    if (res) {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            status=\"success\"\n            onClose={onClose}\n            message=\"Payment request marked as paid successfully\"\n          />\n        ),\n      });\n      onClose();\n    } else {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            onClose={onClose}\n            message=\"An issue occurred while trying to mark this request as paid, please try again\"\n          />\n        ),\n      });\n    }\n    setLoading(false);\n  };\n\n  return (\n    <SlideIn in={isOpen}>\n      {(styles: Object) => (\n        <Modal size=\"sm\" isOpen={true} onClose={onClose}>\n          <ModalOverlay />\n          <Wrapper {...styles}>\n            <Box className=\"heading\">Cancel Payment Request</Box>\n            <Box className=\"info-box\">\n              <Box display=\"flex\" justifyContent=\"space-between\">\n                <Box className=\"customer\">\n                  <Box className=\"name\">{payment_request.platform_name}</Box>\n                  <Box className=\"code\">{payment_request.code}</Box>\n                </Box>\n                <Box className=\"status-badge\">\n                  <Icon size=\"16px\" name=\"send\" mr=\"10px\" />\n                  {moment(payment_request.created_datetime).format('MMM D')}\n                </Box>\n              </Box>\n              <Box className=\"amount\">₦ {formatToCurrency(payment_request.amount)}</Box>\n            </Box>\n\n            <Box mt=\"15px\" display=\"flex\" width=\"100%\" justifyContent=\"flex-end\">\n              <Button mr=\"20px\" size=\"sm\" variant=\"ghost\" onClick={onClose} isDisabled={loading}>\n                Close\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"solid\"\n                variantColor=\"red\"\n                isLoading={loading}\n                onClick={handleMarkRequestPaid}\n              >\n                Mark Request Paid\n              </Button>\n            </Box>\n          </Wrapper>\n        </Modal>\n      )}\n    </SlideIn>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}