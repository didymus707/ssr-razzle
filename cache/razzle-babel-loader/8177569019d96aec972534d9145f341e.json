{"ast":null,"code":"const _excluded = [\"name\", \"children\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/more-info/UserOverview.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { Avatar, Box, Button, Flex, Icon, Link, PseudoBox, Stack, Text, IconButton } from '@chakra-ui/core';\nimport { useSelector } from 'react-redux';\nimport { selectAddressBookDetailByID, selectContactTable, selectCustomerByID, selectName, selectThreadDetailByID } from '../../slices';\nimport { useParams } from 'react-router-dom';\nimport { INBOX_INIT } from '../../inbox.data';\nimport { Contact } from './Contact';\nimport { Note } from './Note';\nimport { sortColumns, transformSenderToContact } from '../../inbox.utils';\nimport { selectThreadReceiverPlatformID } from '../../../channels';\n\nfunction Icons(_ref) {\n  let props = Object.assign({}, _ref);\n  const params = useParams(); //@ts-ignore\n\n  const {\n    address_book_id,\n    sender_id\n  } = useSelector(state => selectThreadDetailByID(state, params.id === 'new' ? '' : params.id)) || INBOX_INIT.thread;\n  const table = useSelector(selectContactTable);\n  const addressBookDetail = useSelector(state => selectAddressBookDetailByID(state, address_book_id || ''));\n  const senderDetail = useSelector(state => selectCustomerByID(state, sender_id || ''));\n  let columns = [];\n  let contact = {};\n\n  if (!addressBookDetail && table && senderDetail) {\n    const [cols, data] = transformSenderToContact(table, senderDetail);\n    columns = cols;\n    contact = data;\n  } else {\n    var _addressBookDetail$co;\n\n    columns = (table === null || table === void 0 ? void 0 : table.columns) || [];\n    const c = Object.assign({}, (addressBookDetail === null || addressBookDetail === void 0 ? void 0 : (_addressBookDetail$co = addressBookDetail.contactinfo) === null || _addressBookDetail$co === void 0 ? void 0 : _addressBookDetail$co.columns) || {});\n    contact = c;\n  }\n\n  const [c] = sortColumns(columns, contact);\n  columns = c;\n  let phone = '';\n  let email = '';\n  columns.forEach(({\n    type,\n    id\n  }) => {\n    if (id && contact[id]) {\n      if (type === 'PHONE NUMBER') {\n        phone = contact[id];\n      } else if (type === 'EMAIL') {\n        email = contact[id];\n      }\n    }\n  });\n  const icons = [{\n    name: 'phone-1',\n    href: `tel:${phone}`,\n    onClick: undefined,\n    isLink: true,\n    isVisible: !!phone\n  }, // { name: 'chat-1', href: '', onClick: undefined, isLink: false },\n  {\n    name: 'email-1',\n    href: `mailto:${email}`,\n    onClick: undefined,\n    isLink: true,\n    isVisible: !!email\n  } // { name: 'overflow', onClick: undefined },\n  ];\n  const filteredIcons = icons.filter(({\n    isVisible\n  }) => isVisible);\n  return filteredIcons.length === 0 ? __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }) : __jsx(Stack, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), filteredIcons.map(({\n    name,\n    isLink,\n    href,\n    onClick\n  }) => isLink ? __jsx(Link, {\n    href: href,\n    key: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: name,\n    size: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })) : __jsx(IconButton // @ts-ignore\n  , {\n    icon: name,\n    key: name,\n    \"aria-label\": \"chat\",\n    color: \"#333\",\n    fontSize: \"1.5rem\",\n    lineHeight: \"1.5rem\",\n    padding: \"0\",\n    height: \"auto\",\n    minWidth: \"auto\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })));\n}\n\nfunction FooterItem(_ref2) {\n  let {\n    name,\n    children\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  const {\n    0: isExpanded,\n    1: setIsExpanded\n  } = useState(false);\n  return __jsx(Flex, _extends({\n    className: \"more-info-footer-item\",\n    flexDirection: \"column\",\n    overflowY: \"hidden\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }), __jsx(PseudoBox, {\n    as: \"button\",\n    display: \"flex\",\n    cursor: \"pointer\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    _focus: {\n      outline: 'none'\n    },\n    onClick: () => setIsExpanded(!isExpanded),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    height: \"1rem\",\n    name: isExpanded ? 'chevron-down' : 'chevron-right',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), __jsx(Text, {\n    color: \"#000\",\n    fontWeight: 500,\n    fontSize: \".75rem\",\n    lineHeight: \"1rem\",\n    marginLeft: \"0.5rem\",\n    letterSpacing: \".05rem\",\n    textTransform: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, name)), isExpanded && children && children, __jsx(Box, {\n    height: \"1px\",\n    marginTop: \"1rem\",\n    marginRight: \"3.75rem\",\n    backgroundColor: \"rgba(213, 219, 230, 0.5)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst Footer = _ref3 => {\n  let props = Object.assign({}, _ref3);\n  const items = [{\n    name: 'Details',\n    view: __jsx(React.Fragment, null, __jsx(Contact, {\n      paddingTop: \"1.5rem\",\n      gap: \"1rem 1.5rem\",\n      templateColumns: \"repeat(2, 1fr)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }))\n  }, {\n    name: 'Notes',\n    view: __jsx(Note, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    })\n  }];\n  return __jsx(Flex, _extends({\n    className: \"more-info-footer\",\n    flexDirection: \"column\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }), items.map(({\n    name,\n    view\n  }) => __jsx(FooterItem, {\n    key: name,\n    name: name,\n    paddingTop: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, view)));\n};\n\nexport function UserOverview({\n  toggleUserOverview,\n  onUserOverViewToggled\n}) {\n  const params = useParams();\n  const thread = useSelector(state => selectThreadDetailByID(state, params.id === 'new' ? '' : params.id)) || INBOX_INIT.thread;\n  const senderDetail = useSelector(state => selectCustomerByID(state, (thread === null || thread === void 0 ? void 0 : thread.sender_id) || ''));\n  const threadReceiverUserID = useSelector(state => selectThreadReceiverPlatformID(state, params.id === 'new' ? '' : params.id));\n  const sender_name = useSelector(state => selectName(state, {\n    id: thread.sender_id,\n    credentialUserID: threadReceiverUserID\n  }));\n\n  if (toggleUserOverview === 'none') {\n    return __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (toggleUserOverview === 'mini') {\n    return thread.uuid ? __jsx(Stack, {\n      spacing: \"1.5rem\",\n      backgroundColor: \"white\",\n      paddingX: \"1.25rem\",\n      paddingTop: \"1.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      paddingX: \"0\",\n      variant: \"ghost\",\n      height: \"initial\",\n      minWidth: \"initial\",\n      onClick: () => onUserOverViewToggled(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, __jsx(Icon, {\n      name: \"go-back\",\n      size: \"1rem\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    })), __jsx(Avatar, {\n      as: \"button\",\n      size: \"sm\",\n      src: senderDetail === null || senderDetail === void 0 ? void 0 : senderDetail.image_url,\n      name: sender_name,\n      onClick: () => onUserOverViewToggled(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    })) : __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return __jsx(Flex, {\n    fontSize: \".875rem\",\n    paddingTop: \"1.875rem\",\n    paddingLeft: \"1.5rem\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    width: ['100%', '100%', '100%', '394px'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, __jsx(IconButton, {\n    icon: \"close\",\n    \"aria-label\": \"close-more-info\",\n    variant: \"ghost\",\n    variantColor: \"blue\",\n    color: \"#333\",\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n    padding: \".25rem\",\n    marginRight: \"2rem\",\n    minWidth: \"auto\",\n    alignSelf: \"flex-end\",\n    onClick: () => onUserOverViewToggled(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }), __jsx(Avatar, {\n    size: \"xl\",\n    marginTop: \".625rem\",\n    src: senderDetail === null || senderDetail === void 0 ? void 0 : senderDetail.image_url,\n    onClick: () => onUserOverViewToggled(),\n    name: sender_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }), __jsx(Text, {\n    marginY: \"1rem\",\n    fontSize: \"1.25rem\",\n    paddingRight: \"3.75rem\",\n    fontWeight: 500,\n    lineHeight: \"1.625rem\",\n    color: \"#333\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }, sender_name), __jsx(Icons, {\n    isInline: true,\n    paddingRight: \"3.75rem\",\n    spacing: \"1.25rem\",\n    marginBottom: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    height: \"1px\",\n    backgroundColor: \"rgba(213, 219, 230, 0.5)\",\n    marginRight: \"3.75rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }), __jsx(Footer, {\n    flex: 1,\n    minWidth: \"13.875rem\",\n    overflowY: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/more-info/UserOverview.tsx"],"names":["React","useState","Avatar","Box","Button","Flex","Icon","Link","PseudoBox","Stack","Text","IconButton","useSelector","selectAddressBookDetailByID","selectContactTable","selectCustomerByID","selectName","selectThreadDetailByID","useParams","INBOX_INIT","Contact","Note","sortColumns","transformSenderToContact","selectThreadReceiverPlatformID","Icons","props","params","address_book_id","sender_id","state","id","thread","table","addressBookDetail","senderDetail","columns","contact","cols","data","c","contactinfo","phone","email","forEach","type","icons","name","href","onClick","undefined","isLink","isVisible","filteredIcons","filter","length","map","FooterItem","children","isExpanded","setIsExpanded","outline","Footer","items","view","UserOverview","toggleUserOverview","onUserOverViewToggled","threadReceiverUserID","sender_name","credentialUserID","uuid","image_url"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAMEC,IANF,EAOEC,IAPF,EAQEC,SARF,EASEC,KATF,EAUEC,IAVF,EAYEC,UAZF,QAaO,iBAbP;AAeA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SACEC,2BADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,UAJF,EAKEC,sBALF,QAMO,cANP;AAOA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,SAASC,WAAT,EAAsBC,wBAAtB,QAAsD,mBAAtD;AAEA,SAASC,8BAAT,QAA+C,mBAA/C;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAArBC,KAAqB;AACvC,QAAMC,MAAM,GAAGT,SAAS,EAAxB,CADuC,CAGvC;;AACA,QAAM;AAAEU,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MACJjB,WAAW,CAAEkB,KAAD,IACVb,sBAAsB,CAACa,KAAD,EAAQH,MAAM,CAACI,EAAP,KAAc,KAAd,GAAsB,EAAtB,GAA2BJ,MAAM,CAACI,EAA1C,CADb,CAAX,IAEKZ,UAAU,CAACa,MAHlB;AAIA,QAAMC,KAAK,GAAGrB,WAAW,CAACE,kBAAD,CAAzB;AACA,QAAMoB,iBAAiB,GAAGtB,WAAW,CAAEkB,KAAD,IACpCjB,2BAA2B,CAACiB,KAAD,EAAQF,eAAe,IAAI,EAA3B,CADQ,CAArC;AAGA,QAAMO,YAAY,GAAGvB,WAAW,CAAEkB,KAAD,IAC/Bf,kBAAkB,CAACe,KAAD,EAAQD,SAAS,IAAI,EAArB,CADY,CAAhC;AAGA,MAAIO,OAA0C,GAAG,EAAjD;AACA,MAAIC,OAAgD,GAAG,EAAvD;;AAEA,MAAI,CAACH,iBAAD,IAAsBD,KAAtB,IAA+BE,YAAnC,EAAiD;AAC/C,UAAM,CAACG,IAAD,EAAOC,IAAP,IAAehB,wBAAwB,CAACU,KAAD,EAAQE,YAAR,CAA7C;AACAC,IAAAA,OAAO,GAAGE,IAAV;AACAD,IAAAA,OAAO,GAAGE,IAAV;AACD,GAJD,MAIO;AAAA;;AACLH,IAAAA,OAAO,GAAG,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,OAAP,KAAkB,EAA5B;AACA,UAAWI,CAAX,qBAAiB,CAAAN,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,qCAAAA,iBAAiB,CAAEO,WAAnB,gFAAgCL,OAAhC,KAA2C,EAA5D;AACAC,IAAAA,OAAO,GAAGG,CAAV;AACD;;AAED,QAAM,CAACA,CAAD,IAAMlB,WAAW,CAACc,OAAD,EAAUC,OAAV,CAAvB;AACAD,EAAAA,OAAO,GAAGI,CAAV;AACA,MAAIE,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAP,EAAAA,OAAO,CAACQ,OAAR,CAAgB,CAAC;AAAEC,IAAAA,IAAF;AAAQd,IAAAA;AAAR,GAAD,KAAkB;AAChC,QAAIA,EAAE,IAAIM,OAAO,CAACN,EAAD,CAAjB,EAAuB;AACrB,UAAIc,IAAI,KAAK,cAAb,EAA6B;AAC3BH,QAAAA,KAAK,GAAGL,OAAO,CAACN,EAAD,CAAf;AACD,OAFD,MAEO,IAAIc,IAAI,KAAK,OAAb,EAAsB;AAC3BF,QAAAA,KAAK,GAAGN,OAAO,CAACN,EAAD,CAAf;AACD;AACF;AACF,GARD;AAUA,QAAMe,KAAK,GAAG,CACZ;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAG,OAAMN,KAAM,EAAtC;AAAyCO,IAAAA,OAAO,EAAEC,SAAlD;AAA6DC,IAAAA,MAAM,EAAE,IAArE;AAA2EC,IAAAA,SAAS,EAAE,CAAC,CAACV;AAAxF,GADY,EAEZ;AACA;AACEK,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAG,UAASL,KAAM,EAFxB;AAGEM,IAAAA,OAAO,EAAEC,SAHX;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEC,IAAAA,SAAS,EAAE,CAAC,CAACT;AALf,GAHY,CAUZ;AAVY,GAAd;AAYA,QAAMU,aAAa,GAAGP,KAAK,CAACQ,MAAN,CAAa,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAmBA,SAAhC,CAAtB;AAEA,SAAOC,aAAa,CAACE,MAAd,KAAyB,CAAzB,GACL,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,MAAC,KAAD,eAAW7B,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG2B,aAAa,CAACG,GAAd,CAAkB,CAAC;AAAET,IAAAA,IAAF;AAAQI,IAAAA,MAAR;AAAgBH,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,GAAD,KACjBE,MAAM,GACJ,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAkB,IAAA,GAAG,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADI,GAKJ,MAAC,UAAD,CACE;AADF;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,GAAG,EAAEA,IAHP;AAIE,kBAAW,MAJb;AAKE,IAAA,KAAK,EAAC,MALR;AAME,IAAA,QAAQ,EAAC,QANX;AAOE,IAAA,UAAU,EAAC,QAPb;AAQE,IAAA,OAAO,EAAC,GARV;AASE,IAAA,MAAM,EAAC,MATT;AAUE,IAAA,QAAQ,EAAC,MAVX;AAWE,IAAA,OAAO,EAAEE,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,CADH,CAHF;AA2BD;;AAED,SAASQ,UAAT,QAAgF;AAAA,MAA5D;AAAEV,IAAAA,IAAF;AAAQW,IAAAA;AAAR,GAA4D;AAAA,MAAvChC,KAAuC;;AAC9E,QAAM;AAAA,OAACiC,UAAD;AAAA,OAAaC;AAAb,MAA8B3D,QAAQ,CAAC,KAAD,CAA5C;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAwC,IAAA,aAAa,EAAC,QAAtD;AAA+D,IAAA,SAAS,EAAC;AAAzE,KAAsFyB,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,cAAc,EAAC,YALjB;AAME,IAAA,MAAM,EAAE;AAAEmC,MAAAA,OAAO,EAAE;AAAX,KANV;AAOE,IAAA,OAAO,EAAE,MAAMD,aAAa,CAAC,CAACD,UAAF,CAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,IAAI,EAAEA,UAAU,GAAG,cAAH,GAAoB,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAWE,MAAC,IAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,UAAU,EAAE,GAFd;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,UAAU,EAAC,MAJb;AAKE,IAAA,UAAU,EAAC,QALb;AAME,IAAA,aAAa,EAAC,QANhB;AAOE,IAAA,aAAa,EAAC,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGZ,IATH,CAXF,CADF,EAyBGY,UAAU,IAAID,QAAd,IAA0BA,QAzB7B,EA2BE,MAAC,GAAD;AACE,IAAA,MAAM,EAAC,KADT;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,eAAe,EAAC,0BAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CADF;AAoCD;;AAED,MAAMI,MAAM,GAAG,SAA6B;AAAA,MAAvBpC,KAAuB;AAC1C,QAAMqC,KAAK,GAAG,CACZ;AACEhB,IAAAA,IAAI,EAAE,SADR;AAEEiB,IAAAA,IAAI,EACF,4BACE,MAAC,OAAD;AAAS,MAAA,UAAU,EAAC,QAApB;AAA6B,MAAA,GAAG,EAAC,aAAjC;AAA+C,MAAA,eAAe,EAAC,gBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAHJ,GADY,EASZ;AACEjB,IAAAA,IAAI,EAAE,OADR;AAEEiB,IAAAA,IAAI,EAAE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR,GATY,CAAd;AAeA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,IAAA,aAAa,EAAC;AAAjD,KAA8DtC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGqC,KAAK,CAACP,GAAN,CAAU,CAAC;AAAET,IAAAA,IAAF;AAAQiB,IAAAA;AAAR,GAAD,KACT,MAAC,UAAD;AAAY,IAAA,GAAG,EAAEjB,IAAjB;AAAuB,IAAA,IAAI,EAAEA,IAA7B;AAAmC,IAAA,UAAU,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,IADH,CADD,CADH,CADF;AASD,CAzBD;;AA2BA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA;AAAtB,CAAtB,EAAwF;AAC7F,QAAMxC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMc,MAAM,GACVpB,WAAW,CAAEkB,KAAD,IACVb,sBAAsB,CAACa,KAAD,EAAQH,MAAM,CAACI,EAAP,KAAc,KAAd,GAAsB,EAAtB,GAA2BJ,MAAM,CAACI,EAA1C,CADb,CAAX,IAEKZ,UAAU,CAACa,MAHlB;AAIA,QAAMG,YAAY,GAAGvB,WAAW,CAAEkB,KAAD,IAC/Bf,kBAAkB,CAACe,KAAD,EAAQ,CAAAE,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEH,SAAR,KAAqB,EAA7B,CADY,CAAhC;AAGA,QAAMuC,oBAAoB,GAAGxD,WAAW,CAAEkB,KAAD,IACvCN,8BAA8B,CAACM,KAAD,EAAQH,MAAM,CAACI,EAAP,KAAc,KAAd,GAAsB,EAAtB,GAA2BJ,MAAM,CAACI,EAA1C,CADQ,CAAxC;AAGA,QAAMsC,WAAW,GAAGzD,WAAW,CAAEkB,KAAD,IAC9Bd,UAAU,CAACc,KAAD,EACR;AACEC,IAAAA,EAAE,EAAEC,MAAM,CAACH,SADb;AACwByC,IAAAA,gBAAgB,EAAEF;AAD1C,GADQ,CADmB,CAA/B;;AAMA,MAAIF,kBAAkB,KAAK,MAA3B,EAAmC;AACjC,WAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIA,kBAAkB,KAAK,MAA3B,EAAmC;AACjC,WAAOlC,MAAM,CAACuC,IAAP,GACL,MAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,eAAe,EAAC,OAAxC;AAAgD,MAAA,QAAQ,EAAC,SAAzD;AAAmE,MAAA,UAAU,EAAC,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAC,GADX;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,MAAM,EAAC,SAHT;AAIE,MAAA,QAAQ,EAAC,SAJX;AAKE,MAAA,OAAO,EAAE,MAAMJ,qBAAqB,EALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,IAAI,EAAC,MAA1B;AAAiC,MAAA,KAAK,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,EAWE,MAAC,MAAD;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,GAAG,EAAEhC,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEqC,SAHrB;AAIE,MAAA,IAAI,EAAEH,WAJR;AAKE,MAAA,OAAO,EAAE,MAAMF,qBAAqB,EALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADK,GAqBL,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF;AAuBD;;AAED,SACE,MAAC,IAAD;AACE,IAAA,QAAQ,EAAC,SADX;AAEE,IAAA,UAAU,EAAC,UAFb;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,aAAa,EAAC,QAJhB;AAKE,IAAA,eAAe,EAAC,OALlB;AAME,IAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,kBAAW,iBAFb;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,YAAY,EAAC,MAJf;AAKE,IAAA,KAAK,EAAC,MALR;AAME,IAAA,KAAK,EAAC,QANR;AAOE,IAAA,MAAM,EAAC,QAPT;AAQE,IAAA,OAAO,EAAC,QARV;AASE,IAAA,WAAW,EAAC,MATd;AAUE,IAAA,QAAQ,EAAC,MAVX;AAWE,IAAA,SAAS,EAAC,UAXZ;AAYE,IAAA,OAAO,EAAE,MAAMA,qBAAqB,EAZtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAuBE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,SAAS,EAAC,SAFZ;AAGE,IAAA,GAAG,EAAEhC,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEqC,SAHrB;AAIE,IAAA,OAAO,EAAE,MAAML,qBAAqB,EAJtC;AAKE,IAAA,IAAI,EAAEE,WALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,EA+BE,MAAC,IAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,QAAQ,EAAC,SAFX;AAGE,IAAA,YAAY,EAAC,SAHf;AAIE,IAAA,UAAU,EAAE,GAJd;AAKE,IAAA,UAAU,EAAC,UALb;AAME,IAAA,KAAK,EAAC,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGA,WARH,CA/BF,EA0CE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,YAAY,EAAC,SAA7B;AAAuC,IAAA,OAAO,EAAC,SAA/C;AAAyD,IAAA,YAAY,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CF,EA4CE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAC,KAAZ;AAAkB,IAAA,eAAe,EAAC,0BAAlC;AAA6D,IAAA,WAAW,EAAC,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,EA8CE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,QAAQ,EAAC,WAA1B;AAAsC,IAAA,SAAS,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CF,CADF;AAkDD","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Flex,\n  FlexProps,\n  Icon,\n  Link,\n  PseudoBox,\n  Stack,\n  Text,\n  StackProps,\n  IconButton,\n} from '@chakra-ui/core';\nimport { ContactColumnSchema, UserOverviewProps } from '../../inbox.types';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../../root';\nimport {\n  selectAddressBookDetailByID,\n  selectContactTable,\n  selectCustomerByID,\n  selectName,\n  selectThreadDetailByID,\n} from '../../slices';\nimport { useParams } from 'react-router-dom';\nimport { INBOX_INIT } from '../../inbox.data';\nimport { Contact } from './Contact';\nimport { Note } from './Note';\nimport { TablePropertiesOptions } from '../../../tables';\nimport { sortColumns, transformSenderToContact } from '../../inbox.utils';\nimport { PropertySchema } from '../../../tables/components';\nimport { selectThreadReceiverPlatformID } from '../../../channels';\n\nfunction Icons({ ...props }: StackProps) {\n  const params = useParams<{ id: string }>();\n\n  //@ts-ignore\n  const { address_book_id, sender_id } =\n    useSelector((state: RootState) =>\n      selectThreadDetailByID(state, params.id === 'new' ? '' : params.id),\n    ) || INBOX_INIT.thread;\n  const table = useSelector(selectContactTable);\n  const addressBookDetail = useSelector((state: RootState) =>\n    selectAddressBookDetailByID(state, address_book_id || ''),\n  );\n  const senderDetail = useSelector((state: RootState) =>\n    selectCustomerByID(state, sender_id || ''),\n  );\n  let columns: TablePropertiesOptions['columns'] = [];\n  let contact: Omit<ContactColumnSchema, 'contact_id'> = {};\n\n  if (!addressBookDetail && table && senderDetail) {\n    const [cols, data] = transformSenderToContact(table, senderDetail);\n    columns = cols;\n    contact = data;\n  } else {\n    columns = table?.columns || [];\n    const { ...c } = addressBookDetail?.contactinfo?.columns || {};\n    contact = c as Omit<ContactColumnSchema, 'contact_id'>;\n  }\n\n  const [c] = sortColumns(columns, contact);\n  columns = c as PropertySchema[];\n  let phone = '';\n  let email = '';\n  columns.forEach(({ type, id }) => {\n    if (id && contact[id]) {\n      if (type === 'PHONE NUMBER') {\n        phone = contact[id] as string;\n      } else if (type === 'EMAIL') {\n        email = contact[id] as string;\n      }\n    }\n  });\n\n  const icons = [\n    { name: 'phone-1', href: `tel:${phone}`, onClick: undefined, isLink: true, isVisible: !!phone },\n    // { name: 'chat-1', href: '', onClick: undefined, isLink: false },\n    {\n      name: 'email-1',\n      href: `mailto:${email}`,\n      onClick: undefined,\n      isLink: true,\n      isVisible: !!email,\n    },\n    // { name: 'overflow', onClick: undefined },\n  ];\n  const filteredIcons = icons.filter(({ isVisible }) => isVisible);\n\n  return filteredIcons.length === 0 ? (\n    <Box />\n  ) : (\n    <Stack {...props}>\n      {filteredIcons.map(({ name, isLink, href, onClick }) =>\n        isLink ? (\n          <Link href={href} key={name}>\n            <Icon name={name} size=\"1.5rem\" />\n          </Link>\n        ) : (\n          <IconButton\n            // @ts-ignore\n            icon={name}\n            key={name}\n            aria-label=\"chat\"\n            color=\"#333\"\n            fontSize=\"1.5rem\"\n            lineHeight=\"1.5rem\"\n            padding=\"0\"\n            height=\"auto\"\n            minWidth=\"auto\"\n            onClick={onClick}\n          />\n        ),\n      )}\n    </Stack>\n  );\n}\n\nfunction FooterItem({ name, children, ...props }: FlexProps & { name: string }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Flex className=\"more-info-footer-item\" flexDirection=\"column\" overflowY=\"hidden\" {...props}>\n      <PseudoBox\n        as=\"button\"\n        display=\"flex\"\n        cursor=\"pointer\"\n        alignItems=\"center\"\n        justifyContent=\"flex-start\"\n        _focus={{ outline: 'none' }}\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <Icon height=\"1rem\" name={isExpanded ? 'chevron-down' : 'chevron-right'} />\n\n        <Text\n          color=\"#000\"\n          fontWeight={500}\n          fontSize=\".75rem\"\n          lineHeight=\"1rem\"\n          marginLeft=\"0.5rem\"\n          letterSpacing=\".05rem\"\n          textTransform=\"uppercase\"\n        >\n          {name}\n        </Text>\n      </PseudoBox>\n\n      {isExpanded && children && children}\n\n      <Box\n        height=\"1px\"\n        marginTop=\"1rem\"\n        marginRight=\"3.75rem\"\n        backgroundColor=\"rgba(213, 219, 230, 0.5)\"\n      />\n    </Flex>\n  );\n}\n\nconst Footer = ({ ...props }: FlexProps) => {\n  const items = [\n    {\n      name: 'Details',\n      view: (\n        <>\n          <Contact paddingTop=\"1.5rem\" gap=\"1rem 1.5rem\" templateColumns=\"repeat(2, 1fr)\" />\n        </>\n      ),\n    },\n    {\n      name: 'Notes',\n      view: <Note />,\n    },\n  ];\n\n  return (\n    <Flex className=\"more-info-footer\" flexDirection=\"column\" {...props}>\n      {items.map(({ name, view }) => (\n        <FooterItem key={name} name={name} paddingTop=\"1rem\">\n          {view}\n        </FooterItem>\n      ))}\n    </Flex>\n  );\n};\n\nexport function UserOverview({ toggleUserOverview, onUserOverViewToggled }: UserOverviewProps) {\n  const params = useParams<{ id: string }>();\n  const thread =\n    useSelector((state: RootState) =>\n      selectThreadDetailByID(state, params.id === 'new' ? '' : params.id),\n    ) || INBOX_INIT.thread;\n  const senderDetail = useSelector((state: RootState) =>\n    selectCustomerByID(state, thread?.sender_id || ''),\n  );\n  const threadReceiverUserID = useSelector((state: RootState) =>\n    selectThreadReceiverPlatformID(state, params.id === 'new' ? '' : params.id),\n  );\n  const sender_name = useSelector((state: RootState) =>\n    selectName(state, \n      { \n        id: thread.sender_id, credentialUserID: threadReceiverUserID }),\n  );\n\n  if (toggleUserOverview === 'none') {\n    return <Box />;\n  }\n\n  if (toggleUserOverview === 'mini') {\n    return thread.uuid ? (\n      <Stack spacing=\"1.5rem\" backgroundColor=\"white\" paddingX=\"1.25rem\" paddingTop=\"1.5rem\">\n        <Button\n          paddingX=\"0\"\n          variant=\"ghost\"\n          height=\"initial\"\n          minWidth=\"initial\"\n          onClick={() => onUserOverViewToggled()}\n        >\n          <Icon name=\"go-back\" size=\"1rem\" color=\"#333333\" />\n        </Button>\n\n        <Avatar\n          as=\"button\"\n          size=\"sm\"\n          src={senderDetail?.image_url}\n          name={sender_name}\n          onClick={() => onUserOverViewToggled()}\n        />\n      </Stack>\n    ) : (\n      <Box />\n    );\n  }\n\n  return (\n    <Flex\n      fontSize=\".875rem\"\n      paddingTop=\"1.875rem\"\n      paddingLeft=\"1.5rem\"\n      flexDirection=\"column\"\n      backgroundColor=\"white\"\n      width={['100%', '100%', '100%', '394px']}\n    >\n      <IconButton\n        icon=\"close\"\n        aria-label=\"close-more-info\"\n        variant=\"ghost\"\n        variantColor=\"blue\"\n        color=\"#333\"\n        width=\"1.5rem\"\n        height=\"1.5rem\"\n        padding=\".25rem\"\n        marginRight=\"2rem\"\n        minWidth=\"auto\"\n        alignSelf=\"flex-end\"\n        onClick={() => onUserOverViewToggled()}\n      />\n\n      <Avatar\n        size=\"xl\"\n        marginTop=\".625rem\"\n        src={senderDetail?.image_url}\n        onClick={() => onUserOverViewToggled()}\n        name={sender_name}\n      />\n\n      <Text\n        marginY=\"1rem\"\n        fontSize=\"1.25rem\"\n        paddingRight=\"3.75rem\"\n        fontWeight={500}\n        lineHeight=\"1.625rem\"\n        color=\"#333\"\n      >\n        {sender_name}\n      </Text>\n\n      <Icons isInline paddingRight=\"3.75rem\" spacing=\"1.25rem\" marginBottom=\"1.5rem\" />\n\n      <Box height=\"1px\" backgroundColor=\"rgba(213, 219, 230, 0.5)\" marginRight=\"3.75rem\" />\n\n      <Footer flex={1} minWidth=\"13.875rem\" overflowY=\"hidden\" />\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}