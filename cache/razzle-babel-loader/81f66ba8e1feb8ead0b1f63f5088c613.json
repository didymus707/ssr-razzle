{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/conversation/Header.tsx\";\nvar __jsx = React.createElement;\nimport { Flex, IconButton, Tooltip, useToast } from '@chakra-ui/core';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Search, ToastBox } from '../../../../components';\nimport { searchInbox } from '../../slices';\nexport function Header({\n  searchQuery,\n  setSearchQuery,\n  setSearchedResult\n}) {\n  const toast = useToast();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleConversationSearch = async query => {\n    try {\n      setSearchQuery(query);\n\n      if (query.length >= 2) {\n        var _r$payload;\n\n        // search here\n        const r = await dispatch(searchInbox({\n          q: query\n        }));\n\n        if (searchInbox.fulfilled.match(r) && r !== null && r !== void 0 && (_r$payload = r.payload) !== null && _r$payload !== void 0 && _r$payload.result) {\n          var _r$payload2;\n\n          setSearchedResult(r === null || r === void 0 ? void 0 : (_r$payload2 = r.payload) === null || _r$payload2 === void 0 ? void 0 : _r$payload2.result);\n        }\n      } else {\n        setSearchedResult(undefined);\n      }\n    } catch (error) {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  };\n\n  return __jsx(Flex, {\n    alignItems: \"center\",\n    paddingX: \"1rem\",\n    paddingTop: \"1rem\",\n    paddingBottom: \".875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Search, {\n    flex: 1,\n    value: searchQuery,\n    placeholder: \"Search conversations\",\n    onChange: handleConversationSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(Tooltip, {\n    \"aria-label\": \"Write Message\",\n    label: \"Write Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    size: \"sm\",\n    \"aria-label\": \"write message\",\n    ml: \"1rem\",\n    variantColor: \"blue\",\n    rounded: \"50%\",\n    icon: \"edit\",\n    onClick: () => history.push('/s/inbox/start'),\n    _hover: {\n      boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/conversation/Header.tsx"],"names":["Flex","IconButton","Tooltip","useToast","React","useDispatch","useHistory","Search","ToastBox","searchInbox","Header","searchQuery","setSearchQuery","setSearchedResult","toast","history","dispatch","handleConversationSearch","query","length","r","q","fulfilled","match","payload","result","undefined","error","position","render","onClose","push","boxShadow"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,iBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,wBAAjC;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,SAASC,MAAT,CAAgB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAAhB,EAAyE;AAC9E,QAAMC,KAAK,GAAGX,QAAQ,EAAtB;AACA,QAAMY,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAMU,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,wBAAwB,GAAG,MAAOC,KAAP,IAAyB;AACxD,QAAI;AACFN,MAAAA,cAAc,CAACM,KAAD,CAAd;;AACA,UAAIA,KAAK,CAACC,MAAN,IAAgB,CAApB,EAAuB;AAAA;;AACrB;AACA,cAAMC,CAAM,GAAG,MAAMJ,QAAQ,CAACP,WAAW,CAAC;AAAEY,UAAAA,CAAC,EAAEH;AAAL,SAAD,CAAZ,CAA7B;;AACA,YAAIT,WAAW,CAACa,SAAZ,CAAsBC,KAAtB,CAA4BH,CAA5B,KAAkCA,CAAlC,aAAkCA,CAAlC,6BAAkCA,CAAC,CAAEI,OAArC,uCAAkC,WAAYC,MAAlD,EAA0D;AAAA;;AACxDZ,UAAAA,iBAAiB,CAACO,CAAD,aAACA,CAAD,sCAACA,CAAC,CAAEI,OAAJ,gDAAC,YAAYC,MAAb,CAAjB;AACD;AACF,OAND,MAMO;AACLZ,QAAAA,iBAAiB,CAACa,SAAD,CAAjB;AACD;AACF,KAXD,CAWE,OAAOC,KAAP,EAAc;AACdb,MAAAA,KAAK,CAAC;AACJc,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAiB,MAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,OAAnB;AAA4B,UAAA,OAAO,EAAEH,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFrB,OAAD,CAAL;AAID;AACF,GAlBD;;AAoBA,SACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,QAAjB;AAA0B,IAAA,QAAQ,EAAC,MAAnC;AAA0C,IAAA,UAAU,EAAC,MAArD;AAA4D,IAAA,aAAa,EAAC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,KAAK,EAAEhB,WAFT;AAGE,IAAA,WAAW,EAAC,sBAHd;AAIE,IAAA,QAAQ,EAAEM,wBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,OAAD;AAAS,kBAAW,eAApB;AAAoC,IAAA,KAAK,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,kBAAW,eAFb;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,YAAY,EAAC,MAJf;AAKE,IAAA,OAAO,EAAC,KALV;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,OAAO,EAAE,MAAMF,OAAO,CAACgB,IAAR,CAAa,gBAAb,CAPjB;AAQE,IAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AADL,KARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF;AAyBD","sourcesContent":["import { Flex, IconButton, Tooltip, useToast } from '@chakra-ui/core';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Search, ToastBox } from '../../../../components';\nimport { searchInbox } from '../../slices';\n\nexport function Header({ searchQuery, setSearchQuery, setSearchedResult }: any) {\n  const toast = useToast();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleConversationSearch = async (query: string) => {\n    try {\n      setSearchQuery(query);\n      if (query.length >= 2) {\n        // search here\n        const r: any = await dispatch(searchInbox({ q: query }));\n        if (searchInbox.fulfilled.match(r) && r?.payload?.result) {\n          setSearchedResult(r?.payload?.result);\n        }\n      } else {\n        setSearchedResult(undefined);\n      }\n    } catch (error) {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  };\n\n  return (\n    <Flex alignItems=\"center\" paddingX=\"1rem\" paddingTop=\"1rem\" paddingBottom=\".875rem\">\n      <Search\n        flex={1}\n        value={searchQuery}\n        placeholder=\"Search conversations\"\n        onChange={handleConversationSearch}\n      />\n\n      <Tooltip aria-label=\"Write Message\" label=\"Write Message\">\n        <IconButton\n          size=\"sm\"\n          aria-label=\"write message\"\n          ml=\"1rem\"\n          variantColor=\"blue\"\n          rounded=\"50%\"\n          icon=\"edit\"\n          onClick={() => history.push('/s/inbox/start')}\n          _hover={{\n            boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n          }}\n        />\n      </Tooltip>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}