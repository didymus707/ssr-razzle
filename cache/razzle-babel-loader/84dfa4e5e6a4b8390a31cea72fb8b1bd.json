{"ast":null,"code":"import _objectSpread from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/components/lists/create-list/stages/mapping.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, IconButton, Input, Select } from '@chakra-ui/core';\nimport camelCase from 'lodash/camelCase';\nimport { Button } from 'app/components';\nimport { useProperties } from '../../../../../../../tables/components';\nexport const CreateListImportMapping = props => {\n  var _props$importedData, _props$importedData$c;\n\n  const {\n    0: createLoading,\n    1: setCreateLoading\n  } = useState(false);\n  const columns = (_props$importedData = props.importedData) === null || _props$importedData === void 0 ? void 0 : (_props$importedData$c = _props$importedData.columns) === null || _props$importedData$c === void 0 ? void 0 : _props$importedData$c.map(({\n    name\n  }) => ({\n    label: name,\n    hidden: false,\n    type: 'TEXT',\n    name: camelCase(name)\n  }));\n  const {\n    properties,\n    onPropertyUpdate,\n    onPropertyDelete\n  } = useProperties({\n    properties: columns\n  });\n\n  const handleCreate = async () => {\n    setCreateLoading(true);\n    await props.handleCreateTable(properties);\n    setCreateLoading(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Set the columns from your file as properties to create a new list\"), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginY: \"20px\",\n    maxH: \"60vh\",\n    overflowY: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, properties === null || properties === void 0 ? void 0 : properties.map((property, index) => __jsx(Box, {\n    key: index,\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginY: \"7.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    width: \"45%\",\n    padding: \"5px 12.5px\",\n    backgroundColor: \"#FAFAFA\",\n    size: \"sm\",\n    borderRadius: \"5px\",\n    value: property.label,\n    onChange: e => onPropertyUpdate(_objectSpread(_objectSpread({}, property), {}, {\n      label: e.target.value,\n      name: camelCase(e.target.value)\n    }), index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(Select, {\n    width: \"45%\",\n    padding: \"5px 10px\",\n    backgroundColor: \"#FAFAFA\",\n    borderRadius: \"5px\",\n    size: \"sm\",\n    value: property.type,\n    onChange: e => onPropertyUpdate(_objectSpread(_objectSpread({}, property), {}, {\n      type: e.target.value\n    }), index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"TEXT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Text\"), __jsx(\"option\", {\n    value: \"NUMBER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Number\"), __jsx(\"option\", {\n    value: \"PHONE NUMBER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Phone Number\"), __jsx(\"option\", {\n    value: \"EMAIL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Email\"), __jsx(\"option\", {\n    value: \"DATE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Date\"), __jsx(\"option\", {\n    value: \"URL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"URL\")), __jsx(IconButton, {\n    \"aria-label\": \"delete\" // @ts-ignore\n    ,\n    icon: \"trash\",\n    size: \"xs\",\n    borderRadius: \"10px\",\n    marginRight: \"1rem\",\n    isDisabled: (properties === null || properties === void 0 ? void 0 : properties.length) === 1,\n    onClick: () => onPropertyDelete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))), __jsx(Box, {\n    mt: \"10px\",\n    width: \"fit-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variant: \"solid\",\n    variantColor: \"blue\",\n    size: \"sm\",\n    isLoading: createLoading,\n    onClick: handleCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Create Table\")));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/components/lists/create-list/stages/mapping.tsx"],"names":["React","useState","Box","IconButton","Input","Select","camelCase","Button","useProperties","CreateListImportMapping","props","createLoading","setCreateLoading","columns","importedData","map","name","label","hidden","type","properties","onPropertyUpdate","onPropertyDelete","handleCreate","handleCreateTable","property","index","e","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, IconButton, Input, Select } from '@chakra-ui/core';\nimport camelCase from 'lodash/camelCase';\nimport { Button } from 'app/components';\nimport { PropertySchema, useProperties } from '../../../../../../../tables/components';\n\ninterface Props {\n  importedData: any;\n  handleCreateTable: Function;\n}\n\nexport const CreateListImportMapping = (props: Props) => {\n  const [createLoading, setCreateLoading] = useState(false);\n\n  const columns = props.importedData?.columns?.map(({ name }: any) => ({\n    label: name,\n    hidden: false,\n    type: 'TEXT',\n    name: camelCase(name),\n  })) as PropertySchema[];\n\n  const { properties, onPropertyUpdate, onPropertyDelete } = useProperties({\n    properties: columns,\n  });\n\n  const handleCreate = async () => {\n    setCreateLoading(true);\n    await props.handleCreateTable(properties);\n    setCreateLoading(false);\n  };\n\n  return (\n    <>\n      <Box className=\"description\">\n        Set the columns from your file as properties to create a new list\n      </Box>\n\n      <Box display=\"flex\" flexDirection=\"column\" marginY=\"20px\" maxH=\"60vh\" overflowY=\"scroll\">\n        {properties?.map((property: any, index: number) => (\n          <Box\n            key={index}\n            display=\"flex\"\n            flexDirection=\"row\"\n            width=\"100%\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            marginY=\"7.5px\"\n          >\n            <Input\n              width=\"45%\"\n              padding=\"5px 12.5px\"\n              backgroundColor=\"#FAFAFA\"\n              size=\"sm\"\n              borderRadius=\"5px\"\n              value={property.label}\n              onChange={(e: any) =>\n                onPropertyUpdate(\n                  {\n                    ...property,\n                    label: e.target.value,\n                    name: camelCase(e.target.value),\n                  },\n                  index,\n                )\n              }\n            />\n            <Select\n              width=\"45%\"\n              padding=\"5px 10px\"\n              backgroundColor=\"#FAFAFA\"\n              borderRadius=\"5px\"\n              size=\"sm\"\n              value={property.type}\n              onChange={(e: any) => onPropertyUpdate({ ...property, type: e.target.value }, index)}\n            >\n              <option value=\"TEXT\">Text</option>\n              <option value=\"NUMBER\">Number</option>\n              <option value=\"PHONE NUMBER\">Phone Number</option>\n              <option value=\"EMAIL\">Email</option>\n              <option value=\"DATE\">Date</option>\n              <option value=\"URL\">URL</option>\n            </Select>\n\n            <IconButton\n              aria-label=\"delete\"\n              // @ts-ignore\n              icon=\"trash\"\n              size=\"xs\"\n              borderRadius=\"10px\"\n              marginRight=\"1rem\"\n              isDisabled={properties?.length === 1}\n              onClick={() => onPropertyDelete(index)}\n            />\n          </Box>\n        ))}\n      </Box>\n\n      <Box mt=\"10px\" width=\"fit-content\">\n        <Button\n          variant=\"solid\"\n          variantColor=\"blue\"\n          size=\"sm\"\n          isLoading={createLoading}\n          onClick={handleCreate}\n        >\n          Create Table\n        </Button>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}