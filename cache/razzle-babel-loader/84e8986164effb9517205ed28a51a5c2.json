{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/cell-properties/multiselect/field.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState, forwardRef } from 'react';\nimport { Input, Box, Icon } from '@chakra-ui/core';\nimport { PopoverWrapper } from '../../../list-view.styles';\nimport { MultiSelectCellEditor } from './editor';\nconst MultiSelectInput = /*#__PURE__*/forwardRef(({\n  addOption\n}, ref) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleKeyPress = e => {\n    if (e.key !== 'Enter') return;\n    if (value === '') return;\n    addOption(value);\n    setValue('');\n  };\n\n  return __jsx(Input, {\n    ref: ref,\n    variant: \"unstyled\",\n    width: \"auto\",\n    value: value,\n    onChange: handleChange,\n    onKeyPress: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  });\n});\n\nconst MultiSelectValueItem = props => {\n  const handleDeleteValue = event => {\n    event.stopPropagation();\n    props.delete(props.id);\n  };\n\n  return __jsx(\"div\", {\n    className: \"value-item\",\n    style: {\n      fontSize: 12,\n      backgroundColor: props.color,\n      marginRight: 7.5,\n      padding: '2px 5px',\n      borderRadius: 2,\n      lineHeight: 'normal',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, props.value, __jsx(Box, {\n    marginLeft: \"5px\",\n    display: \"flex\",\n    padding: \"2.5px\",\n    borderRadius: \"2px\",\n    backgroundColor: \"rgba(0,0,0,0.1)\",\n    onClick: handleDeleteValue,\n    className: \"close-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: \"close\",\n    size: \"8px\",\n    cursor: \"pointer\",\n    className: \"close-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport const MultiSelectFieldComponent = props => {\n  const {\n    0: dummyValue,\n    1: setDummyValue\n  } = useState([]);\n  const {\n    0: dummyOptions,\n    1: setDummyOptions\n  } = useState([]);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: inputFocused,\n    1: setInputFocused\n  } = useState(false);\n  const inputRef = useRef(null);\n  const containerRef = useRef(null);\n  const popoverRef = useRef(null);\n  const {\n    column,\n    inputProps = {},\n    optionItemStyles = {},\n    allowCreate = true\n  } = props;\n  useEffect(() => {\n    if (!Array.isArray(props.value) && props.value) setDummyValue([props.value]);\n    if (!props.value) setDummyValue([]);\n    if (Array.isArray(props.value)) setDummyValue(props.value);\n    setDummyOptions(props.column.options || []); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // @ts-ignore\n    if (inputFocused && document.activeElement !== inputRef.current) inputRef.current.focus();\n  }, [inputFocused]);\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleClick = e => {\n    if (!isOpen) return; // @ts-ignore\n\n    if (popoverRef.current.contains(e.target)) return; // @ts-ignore\n\n    if (containerRef.current.contains(e.target)) return;\n    onClose();\n  };\n\n  const attachOutsideClickListener = () => {\n    document.addEventListener('mousedown', handleClick);\n  };\n\n  const detachOutsideClickListener = () => {\n    document.removeEventListener('mousedown', handleClick);\n  };\n\n  useEffect(() => {\n    attachOutsideClickListener();\n    return detachOutsideClickListener; // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n  let options = dummyOptions.filter(i => !i.isDeleted);\n  const selected_options = options.filter(i => dummyValue.some(val => Number(val) === Number(i.id)));\n\n  const deleteValue = async option_id => {\n    const updated_value = selected_options.filter(option => option.id !== option_id).map(option => option.id);\n    setDummyValue(updated_value);\n    props.updateCellValue(updated_value, column.uid);\n  };\n\n  const addOption = async _value => {\n    const option = await props.addSelectOption(column.uid, _value); // @ts-ignore\n\n    setDummyOptions([...dummyOptions, option]);\n    updateValue([...dummyValue, option.id]);\n  };\n\n  const updateSelectOption = async (option_id, payload) => {\n    const updated_options = await props.updateSelectOption(column.uid, option_id, payload);\n    setDummyOptions(updated_options);\n  };\n\n  const updateValue = _value => {\n    setDummyValue(_value);\n    props.updateCellValue(_value, column.uid);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, _extends({\n    onClick: () => {\n      setIsOpen(true);\n      if (allowCreate) setInputFocused(true);\n    },\n    ref: containerRef,\n    padding: \"7.5px 12.5px\",\n    width: \"100%\",\n    borderRadius: \"3px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    fontSize: \"16px\",\n    border: \"1px solid #E2E8F0\"\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), selected_options.map(option => __jsx(MultiSelectValueItem, {\n    value: option.name,\n    color: option.color,\n    delete: deleteValue,\n    key: option.id,\n    id: option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  })), allowCreate && __jsx(MultiSelectInput, {\n    ref: inputRef,\n    addOption: addOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }), !allowCreate && selected_options.length === 0 && __jsx(Box, {\n    fontSize: \"14px !important\",\n    color: \"#7a7a7a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"Select an Option\")), isOpen && __jsx(Box, {\n    ref: popoverRef,\n    zIndex: 100000,\n    position: \"absolute\",\n    width: \"max-content\",\n    boxShadow: \"none\",\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, __jsx(PopoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, __jsx(MultiSelectCellEditor, {\n    options: dummyOptions,\n    value: dummyValue,\n    updateSelectOption,\n    updateValue,\n    allowCreate,\n    optionItemStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/cell-properties/multiselect/field.tsx"],"names":["React","useEffect","useRef","useState","forwardRef","Input","Box","Icon","PopoverWrapper","MultiSelectCellEditor","MultiSelectInput","addOption","ref","value","setValue","handleChange","event","target","handleKeyPress","e","key","MultiSelectValueItem","props","handleDeleteValue","stopPropagation","delete","id","fontSize","backgroundColor","color","marginRight","padding","borderRadius","lineHeight","display","flexDirection","alignItems","cursor","MultiSelectFieldComponent","dummyValue","setDummyValue","dummyOptions","setDummyOptions","isOpen","setIsOpen","inputFocused","setInputFocused","inputRef","containerRef","popoverRef","column","inputProps","optionItemStyles","allowCreate","Array","isArray","options","document","activeElement","current","focus","onClose","handleClick","contains","attachOutsideClickListener","addEventListener","detachOutsideClickListener","removeEventListener","filter","i","isDeleted","selected_options","some","val","Number","deleteValue","option_id","updated_value","option","map","updateCellValue","uid","_value","addSelectOption","updateValue","updateSelectOption","payload","updated_options","name","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, forwardRef } from 'react';\nimport { Input, Box, Icon } from '@chakra-ui/core';\nimport { PopoverWrapper } from '../../../list-view.styles';\nimport { MultiSelectCellEditor } from './editor';\n\nconst MultiSelectInput = forwardRef(({ addOption }: any, ref: any) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (event: any) => {\n    setValue(event.target.value);\n  };\n\n  const handleKeyPress = (e: any) => {\n    if (e.key !== 'Enter') return;\n    if (value === '') return;\n    addOption(value);\n    setValue('');\n  };\n\n  return (\n    <Input\n      ref={ref}\n      variant=\"unstyled\"\n      width=\"auto\"\n      value={value}\n      onChange={handleChange}\n      onKeyPress={handleKeyPress}\n    />\n  );\n});\n\nconst MultiSelectValueItem = (props: any) => {\n  const handleDeleteValue = (event: any) => {\n    event.stopPropagation();\n    props.delete(props.id);\n  };\n\n  return (\n    <div\n      className=\"value-item\"\n      style={{\n        fontSize: 12,\n        backgroundColor: props.color,\n        marginRight: 7.5,\n        padding: '2px 5px',\n        borderRadius: 2,\n        lineHeight: 'normal',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        cursor: 'pointer',\n      }}\n    >\n      {props.value}\n      <Box\n        marginLeft=\"5px\"\n        display=\"flex\"\n        padding=\"2.5px\"\n        borderRadius=\"2px\"\n        backgroundColor=\"rgba(0,0,0,0.1)\"\n        onClick={handleDeleteValue}\n        className=\"close-icon\"\n      >\n        <Icon name=\"close\" size=\"8px\" cursor=\"pointer\" className=\"close-icon\" />\n      </Box>\n    </div>\n  );\n};\n\nexport const MultiSelectFieldComponent = (props: any) => {\n  const [dummyValue, setDummyValue] = useState<string[] | number[]>([]);\n  const [dummyOptions, setDummyOptions] = useState([]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [inputFocused, setInputFocused] = useState<boolean>(false);\n  const inputRef = useRef(null);\n  const containerRef = useRef(null);\n  const popoverRef = useRef(null);\n\n  const { column, inputProps = {}, optionItemStyles = {}, allowCreate = true } = props;\n\n  useEffect(() => {\n    if (!Array.isArray(props.value) && props.value) setDummyValue([props.value]);\n    if (!props.value) setDummyValue([]);\n    if (Array.isArray(props.value)) setDummyValue(props.value);\n    setDummyOptions(props.column.options || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (inputFocused && document.activeElement !== inputRef.current) inputRef.current.focus();\n  }, [inputFocused]);\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleClick = (e: any) => {\n    if (!isOpen) return;\n    // @ts-ignore\n    if (popoverRef.current.contains(e.target)) return;\n    // @ts-ignore\n    if (containerRef.current.contains(e.target)) return;\n    onClose();\n  };\n\n  const attachOutsideClickListener = () => {\n    document.addEventListener('mousedown', handleClick);\n  };\n  const detachOutsideClickListener = () => {\n    document.removeEventListener('mousedown', handleClick);\n  };\n\n  useEffect(() => {\n    attachOutsideClickListener();\n    return detachOutsideClickListener;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n\n  let options = dummyOptions.filter((i: any) => !i.isDeleted);\n  const selected_options = options.filter((i: any) =>\n    dummyValue.some((val: any) => Number(val) === Number(i.id)),\n  );\n\n  const deleteValue = async (option_id: string | number) => {\n    const updated_value = selected_options\n      .filter((option: any) => option.id !== option_id)\n      .map((option: any) => option.id);\n    setDummyValue(updated_value);\n    props.updateCellValue(updated_value, column.uid);\n  };\n\n  const addOption = async (_value: string) => {\n    const option = await props.addSelectOption(column.uid, _value);\n    // @ts-ignore\n    setDummyOptions([...dummyOptions, option]);\n    updateValue([...dummyValue, option.id]);\n  };\n\n  const updateSelectOption = async (option_id: string | number, payload: object) => {\n    const updated_options = await props.updateSelectOption(column.uid, option_id, payload);\n    setDummyOptions(updated_options);\n  };\n\n  const updateValue = (_value: any) => {\n    setDummyValue(_value);\n    props.updateCellValue(_value, column.uid);\n  };\n\n  return (\n    <>\n      <Box\n        onClick={() => {\n          setIsOpen(true);\n          if (allowCreate) setInputFocused(true);\n        }}\n        ref={containerRef}\n        padding=\"7.5px 12.5px\"\n        width=\"100%\"\n        borderRadius=\"3px\"\n        display=\"flex\"\n        flexWrap=\"wrap\"\n        alignItems=\"center\"\n        flexDirection=\"row\"\n        fontSize=\"16px\"\n        border=\"1px solid #E2E8F0\"\n        {...inputProps}\n      >\n        {selected_options.map((option: any) => (\n          <MultiSelectValueItem\n            value={option.name}\n            color={option.color}\n            delete={deleteValue}\n            key={option.id}\n            id={option.id}\n          />\n        ))}\n        {allowCreate && <MultiSelectInput ref={inputRef} addOption={addOption} />}\n        {!allowCreate && selected_options.length === 0 && (\n          <Box fontSize=\"14px !important\" color=\"#7a7a7a\">\n            Select an Option\n          </Box>\n        )}\n      </Box>\n\n      {isOpen && (\n        <Box\n          ref={popoverRef}\n          zIndex={100000}\n          position=\"absolute\"\n          width=\"max-content\"\n          boxShadow=\"none\"\n          display=\"flex\"\n        >\n          <PopoverWrapper>\n            <MultiSelectCellEditor\n              {...{\n                options: dummyOptions,\n                value: dummyValue,\n                updateSelectOption,\n                updateValue,\n                allowCreate,\n                optionItemStyles,\n              }}\n            />\n          </PopoverWrapper>\n        </Box>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}