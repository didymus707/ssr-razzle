{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/unauthenticated-app/authentication/components/forms/LoginForm.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Checkbox, Flex, Icon } from '@chakra-ui/core';\nimport { Input, Button } from 'app/components';\nimport { useFormik } from 'formik';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nconst validationSchema = yup.object().shape({\n  username: yup.string().email('Invalid email format').required('Email is required'),\n  password: yup.string().required('Password is required')\n});\nexport function LoginForm({\n  onSubmit,\n  isLoading\n}) {\n  const formik = useFormik({\n    validationSchema,\n    initialValues: {\n      username: '',\n      password: '',\n      rememberMe: true\n    },\n    onSubmit: values => onSubmit(values)\n  });\n  const [viewPassword, setViewPassword] = React.useState(false);\n\n  const handleToggleViewPassword = () => {\n    setViewPassword(!viewPassword);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    mb: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    autoFocus: true,\n    type: \"email\",\n    id: \"username\",\n    name: \"username\",\n    label: \"Email address\",\n    value: formik.values.username,\n    onChange: formik.handleChange,\n    errorMessage: formik.errors.username,\n    isInvalid: !!formik.touched.username && !!formik.errors.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), __jsx(Box, {\n    mb: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    id: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    errorMessage: formik.errors.password,\n    type: viewPassword ? 'text' : 'password',\n    rightIcon: __jsx(Icon, {\n      onClick: handleToggleViewPassword,\n      name: viewPassword ? 'view' : 'view-off',\n      color: \"blue.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }),\n    isInvalid: !!formik.touched.password && !!formik.errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), __jsx(Flex, {\n    mb: \"30px\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    to: \"/forgot-password\",\n    style: {\n      color: '#2034c5'\n    },\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Forgot your password?\")), __jsx(Button, {\n    mb: \"30px\",\n    width: \"100%\",\n    height: \"50px\",\n    type: \"submit\",\n    variantColor: \"blue\",\n    background: \"#3d50df\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Continue\"), __jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    size: \"md\",\n    name: \"rememberMe\",\n    variantColor: \"blue\",\n    isChecked: formik.values.rememberMe,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Remember Me\"))));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/unauthenticated-app/authentication/components/forms/LoginForm.tsx"],"names":["Box","Checkbox","Flex","Icon","Input","Button","useFormik","React","Link","yup","validationSchema","object","shape","username","string","email","required","password","LoginForm","onSubmit","isLoading","formik","initialValues","rememberMe","values","viewPassword","setViewPassword","useState","handleToggleViewPassword","handleSubmit","handleChange","errors","touched","color"],"mappings":"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","sourcesContent":["import { Box, Checkbox, Flex, Icon } from '@chakra-ui/core';\nimport { Input, Button } from 'app/components';\nimport { useFormik } from 'formik';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object().shape({\n  username: yup.string().email('Invalid email format').required('Email is required'),\n  password: yup.string().required('Password is required'),\n});\n\nexport type LoginFormInitialValuesProps = yup.InferType<typeof validationSchema> & {\n  rememberMe?: boolean;\n};\n\nexport interface LoginFormProps {\n  onSubmit: (values: LoginFormInitialValuesProps) => void;\n  isLoading?: boolean;\n}\n\nexport function LoginForm({ onSubmit, isLoading }: LoginFormProps) {\n  const formik = useFormik({\n    validationSchema,\n    initialValues: { username: '', password: '', rememberMe: true },\n    onSubmit: (values: LoginFormInitialValuesProps) => onSubmit(values),\n  });\n\n  const [viewPassword, setViewPassword] = React.useState(false);\n\n  const handleToggleViewPassword = () => {\n    setViewPassword(!viewPassword);\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Box mb=\"2rem\">\n        <Input\n          autoFocus\n          type=\"email\"\n          id=\"username\"\n          name=\"username\"\n          label=\"Email address\"\n          value={formik.values.username}\n          onChange={formik.handleChange}\n          errorMessage={formik.errors.username}\n          isInvalid={!!formik.touched.username && !!formik.errors.username}\n        />\n      </Box>\n      <Box mb=\"12px\">\n        <Input\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n          errorMessage={formik.errors.password}\n          type={viewPassword ? 'text' : 'password'}\n          rightIcon={\n            <Icon\n              onClick={handleToggleViewPassword}\n              name={viewPassword ? 'view' : 'view-off'}\n              color=\"blue.500\"\n            />\n          }\n          isInvalid={!!formik.touched.password && !!formik.errors.password}\n        />\n      </Box>\n      <Flex mb=\"30px\" flexWrap=\"wrap\" flexDirection=\"row\" justifyContent=\"space-between\">\n        <Link to=\"/forgot-password\" style={{ color: '#2034c5' }} tabIndex={-1}>\n          Forgot your password?\n        </Link>\n      </Flex>\n\n      <Button\n        mb=\"30px\"\n        width=\"100%\"\n        height=\"50px\"\n        type=\"submit\"\n        variantColor=\"blue\"\n        background=\"#3d50df\"\n        fontSize=\"18px\"\n        fontWeight=\"normal\"\n        isLoading={isLoading}\n      >\n        Continue\n      </Button>\n\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Box>\n          <Checkbox\n            size=\"md\"\n            name=\"rememberMe\"\n            variantColor=\"blue\"\n            isChecked={formik.values.rememberMe}\n            onChange={formik.handleChange}\n          >\n            Remember Me\n          </Checkbox>\n        </Box>\n      </Flex>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}