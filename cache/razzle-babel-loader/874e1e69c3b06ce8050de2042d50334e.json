{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/filter/filter-item/operator-select.tsx\";\nvar __jsx = React.createElement;\n// @ts-nocheck\nimport React from 'react';\nimport { Box, Icon, Popover, PopoverContent, PopoverTrigger } from '@chakra-ui/core';\nimport { available_operators } from '../../../list.data';\nimport { PopoverWrapper } from '../../../list-view.styles';\nexport const OperatorSelect = props => {\n  const {\n    selected_operator,\n    column\n  } = props;\n  return __jsx(Popover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, ({\n    onClose\n  }) => __jsx(React.Fragment, null, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"operator-select\",\n    alignItems: \"center\",\n    width: column.type === 'DATE' && '100px !important',\n    mr: column.type === 'DATE' && '5px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: \"selected-label-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, column.type === 'NUMBER' && selected_operator === 'equals' ? 'equals (=)' : column.type === 'NUMBER' && selected_operator === 'notEqual' ? 'not equals to (≠)' : available_operators[selected_operator].label), __jsx(Icon, {\n    name: \"chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }))), __jsx(PopoverContent, {\n    zIndex: 4,\n    width: \"max-content\",\n    boxShadow: \"none\",\n    _focus: {\n      boxShadow: 'none',\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(PopoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, Object.values(available_operators).filter(operator => operator.column_types.includes(column.type)).map(operator => __jsx(Box, {\n    key: operator.key,\n    className: `list-item ${operator.key === selected_operator ? 'active' : ''}`,\n    style: {\n      fontSize: 14\n    },\n    onClick: () => {\n      props.onChange(operator.key);\n      onClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, column.type === 'NUMBER' && operator.key === 'equals' ? 'equals (=)' : column.type === 'NUMBER' && operator.key === 'notEqual' ? 'not equals to (≠)' : operator.label))))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/filter/filter-item/operator-select.tsx"],"names":["React","Box","Icon","Popover","PopoverContent","PopoverTrigger","available_operators","PopoverWrapper","OperatorSelect","props","selected_operator","column","onClose","type","label","boxShadow","outline","Object","values","filter","operator","column_types","includes","map","key","fontSize","onChange"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,cAA7B,EAA6CC,cAA7C,QAAmE,iBAAnE;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAgB;AAC5C,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAgCF,KAAtC;AACA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEG,IAAAA;AAAF,GAAD,KACC,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,KAAK,EAAED,MAAM,CAACE,IAAP,KAAgB,MAAhB,IAA0B,kBAHnC;AAIE,IAAA,EAAE,EAAEF,MAAM,CAACE,IAAP,KAAgB,MAAhB,IAA0B,KAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACE,IAAP,KAAgB,QAAhB,IAA4BH,iBAAiB,KAAK,QAAlD,GACG,YADH,GAEGC,MAAM,CAACE,IAAP,KAAgB,QAAhB,IAA4BH,iBAAiB,KAAK,UAAlD,GACA,mBADA,GAEAJ,mBAAmB,CAACI,iBAAD,CAAnB,CAAuCI,KAL7C,CANF,EAaE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,EAkBE,MAAC,cAAD;AACE,IAAA,MAAM,EAAE,CADV;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE,MADL;AAENC,MAAAA,OAAO,EAAE;AAFH,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,MAAP,CAAcZ,mBAAd,EACEa,MADF,CACUC,QAAD,IAAmBA,QAAQ,CAACC,YAAT,CAAsBC,QAAtB,CAA+BX,MAAM,CAACE,IAAtC,CAD5B,EAEEU,GAFF,CAEOH,QAAD,IACH,MAAC,GAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACI,GADhB;AAEE,IAAA,SAAS,EAAG,aAAYJ,QAAQ,CAACI,GAAT,KAAiBd,iBAAjB,GAAqC,QAArC,GAAgD,EAAG,EAF7E;AAGE,IAAA,KAAK,EAAE;AACLe,MAAAA,QAAQ,EAAE;AADL,KAHT;AAME,IAAA,OAAO,EAAE,MAAM;AACbhB,MAAAA,KAAK,CAACiB,QAAN,CAAeN,QAAQ,CAACI,GAAxB;AACAZ,MAAAA,OAAO;AACR,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGD,MAAM,CAACE,IAAP,KAAgB,QAAhB,IAA4BO,QAAQ,CAACI,GAAT,KAAiB,QAA7C,GACG,YADH,GAEGb,MAAM,CAACE,IAAP,KAAgB,QAAhB,IAA4BO,QAAQ,CAACI,GAAT,KAAiB,UAA7C,GACA,mBADA,GAEAJ,QAAQ,CAACN,KAff,CAHH,CADH,CATF,CAlBF,CAFJ,CADF;AA0DD,CA5DM","sourcesContent":["// @ts-nocheck\nimport React from 'react';\nimport { Box, Icon, Popover, PopoverContent, PopoverTrigger } from '@chakra-ui/core';\nimport { available_operators } from '../../../list.data';\nimport { PopoverWrapper } from '../../../list-view.styles';\n\nexport const OperatorSelect = (props: any) => {\n  const { selected_operator, column } = props;\n  return (\n    <Popover>\n      {({ onClose }) => (\n        <>\n          <PopoverTrigger>\n            <Box\n              className=\"operator-select\"\n              alignItems=\"center\"\n              width={column.type === 'DATE' && '100px !important'}\n              mr={column.type === 'DATE' && '5px'}\n            >\n              <Box className=\"selected-label-text\">\n                {column.type === 'NUMBER' && selected_operator === 'equals'\n                  ? 'equals (=)'\n                  : column.type === 'NUMBER' && selected_operator === 'notEqual'\n                  ? 'not equals to (≠)'\n                  : available_operators[selected_operator].label}\n              </Box>\n              <Icon name=\"chevron-down\" />\n            </Box>\n          </PopoverTrigger>\n          <PopoverContent\n            zIndex={4}\n            width=\"max-content\"\n            boxShadow=\"none\"\n            _focus={{\n              boxShadow: 'none',\n              outline: 'none',\n            }}\n          >\n            <PopoverWrapper>\n              {Object.values(available_operators)\n                .filter((operator: any) => operator.column_types.includes(column.type))\n                .map((operator: any) => (\n                  <Box\n                    key={operator.key}\n                    className={`list-item ${operator.key === selected_operator ? 'active' : ''}`}\n                    style={{\n                      fontSize: 14,\n                    }}\n                    onClick={() => {\n                      props.onChange(operator.key);\n                      onClose();\n                    }}\n                  >\n                    {column.type === 'NUMBER' && operator.key === 'equals'\n                      ? 'equals (=)'\n                      : column.type === 'NUMBER' && operator.key === 'notEqual'\n                      ? 'not equals to (≠)'\n                      : operator.label}\n                  </Box>\n                ))}\n            </PopoverWrapper>\n          </PopoverContent>\n        </>\n      )}\n    </Popover>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}