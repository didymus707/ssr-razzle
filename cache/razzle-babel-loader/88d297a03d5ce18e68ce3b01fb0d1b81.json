{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/filter/filter-menu.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Icon, Popover, PopoverContent, PopoverTrigger, Box, useDisclosure, useToast } from '@chakra-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { PopoverWrapper } from '../../list-view.styles';\nimport { ListFilterEmptyState } from './filter-empty-state';\nimport { ListFilterContent } from './filter-content';\nimport { CreateSmartListDialog } from './create-smart-list-dialog';\nimport { ToastBox, Button } from '../../../../components';\n\nconst ListFilterActions = props => __jsx(React.Fragment, null, __jsx(Box, {\n  display: \"flex\",\n  alignItems: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, __jsx(\"button\", {\n  className: \"add-button\",\n  onClick: () => props.addFilter(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}, __jsx(Icon, {\n  name: \"plus-square-filled\",\n  className: \"icon\",\n  size: \"16px\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }\n}), \"Add a filter\")), props.filters_by_id.length > 0 && __jsx(Button, {\n  marginTop: \"23px\",\n  color: \"white\",\n  backgroundColor: \"#3D43DF\",\n  variantColor: \"blue\",\n  fontSize: \"14px\",\n  fontWeight: \"500\",\n  padding: \"4px 10px\",\n  onClick: () => {\n    if (!props.is_smart_list) props.openSmartListDialog();else props.updateSmartListFilters();\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}, props.is_smart_list ? 'Update smart list' : 'Create smart list'));\n\nexport const ListFilterMenu = props => {\n  const {\n    0: smartListDialogLoading,\n    1: setSmartListDialogLoading\n  } = useState(false);\n  const {\n    isOpen: isSmartListDialogOpen,\n    onClose: closeSmartListDialog,\n    onOpen: openSmartListDialog\n  } = useDisclosure();\n  const {\n    columns,\n    columns_by_id,\n    filters_by_id,\n    filters,\n    addFilter,\n    updateFilter,\n    deleteFilter,\n    is_smart_list,\n    updateSmartListFilters\n  } = props;\n  const toast = useToast();\n  const router_history = useHistory();\n\n  const handleCreateSmartList = async smart_list_name => {\n    setSmartListDialogLoading(true);\n    const smart_list = await props.createSmartList(smart_list_name.length > 0 ? smart_list_name : 'Untitled');\n    setSmartListDialogLoading(false);\n\n    if (!smart_list) {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: \"Couldn't create smart list, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        })\n      });\n    } else {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Smart list created\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        })\n      });\n      closeSmartListDialog();\n      props.selectSmartListID(smart_list.id);\n      router_history.push(`/s/lists/view/${smart_list.id}/smart`);\n    }\n  };\n\n  const handleUpdateSmartListFilters = () => {\n    updateSmartListFilters(props.smart_list.id);\n    toast({\n      position: 'bottom-left',\n      render: ({\n        onClose\n      }) => __jsx(ToastBox, {\n        status: \"success\",\n        onClose: onClose,\n        message: \"Smart list filters updated\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      })\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Popover, {\n    usePortal: true,\n    placement: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, ({\n    onClose\n  }) => __jsx(React.Fragment, null, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, filters_by_id.length === 0 && __jsx(Button, {\n    size: \"xs\" // @ts-ignore\n    ,\n    leftIcon: \"filter\",\n    variant: \"ghost\",\n    color: \"#4f4f4f\",\n    fontWeight: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"Filter\"), filters_by_id.length > 0 && __jsx(Button, {\n    size: \"xs\" // @ts-ignore\n    ,\n    leftIcon: \"filter\",\n    variant: \"solid\",\n    color: \"#4f4f4f\",\n    backgroundColor: \"#c3f7c3\",\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, filters_by_id.length, \" filter(s)\"))), __jsx(PopoverContent, {\n    zIndex: 4,\n    minWidth: filters_by_id.length > 0 ? '725px' : '400px',\n    boxShadow: \"none\",\n    _focus: {\n      boxShadow: 'none',\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(motion.div, {\n    initial: {\n      opacity: 0,\n      scaleY: 0.5,\n      y: -50\n    },\n    animate: {\n      opacity: 1,\n      scaleY: 1,\n      y: 0\n    },\n    transition: {\n      type: 'spring',\n      duration: 0.005,\n      stiffness: 460,\n      damping: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, __jsx(PopoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"FILTERS\"), filters_by_id.length === 0 && __jsx(ListFilterEmptyState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 52\n    }\n  }), __jsx(ListFilterContent, {\n    filters_by_id,\n    filters,\n    columns,\n    columns_by_id,\n    updateFilter,\n    deleteFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }), __jsx(ListFilterActions, {\n    filters_by_id,\n    filters,\n    addFilter,\n    openSmartListDialog,\n    updateSmartListFilters: () => {\n      handleUpdateSmartListFilters();\n      if (onClose) onClose();\n    },\n    smart_list: props.smart_list,\n    is_smart_list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }))))))), __jsx(CreateSmartListDialog, {\n    isOpen: isSmartListDialogOpen,\n    isLoading: smartListDialogLoading,\n    close: closeSmartListDialog,\n    onConfirm: handleCreateSmartList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/filter/filter-menu.tsx"],"names":["React","useState","Icon","Popover","PopoverContent","PopoverTrigger","Box","useDisclosure","useToast","useHistory","motion","PopoverWrapper","ListFilterEmptyState","ListFilterContent","CreateSmartListDialog","ToastBox","Button","ListFilterActions","props","addFilter","filters_by_id","length","is_smart_list","openSmartListDialog","updateSmartListFilters","ListFilterMenu","smartListDialogLoading","setSmartListDialogLoading","isOpen","isSmartListDialogOpen","onClose","closeSmartListDialog","onOpen","columns","columns_by_id","filters","updateFilter","deleteFilter","toast","router_history","handleCreateSmartList","smart_list_name","smart_list","createSmartList","position","render","selectSmartListID","id","push","handleUpdateSmartListFilters","boxShadow","outline","opacity","scaleY","y","type","duration","stiffness","damping"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Icon,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Box,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { PopoverWrapper } from '../../list-view.styles';\nimport { ListFilterEmptyState } from './filter-empty-state';\nimport { ListFilterContent } from './filter-content';\nimport { CreateSmartListDialog } from './create-smart-list-dialog';\nimport { ToastBox, Button } from '../../../../components';\n\ninterface ListFilterActionsProps {\n  filters_by_id: string[];\n  filters: { [key: string]: any };\n  addFilter: Function;\n  openSmartListDialog: Function;\n  updateSmartListFilters: Function;\n  is_smart_list: boolean;\n}\n\nconst ListFilterActions = (props: ListFilterActionsProps) => (\n  <>\n    <Box display=\"flex\" alignItems=\"center\">\n      <button className=\"add-button\" onClick={() => props.addFilter()}>\n        <Icon name=\"plus-square-filled\" className=\"icon\" size=\"16px\" />\n        Add a filter\n      </button>\n    </Box>\n    {props.filters_by_id.length > 0 && (\n      <Button\n        marginTop=\"23px\"\n        color=\"white\"\n        backgroundColor=\"#3D43DF\"\n        variantColor=\"blue\"\n        fontSize=\"14px\"\n        fontWeight=\"500\"\n        padding=\"4px 10px\"\n        onClick={() => {\n          if (!props.is_smart_list) props.openSmartListDialog();\n          else props.updateSmartListFilters();\n        }}\n      >\n        {props.is_smart_list ? 'Update smart list' : 'Create smart list'}\n      </Button>\n    )}\n  </>\n);\n\nexport const ListFilterMenu = (props: any) => {\n  const [smartListDialogLoading, setSmartListDialogLoading] = useState<boolean>(false);\n  const {\n    isOpen: isSmartListDialogOpen,\n    onClose: closeSmartListDialog,\n    onOpen: openSmartListDialog,\n  } = useDisclosure();\n\n  const {\n    columns,\n    columns_by_id,\n    filters_by_id,\n    filters,\n    addFilter,\n    updateFilter,\n    deleteFilter,\n    is_smart_list,\n    updateSmartListFilters,\n  } = props;\n\n  const toast = useToast();\n\n  const router_history = useHistory();\n\n  const handleCreateSmartList = async (smart_list_name: string) => {\n    setSmartListDialogLoading(true);\n    const smart_list = await props.createSmartList(\n      smart_list_name.length > 0 ? smart_list_name : 'Untitled',\n    );\n    setSmartListDialogLoading(false);\n    if (!smart_list) {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox onClose={onClose} message=\"Couldn't create smart list, please try again\" />\n        ),\n      });\n    } else {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox status=\"success\" onClose={onClose} message=\"Smart list created\" />\n        ),\n      });\n      closeSmartListDialog();\n      props.selectSmartListID(smart_list.id);\n      router_history.push(`/s/lists/view/${smart_list.id}/smart`);\n    }\n  };\n\n  const handleUpdateSmartListFilters = () => {\n    updateSmartListFilters(props.smart_list.id);\n    toast({\n      position: 'bottom-left',\n      render: ({ onClose }) => (\n        <ToastBox status=\"success\" onClose={onClose} message=\"Smart list filters updated\" />\n      ),\n    });\n  };\n\n  return (\n    <>\n      <Popover usePortal placement=\"bottom\">\n        {({ onClose }) => (\n          <>\n            <PopoverTrigger>\n              <Box>\n                {filters_by_id.length === 0 && (\n                  <Button\n                    size=\"xs\"\n                    // @ts-ignore\n                    leftIcon=\"filter\"\n                    variant=\"ghost\"\n                    color=\"#4f4f4f\"\n                    fontWeight=\"400\"\n                  >\n                    Filter\n                  </Button>\n                )}\n                {filters_by_id.length > 0 && (\n                  <Button\n                    size=\"xs\"\n                    // @ts-ignore\n                    leftIcon=\"filter\"\n                    variant=\"solid\"\n                    color=\"#4f4f4f\"\n                    backgroundColor=\"#c3f7c3\"\n                    fontWeight=\"500\"\n                  >\n                    {filters_by_id.length} filter(s)\n                  </Button>\n                )}\n              </Box>\n            </PopoverTrigger>\n            <PopoverContent\n              zIndex={4}\n              minWidth={filters_by_id.length > 0 ? '725px' : '400px'}\n              boxShadow=\"none\"\n              _focus={{\n                boxShadow: 'none',\n                outline: 'none',\n              }}\n            >\n              <motion.div\n                initial={{ opacity: 0, scaleY: 0.5, y: -50 }}\n                animate={{ opacity: 1, scaleY: 1, y: 0 }}\n                transition={{ type: 'spring', duration: 0.005, stiffness: 460, damping: 30 }}\n              >\n                <PopoverWrapper>\n                  <div className=\"filter-container\">\n                    <div className=\"title\">FILTERS</div>\n                    {filters_by_id.length === 0 && <ListFilterEmptyState />}\n                    <ListFilterContent\n                      {...{\n                        filters_by_id,\n                        filters,\n                        columns,\n                        columns_by_id,\n                        updateFilter,\n                        deleteFilter,\n                      }}\n                    />\n                    <ListFilterActions\n                      {...{\n                        filters_by_id,\n                        filters,\n                        addFilter,\n                        openSmartListDialog,\n                        updateSmartListFilters: () => {\n                          handleUpdateSmartListFilters();\n                          if (onClose) onClose();\n                        },\n                        smart_list: props.smart_list,\n                        is_smart_list,\n                      }}\n                    />\n                  </div>\n                </PopoverWrapper>\n              </motion.div>\n            </PopoverContent>\n          </>\n        )}\n      </Popover>\n\n      <CreateSmartListDialog\n        isOpen={isSmartListDialogOpen}\n        isLoading={smartListDialogLoading}\n        close={closeSmartListDialog}\n        onConfirm={handleCreateSmartList}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}