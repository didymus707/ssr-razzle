{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/resources/create-resource/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, IconButton } from '@chakra-ui/core';\nimport { SelectResourceType, ConfigureResourceType } from './stages';\nimport { useHistory } from 'react-router';\nexport const CreateResource = props => {\n  const {\n    0: stage,\n    1: setStage\n  } = useState('select');\n  const {\n    0: resourceType,\n    1: setResourceType\n  } = useState(null);\n\n  const handleSelectType = _type => {\n    setResourceType(_type);\n    setStage('configure');\n  };\n\n  const routerHistory = useHistory();\n\n  const goBack = () => {\n    if (stage === 'select') routerHistory.push('/s/lists/connections');else setStage('select');\n  };\n\n  return __jsx(Box, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    icon: \"arrow-back\",\n    size: \"xs\",\n    borderRadius: \"10px\",\n    \"aria-label\": \"back\",\n    mr: \"10px\",\n    mb: \"5px\",\n    onClick: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), stage === 'select' ? 'Select your connection type' : 'Configure your connection')), stage === 'select' && __jsx(SelectResourceType, {\n    selectType: handleSelectType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 30\n    }\n  }), stage === 'configure' && !!resourceType && __jsx(ConfigureResourceType, {\n    createResource: props.createResource,\n    resourceType: resourceType,\n    requestAppResourceAuth: props.requestAppResourceAuth,\n    requestResourceAuth: props.requestResourceAuth,\n    submitAppResourceAuth: props.submitAppResourceAuth,\n    testResourceConnection: props.testResourceConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/resources/create-resource/index.tsx"],"names":["React","useState","Box","IconButton","SelectResourceType","ConfigureResourceType","useHistory","CreateResource","props","stage","setStage","resourceType","setResourceType","handleSelectType","_type","routerHistory","goBack","push","createResource","requestAppResourceAuth","requestResourceAuth","submitAppResourceAuth","testResourceConnection"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,iBAAhC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,UAA1D;AACA,SAASC,UAAT,QAA2B,cAA3B;AAUA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAkB;AAC9C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAyB,QAAzB,CAAlC;AACA,QAAM;AAAA,OAACU,YAAD;AAAA,OAAeC;AAAf,MAAkCX,QAAQ,CAAgB,IAAhB,CAAhD;;AAEA,QAAMY,gBAAgB,GAAIC,KAAD,IAAmB;AAC1CF,IAAAA,eAAe,CAACE,KAAD,CAAf;AACAJ,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,GAHD;;AAKA,QAAMK,aAAa,GAAGT,UAAU,EAAhC;;AAEA,QAAMU,MAAM,GAAG,MAAM;AACnB,QAAIP,KAAK,KAAK,QAAd,EAAwBM,aAAa,CAACE,IAAd,CAAmB,sBAAnB,EAAxB,KACKP,QAAQ,CAAC,QAAD,CAAR;AACN,GAHD;;AAKA,SACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,YAAY,EAAC,MAHf;AAIE,kBAAW,MAJb;AAKE,IAAA,EAAE,EAAC,MALL;AAME,IAAA,EAAE,EAAC,KANL;AAOE,IAAA,OAAO,EAAEM,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUGP,KAAK,KAAK,QAAV,GAAqB,6BAArB,GAAqD,2BAVxD,CADF,CADF,EAeGA,KAAK,KAAK,QAAV,IAAsB,MAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEI,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfzB,EAgBGJ,KAAK,KAAK,WAAV,IAAyB,CAAC,CAACE,YAA3B,IACC,MAAC,qBAAD;AACE,IAAA,cAAc,EAAEH,KAAK,CAACU,cADxB;AAEE,IAAA,YAAY,EAAEP,YAFhB;AAGE,IAAA,sBAAsB,EAAEH,KAAK,CAACW,sBAHhC;AAIE,IAAA,mBAAmB,EAAEX,KAAK,CAACY,mBAJ7B;AAKE,IAAA,qBAAqB,EAAEZ,KAAK,CAACa,qBAL/B;AAME,IAAA,sBAAsB,EAAEb,KAAK,CAACc,sBANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADF;AA6BD,CA7CM","sourcesContent":["import React, { useState } from 'react';\nimport { Box, IconButton } from '@chakra-ui/core';\nimport { SelectResourceType, ConfigureResourceType } from './stages';\nimport { useHistory } from 'react-router';\n\ninterface Props {\n  requestResourceAuth: Function;\n  testResourceConnection: Function;\n  createResource: Function;\n  requestAppResourceAuth: Function;\n  submitAppResourceAuth: Function;\n}\n\nexport const CreateResource = (props: Props) => {\n  const [stage, setStage] = useState<'select' | 'configure'>('select');\n  const [resourceType, setResourceType] = useState<string | null>(null);\n\n  const handleSelectType = (_type: string) => {\n    setResourceType(_type);\n    setStage('configure');\n  };\n\n  const routerHistory = useHistory();\n\n  const goBack = () => {\n    if (stage === 'select') routerHistory.push('/s/lists/connections');\n    else setStage('select');\n  };\n\n  return (\n    <Box className=\"content\">\n      <Box className=\"section-title\">\n        <Box className=\"title\">\n          <IconButton\n            icon=\"arrow-back\"\n            size=\"xs\"\n            borderRadius=\"10px\"\n            aria-label=\"back\"\n            mr=\"10px\"\n            mb=\"5px\"\n            onClick={goBack}\n          />\n          {stage === 'select' ? 'Select your connection type' : 'Configure your connection'}\n        </Box>\n      </Box>\n      {stage === 'select' && <SelectResourceType selectType={handleSelectType} />}\n      {stage === 'configure' && !!resourceType && (\n        <ConfigureResourceType\n          createResource={props.createResource}\n          resourceType={resourceType}\n          requestAppResourceAuth={props.requestAppResourceAuth}\n          requestResourceAuth={props.requestResourceAuth}\n          submitAppResourceAuth={props.submitAppResourceAuth}\n          testResourceConnection={props.testResourceConnection}\n        />\n      )}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}