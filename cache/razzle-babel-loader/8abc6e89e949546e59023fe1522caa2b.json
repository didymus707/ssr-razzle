{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/campaigns/components/planner/template-select-modal.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, Flex, Heading, Icon, IconButton, PseudoBox, Skeleton, Stack, Text, useToast } from '@chakra-ui/core';\nimport React from 'react';\nimport { useLoading } from '../../../../../../hooks';\nimport { Button, EmptyState, ModalContainer, Search, ToastBox } from 'app/components';\nimport emptyTemplates from '../../assets/empty-inbox.svg';\nexport const TemplateSelectModal = ({\n  isOpen,\n  onClose,\n  goBack,\n  categories,\n  fetchTemplates,\n  onSelectTemplate,\n  selectedTemplate,\n  fetchSampleTemplates\n}) => {\n  var _templates, _templates2, _templates3, _templates4;\n\n  const [searchValue, setSearchValue] = React.useState('');\n  let [templates, setTemplates] = React.useState([]);\n  const [selectedCategory, setSelectedCategory] = React.useState('my-templates');\n  const toast = useToast();\n  const {\n    dispatch,\n    loading\n  } = useLoading();\n  templates = templates.filter(template => template.name.toLowerCase().includes(searchValue.toLowerCase()) || template.template.toLowerCase().includes(searchValue.toLowerCase()));\n\n  const handleGoBack = () => {\n    goBack === null || goBack === void 0 ? void 0 : goBack();\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  };\n\n  const handleFetchCategoryTemplates = async category => {\n    try {\n      dispatch({\n        type: 'LOADING_STARTED'\n      });\n      const {\n        templates\n      } = await fetchSampleTemplates({\n        category\n      });\n      setTemplates(templates);\n      dispatch({\n        type: 'LOADING_RESOLVED'\n      });\n    } catch (error) {\n      dispatch({\n        type: 'LOADING_RESOLVED'\n      });\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  };\n\n  const handleFetchTemplates = async () => {\n    try {\n      dispatch({\n        type: 'LOADING_STARTED'\n      });\n      const {\n        templates\n      } = await fetchTemplates();\n      setTemplates(templates);\n      dispatch({\n        type: 'LOADING_RESOLVED'\n      });\n    } catch (error) {\n      dispatch({\n        type: 'LOADING_RESOLVED'\n      });\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  };\n\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n\n    if (category === 'my-templates') {\n      handleFetchTemplates();\n    } else {\n      handleFetchCategoryTemplates(category);\n    }\n  };\n\n  const handleTemplateSearch = value => {\n    setSearchValue(value);\n  };\n\n  React.useEffect(() => {\n    handleFetchTemplates(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return __jsx(ModalContainer, {\n    size: \"lg\",\n    isOpen: isOpen,\n    onClose: onClose,\n    titleStyleProps: {\n      fontSize: '1rem',\n      width: '320px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    py: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    px: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    pb: \"1rem\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, __jsx(IconButton, {\n    size: \"xs\",\n    variant: \"ghost\",\n    icon: \"arrow-back\",\n    \"aria-label\": \"back\",\n    onClick: handleGoBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), __jsx(Heading, {\n    fontSize: \"1.2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Templates\"))), __jsx(Search, {\n    mb: \"0.5rem\",\n    value: searchValue,\n    placeholder: \"Search templates\",\n    onChange: handleTemplateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    overflowY: \"auto\",\n    m: \"0.5rem 1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    minW: \"unset\",\n    fontWeight: 500,\n    fontSize: \"0.75rem\",\n    textTransform: \"capitalize\",\n    onClick: () => handleCategoryClick('my-templates'),\n    variantColor: selectedCategory === 'my-templates' ? 'blue' : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"My Templates\"), categories === null || categories === void 0 ? void 0 : categories.map((category, index) => __jsx(Button, {\n    size: \"sm\",\n    minW: \"unset\",\n    fontWeight: 500,\n    fontSize: \"0.75rem\",\n    key: index.toString(),\n    textTransform: \"capitalize\",\n    onClick: () => handleCategoryClick(category),\n    variantColor: selectedCategory === category ? 'blue' : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, category))), __jsx(Box, {\n    height: \"200px\",\n    overflowY: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, !((_templates = templates) !== null && _templates !== void 0 && _templates.length) && !searchValue && __jsx(EmptyState, {\n    imageSize: \"100px\",\n    subheading: \"No templates\",\n    image: emptyTemplates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), !((_templates2 = templates) !== null && _templates2 !== void 0 && _templates2.length) && searchValue && __jsx(EmptyState, {\n    imageSize: \"100px\",\n    subheading: \"No templates found\",\n    image: emptyTemplates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), !!((_templates3 = templates) !== null && _templates3 !== void 0 && _templates3.length) && ((_templates4 = templates) === null || _templates4 === void 0 ? void 0 : _templates4.map(template => __jsx(TemplateItem, _extends({\n    key: template.id,\n    isLoading: loading === 'pending',\n    onClick: () => onSelectTemplate === null || onSelectTemplate === void 0 ? void 0 : onSelectTemplate(template),\n    isSelected: selectedTemplate === template.id\n  }, template, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  })))))));\n};\n\nconst TemplateItem = props => {\n  const {\n    name,\n    template,\n    onClick,\n    isSelected,\n    isLoading\n  } = props;\n  return __jsx(PseudoBox, {\n    py: \"1rem\",\n    px: \"1.5rem\",\n    as: \"button\",\n    width: \"100%\",\n    textAlign: \"left\",\n    borderRadius: \"0\",\n    onClick: onClick,\n    borderBottomWidth: \"1px\",\n    _hover: {\n      bg: '#f2f2f2',\n      rounded: '8px'\n    },\n    _active: {\n      outline: 'none',\n      boxShadow: 'none'\n    },\n    _focus: {\n      outline: 'none',\n      boxShadow: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, __jsx(Skeleton, {\n    height: \"20px\",\n    pb: \"0.2rem\",\n    isLoaded: !isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    fontSize: \"0.875rem\",\n    pb: \"0.2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, name)), __jsx(Skeleton, {\n    height: \"10px\",\n    isLoaded: !isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    maxW: \"450px\",\n    color: \"gray.600\",\n    overflow: \"hidden\",\n    fontSize: \"0.75rem\",\n    whiteSpace: \"nowrap\",\n    style: {\n      textOverflow: 'ellipsis'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, template))), isSelected && __jsx(Icon, {\n    name: \"check-circle\",\n    size: \"1.2rem\",\n    color: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 24\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/campaigns/components/planner/template-select-modal.tsx"],"names":["Box","Flex","Heading","Icon","IconButton","PseudoBox","Skeleton","Stack","Text","useToast","React","useLoading","Button","EmptyState","ModalContainer","Search","ToastBox","emptyTemplates","TemplateSelectModal","isOpen","onClose","goBack","categories","fetchTemplates","onSelectTemplate","selectedTemplate","fetchSampleTemplates","searchValue","setSearchValue","useState","templates","setTemplates","selectedCategory","setSelectedCategory","toast","dispatch","loading","filter","template","name","toLowerCase","includes","handleGoBack","handleFetchCategoryTemplates","category","type","error","position","render","handleFetchTemplates","handleCategoryClick","handleTemplateSearch","value","useEffect","fontSize","width","undefined","map","index","toString","length","id","TemplateItem","props","onClick","isSelected","isLoading","bg","rounded","outline","boxShadow","textOverflow"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Heading,\n  Icon,\n  IconButton,\n  PseudoBox,\n  Skeleton,\n  Stack,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\nimport React from 'react';\nimport { useLoading } from '../../../../../../hooks';\nimport {\n  Button,\n  EmptyState,\n  ModalContainer,\n  ModalContainerOptions,\n  Search,\n  ToastBox,\n} from 'app/components';\nimport { TemplateData } from '../../../templates';\nimport emptyTemplates from '../../assets/empty-inbox.svg';\n\ntype TemplateSelectModalProps = {\n  goBack?(): void;\n  categories?: string[];\n  selectedTemplate?: string | null;\n  fetchTemplates: (params?: any) => any;\n  fetchSampleTemplates: (params: any) => any;\n  onSelectTemplate?(template: TemplateData): void;\n} & ModalContainerOptions;\n\nexport const TemplateSelectModal = ({\n  isOpen,\n  onClose,\n  goBack,\n  categories,\n  fetchTemplates,\n  onSelectTemplate,\n  selectedTemplate,\n  fetchSampleTemplates,\n}: TemplateSelectModalProps) => {\n  const [searchValue, setSearchValue] = React.useState('');\n  let [templates, setTemplates] = React.useState<TemplateData[]>([]);\n  const [selectedCategory, setSelectedCategory] = React.useState('my-templates');\n\n  const toast = useToast();\n  const { dispatch, loading } = useLoading();\n\n  templates = templates.filter(\n    (template: TemplateData) =>\n      template.name.toLowerCase().includes(searchValue.toLowerCase()) ||\n      template.template.toLowerCase().includes(searchValue.toLowerCase()),\n  );\n\n  const handleGoBack = () => {\n    goBack?.();\n    onClose?.();\n  };\n\n  const handleFetchCategoryTemplates = async (category: string) => {\n    try {\n      dispatch({ type: 'LOADING_STARTED' });\n      const { templates } = await fetchSampleTemplates({ category });\n      setTemplates(templates);\n      dispatch({ type: 'LOADING_RESOLVED' });\n    } catch (error) {\n      dispatch({ type: 'LOADING_RESOLVED' });\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  };\n\n  const handleFetchTemplates = async () => {\n    try {\n      dispatch({ type: 'LOADING_STARTED' });\n      const { templates } = await fetchTemplates();\n      setTemplates(templates);\n      dispatch({ type: 'LOADING_RESOLVED' });\n    } catch (error) {\n      dispatch({ type: 'LOADING_RESOLVED' });\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  };\n\n  const handleCategoryClick = (category: string) => {\n    setSelectedCategory(category);\n    if (category === 'my-templates') {\n      handleFetchTemplates();\n    } else {\n      handleFetchCategoryTemplates(category);\n    }\n  };\n\n  const handleTemplateSearch = (value: string) => {\n    setSearchValue(value);\n  };\n\n  React.useEffect(() => {\n    handleFetchTemplates();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ModalContainer\n      size=\"lg\"\n      isOpen={isOpen}\n      onClose={onClose}\n      titleStyleProps={{ fontSize: '1rem', width: '320px' }}\n    >\n      <Box py=\"1.5rem\">\n        <Box px=\"1.5rem\">\n          <Flex pb=\"1rem\" alignItems=\"center\" justifyContent=\"space-between\">\n            <Stack isInline alignItems=\"center\">\n              <IconButton\n                size=\"xs\"\n                variant=\"ghost\"\n                icon=\"arrow-back\"\n                aria-label=\"back\"\n                onClick={handleGoBack}\n              />\n              <Heading fontSize=\"1.2rem\">Templates</Heading>\n            </Stack>\n          </Flex>\n          <Search\n            mb=\"0.5rem\"\n            value={searchValue}\n            placeholder=\"Search templates\"\n            onChange={handleTemplateSearch}\n          />\n        </Box>\n        <Stack isInline alignItems=\"center\" overflowY=\"auto\" m=\"0.5rem 1.5rem\">\n          <Button\n            size=\"sm\"\n            minW=\"unset\"\n            fontWeight={500}\n            fontSize=\"0.75rem\"\n            textTransform=\"capitalize\"\n            onClick={() => handleCategoryClick('my-templates')}\n            variantColor={selectedCategory === 'my-templates' ? 'blue' : undefined}\n          >\n            My Templates\n          </Button>\n          {categories?.map((category, index) => (\n            <Button\n              size=\"sm\"\n              minW=\"unset\"\n              fontWeight={500}\n              fontSize=\"0.75rem\"\n              key={index.toString()}\n              textTransform=\"capitalize\"\n              onClick={() => handleCategoryClick(category)}\n              variantColor={selectedCategory === category ? 'blue' : undefined}\n            >\n              {category}\n            </Button>\n          ))}\n        </Stack>\n        <Box height=\"200px\" overflowY=\"auto\">\n          {!templates?.length && !searchValue && (\n            <EmptyState imageSize=\"100px\" subheading=\"No templates\" image={emptyTemplates} />\n          )}\n          {!templates?.length && searchValue && (\n            <EmptyState imageSize=\"100px\" subheading=\"No templates found\" image={emptyTemplates} />\n          )}\n          {!!templates?.length &&\n            templates?.map(template => (\n              <TemplateItem\n                key={template.id}\n                isLoading={loading === 'pending'}\n                onClick={() => onSelectTemplate?.(template)}\n                isSelected={selectedTemplate === template.id}\n                {...template}\n              />\n            ))}\n        </Box>\n      </Box>\n    </ModalContainer>\n  );\n};\n\nconst TemplateItem = (\n  props: TemplateData & { isSelected?: boolean; onClick?: () => void; isLoading?: boolean },\n) => {\n  const { name, template, onClick, isSelected, isLoading } = props;\n  return (\n    <PseudoBox\n      py=\"1rem\"\n      px=\"1.5rem\"\n      as=\"button\"\n      width=\"100%\"\n      textAlign=\"left\"\n      borderRadius=\"0\"\n      onClick={onClick}\n      borderBottomWidth=\"1px\"\n      _hover={{\n        bg: '#f2f2f2',\n        rounded: '8px',\n      }}\n      _active={{\n        outline: 'none',\n        boxShadow: 'none',\n      }}\n      _focus={{\n        outline: 'none',\n        boxShadow: 'none',\n      }}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Box>\n          <Skeleton height=\"20px\" pb=\"0.2rem\" isLoaded={!isLoading}>\n            <Heading fontSize=\"0.875rem\" pb=\"0.2rem\">\n              {name}\n            </Heading>\n          </Skeleton>\n          <Skeleton height=\"10px\" isLoaded={!isLoading}>\n            <Text\n              maxW=\"450px\"\n              color=\"gray.600\"\n              overflow=\"hidden\"\n              fontSize=\"0.75rem\"\n              whiteSpace=\"nowrap\"\n              style={{ textOverflow: 'ellipsis' }}\n            >\n              {template}\n            </Text>\n          </Skeleton>\n        </Box>\n        {isSelected && <Icon name=\"check-circle\" size=\"1.2rem\" color=\"blue.500\" />}\n      </Flex>\n    </PseudoBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}