{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/pages/Register/Register.container.tsx\";\nvar __jsx = React.createElement;\nimport { useToast } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ToastBox } from '../../../../components';\nimport { register, saveUser } from '../../service';\nimport { RegisterComponent } from './Register.component';\nimport isEmpty from 'lodash/isEmpty';\nimport { loadState } from '../../../../../utils';\nimport { useEffect } from 'react';\nimport { sendAmplitudeData } from '../../../../../utils/amplitude';\nconst connector = connect(null, {\n  saveUser\n});\n\nfunction Register(props) {\n  const toast = useToast();\n  const {\n    history,\n    saveUser,\n    location\n  } = props;\n  const [loading, setLoading] = React.useState(false);\n  const BASE_URL = true ? 'http://localhost:3000/' : process.env.REACT_APP_DEMO_URL;\n\n  async function handleRegister(values) {\n    setLoading(true); //TODO: change verify link to app.simpu.co when going live\n\n    let payload = _objectSpread(_objectSpread({}, values), {}, {\n      link: `${BASE_URL}verify/{{token}}`\n    });\n\n    const localStorageData = loadState(); // check to see if the person is coming from an invite link\n\n    if (!isEmpty(localStorageData) && localStorageData.team_id && localStorageData.inviteToken) {\n      const {\n        team_id,\n        inviteToken\n      } = localStorageData;\n      payload = _objectSpread(_objectSpread({}, payload), {}, {\n        team_id,\n        inviteToken\n      });\n    }\n\n    try {\n      const data = await register(payload);\n      saveUser(data);\n      setLoading(false);\n      sendAmplitudeData('signup');\n      history.push('/s/home');\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  }\n\n  useEffect(() => {\n    document.title = 'Simpu: Sign up';\n  }, []);\n  return __jsx(RegisterComponent, _extends({}, props, {\n    isLoading: loading,\n    onSubmit: handleRegister,\n    showOrganizationName: !location.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport const RegisterContainer = connector(Register);","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/pages/Register/Register.container.tsx"],"names":["useToast","React","connect","ToastBox","register","saveUser","RegisterComponent","isEmpty","loadState","useEffect","sendAmplitudeData","connector","Register","props","toast","history","location","loading","setLoading","useState","BASE_URL","process","env","REACT_APP_DEMO_URL","handleRegister","values","payload","link","localStorageData","team_id","inviteToken","data","push","error","position","render","onClose","document","title","search","RegisterContainer"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,eAAnC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,MAAMC,SAAS,GAAGT,OAAO,CAAC,IAAD,EAAO;AAAEG,EAAAA;AAAF,CAAP,CAAzB;;AAKA,SAASO,QAAT,CAAkBC,KAAlB,EAAgC;AAC9B,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAM;AAAEe,IAAAA,OAAF;AAAWV,IAAAA,QAAX;AAAqBW,IAAAA;AAArB,MAAkCH,KAAxC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBjB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAA9B;AAEA,QAAMC,QAAQ,GACZ,OACI,wBADJ,GAEIC,OAAO,CAACC,GAAR,CAAYC,kBAHlB;;AAKA,iBAAeC,cAAf,CAA8BC,MAA9B,EAAsE;AACpEP,IAAAA,UAAU,CAAC,IAAD,CAAV,CADoE,CAEpE;;AACA,QAAIQ,OAAO,mCAAQD,MAAR;AAAgBE,MAAAA,IAAI,EAAG,GAAEP,QAAS;AAAlC,MAAX;;AACA,UAAMQ,gBAAgB,GAAGpB,SAAS,EAAlC,CAJoE,CAKpE;;AACA,QAAI,CAACD,OAAO,CAACqB,gBAAD,CAAR,IAA8BA,gBAAgB,CAACC,OAA/C,IAA0DD,gBAAgB,CAACE,WAA/E,EAA4F;AAC1F,YAAM;AAAED,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAA2BF,gBAAjC;AACAF,MAAAA,OAAO,mCAAQA,OAAR;AAAiBG,QAAAA,OAAjB;AAA0BC,QAAAA;AAA1B,QAAP;AACD;;AACD,QAAI;AACF,YAAMC,IAAI,GAAG,MAAM3B,QAAQ,CAACsB,OAAD,CAA3B;AACArB,MAAAA,QAAQ,CAAC0B,IAAD,CAAR;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAR,MAAAA,iBAAiB,CAAC,QAAD,CAAjB;AACAK,MAAAA,OAAO,CAACiB,IAAR,CAAa,SAAb;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACdf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,KAAK,CAAC;AACJoB,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAiB,MAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,OAAnB;AAA4B,UAAA,OAAO,EAAEH,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFrB,OAAD,CAAL;AAID;AACF;;AAEDxB,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,QAAQ,CAACC,KAAT,GAAiB,gBAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,iBAAD,eACMzB,KADN;AAEE,IAAA,SAAS,EAAEI,OAFb;AAGE,IAAA,QAAQ,EAAEO,cAHZ;AAIE,IAAA,oBAAoB,EAAE,CAACR,QAAQ,CAACuB,MAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD;;AAED,OAAO,MAAMC,iBAAiB,GAAG7B,SAAS,CAACC,QAAD,CAAnC","sourcesContent":["import { useToast } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { ToastBox } from '../../../../components';\nimport { RegisterFormInitialValuesProps } from '../../components';\nimport { register, saveUser } from '../../service';\nimport { RegisterComponent } from './Register.component';\nimport isEmpty from 'lodash/isEmpty';\nimport { loadState } from '../../../../../utils';\nimport { useEffect } from 'react';\nimport { sendAmplitudeData } from '../../../../../utils/amplitude';\n\nconst connector = connect(null, { saveUser });\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = RouteComponentProps & PropsFromRedux;\n\nfunction Register(props: Props) {\n  const toast = useToast();\n  const { history, saveUser, location } = props;\n  const [loading, setLoading] = React.useState(false);\n\n  const BASE_URL =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:3000/'\n      : process.env.REACT_APP_DEMO_URL;\n\n  async function handleRegister(values: RegisterFormInitialValuesProps) {\n    setLoading(true);\n    //TODO: change verify link to app.simpu.co when going live\n    let payload = { ...values, link: `${BASE_URL}verify/{{token}}` };\n    const localStorageData = loadState();\n    // check to see if the person is coming from an invite link\n    if (!isEmpty(localStorageData) && localStorageData.team_id && localStorageData.inviteToken) {\n      const { team_id, inviteToken } = localStorageData;\n      payload = { ...payload, team_id, inviteToken };\n    }\n    try {\n      const data = await register(payload);\n      saveUser(data);\n      setLoading(false);\n      sendAmplitudeData('signup');\n      history.push('/s/home');\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  }\n\n  useEffect(() => {\n    document.title = 'Simpu: Sign up';\n  }, []);\n\n  return (\n    <RegisterComponent\n      {...props}\n      isLoading={loading}\n      onSubmit={handleRegister}\n      showOrganizationName={!location.search}\n    />\n  );\n}\n\nexport const RegisterContainer = connector(Register);\n"]},"metadata":{},"sourceType":"module"}