{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/settings/NewSignature.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Stack, useToast } from '@chakra-ui/core';\nimport { PreTitle, ToastBox } from 'app/components';\nimport React from 'react';\nimport { convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { useHistory } from 'react-router';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { PageBack, SignatureForm } from './component';\nimport { createSignature } from '../inbox.service';\nexport const InboxSettingsNewSignature = () => {\n  const toast = useToast();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  const handleGoBack = () => history.push('/s/inbox/settings/signatures');\n\n  const {\n    isLoading,\n    mutate\n  } = useMutation(payload => createSignature(payload), {\n    onMutate: async data => {\n      const {\n        content\n      } = data;\n      const newData = {\n        content\n      };\n      await queryClient.cancelQueries(['signatures', 1]);\n      const previousSignatures = queryClient.getQueryData(['signatures', 1]);\n      queryClient.setQueryData(['signatures', 1], old => _objectSpread(_objectSpread({}, old), {}, {\n        //@ts-ignore\n        signatures: [...old.signatures, newData]\n      }));\n      return {\n        previousSignatures\n      };\n    },\n    onSuccess: () => {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Signature created successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        })\n      });\n      handleGoBack();\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData(['signatures', 1], context.previousSignatures);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }\n        })\n      });\n    }\n  });\n\n  const handleCreateSignature = values => {\n    const rawContentState = (values === null || values === void 0 ? void 0 : values.content) && convertToRaw(values.content.getCurrentContent());\n    const content = rawContentState && draftToHtml(rawContentState, {\n      trigger: '#',\n      separator: ' '\n    });\n\n    const payload = _objectSpread(_objectSpread({}, values), {}, {\n      content\n    });\n\n    mutate(payload);\n  };\n\n  return __jsx(Box, {\n    height: \"100%\",\n    bg: \"white\",\n    overflowY: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(PageBack, {\n    title: \"Back to Signatures\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    maxW: \"800px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    spacing: \"7rem\",\n    flex: 1,\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(PreTitle, {\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"create signature\"), __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(SignatureForm, {\n    isLoading: isLoading,\n    onCancel: handleGoBack,\n    onSubmit: handleCreateSignature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/settings/NewSignature.tsx"],"names":["Box","Stack","useToast","PreTitle","ToastBox","React","convertToRaw","draftToHtml","useHistory","useMutation","useQueryClient","PageBack","SignatureForm","createSignature","InboxSettingsNewSignature","toast","history","queryClient","handleGoBack","push","isLoading","mutate","payload","onMutate","data","content","newData","cancelQueries","previousSignatures","getQueryData","setQueryData","old","signatures","onSuccess","position","render","onClose","onError","error","context","message","handleCreateSignature","values","rawContentState","getCurrentContent","trigger","separator"],"mappings":"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","sourcesContent":["import { Box, Stack, useToast } from '@chakra-ui/core';\nimport { PreTitle, ToastBox } from 'app/components';\nimport React from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { useHistory } from 'react-router';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { PageBack, SignatureForm } from './component';\nimport { AxiosError } from 'axios';\nimport { createSignature } from '../inbox.service';\n\nexport const InboxSettingsNewSignature = () => {\n  const toast = useToast();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  const handleGoBack = () => history.push('/s/inbox/settings/signatures');\n\n  const { isLoading, mutate } = useMutation<any, AxiosError, any, any>(\n    (payload: { content: string }) => createSignature(payload),\n    {\n      onMutate: async data => {\n        const { content } = data;\n        const newData = {\n          content,\n        };\n        await queryClient.cancelQueries(['signatures', 1]);\n        const previousSignatures = queryClient.getQueryData(['signatures', 1]);\n        queryClient.setQueryData(['signatures', 1], old => ({\n          //@ts-ignore\n          ...old,\n          //@ts-ignore\n          signatures: [...old.signatures, newData],\n        }));\n        return { previousSignatures };\n      },\n      onSuccess: () => {\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox status=\"success\" onClose={onClose} message=\"Signature created successfully\" />\n          ),\n        });\n        handleGoBack();\n      },\n      onError: (error, newData, context) => {\n        queryClient.setQueryData(['signatures', 1], context.previousSignatures);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n        });\n      },\n    },\n  );\n\n  const handleCreateSignature = (values: { content?: EditorState }) => {\n    const rawContentState = values?.content && convertToRaw(values.content.getCurrentContent());\n    const content =\n      rawContentState &&\n      draftToHtml(rawContentState, {\n        trigger: '#',\n        separator: ' ',\n      });\n    const payload = { ...values, content };\n    mutate(payload);\n  };\n\n  return (\n    <Box height=\"100%\" bg=\"white\" overflowY=\"auto\">\n      <PageBack title=\"Back to Signatures\" />\n      <Box maxW=\"800px\">\n        <Stack spacing=\"7rem\" flex={1} isInline>\n          <PreTitle color=\"black\">create signature</PreTitle>\n          <Box flex={1}>\n            <SignatureForm\n              isLoading={isLoading}\n              onCancel={handleGoBack}\n              onSubmit={handleCreateSignature}\n            />\n          </Box>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}