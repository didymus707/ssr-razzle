{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/components/resources/delete-resource-dialog/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Box, Icon, Modal, ModalCloseButton, ModalOverlay, useToast } from '@chakra-ui/core/dist';\nimport { DeleteResourceDialogWrapper as Wrapper } from './index.styles';\nimport { ToastBox, Button } from 'app/components';\nimport { useSelector } from 'react-redux';\nimport { selectListResources } from 'app/authenticated-app/lists/lists.selectors';\nimport { resource_types } from 'app/authenticated-app/lists/list.data';\nimport { getListResourceIcon } from 'app/authenticated-app/lists/lists.utils';\nexport const DeleteResourceDialog = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: resourceName,\n    1: setResourceName\n  } = useState('');\n  const {\n    isOpen,\n    onClose,\n    selectedResource\n  } = props;\n  const resources = useSelector(selectListResources);\n  const resourceType = resource_types.find(i => {\n    var _resources$find;\n\n    return ((_resources$find = resources.find(i => i.id === selectedResource)) === null || _resources$find === void 0 ? void 0 : _resources$find['provider']) === i.key;\n  });\n  useEffect(() => {\n    setLoading(false);\n    setResourceName(''); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n  useEffect(() => {\n    if (isOpen && selectedResource) {\n      const resource = resources.find(i => i.id === selectedResource);\n      setResourceName((resource === null || resource === void 0 ? void 0 : resource.name) || '');\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n  const toast = useToast();\n\n  const handleDelete = async () => {\n    setLoading(true);\n\n    try {\n      await props.deleteResource(selectedResource);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: `${resourceName} connection deleted successfully`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        })\n      });\n      return onClose();\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: \"Unable to delete connection, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }\n        })\n      });\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(ModalCloseButton, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Delete Connection\"), __jsx(Box, {\n    className: \"prompt-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Are you sure you want to delete the selected \", resourceType === null || resourceType === void 0 ? void 0 : resourceType.label, \" connection?\"), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginBottom: \"30px\",\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: getListResourceIcon((resourceType === null || resourceType === void 0 ? void 0 : resourceType.key) || 'google-sheets'),\n    mr: \"10px\",\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), resourceName), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"ghost\",\n    size: \"sm\",\n    onClick: onClose,\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    variantColor: \"red\",\n    variant: \"solid\",\n    size: \"sm\",\n    isLoading: loading,\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Delete connection\"))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/components/resources/delete-resource-dialog/index.tsx"],"names":["React","useEffect","useState","Box","Icon","Modal","ModalCloseButton","ModalOverlay","useToast","DeleteResourceDialogWrapper","Wrapper","ToastBox","Button","useSelector","selectListResources","resource_types","getListResourceIcon","DeleteResourceDialog","props","loading","setLoading","resourceName","setResourceName","isOpen","onClose","selectedResource","resources","resourceType","find","i","id","key","resource","name","toast","handleDelete","deleteResource","position","render","e","label"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Icon, Modal, ModalCloseButton, ModalOverlay, useToast } from '@chakra-ui/core/dist';\nimport { DeleteResourceDialogWrapper as Wrapper } from './index.styles';\nimport { ToastBox, Button } from 'app/components';\nimport { useSelector } from 'react-redux';\nimport { selectListResources } from 'app/authenticated-app/lists/lists.selectors';\nimport { resource_types } from 'app/authenticated-app/lists/list.data';\nimport { getListResourceIcon } from 'app/authenticated-app/lists/lists.utils';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  selectedResource: string | null;\n  deleteResource: Function;\n}\n\nexport const DeleteResourceDialog = (props: Props) => {\n  const [loading, setLoading] = useState(false);\n  const [resourceName, setResourceName] = useState('');\n\n  const { isOpen, onClose, selectedResource } = props;\n\n  const resources: any[] = useSelector(selectListResources);\n\n  const resourceType = resource_types.find(\n    (i: any) => resources.find((i: any) => i.id === selectedResource)?.['provider'] === i.key,\n  );\n\n  useEffect(() => {\n    setLoading(false);\n    setResourceName('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isOpen && selectedResource) {\n      const resource = resources.find((i: any) => i.id === selectedResource);\n      setResourceName(resource?.name || '');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  const toast = useToast();\n\n  const handleDelete = async () => {\n    setLoading(true);\n    try {\n      await props.deleteResource(selectedResource);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            status=\"success\"\n            onClose={onClose}\n            message={`${resourceName} connection deleted successfully`}\n          />\n        ),\n      });\n      return onClose();\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox onClose={onClose} message=\"Unable to delete connection, please try again\" />\n        ),\n      });\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalCloseButton size=\"sm\" />\n\n      <Wrapper>\n        <Box className=\"heading\">Delete Connection</Box>\n\n        <Box className=\"prompt-text\">\n          Are you sure you want to delete the selected {resourceType?.label} connection?\n        </Box>\n\n        <Box display=\"flex\" flexDirection=\"row\" marginBottom=\"30px\" fontWeight=\"500\">\n          <Icon\n            name={getListResourceIcon(resourceType?.key || 'google-sheets')}\n            mr=\"10px\"\n            size=\"24px\"\n          />\n          {resourceName}\n        </Box>\n        <Box display=\"flex\" flexDirection=\"row\" width=\"100%\" justifyContent=\"flex-end\">\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose} mr=\"10px\">\n            Cancel\n          </Button>\n          <Button\n            variantColor=\"red\"\n            variant=\"solid\"\n            size=\"sm\"\n            isLoading={loading}\n            onClick={handleDelete}\n          >\n            Delete connection\n          </Button>\n        </Box>\n      </Wrapper>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}