{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/grid/row-select-cell.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { Box, Checkbox, Icon } from '@chakra-ui/core';\nimport { connect } from 'react-redux';\n\nconst getRowElement = row_id => {\n  const target = document.querySelectorAll(`[row-id=\"${row_id}\"]`);\n  return target[1];\n};\n\nconst mapStateToProps = state => ({\n  selected_rows: state.lists.selected_rows,\n  row_count: state.lists.rows_by_id.length\n});\n\nconst connector = connect(mapStateToProps, {}, null, {\n  forwardRef: true\n});\nconst Container = /*#__PURE__*/forwardRef((props, ref) => {\n  useImperativeHandle(ref, () => ({}));\n  return __jsx(Component, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }));\n});\n\nconst Component = props => {\n  const {\n    0: checkboxShown,\n    1: setCheckboxShown\n  } = useState(false);\n  const {\n    node,\n    openRow\n  } = props;\n  const selected = props.selected_rows.includes(props.node.id);\n\n  const handleChange = () => {\n    if (selected) props.selectRows(props.selected_rows.filter(i => i !== node.id));else props.selectRows([...props.selected_rows, node.id]);\n  };\n\n  const showCheckBox = () => setCheckboxShown(true);\n\n  const hideCheckBox = () => setCheckboxShown(false);\n\n  const attachRowOnHoverListener = () => {\n    const target = getRowElement(props.node.id);\n    if (target) target.addEventListener('mouseenter', showCheckBox);\n  };\n\n  const detachRowOnHoverListener = () => {\n    const target = getRowElement(props.node.id);\n    if (target) target.addEventListener('mouseenter', showCheckBox);\n  };\n\n  const attachRowNoHoverListener = () => {\n    const target = getRowElement(props.node.id);\n    if (target) target.addEventListener('mouseleave', hideCheckBox);\n  };\n\n  const detachRowNoHoverListener = () => {\n    const target = getRowElement(props.node.id);\n    if (target) target.addEventListener('mouseleave', hideCheckBox);\n  };\n\n  const handleExpandClicked = () => {\n    openRow(node.rowIndex);\n  };\n\n  useEffect(() => {\n    attachRowOnHoverListener();\n    return detachRowOnHoverListener; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    attachRowNoHoverListener();\n    return detachRowNoHoverListener; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"row-select-cell\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox, {\n    border: \"1px solid #8c8c8c !important\",\n    borderRadius: \"3px\",\n    boxShadow: \"none\",\n    isChecked: selected,\n    size: \"sm\",\n    onChange: handleChange,\n    marginTop: \"15px\",\n    className: \"row-select-checkbox\",\n    style: {\n      display: (selected || checkboxShown) && 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), __jsx(Icon, {\n    marginTop: \"16px\",\n    marginLeft: \"20px\",\n    position: \"absolute\",\n    size: \"14px\",\n    name: \"expand\",\n    className: \"row-expand-btn\",\n    cursor: \"pointer\",\n    style: {\n      display: (selected || checkboxShown) && 'flex'\n    },\n    borderRadius: \"6px\",\n    onClick: handleExpandClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    color: \"#8c8c8c\",\n    fontWeight: \"500\",\n    fontSize: \"12px\",\n    className: \"row-select-index\",\n    style: {\n      display: (selected || checkboxShown) && 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, node.rowIndex + 1)));\n};\n\nexport const RowSelectCell = connector(Container);","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/grid/row-select-cell.tsx"],"names":["React","forwardRef","useEffect","useImperativeHandle","useState","Box","Checkbox","Icon","connect","getRowElement","row_id","target","document","querySelectorAll","mapStateToProps","state","selected_rows","lists","row_count","rows_by_id","length","connector","Container","props","ref","Component","checkboxShown","setCheckboxShown","node","openRow","selected","includes","id","handleChange","selectRows","filter","i","showCheckBox","hideCheckBox","attachRowOnHoverListener","addEventListener","detachRowOnHoverListener","attachRowNoHoverListener","detachRowNoHoverListener","handleExpandClicked","rowIndex","display","RowSelectCell"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,mBAAvC,EAA4DC,QAA5D,QAA4E,OAA5E;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,IAAxB,QAAoC,iBAApC;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,aAAa,GAAIC,MAAD,IAAoB;AACxC,QAAMC,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA2B,YAAWH,MAAO,IAA7C,CAAf;AACA,SAAOC,MAAM,CAAC,CAAD,CAAb;AACD,CAHD;;AAKA,MAAMG,eAAe,GAAIC,KAAD,KAAuB;AAC7CC,EAAAA,aAAa,EAAED,KAAK,CAACE,KAAN,CAAYD,aADkB;AAE7CE,EAAAA,SAAS,EAAEH,KAAK,CAACE,KAAN,CAAYE,UAAZ,CAAuBC;AAFW,CAAvB,CAAxB;;AAKA,MAAMC,SAAS,GAAGb,OAAO,CAACM,eAAD,EAAkB,EAAlB,EAAsB,IAAtB,EAA4B;AAAEb,EAAAA,UAAU,EAAE;AAAd,CAA5B,CAAzB;AAEA,MAAMqB,SAAS,gBAAGrB,UAAU,CAAC,CAACsB,KAAD,EAAaC,GAAb,KAA0B;AACrDrB,EAAAA,mBAAmB,CAACqB,GAAD,EAAM,OAAO,EAAP,CAAN,CAAnB;AACA,SAAO,MAAC,SAAD,eAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAH2B,CAA5B;;AAKA,MAAME,SAAS,GAAIF,KAAD,IAAgB;AAChC,QAAM;AAAA,OAACG,aAAD;AAAA,OAAgBC;AAAhB,MAAoCvB,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAM;AAAEwB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,KAA1B;AACA,QAAMO,QAAQ,GAAGP,KAAK,CAACP,aAAN,CAAoBe,QAApB,CAA6BR,KAAK,CAACK,IAAN,CAAWI,EAAxC,CAAjB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIH,QAAJ,EAAcP,KAAK,CAACW,UAAN,CAAiBX,KAAK,CAACP,aAAN,CAAoBmB,MAApB,CAA4BC,CAAD,IAAeA,CAAC,KAAKR,IAAI,CAACI,EAArD,CAAjB,EAAd,KACKT,KAAK,CAACW,UAAN,CAAiB,CAAC,GAAGX,KAAK,CAACP,aAAV,EAAyBY,IAAI,CAACI,EAA9B,CAAjB;AACN,GAHD;;AAKA,QAAMK,YAAY,GAAG,MAAMV,gBAAgB,CAAC,IAAD,CAA3C;;AAEA,QAAMW,YAAY,GAAG,MAAMX,gBAAgB,CAAC,KAAD,CAA3C;;AAEA,QAAMY,wBAAwB,GAAG,MAAM;AACrC,UAAM5B,MAAM,GAAGF,aAAa,CAACc,KAAK,CAACK,IAAN,CAAWI,EAAZ,CAA5B;AACA,QAAIrB,MAAJ,EAAYA,MAAM,CAAC6B,gBAAP,CAAwB,YAAxB,EAAsCH,YAAtC;AACb,GAHD;;AAIA,QAAMI,wBAAwB,GAAG,MAAM;AACrC,UAAM9B,MAAM,GAAGF,aAAa,CAACc,KAAK,CAACK,IAAN,CAAWI,EAAZ,CAA5B;AACA,QAAIrB,MAAJ,EAAYA,MAAM,CAAC6B,gBAAP,CAAwB,YAAxB,EAAsCH,YAAtC;AACb,GAHD;;AAKA,QAAMK,wBAAwB,GAAG,MAAM;AACrC,UAAM/B,MAAM,GAAGF,aAAa,CAACc,KAAK,CAACK,IAAN,CAAWI,EAAZ,CAA5B;AACA,QAAIrB,MAAJ,EAAYA,MAAM,CAAC6B,gBAAP,CAAwB,YAAxB,EAAsCF,YAAtC;AACb,GAHD;;AAIA,QAAMK,wBAAwB,GAAG,MAAM;AACrC,UAAMhC,MAAM,GAAGF,aAAa,CAACc,KAAK,CAACK,IAAN,CAAWI,EAAZ,CAA5B;AACA,QAAIrB,MAAJ,EAAYA,MAAM,CAAC6B,gBAAP,CAAwB,YAAxB,EAAsCF,YAAtC;AACb,GAHD;;AAKA,QAAMM,mBAAmB,GAAG,MAAM;AAChCf,IAAAA,OAAO,CAACD,IAAI,CAACiB,QAAN,CAAP;AACD,GAFD;;AAIA3C,EAAAA,SAAS,CAAC,MAAM;AACdqC,IAAAA,wBAAwB;AACxB,WAAOE,wBAAP,CAFc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAvC,EAAAA,SAAS,CAAC,MAAM;AACdwC,IAAAA,wBAAwB;AACxB,WAAOC,wBAAP,CAFc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,OAAO,EAAC,MAAzC;AAAgD,IAAA,aAAa,EAAC,KAA9D;AAAoE,IAAA,UAAU,EAAC,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,MAAM,EAAC,8BADT;AAEE,IAAA,YAAY,EAAC,KAFf;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,SAAS,EAAEb,QAJb;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,QAAQ,EAAEG,YANZ;AAOE,IAAA,SAAS,EAAC,MAPZ;AAQE,IAAA,SAAS,EAAC,qBARZ;AASE,IAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAE,CAAChB,QAAQ,IAAIJ,aAAb,KAA+B;AADnC,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAcE,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,UAAU,EAAC,MAFb;AAGE,IAAA,QAAQ,EAAC,UAHX;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,SAAS,EAAC,gBANZ;AAOE,IAAA,MAAM,EAAC,SAPT;AAQE,IAAA,KAAK,EAAE;AACLoB,MAAAA,OAAO,EAAE,CAAChB,QAAQ,IAAIJ,aAAb,KAA+B;AADnC,KART;AAWE,IAAA,YAAY,EAAC,KAXf;AAYE,IAAA,OAAO,EAAEkB,mBAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EA4BE,MAAC,GAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,UAAU,EAAC,KAFb;AAGE,IAAA,QAAQ,EAAC,MAHX;AAIE,IAAA,SAAS,EAAC,kBAJZ;AAKE,IAAA,KAAK,EAAE;AACLE,MAAAA,OAAO,EAAE,CAAChB,QAAQ,IAAIJ,aAAb,KAA+B;AADnC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGE,IAAI,CAACiB,QAAL,GAAgB,CATnB,CA5BF,CADF,CADF;AA4CD,CA7FD;;AA+FA,OAAO,MAAME,aAAa,GAAG1B,SAAS,CAACC,SAAD,CAA/B","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { Box, Checkbox, Icon } from '@chakra-ui/core';\nimport { RootState } from '../../../../../root';\nimport { connect } from 'react-redux';\n\nconst getRowElement = (row_id: string) => {\n  const target = document.querySelectorAll(`[row-id=\"${row_id}\"]`);\n  return target[1];\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  selected_rows: state.lists.selected_rows,\n  row_count: state.lists.rows_by_id.length,\n});\n\nconst connector = connect(mapStateToProps, {}, null, { forwardRef: true });\n\nconst Container = forwardRef((props: any, ref: any) => {\n  useImperativeHandle(ref, () => ({}));\n  return <Component {...props} />;\n});\n\nconst Component = (props: any) => {\n  const [checkboxShown, setCheckboxShown] = useState(false);\n\n  const { node, openRow } = props;\n  const selected = props.selected_rows.includes(props.node.id);\n\n  const handleChange = () => {\n    if (selected) props.selectRows(props.selected_rows.filter((i: string) => i !== node.id));\n    else props.selectRows([...props.selected_rows, node.id]);\n  };\n\n  const showCheckBox = () => setCheckboxShown(true);\n\n  const hideCheckBox = () => setCheckboxShown(false);\n\n  const attachRowOnHoverListener = () => {\n    const target = getRowElement(props.node.id);\n    if (target) target.addEventListener('mouseenter', showCheckBox);\n  };\n  const detachRowOnHoverListener = () => {\n    const target = getRowElement(props.node.id);\n    if (target) target.addEventListener('mouseenter', showCheckBox);\n  };\n\n  const attachRowNoHoverListener = () => {\n    const target = getRowElement(props.node.id);\n    if (target) target.addEventListener('mouseleave', hideCheckBox);\n  };\n  const detachRowNoHoverListener = () => {\n    const target = getRowElement(props.node.id);\n    if (target) target.addEventListener('mouseleave', hideCheckBox);\n  };\n\n  const handleExpandClicked = () => {\n    openRow(node.rowIndex);\n  };\n\n  useEffect(() => {\n    attachRowOnHoverListener();\n    return detachRowOnHoverListener;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    attachRowNoHoverListener();\n    return detachRowNoHoverListener;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Box className=\"row-select-cell\" display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Checkbox\n          border=\"1px solid #8c8c8c !important\"\n          borderRadius=\"3px\"\n          boxShadow=\"none\"\n          isChecked={selected}\n          size=\"sm\"\n          onChange={handleChange}\n          marginTop=\"15px\"\n          className=\"row-select-checkbox\"\n          style={{\n            display: (selected || checkboxShown) && 'flex',\n          }}\n        />\n        <Icon\n          marginTop=\"16px\"\n          marginLeft=\"20px\"\n          position=\"absolute\"\n          size=\"14px\"\n          name=\"expand\"\n          className=\"row-expand-btn\"\n          cursor=\"pointer\"\n          style={{\n            display: (selected || checkboxShown) && 'flex',\n          }}\n          borderRadius=\"6px\"\n          onClick={handleExpandClicked}\n        />\n        <Box\n          color=\"#8c8c8c\"\n          fontWeight=\"500\"\n          fontSize=\"12px\"\n          className=\"row-select-index\"\n          style={{\n            display: (selected || checkboxShown) && 'none',\n          }}\n        >\n          {node.rowIndex + 1}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport const RowSelectCell = connector(Container);\n"]},"metadata":{},"sourceType":"module"}