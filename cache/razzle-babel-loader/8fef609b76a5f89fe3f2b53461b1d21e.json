{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/component/billing/change-plan/components/stages/checkout.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, Divider, Radio, useToast } from '@chakra-ui/core/dist';\nimport { formatCurrency } from '../../../../../../../../utils';\nimport { CardItemWrapper } from '../../component.styles';\nimport { useSelector } from 'react-redux';\nimport { selectWalletEmail, selectWalletID } from '../../../../../../payments/selectors';\nimport { selectProfile } from '../../../../../../../unauthenticated-app/authentication';\nimport { useHistory } from 'react-router-dom';\nimport { usePaystackPayment } from 'react-paystack';\nimport { ToastBox, Button } from '../../../../../../../components';\n\nconst CardItem = props => __jsx(CardItemWrapper, {\n  onClick: props.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, __jsx(Box, {\n  display: \"flex\",\n  width: \"100%\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, __jsx(\"img\", {\n  alt: \"credit card\",\n  className: \"card-logo\",\n  src: `/images/credit-cards/${props.brand}.svg`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}), __jsx(Box, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }\n}, __jsx(Box, {\n  className: \"text-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, `••••  ${props.last4}`), __jsx(Box, {\n  className: \"text-secondary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, `Exp ${props.exp_month}/${props.exp_year}`))), __jsx(Radio, {\n  isChecked: props.isSelected,\n  onChange: () => {},\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n}));\n\nexport const CheckoutSubscriptionPlan = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: cardPaymentLoading,\n    1: setCardPaymentLoading\n  } = useState(false);\n  const {\n    plan,\n    billing_period,\n    billing_currency,\n    cards,\n    selectedCard,\n    setSelectedCard,\n    fetchSubscription,\n    fetchWallet,\n    fetchCards,\n    createSubscription\n  } = props;\n  const wallet_email = useSelector(selectWalletEmail);\n  const wallet_id = useSelector(selectWalletID);\n  const router_history = useHistory();\n  const toast = useToast();\n  const {\n    first_name,\n    last_name,\n    organisation_id\n  } = useSelector(selectProfile) || {\n    first_name: '',\n    last_name: ''\n  };\n  const paystack_config = {\n    amount: billing_period === 'monthly' ? plan['price_monthly']['ngn'] : plan['price_yearly']['ngn'],\n    email: wallet_email !== null && wallet_email !== void 0 ? wallet_email : '',\n    publicKey: process.env.REACT_APP_PAYSTACK_PUBLIC_KEY,\n    label: `${plan['name']}`,\n    first_name,\n    last_name,\n    metadata: {\n      wallet_id,\n      refund: false,\n      save_card: true,\n      purpose: 'subscription-purchase',\n      subscription_plan: plan['id'],\n      billing_period: billing_period\n    }\n  }; // @ts-ignore\n\n  const initializePayment = usePaystackPayment(paystack_config);\n\n  const handlePaySuccess = () => {\n    setLoading(true);\n    setTimeout(async () => {\n      await fetchSubscription(organisation_id);\n      fetchWallet(organisation_id);\n      fetchCards();\n      setLoading(false);\n      router_history.push('/s/settings/organization/billing');\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: `${plan['name']} subscription activated successfully`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }\n        })\n      });\n    }, 2000);\n  };\n\n  const handleCardPayment = async () => {\n    setCardPaymentLoading(true);\n    const res = await createSubscription({\n      subscription_plan: plan['id'],\n      billing_period: billing_period,\n      card: selectedCard,\n      auto_renew: true\n    });\n\n    if (res) {\n      fetchWallet(organisation_id);\n      fetchCards();\n      setCardPaymentLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: `${plan['name']} subscription activated successfully`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        })\n      });\n      router_history.push('/s/settings/organization/billing');\n    } else {\n      setCardPaymentLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: \"Unable to create for subscription, please try another card or payment method\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }\n        })\n      });\n    }\n  };\n\n  return __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    my: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    maxW: \"450px\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, cards.length > 0 && __jsx(React.Fragment, null, cards.map((card, index) => __jsx(CardItem, _extends({}, card, {\n    key: index,\n    isSelected: selectedCard === card.id,\n    onClick: () => setSelectedCard(card.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }))), __jsx(Box, {\n    mt: \"15px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    mt: \"20px\",\n    size: \"sm\",\n    isFullWidth: true,\n    variant: \"solid\",\n    variantColor: \"blue\",\n    onClick: handleCardPayment,\n    isLoading: cardPaymentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Checkout\"), __jsx(Button, {\n    mt: \"20px\",\n    size: \"sm\",\n    variant: \"link\",\n    variantColor: \"blue\",\n    isLoading: loading,\n    onClick: () => initializePayment(handlePaySuccess),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"Use new payment method\"))), cards.length === 0 && __jsx(Box, {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    my: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    fontWeight: \"500\",\n    fontSize: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"No cards available\"), __jsx(Box, {\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    textAlign: \"center\",\n    color: \"#757575\",\n    mt: \"15px\",\n    width: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"Looks like you haven't added any cards on Simpu, once you checkout with a new one, you'll be able to use it for other payments right here on Simpu\"), __jsx(Button, {\n    mt: \"25px\",\n    size: \"sm\",\n    variant: \"solid\",\n    variantColor: \"blue\",\n    isLoading: loading,\n    onClick: () => initializePayment(handlePaySuccess),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"Checkout with new payment method\"))), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"350px\",\n    backgroundColor: \"#FFFFFF\",\n    boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\n    borderRadius: \"20px\",\n    padding: \"30px\",\n    height: \"fit-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    fontSize: \"14px\",\n    fontWeight: \"500\",\n    color: \"#757575\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, \"Bill summary\"), __jsx(Box, {\n    fontWeight: \"600\",\n    mt: \"5px\",\n    fontSize: \"25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, plan.name), __jsx(Divider, {\n    my: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    fontWeight: \"500\",\n    fontSize: \"14px\",\n    color: \"#757575\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, \"Total price \", billing_period), __jsx(Box, {\n    fontSize: \"20px\",\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, billing_currency === 'ngn' ? '₦' : '$', ' ', plan.type !== 'enterprise' ? billing_period === 'monthly' ? formatCurrency(plan.price_monthly[billing_currency] / 100) : formatCurrency(plan.price_yearly[billing_currency] / 100) : '💰'), billing_period === 'yearly' && __jsx(Box, {\n    mt: \"15px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    fontWeight: \"500\",\n    fontSize: \"14px\",\n    color: \"#757575\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"Total savings with yearly plan:\"), __jsx(Box, {\n    fontWeight: \"500\",\n    fontSize: \"14px\",\n    color: \"#27c459\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, billing_currency === 'ngn' ? '₦' : '$', ' ', formatCurrency((plan.price_monthly[billing_currency] * 12 - plan.price_yearly[billing_currency]) / 100))), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/component/billing/change-plan/components/stages/checkout.tsx"],"names":["React","useState","Box","Divider","Radio","useToast","formatCurrency","CardItemWrapper","useSelector","selectWalletEmail","selectWalletID","selectProfile","useHistory","usePaystackPayment","ToastBox","Button","CardItem","props","onClick","brand","last4","exp_month","exp_year","isSelected","CheckoutSubscriptionPlan","loading","setLoading","cardPaymentLoading","setCardPaymentLoading","plan","billing_period","billing_currency","cards","selectedCard","setSelectedCard","fetchSubscription","fetchWallet","fetchCards","createSubscription","wallet_email","wallet_id","router_history","toast","first_name","last_name","organisation_id","paystack_config","amount","email","publicKey","process","env","REACT_APP_PAYSTACK_PUBLIC_KEY","label","metadata","refund","save_card","purpose","subscription_plan","initializePayment","handlePaySuccess","setTimeout","push","position","render","onClose","handleCardPayment","res","card","auto_renew","length","map","index","id","name","type","price_monthly","price_yearly"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Divider, Radio, useToast } from '@chakra-ui/core/dist';\nimport { formatCurrency } from '../../../../../../../../utils';\nimport { CardItemWrapper } from '../../component.styles';\nimport { useSelector } from 'react-redux';\nimport { selectWalletEmail, selectWalletID } from '../../../../../../payments/selectors';\nimport { selectProfile } from '../../../../../../../unauthenticated-app/authentication';\nimport { useHistory } from 'react-router-dom';\nimport { usePaystackPayment } from 'react-paystack';\nimport { ToastBox, Button } from '../../../../../../../components';\n\ninterface ItemProps {}\n\nconst CardItem = (props: any) => (\n  <CardItemWrapper onClick={props.onClick}>\n    <Box display=\"flex\" width=\"100%\">\n      <img\n        alt=\"credit card\"\n        className=\"card-logo\"\n        src={`/images/credit-cards/${props.brand}.svg`}\n      />\n      <Box>\n        <Box className=\"text-primary\">{`••••  ${props.last4}`}</Box>\n        <Box className=\"text-secondary\">{`Exp ${props.exp_month}/${props.exp_year}`}</Box>\n      </Box>\n    </Box>\n\n    <Radio isChecked={props.isSelected} onChange={() => {}} />\n  </CardItemWrapper>\n);\n\ninterface Props {\n  plan: any;\n  billing_period: 'monthly' | 'yearly';\n  billing_currency: 'ngn' | 'usd';\n  cards: any[];\n  selectedCard: any;\n  setSelectedCard: Function;\n  fetchSubscription: Function;\n  fetchWallet: Function;\n  fetchCards: Function;\n  createSubscription: Function;\n}\n\nexport const CheckoutSubscriptionPlan = (props: Props) => {\n  const [loading, setLoading] = useState(false);\n  const [cardPaymentLoading, setCardPaymentLoading] = useState(false);\n  const {\n    plan,\n    billing_period,\n    billing_currency,\n    cards,\n    selectedCard,\n    setSelectedCard,\n    fetchSubscription,\n    fetchWallet,\n    fetchCards,\n    createSubscription,\n  } = props;\n\n  const wallet_email = useSelector(selectWalletEmail);\n  const wallet_id = useSelector(selectWalletID);\n\n  const router_history = useHistory();\n\n  const toast = useToast();\n\n  const { first_name, last_name, organisation_id } = useSelector(selectProfile) || {\n    first_name: '',\n    last_name: '',\n  };\n\n  const paystack_config = {\n    amount:\n      billing_period === 'monthly' ? plan['price_monthly']['ngn'] : plan['price_yearly']['ngn'],\n    email: wallet_email ?? '',\n    publicKey: process.env.REACT_APP_PAYSTACK_PUBLIC_KEY,\n    label: `${plan['name']}`,\n    first_name,\n    last_name,\n    metadata: {\n      wallet_id,\n      refund: false,\n      save_card: true,\n      purpose: 'subscription-purchase',\n      subscription_plan: plan['id'],\n      billing_period: billing_period,\n    },\n  };\n\n  // @ts-ignore\n  const initializePayment = usePaystackPayment(paystack_config);\n\n  const handlePaySuccess = () => {\n    setLoading(true);\n    setTimeout(async () => {\n      await fetchSubscription(organisation_id);\n      fetchWallet(organisation_id);\n      fetchCards();\n      setLoading(false);\n      router_history.push('/s/settings/organization/billing');\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            status=\"success\"\n            onClose={onClose}\n            message={`${plan['name']} subscription activated successfully`}\n          />\n        ),\n      });\n    }, 2000);\n  };\n\n  const handleCardPayment = async () => {\n    setCardPaymentLoading(true);\n    const res = await createSubscription({\n      subscription_plan: plan['id'],\n      billing_period: billing_period,\n      card: selectedCard,\n      auto_renew: true,\n    });\n\n    if (res) {\n      fetchWallet(organisation_id);\n      fetchCards();\n      setCardPaymentLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            status=\"success\"\n            onClose={onClose}\n            message={`${plan['name']} subscription activated successfully`}\n          />\n        ),\n      });\n      router_history.push('/s/settings/organization/billing');\n    } else {\n      setCardPaymentLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            onClose={onClose}\n            message=\"Unable to create for subscription, please try another card or payment method\"\n          />\n        ),\n      });\n    }\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" my=\"50px\">\n      <Box maxW=\"450px\" width=\"100%\" display=\"flex\" flexDirection=\"column\">\n        {cards.length > 0 && (\n          <>\n            {cards.map((card: any, index: number) => (\n              <CardItem\n                {...card}\n                key={index}\n                isSelected={selectedCard === card.id}\n                onClick={() => setSelectedCard(card.id)}\n              />\n            ))}\n            <Box mt=\"15px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n              <Button\n                mt=\"20px\"\n                size=\"sm\"\n                isFullWidth\n                variant=\"solid\"\n                variantColor=\"blue\"\n                onClick={handleCardPayment}\n                isLoading={cardPaymentLoading}\n              >\n                Checkout\n              </Button>\n              <Button\n                mt=\"20px\"\n                size=\"sm\"\n                variant=\"link\"\n                variantColor=\"blue\"\n                isLoading={loading}\n                onClick={() => initializePayment(handlePaySuccess)}\n              >\n                Use new payment method\n              </Button>\n            </Box>\n          </>\n        )}\n\n        {cards.length === 0 && (\n          <Box width=\"100%\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" my=\"30px\">\n            <Box fontWeight=\"500\" fontSize=\"18px\">\n              No cards available\n            </Box>\n            <Box\n              fontWeight=\"400\"\n              fontSize=\"14px\"\n              textAlign=\"center\"\n              color=\"#757575\"\n              mt=\"15px\"\n              width=\"80%\"\n            >\n              Looks like you haven't added any cards on Simpu, once you checkout with a new one,\n              you'll be able to use it for other payments right here on Simpu\n            </Box>\n            <Button\n              mt=\"25px\"\n              size=\"sm\"\n              variant=\"solid\"\n              variantColor=\"blue\"\n              isLoading={loading}\n              onClick={() => initializePayment(handlePaySuccess)}\n            >\n              Checkout with new payment method\n            </Button>\n          </Box>\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        width=\"350px\"\n        backgroundColor=\"#FFFFFF\"\n        boxShadow=\"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\"\n        borderRadius=\"20px\"\n        padding=\"30px\"\n        height=\"fit-content\"\n      >\n        <Box fontSize=\"14px\" fontWeight=\"500\" color=\"#757575\">\n          Bill summary\n        </Box>\n        <Box fontWeight=\"600\" mt=\"5px\" fontSize=\"25px\">\n          {plan.name}\n        </Box>\n        <Divider my=\"10px\" />\n        <Box fontWeight=\"500\" fontSize=\"14px\" color=\"#757575\">\n          Total price {billing_period}\n        </Box>\n        <Box fontSize=\"20px\" fontWeight=\"500\">\n          {billing_currency === 'ngn' ? '₦' : '$'}{' '}\n          {plan.type !== 'enterprise'\n            ? billing_period === 'monthly'\n              ? formatCurrency(plan.price_monthly[billing_currency] / 100)\n              : formatCurrency(plan.price_yearly[billing_currency] / 100)\n            : '💰'}\n        </Box>\n\n        {billing_period === 'yearly' && (\n          <Box mt=\"15px\">\n            <Box fontWeight=\"500\" fontSize=\"14px\" color=\"#757575\">\n              Total savings with yearly plan:\n            </Box>\n            <Box fontWeight=\"500\" fontSize=\"14px\" color=\"#27c459\">\n              {billing_currency === 'ngn' ? '₦' : '$'}{' '}\n              {formatCurrency(\n                (plan.price_monthly[billing_currency] * 12 - plan.price_yearly[billing_currency]) /\n                  100,\n              )}\n            </Box>\n          </Box>\n        )}\n\n        <Box></Box>\n      </Box>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}