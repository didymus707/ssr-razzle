{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/conversation/ConnectionWarningPromptModal.tsx\";\nvar __jsx = React.createElement;\nimport { Box, ModalBody, Stack, useToast } from '@chakra-ui/core';\nimport { BodyText, Button, ModalContainer, SmallText, ToastBox } from 'app/components';\nimport React, { useState } from 'react';\nimport { prompts } from '../..';\nimport { useHere as onUseCredentialHere } from 'app/authenticated-app/channels';\nimport { useInbox } from '../Provider';\nexport const ConnectionWarningPromptModal = props => {\n  const {\n    isOpen,\n    onClose,\n    credentialsWithIssue\n  } = props;\n  return __jsx(ModalContainer, {\n    title: \"Whatsapp connection errors\",\n    size: \"sm\",\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(SmallText, {\n    pb: \"1.5rem\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"One or more of your whatsapp accounts have been disconnected\"), credentialsWithIssue === null || credentialsWithIssue === void 0 ? void 0 : credentialsWithIssue.map(channel => __jsx(PromptItem, {\n    channel: channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst PromptItem = props => {\n  const {\n    channel\n  } = props;\n  const {\n    status,\n    user,\n    uuid\n  } = channel;\n  const {\n    platform_name,\n    platform_nick\n  } = user;\n  const {\n    text = '',\n    btn = ''\n  } = prompts[status] || {};\n  const {\n    0: isConnecting,\n    1: setIsConnecting\n  } = useState(false);\n  const toast = useToast();\n  const {\n    onOpenWhatsappModal,\n    setQrCodeChannelId\n  } = useInbox();\n  let onClick = undefined;\n\n  const handleUseHere = async () => {\n    try {\n      setIsConnecting(true);\n      await onUseCredentialHere({\n        credentialID: uuid\n      });\n      setIsConnecting(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Channel reconnection successful\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        })\n      });\n    } catch (error) {\n      setIsConnecting(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  };\n\n  switch (status) {\n    case 'replaced':\n      onClick = handleUseHere;\n      break;\n\n    case 'invalid_token':\n      onClick = () => {\n        setQrCodeChannelId(user.channel_id);\n        onOpenWhatsappModal();\n      };\n\n      break;\n\n    default:\n      onClick = undefined;\n      break;\n  }\n\n  return __jsx(Stack, {\n    pb: \"1.5rem\",\n    isInline: true,\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(BodyText, {\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, platform_name !== null && platform_name !== void 0 ? platform_name : platform_nick), __jsx(SmallText, {\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, text)), btn && __jsx(Button, {\n    size: \"sm\",\n    width: \"120px\",\n    onClick: onClick,\n    variantColor: \"blue\",\n    isLoading: isConnecting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, btn));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/conversation/ConnectionWarningPromptModal.tsx"],"names":["Box","ModalBody","Stack","useToast","BodyText","Button","ModalContainer","SmallText","ToastBox","React","useState","prompts","useHere","onUseCredentialHere","useInbox","ConnectionWarningPromptModal","props","isOpen","onClose","credentialsWithIssue","map","channel","PromptItem","status","user","uuid","platform_name","platform_nick","text","btn","isConnecting","setIsConnecting","toast","onOpenWhatsappModal","setQrCodeChannelId","onClick","undefined","handleUseHere","credentialID","position","render","error","message","channel_id"],"mappings":"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","sourcesContent":["import { Box, ModalBody, Stack, useToast } from '@chakra-ui/core';\nimport {\n  BodyText,\n  Button,\n  ModalContainer,\n  ModalContainerOptions,\n  SmallText,\n  ToastBox,\n} from 'app/components';\nimport React, { useState } from 'react';\nimport { prompts } from '../..';\nimport { useHere as onUseCredentialHere } from 'app/authenticated-app/channels';\nimport { UserChannelSchema } from '../../inbox.types';\nimport { useInbox } from '../Provider';\nimport { ConnectionWarningPromptProps } from './ConnectionWarningPrompt';\n\nexport type ConnectionWarningPromptModalProps = ModalContainerOptions & {\n  credentialsWithIssue: ConnectionWarningPromptProps['credentialsWithIssue'];\n};\n\nexport const ConnectionWarningPromptModal = (props: ConnectionWarningPromptModalProps) => {\n  const { isOpen, onClose, credentialsWithIssue } = props;\n\n  return (\n    <ModalContainer title=\"Whatsapp connection errors\" size=\"sm\" isOpen={isOpen} onClose={onClose}>\n      <ModalBody>\n        <SmallText pb=\"1.5rem\" color=\"gray.500\">\n          One or more of your whatsapp accounts have been disconnected\n        </SmallText>\n        {credentialsWithIssue?.map(channel => (\n          <PromptItem channel={channel} />\n        ))}\n      </ModalBody>\n    </ModalContainer>\n  );\n};\n\nconst PromptItem = (props: { channel: UserChannelSchema }) => {\n  const { channel } = props;\n  const { status, user, uuid } = channel;\n  const { platform_name, platform_nick } = user;\n  const { text = '', btn = '' } = prompts[status] || {};\n\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  const toast = useToast();\n  const { onOpenWhatsappModal, setQrCodeChannelId } = useInbox();\n\n  let onClick = undefined;\n\n  const handleUseHere = async () => {\n    try {\n      setIsConnecting(true);\n      await onUseCredentialHere({ credentialID: uuid });\n      setIsConnecting(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox status=\"success\" onClose={onClose} message=\"Channel reconnection successful\" />\n        ),\n      });\n    } catch (error) {\n      setIsConnecting(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n      });\n    }\n  };\n\n  switch (status) {\n    case 'replaced':\n      onClick = handleUseHere;\n      break;\n    case 'invalid_token':\n      onClick = () => {\n        setQrCodeChannelId(user.channel_id);\n        onOpenWhatsappModal();\n      };\n      break;\n    default:\n      onClick = undefined;\n      break;\n  }\n\n  return (\n    <Stack pb=\"1.5rem\" isInline justifyContent=\"space-between\">\n      <Box flex={1}>\n        <BodyText color=\"gray.900\">{platform_name ?? platform_nick}</BodyText>\n        <SmallText color=\"gray.500\">{text}</SmallText>\n      </Box>\n      {btn && (\n        <Button\n          size=\"sm\"\n          width=\"120px\"\n          onClick={onClick}\n          variantColor=\"blue\"\n          isLoading={isConnecting}\n        >\n          {btn}\n        </Button>\n      )}\n    </Stack>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}