{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"key\", \"channel\"];\nimport { buildConversationUrl, formUrlQueryFromObject } from '../../../utils';\nexport const getErrorMessage = (name, code) => {\n  const messages = {\n    600: `Failed to connect to ${name}. Please try again`,\n    601: `The ${`${name} `}account has already been added by another user`,\n    602: 'it seems acct has been connected before'\n  };\n  return messages[code || '600'];\n};\nexport const getBtnText = which => {\n  switch (which) {\n    case 'messenger':\n      return 'Install in 15 Mins';\n\n    case 'twitter':\n    case 'sms':\n    case 'voice':\n    case 'phone':\n    case 'whatsapp':\n      return 'Install in 5 Mins';\n\n    case 'instagram':\n      return 'Request for Access';\n\n    default:\n      return 'Coming Soon';\n  }\n};\nexport const getIntegrationUrl = _ref => {\n  let {\n    key,\n    channel\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const {\n    origin,\n    pathname\n  } = window.location;\n  const baseUrl = origin;\n  const success_url = `${baseUrl}/s/inbox/settings/channels/${key}`;\n  const restOfUrl = `auth/channel/${channel}?${formUrlQueryFromObject(_objectSpread(_objectSpread({}, rest), {}, {\n    success_url,\n    is_redirect: true,\n    failure_url: `${origin}${pathname}`\n  }))}`;\n\n  if (true && channel === 'messenger') {\n    return `http://localhost:5556/api/v1/${restOfUrl}`;\n  }\n\n  return buildConversationUrl(restOfUrl);\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/channels/channels.utils.ts"],"names":["buildConversationUrl","formUrlQueryFromObject","getErrorMessage","name","code","messages","getBtnText","which","getIntegrationUrl","key","channel","rest","origin","pathname","window","location","baseUrl","success_url","restOfUrl","is_redirect","failure_url"],"mappings":";;;AAAA,SAASA,oBAAT,EAA+BC,sBAA/B,QAA6D,gBAA7D;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAeC,IAAf,KAAiC;AAC9D,QAAMC,QAAa,GAAG;AACpB,SAAM,wBAAuBF,IAAK,oBADd;AAEpB,SAAM,OAAO,GAAEA,IAAK,GAAG,gDAFH;AAGpB,SAAK;AAHe,GAAtB;AAMA,SAAOE,QAAQ,CAACD,IAAI,IAAI,KAAT,CAAf;AACD,CARM;AAUP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAmB;AAC3C,UAAQA,KAAR;AACE,SAAK,WAAL;AACE,aAAO,oBAAP;;AAEF,SAAK,SAAL;AACA,SAAK,KAAL;AACA,SAAK,OAAL;AACA,SAAK,OAAL;AACA,SAAK,UAAL;AACE,aAAO,mBAAP;;AAEF,SAAK,WAAL;AACE,aAAO,oBAAP;;AAEF;AACE,aAAO,aAAP;AAfJ;AAiBD,CAlBM;AAoBP,OAAO,MAAMC,iBAAiB,GAAG,QAS3B;AAAA,MAT4B;AAChCC,IAAAA,GADgC;AAEhCC,IAAAA;AAFgC,GAS5B;AAAA,MANDC,IAMC;;AACJ,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBC,MAAM,CAACC,QAApC;AACA,QAAMC,OAAO,GAAGJ,MAAhB;AACA,QAAMK,WAAW,GAAI,GAAED,OAAQ,8BAA6BP,GAAI,EAAhE;AACA,QAAMS,SAAS,GAAI,gBAAeR,OAAQ,IAAGT,sBAAsB,iCAC9DU,IAD8D;AAEjEM,IAAAA,WAFiE;AAGjEE,IAAAA,WAAW,EAAE,IAHoD;AAIjEC,IAAAA,WAAW,EAAG,GAAER,MAAO,GAAEC,QAAS;AAJ+B,KAKhE,EALH;;AAOA,MAAI,QAA0CH,OAAO,KAAK,WAA1D,EAAuE;AACrE,WAAQ,gCAA+BQ,SAAU,EAAjD;AACD;;AAED,SAAOlB,oBAAoB,CAACkB,SAAD,CAA3B;AACD,CAzBM","sourcesContent":["import { buildConversationUrl, formUrlQueryFromObject } from '../../../utils';\n\nexport const getErrorMessage = (name: string, code?: string) => {\n  const messages: any = {\n    600: `Failed to connect to ${name}. Please try again`,\n    601: `The ${`${name} `}account has already been added by another user`,\n    602: 'it seems acct has been connected before',\n  };\n\n  return messages[code || '600'];\n};\n\nexport const getBtnText = (which: string) => {\n  switch (which) {\n    case 'messenger':\n      return 'Install in 15 Mins';\n\n    case 'twitter':\n    case 'sms':\n    case 'voice':\n    case 'phone':\n    case 'whatsapp':\n      return 'Install in 5 Mins';\n\n    case 'instagram':\n      return 'Request for Access';\n\n    default:\n      return 'Coming Soon';\n  }\n};\n\nexport const getIntegrationUrl = ({\n  key,\n  channel,\n  ...rest\n}: {\n  key: string;\n  channel: string;\n  organisation_id: string;\n  token: string;\n}) => {\n  const { origin, pathname } = window.location;\n  const baseUrl = origin;\n  const success_url = `${baseUrl}/s/inbox/settings/channels/${key}`;\n  const restOfUrl = `auth/channel/${channel}?${formUrlQueryFromObject({\n    ...rest,\n    success_url,\n    is_redirect: true,\n    failure_url: `${origin}${pathname}`,\n  })}`;\n\n  if (process.env.NODE_ENV === 'development' && channel === 'messenger') {\n    return `http://localhost:5556/api/v1/${restOfUrl}`;\n  }\n\n  return buildConversationUrl(restOfUrl);\n};\n"]},"metadata":{},"sourceType":"module"}