{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/channels/channels.component.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Icon, SimpleGrid, Stack, Text } from '@chakra-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport { ContentWrapper, Search } from '../../components';\nimport { Wrapper } from '../lists/lists.styles';\nimport { fetchSupportedChannels } from './channel.thunks';\nimport { appCategories, getCategoryDetail, getErrorFromQuery } from './channels.data';\nimport { AppItem, ErrorModal } from './components';\nexport function ChannelsComponents({\n  metaData = []\n}) {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    0: isModalOpen,\n    1: setIsModalOpen\n  } = useState(false);\n  const {\n    0: selectedCategory,\n    1: setSelectedCategory\n  } = useState('All');\n  const {\n    0: details,\n    1: setDetails\n  } = useState(getCategoryDetail(selectedCategory));\n  const {\n    0: errorDetail,\n    1: setErrorDetail\n  } = useState({\n    title: '',\n    description: ''\n  });\n\n  const onSearch = search => {\n    if (search.length === 0) {\n      return setDetails(getCategoryDetail(selectedCategory));\n    }\n\n    setDetails(getCategoryDetail('Search', search));\n  };\n\n  const onCategoryClick = item => {\n    setSelectedCategory(item);\n    setDetails(getCategoryDetail(item));\n  };\n\n  useEffect(() => {\n    dispatch(fetchSupportedChannels()); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const {\n      search\n    } = location;\n\n    if (search) {\n      const error = getErrorFromQuery(search);\n      error && setErrorDetail(error);\n      error.description && setIsModalOpen(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [location.search]);\n  return __jsx(ContentWrapper, {\n    paddingBottom: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"side-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    className: \"search-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(Search, {\n    width: \"100%\",\n    onChange: onSearch,\n    placeholder: \"Search\",\n    marginBottom: ['0.5rem', 0, 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), ['All', ...Object.keys(appCategories)].map(item => __jsx(Box, {\n    key: item,\n    onClick: () => onCategoryClick(item),\n    className: `option-item ${selectedCategory === item && 'active'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: item === 'All' ? 'campaign-all' : item,\n    size: \"14px\",\n    marginRight: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), __jsx(Text, {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, item === 'All' ? item : appCategories[item])))), __jsx(Box, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: \"2.1875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, details.map(({\n    title,\n    items\n  }) => __jsx(Box, {\n    key: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, title)), __jsx(SimpleGrid, {\n    columns: 3,\n    spacing: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, items.map(item => __jsx(NavLink, {\n    key: item,\n    to: `/s/integrations/${item}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, __jsx(AppItem, {\n    name: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }))))))))), __jsx(ErrorModal, _extends({}, errorDetail, {\n    isOpen: isModalOpen,\n    setIsOpen: setIsModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/channels/channels.component.tsx"],"names":["Box","Icon","SimpleGrid","Stack","Text","React","useEffect","useState","useDispatch","useLocation","NavLink","ContentWrapper","Search","Wrapper","fetchSupportedChannels","appCategories","getCategoryDetail","getErrorFromQuery","AppItem","ErrorModal","ChannelsComponents","metaData","dispatch","location","isModalOpen","setIsModalOpen","selectedCategory","setSelectedCategory","details","setDetails","errorDetail","setErrorDetail","title","description","onSearch","search","length","onCategoryClick","item","error","Object","keys","map","items"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,IAAvC,QAAmD,iBAAnD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,kBAAvC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,sBAAT,QAAuC,kBAAvC;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,iBAA3C,QAAoE,iBAApE;AAEA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,cAApC;AAMA,OAAO,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,QAAQ,GAAG;AAAb,CAA5B,EAA6D;AAClE,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAA,OAACe,WAAD;AAAA,OAAcC;AAAd,MAAgClB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACmB,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CpB,QAAQ,CAAiB,KAAjB,CAAxD;AACA,QAAM;AAAA,OAACqB,OAAD;AAAA,OAAUC;AAAV,MAAwBtB,QAAQ,CAGjCS,iBAAiB,CAACU,gBAAD,CAHgB,CAAtC;AAIA,QAAM;AAAA,OAACI,WAAD;AAAA,OAAcC;AAAd,MAAgCxB,QAAQ,CAAiD;AAC7FyB,IAAAA,KAAK,EAAE,EADsF;AAClFC,IAAAA,WAAW,EAAE;AADqE,GAAjD,CAA9C;;AAIA,QAAMC,QAAQ,GAAIC,MAAD,IAAoB;AACnC,QAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACvB,aAAOP,UAAU,CAACb,iBAAiB,CAACU,gBAAD,CAAlB,CAAjB;AACD;;AAEDG,IAAAA,UAAU,CAACb,iBAAiB,CAAC,QAAD,EAAWmB,MAAX,CAAlB,CAAV;AACD,GAND;;AAQA,QAAME,eAAe,GAAIC,IAAD,IAA0B;AAChDX,IAAAA,mBAAmB,CAACW,IAAD,CAAnB;AACAT,IAAAA,UAAU,CAACb,iBAAiB,CAACsB,IAAD,CAAlB,CAAV;AACD,GAHD;;AAKAhC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACR,sBAAsB,EAAvB,CAAR,CADc,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAE6B,MAAAA;AAAF,QAAaZ,QAAnB;;AACA,QAAIY,MAAJ,EAAY;AACV,YAAMI,KAAK,GAAGtB,iBAAiB,CAACkB,MAAD,CAA/B;AACAI,MAAAA,KAAK,IAAIR,cAAc,CAACQ,KAAD,CAAvB;AACAA,MAAAA,KAAK,CAACN,WAAN,IAAqBR,cAAc,CAAC,IAAD,CAAnC;AACD,KANa,CAOhB;;AACC,GARQ,EAQN,CAACF,QAAQ,CAACY,MAAV,CARM,CAAT;AAUA,SACE,MAAC,cAAD;AAAgB,IAAA,aAAa,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,QAAQ,EAAED,QAFZ;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,YAAY,EAAE,CAAC,QAAD,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUG,CAAC,KAAD,EAAQ,GAAGM,MAAM,CAACC,IAAP,CAAY1B,aAAZ,CAAX,EAAuC2B,GAAvC,CAA4CJ,IAAD,IAC1C,MAAC,GAAD;AACE,IAAA,GAAG,EAAEA,IADP;AAEE,IAAA,OAAO,EAAE,MAAMD,eAAe,CAACC,IAAD,CAFhC;AAGE,IAAA,SAAS,EAAG,eAAcZ,gBAAgB,KAAKY,IAArB,IAA6B,QAAS,EAHlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,KAAT,GAAiB,cAAjB,GAAkCA,IAD1C;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,KAAK,KAAT,GAAiBA,IAAjB,GAAyBvB,aAAD,CAAuBuB,IAAvB,CAD3B,CAVF,CADD,CAVH,CADF,EA6BE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,OAAO,CAACc,GAAR,CAAY,CAAC;AAAEV,IAAAA,KAAF;AAASW,IAAAA;AAAT,GAAD,KACX,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEX,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBA,KAAzB,CADF,CADF,EAKE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,KAAK,CAACD,GAAN,CAAWJ,IAAD,IACT,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAd;AAAoB,IAAA,EAAE,EAAG,mBAAkBA,IAAK,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CALF,CADD,CADH,CADF,CA7BF,CADF,EAmDE,MAAC,UAAD,eAAgBR,WAAhB;AAA6B,IAAA,MAAM,EAAEN,WAArC;AAAkD,IAAA,SAAS,EAAEC,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnDF,CADF;AAuDD","sourcesContent":["import { Box, Icon, SimpleGrid, Stack, Text } from '@chakra-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport { ContentWrapper, Search } from '../../components';\nimport { Wrapper } from '../lists/lists.styles';\nimport { fetchSupportedChannels } from './channel.thunks';\nimport { appCategories, getCategoryDetail, getErrorFromQuery } from './channels.data';\nimport { ChannelProps, ErrorModalProps } from './channels.types';\nimport { AppItem, ErrorModal } from './components';\n\ntype CategoriesType = 'All' | 'Social Channels' | 'Simpu Custom Integrations' | 'Payment Integrations' |\n'eCommerce' | 'Core Banking System' | 'Databases' | 'CRM/CDP' |\n'Marketing Tools' | 'Tag Managers';\n\nexport function ChannelsComponents({ metaData = [] }: ChannelProps) {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState<CategoriesType>('All');\n  const [details, setDetails] = useState<{\n    title: string;\n    items: string[];\n  }[]>(getCategoryDetail(selectedCategory));\n  const [errorDetail, setErrorDetail] = useState<Pick<ErrorModalProps, 'title' | 'description'>>({\n    title: '', description: ''\n  });\n\n  const onSearch = (search: string) => {\n    if (search.length === 0) {\n      return setDetails(getCategoryDetail(selectedCategory));\n    }\n\n    setDetails(getCategoryDetail('Search', search));\n  }\n\n  const onCategoryClick = (item: CategoriesType) => {\n    setSelectedCategory(item);\n    setDetails(getCategoryDetail(item));\n  }\n\n  useEffect(() => {\n    dispatch(fetchSupportedChannels());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const { search } = location;\n    if (search) {\n      const error = getErrorFromQuery(search);\n      error && setErrorDetail(error);\n      error.description && setIsModalOpen(true)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.search]);\n\n  return (\n    <ContentWrapper paddingBottom=\"1rem\">\n      <Wrapper>\n        <Box className=\"side-bar\">\n          <Box className=\"search-section\">\n            <Search\n              width=\"100%\"\n              onChange={onSearch}\n              placeholder=\"Search\"\n              marginBottom={['0.5rem', 0, 0, 0]}\n            />\n          </Box>\n\n          {['All', ...Object.keys(appCategories)].map((item) => (\n            <Box\n              key={item}\n              onClick={() => onCategoryClick(item as CategoriesType)}\n              className={`option-item ${selectedCategory === item && 'active'}`}\n            >\n              <Icon\n                name={item === 'All' ? 'campaign-all' : item}\n                size=\"14px\"\n                marginRight=\"10px\"\n              />\n              <Text className=\"text\">\n                {item === 'All' ? item : (appCategories as any)[item]}\n              </Text>\n            </Box>\n          ))}\n        </Box>\n\n        <Box className=\"content\">\n          <Stack spacing=\"2.1875rem\">\n            {details.map(({ title, items }) => (\n              <Box key={title}>\n                <Box className=\"section-title\">\n                  <Text className=\"title\">{title}</Text>\n                </Box>\n\n                <SimpleGrid columns={3} spacing=\"1rem\">\n                  {items.map((item) => (\n                    <NavLink key={item} to={`/s/integrations/${item}`}>\n                      <AppItem name={item} />\n                    </NavLink>\n                  ))}\n                </SimpleGrid>\n              </Box>\n            ))}\n          </Stack>\n        </Box>\n      </Wrapper>\n\n      <ErrorModal {...errorDetail} isOpen={isModalOpen} setIsOpen={setIsModalOpen} />\n    </ContentWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}