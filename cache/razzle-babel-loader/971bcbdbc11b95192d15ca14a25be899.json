{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/integrations.container.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { IntegrationsComponent } from \"./integrations.component\";\nimport { setChannel, fetchSupportedCountries, fetchRandomPhone, setRandomPhone, resetRandomPhone, searchPhones, resetPhones, setUseCaseData, resetUseCaseData, buyPhone, fetchFBPages, selectAcctItem, fetchTemp, forceConnect } from \"./integrations.reducer\";\nimport { fetchSupportedChannels } from '../channels';\n\nconst mapState = state => ({\n  user: state.auth.user,\n  profile: state.auth.profile,\n  organisations: state.auth.organisations,\n  channel: state.integration.channel,\n  supportedCountries: state.integration.supported_countries,\n  randomPhone: state.integration.random_phone,\n  selectedPhoneTypes: state.integration.selected_phone_types,\n  phones: state.integration.phones,\n  useCaseData: state.integration.use_case_data\n});\n\nexport const stateConnector = connect(mapState, {\n  setChannel,\n  fetchSupportedCountries,\n  fetchRandomPhone,\n  setRandomPhone,\n  resetRandomPhone,\n  searchPhones,\n  resetPhones,\n  setUseCaseData,\n  resetUseCaseData,\n  buyPhone,\n  fetchSupportedChannels,\n  fetchFBPages,\n  selectAcctItem,\n  fetchTemp,\n  forceConnect\n});\nexport function IntegrationsContainer(props) {\n  return __jsx(IntegrationsComponent, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }));\n}\nexport const Integrations = stateConnector(IntegrationsContainer);","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/integrations.container.tsx"],"names":["React","connect","IntegrationsComponent","setChannel","fetchSupportedCountries","fetchRandomPhone","setRandomPhone","resetRandomPhone","searchPhones","resetPhones","setUseCaseData","resetUseCaseData","buyPhone","fetchFBPages","selectAcctItem","fetchTemp","forceConnect","fetchSupportedChannels","mapState","state","user","auth","profile","organisations","channel","integration","supportedCountries","supported_countries","randomPhone","random_phone","selectedPhoneTypes","selected_phone_types","phones","useCaseData","use_case_data","stateConnector","IntegrationsContainer","props","Integrations"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SACEC,UADF,EACcC,uBADd,EACuCC,gBADvC,EACyDC,cADzD,EAEEC,gBAFF,EAEoBC,YAFpB,EAEkCC,WAFlC,EAE+CC,cAF/C,EAE+DC,gBAF/D,EAGEC,QAHF,EAGYC,YAHZ,EAG0BC,cAH1B,EAG0CC,SAH1C,EAGqDC,YAHrD,QAIO,wBAJP;AAKA,SAASC,sBAAT,QAAuC,aAAvC;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,KAAuB;AACtCC,EAAAA,IAAI,EAAED,KAAK,CAACE,IAAN,CAAWD,IADqB;AAEtCE,EAAAA,OAAO,EAAEH,KAAK,CAACE,IAAN,CAAWC,OAFkB;AAGtCC,EAAAA,aAAa,EAAEJ,KAAK,CAACE,IAAN,CAAWE,aAHY;AAItCC,EAAAA,OAAO,EAAEL,KAAK,CAACM,WAAN,CAAkBD,OAJW;AAKtCE,EAAAA,kBAAkB,EAAEP,KAAK,CAACM,WAAN,CAAkBE,mBALA;AAMtCC,EAAAA,WAAW,EAAET,KAAK,CAACM,WAAN,CAAkBI,YANO;AAOtCC,EAAAA,kBAAkB,EAAEX,KAAK,CAACM,WAAN,CAAkBM,oBAPA;AAQtCC,EAAAA,MAAM,EAAEb,KAAK,CAACM,WAAN,CAAkBO,MARY;AAStCC,EAAAA,WAAW,EAAEd,KAAK,CAACM,WAAN,CAAkBS;AATO,CAAvB,CAAjB;;AAYA,OAAO,MAAMC,cAAc,GAAGlC,OAAO,CAACiB,QAAD,EAAW;AAC9Cf,EAAAA,UAD8C;AAE9CC,EAAAA,uBAF8C;AAG9CC,EAAAA,gBAH8C;AAI9CC,EAAAA,cAJ8C;AAK9CC,EAAAA,gBAL8C;AAM9CC,EAAAA,YAN8C;AAO9CC,EAAAA,WAP8C;AAQ9CC,EAAAA,cAR8C;AAS9CC,EAAAA,gBAT8C;AAU9CC,EAAAA,QAV8C;AAW9CK,EAAAA,sBAX8C;AAY9CJ,EAAAA,YAZ8C;AAa9CC,EAAAA,cAb8C;AAc9CC,EAAAA,SAd8C;AAe9CC,EAAAA;AAf8C,CAAX,CAA9B;AAkBP,OAAO,SAASoB,qBAAT,CAA+BC,KAA/B,EAAwD;AAC7D,SAAO,MAAC,qBAAD,eAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;AAED,OAAO,MAAMC,YAAY,GAAGH,cAAc,CAACC,qBAAD,CAAnC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../../root';\nimport { IntegrationsComponent } from \"./integrations.component\";\nimport {\n  setChannel, fetchSupportedCountries, fetchRandomPhone, setRandomPhone,\n  resetRandomPhone, searchPhones, resetPhones, setUseCaseData, resetUseCaseData,\n  buyPhone, fetchFBPages, selectAcctItem, fetchTemp, forceConnect\n} from \"./integrations.reducer\";\nimport { fetchSupportedChannels } from '../channels';\nimport { IntegrationProps } from './integrations.type';\n\nconst mapState = (state: RootState) => ({\n  user: state.auth.user,\n  profile: state.auth.profile,\n  organisations: state.auth.organisations,\n  channel: state.integration.channel,\n  supportedCountries: state.integration.supported_countries,\n  randomPhone: state.integration.random_phone,\n  selectedPhoneTypes: state.integration.selected_phone_types,\n  phones: state.integration.phones,\n  useCaseData: state.integration.use_case_data,\n});\n\nexport const stateConnector = connect(mapState, {\n  setChannel,\n  fetchSupportedCountries,\n  fetchRandomPhone,\n  setRandomPhone,\n  resetRandomPhone,\n  searchPhones,\n  resetPhones,\n  setUseCaseData,\n  resetUseCaseData,\n  buyPhone,\n  fetchSupportedChannels,\n  fetchFBPages,\n  selectAcctItem,\n  fetchTemp,\n  forceConnect\n});\n\nexport function IntegrationsContainer(props: IntegrationProps) {\n  return <IntegrationsComponent {...props} />\n}\n\nexport const Integrations = stateConnector(IntegrationsContainer);\n"]},"metadata":{},"sourceType":"module"}