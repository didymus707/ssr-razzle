{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Table/table.ui.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box } from '@chakra-ui/core';\nimport { useTable, useRowSelect, useBlockLayout } from 'react-table';\nimport { TableWrapper as Wrapper } from './table.styles';\nexport const Table = ({\n  columns,\n  data,\n  onRowClick\n}) => {\n  const defaultColumn = React.useMemo(() => ({\n    width: 150\n  }), []);\n  const {\n    rows,\n    prepareRow,\n    headerGroups,\n    getTableProps,\n    getTableBodyProps\n  } = useTable({\n    data,\n    columns,\n    defaultColumn\n  }, useBlockLayout, useRowSelect, hooks => {\n    hooks.visibleColumns.push(columns => columns);\n  });\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", _extends({}, getTableProps(), {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"thead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, headerGroups.map(headerGroup => __jsx(\"div\", _extends({}, headerGroup.getHeaderGroupProps(), {\n    className: \"tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), headerGroup.headers.map(column => __jsx(\"div\", _extends({}, column.getHeaderProps(), {\n    className: \"th\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), column.render('Header')))))), __jsx(\"div\", _extends({}, getTableBodyProps(), {\n    className: \"tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), rows.map(row => {\n    prepareRow(row);\n    return __jsx(Box, _extends({}, row.getRowProps(), {\n      className: \"tr\",\n      cursor: \"pointer\",\n      onClick: () => {\n        if (onRowClick) onRowClick(row.original);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }), row.cells.map(cell => {\n      return __jsx(\"div\", _extends({}, cell.getCellProps(), {\n        className: \"td\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }), cell.render('Cell'));\n    }));\n  }))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Table/table.ui.tsx"],"names":["React","Box","useTable","useRowSelect","useBlockLayout","TableWrapper","Wrapper","Table","columns","data","onRowClick","defaultColumn","useMemo","width","rows","prepareRow","headerGroups","getTableProps","getTableBodyProps","hooks","visibleColumns","push","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","original","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,cAAjC,QAAuD,aAAvD;AACA,SAASC,YAAY,IAAIC,OAAzB,QAAwC,gBAAxC;AAQA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA;AAAjB,CAAD,KAA0C;AAC7D,QAAMC,aAAa,GAAGX,KAAK,CAACY,OAAN,CACpB,OAAO;AACLC,IAAAA,KAAK,EAAE;AADF,GAAP,CADoB,EAIpB,EAJoB,CAAtB;AAOA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA,aAAlC;AAAiDC,IAAAA;AAAjD,MAA4EhB,QAAQ,CACxF;AACEO,IAAAA,IADF;AAEED,IAAAA,OAFF;AAGEG,IAAAA;AAHF,GADwF,EAMxFP,cANwF,EAOxFD,YAPwF,EAQxFgB,KAAK,IAAI;AACPA,IAAAA,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0Bb,OAAO,IAAIA,OAArC;AACD,GAVuF,CAA1F;AAaA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0BAASS,aAAa,EAAtB;AAA0B,IAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,YAAY,CAACM,GAAb,CAAkBC,WAAD,IAChB,0BAASA,WAAW,CAACC,mBAAZ,EAAT;AAA4C,IAAA,SAAS,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,IACvB,0BAASA,MAAM,CAACC,cAAP,EAAT;AAAkC,IAAA,SAAS,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,MAAM,CAACE,MAAP,CAAc,QAAd,CADH,CADD,CADH,CADD,CADH,CADF,EAaE,0BAASV,iBAAiB,EAA1B;AAA8B,IAAA,SAAS,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,IAAI,CAACQ,GAAL,CAAUO,GAAD,IAAc;AACtBd,IAAAA,UAAU,CAACc,GAAD,CAAV;AACA,WACE,MAAC,GAAD,eACMA,GAAG,CAACC,WAAJ,EADN;AAEE,MAAA,SAAS,EAAC,IAFZ;AAGE,MAAA,MAAM,EAAC,SAHT;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIpB,UAAJ,EAAgBA,UAAU,CAACmB,GAAG,CAACE,QAAL,CAAV;AACjB,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAeW,IAAD,IAAe;AAC5B,aACE,0BAASA,IAAI,CAACC,YAAL,EAAT;AAA8B,QAAA,SAAS,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGD,IAAI,CAACL,MAAL,CAAY,MAAZ,CADH,CADF;AAKD,KANA,CARH,CADF;AAkBD,GApBA,CADH,CAbF,CADF,CADF;AAyCD,CA9DM","sourcesContent":["import React from 'react';\nimport { Box } from '@chakra-ui/core';\nimport { useTable, useRowSelect, useBlockLayout } from 'react-table';\nimport { TableWrapper as Wrapper } from './table.styles';\n\ninterface Props {\n  columns: [];\n  data: [];\n  onRowClick: Function;\n}\n\nexport const Table = ({ columns, data, onRowClick }: Props) => {\n  const defaultColumn = React.useMemo(\n    () => ({\n      width: 150,\n    }),\n    [],\n  );\n\n  const { rows, prepareRow, headerGroups, getTableProps, getTableBodyProps }: any = useTable(\n    {\n      data,\n      columns,\n      defaultColumn,\n    },\n    useBlockLayout,\n    useRowSelect,\n    hooks => {\n      hooks.visibleColumns.push(columns => columns);\n    },\n  );\n\n  return (\n    <Wrapper>\n      <div {...getTableProps()} className=\"table\">\n        <div className=\"thead\">\n          {headerGroups.map((headerGroup: any) => (\n            <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\n              {headerGroup.headers.map((column: any) => (\n                <div {...column.getHeaderProps()} className=\"th\">\n                  {column.render('Header')}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n\n        <div {...getTableBodyProps()} className=\"tbody\">\n          {rows.map((row: any) => {\n            prepareRow(row);\n            return (\n              <Box\n                {...row.getRowProps()}\n                className=\"tr\"\n                cursor=\"pointer\"\n                onClick={() => {\n                  if (onRowClick) onRowClick(row.original);\n                }}\n              >\n                {row.cells.map((cell: any) => {\n                  return (\n                    <div {...cell.getCellProps()} className=\"td\">\n                      {cell.render('Cell')}\n                    </div>\n                  );\n                })}\n              </Box>\n            );\n          })}\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}