{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import * as yup from 'yup'\nimport { validationSchema } from './group.components'\nimport { LoadingActions } from '../../../../../hooks'\n\nexport interface GroupSchema {\n  id?: string\n  name: string\n  created_datetime?: string\n  updated_datetime?: string\n}\n\nexport interface GroupItemProps {\n  group: GroupSchema\n  isActive?: boolean\n  onEdit?: () => void\n  onClick?: () => void\n  onDelete?: () => void\n}\n\nexport interface GroupsDropdownProps {\n  data: GroupSchema[]\n  isLoading?: boolean\n  children: React.ReactNode\n  activeGroup?: GroupSchema\n  onFetchTableRows?: () => void\n  onClick: (group: GroupSchema) => void\n  loadingDispatch: React.Dispatch<LoadingActions>\n  onEdit?: ({ id, name }: GroupSchema, callback: () => void) => Promise<any>\n  onDelete?: (\n    { id }: { id: GroupSchema['id'] },\n    callback: () => void\n  ) => Promise<any>\n}\n\nexport type GroupFormValues = yup.InferType<typeof validationSchema> & {\n  id?: string\n}\n\nexport type GroupModalProps = {\n  title?: string\n  isOpen: boolean\n  onClose: () => void\n  isLoading?: boolean\n  initialValues?: GroupFormValues\n  onSubmit: (values: GroupFormValues, callback: () => void) => void\n}\n"]},"metadata":{},"sourceType":"module"}