{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/dashboard/index.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Heading, PseudoBox, Skeleton, Text, useDisclosure } from '@chakra-ui/core';\nimport { Button, EmptyState } from 'app/components';\nimport React, { useCallback, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useHistory } from 'react-router';\nimport { numberWithCommas } from '../../../../utils';\nimport { CampaignMetaModal, getDashboardData } from '../campaigns';\nimport emptyClipImage from '../campaigns/assets/search-user.svg';\nimport { DashboardTable, DashboardTableItem, DashboardTableLoadingItem, DateFilterDropdown } from './components';\nconst dateFilters = [{\n  label: 'last 7 days',\n  value: 7\n}, {\n  label: 'last 14 days',\n  value: 14\n}, {\n  label: 'last 28 days',\n  value: 28\n}];\nexport const MarketingDashboard = () => {\n  var _campaignData$current, _getCVRComparison, _campaignData$current2, _campaignData$current3, _campaignData$current4, _campaignData$current5, _campaignData$current6, _couponData$current_r, _getCVRComparison2, _couponData$current_r2, _couponData$current_r3, _couponData$current_r4, _couponData$current_r5;\n\n  const history = useHistory();\n  const {\n    isOpen: isCreateCampaignModalOpen,\n    onClose: onCloseCreateCampaignModal,\n    onOpen: onOpenCreateCampaignModal\n  } = useDisclosure();\n  const {\n    0: activeCouponFilter,\n    1: setActiveCouponFilter\n  } = useState(7);\n  const {\n    0: activeCampaignFilter,\n    1: setActiveCampaignFilter\n  } = useState(7);\n  const {\n    data: campaignData,\n    isLoading: isFetchingCampaignData\n  } = useQuery(['marketing-dashboard-campaigns', activeCampaignFilter, 'sms'], () => getDashboardData({\n    period: activeCampaignFilter\n  }));\n  const {\n    data: couponData,\n    isLoading: isFetchingCouponData\n  } = useQuery(['marketing-dashboard-coupons', activeCouponFilter, 'coupon'], () => getDashboardData({\n    period: activeCouponFilter,\n    type: 'coupon'\n  }));\n  const getCVRComparison = useCallback(data => {\n    var _current_reports$aver, _previous_reports$ave;\n\n    const {\n      current_reports = {},\n      previous_reports = {}\n    } = data !== null && data !== void 0 ? data : {};\n    const averageCVRDiff = ((_current_reports$aver = current_reports === null || current_reports === void 0 ? void 0 : current_reports.average_cvr) !== null && _current_reports$aver !== void 0 ? _current_reports$aver : 0) - ((_previous_reports$ave = previous_reports === null || previous_reports === void 0 ? void 0 : previous_reports.average_cvr) !== null && _previous_reports$ave !== void 0 ? _previous_reports$ave : 0);\n    const absoluteAverageCVRDiff = Math.abs(averageCVRDiff);\n\n    if (averageCVRDiff > 0) {\n      return {\n        color: 'green.500',\n        text: `is up ${absoluteAverageCVRDiff.toFixed(1)}%`\n      };\n    }\n\n    if (averageCVRDiff > 0) {\n      return {\n        color: 'red.500',\n        text: `is down ${absoluteAverageCVRDiff.toFixed(1)}%`\n      };\n    }\n\n    return {\n      color: '#4f4f4f',\n      text: `is same`\n    };\n  }, []);\n\n  const handleCreateCouponClick = () => {\n    history.push(`/s/marketing/coupons/new/`);\n  };\n\n  const handleCreateOneTimeCampaign = () => {\n    history.push('/s/marketing/campaigns/new/one-time-campaign');\n  };\n\n  const handleABTestCampaign = () => {\n    history.push('/s/marketing/campaigns/new/ab-test-campaign');\n  };\n\n  const renderCampaignTableItem = (item, index) => {\n    return __jsx(DashboardTableItem, {\n      item: item,\n      key: `${index}`,\n      onClick: () => history.push(`/s/marketing/campaigns/${item.id}/analytics`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const renderCampaignTableLoadingItem = (item, index) => {\n    return __jsx(DashboardTableLoadingItem, {\n      key: `${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    mb: \"2.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    mb: \"1.5rem\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    as: \"h4\",\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Campaigns Sent\"), __jsx(DateFilterDropdown, {\n    filters: dateFilters,\n    onFilterChange: filter => setActiveCampaignFilter(filter.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), __jsx(Button, {\n    size: \"sm\",\n    variantColor: \"blue\",\n    onClick: onOpenCreateCampaignModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Create campaign\")), __jsx(Flex, {\n    mb: \"1.5rem\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, isFetchingCampaignData ? __jsx(Skeleton, {\n    height: \"24px\",\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }) : __jsx(Heading, {\n    as: \"h4\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, numberWithCommas(campaignData === null || campaignData === void 0 ? void 0 : (_campaignData$current = campaignData.current_reports) === null || _campaignData$current === void 0 ? void 0 : _campaignData$current.total_sent)), isFetchingCampaignData ? __jsx(Box, {\n    width: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"80%\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })) : __jsx(Text, {\n    maxW: \"500px\",\n    color: \"#4f4f4f\",\n    fontWeight: \"medium\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Average message conversion rate\", ' ', __jsx(PseudoBox, {\n    as: \"span\",\n    fontWeight: \"bold\",\n    color: (_getCVRComparison = getCVRComparison(campaignData)) === null || _getCVRComparison === void 0 ? void 0 : _getCVRComparison.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, getCVRComparison(campaignData).text), ' ', \"over the last \", activeCampaignFilter, \" days.\")), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, isFetchingCampaignData ? __jsx(Box, {\n    width: \"85px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"100%\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })) : __jsx(React.Fragment, null, __jsx(Text, {\n    fontWeight: 500,\n    color: \"#4f4f4f\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, !!(campaignData !== null && campaignData !== void 0 && (_campaignData$current2 = campaignData.current_reports) !== null && _campaignData$current2 !== void 0 && _campaignData$current2.average_cvr) ? parseFloat(campaignData === null || campaignData === void 0 ? void 0 : (_campaignData$current3 = campaignData.current_reports) === null || _campaignData$current3 === void 0 ? void 0 : _campaignData$current3.average_cvr).toFixed(1) : 0, \"%\"), __jsx(Text, {\n    fontWeight: 500,\n    color: \"#4f4f4f\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Average CVR\")))), isFetchingCampaignData ? __jsx(DashboardTable, {\n    data: Array.from({\n      length: 7\n    }),\n    renderItem: renderCampaignTableLoadingItem,\n    headings: ['title', 'sent', 'delivered', 'ctr', 'cvr'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }) : !!(campaignData !== null && campaignData !== void 0 && (_campaignData$current4 = campaignData.current_reports) !== null && _campaignData$current4 !== void 0 && _campaignData$current4.reports.length) ? __jsx(DashboardTable, {\n    renderItem: renderCampaignTableItem,\n    data: (_campaignData$current5 = campaignData === null || campaignData === void 0 ? void 0 : (_campaignData$current6 = campaignData.current_reports) === null || _campaignData$current6 === void 0 ? void 0 : _campaignData$current6.reports) !== null && _campaignData$current5 !== void 0 ? _campaignData$current5 : [],\n    headings: ['title', 'sent', 'delivered', 'ctr', 'cvr'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }) : __jsx(EmptyState, {\n    py: \"100px\",\n    imageSize: \"120px\",\n    image: emptyClipImage,\n    heading: \"No campaigns created yet\",\n    contentContainerProps: {\n      mt: '1rem'\n    },\n    subheading: \"Send campaigns to your lists, segments or new audiences.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    mb: \"1.5rem\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    as: \"h4\",\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"Coupons Sent\"), __jsx(DateFilterDropdown, {\n    filters: dateFilters,\n    onFilterChange: filter => setActiveCouponFilter(filter.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  })), __jsx(Button, {\n    size: \"sm\",\n    variantColor: \"blue\",\n    onClick: handleCreateCouponClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"Create coupon set\")), __jsx(Flex, {\n    mb: \"1.5rem\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, isFetchingCouponData ? __jsx(Skeleton, {\n    height: \"24px\",\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }) : __jsx(Heading, {\n    as: \"h4\",\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, numberWithCommas(couponData === null || couponData === void 0 ? void 0 : (_couponData$current_r = couponData.current_reports) === null || _couponData$current_r === void 0 ? void 0 : _couponData$current_r.total_sent)), isFetchingCouponData ? __jsx(Box, {\n    width: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"80%\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  })) : __jsx(Text, {\n    maxW: \"500px\",\n    color: \"#4f4f4f\",\n    fontWeight: 500,\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"Average message conversion rate is up\", ' ', __jsx(PseudoBox, {\n    as: \"span\",\n    color: (_getCVRComparison2 = getCVRComparison(couponData)) === null || _getCVRComparison2 === void 0 ? void 0 : _getCVRComparison2.color,\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, getCVRComparison(couponData).text), ' ', \"over the last \", activeCouponFilter, \" days.\")), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, isFetchingCouponData ? __jsx(Box, {\n    width: \"85px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"100%\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }), __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  })) : __jsx(React.Fragment, null, __jsx(Text, {\n    fontWeight: 500,\n    color: \"#4f4f4f\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, !!(couponData !== null && couponData !== void 0 && (_couponData$current_r2 = couponData.current_reports) !== null && _couponData$current_r2 !== void 0 && _couponData$current_r2.average_cvr) ? parseFloat(couponData === null || couponData === void 0 ? void 0 : (_couponData$current_r3 = couponData.current_reports) === null || _couponData$current_r3 === void 0 ? void 0 : _couponData$current_r3.average_cvr).toFixed(1) : 0, \"%\"), __jsx(Text, {\n    fontWeight: 500,\n    color: \"#4f4f4f\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Average CVR\")))), isFetchingCouponData ? __jsx(DashboardTable, {\n    data: Array.from({\n      length: 7\n    }),\n    renderItem: renderCampaignTableLoadingItem,\n    headings: ['title', 'sent', 'delivered', 'ctr', 'cvr'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }) : !!(couponData !== null && couponData !== void 0 && couponData.current_reports.reports.length) ? __jsx(DashboardTable, {\n    renderItem: renderCampaignTableItem,\n    data: (_couponData$current_r4 = couponData === null || couponData === void 0 ? void 0 : (_couponData$current_r5 = couponData.current_reports) === null || _couponData$current_r5 === void 0 ? void 0 : _couponData$current_r5.reports) !== null && _couponData$current_r4 !== void 0 ? _couponData$current_r4 : [],\n    headings: ['title', 'sent', 'delivered', 'ctr', 'cvr'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }) : __jsx(EmptyState, {\n    py: \"100px\",\n    imageSize: \"120px\",\n    image: emptyClipImage,\n    heading: \"No coupons created yet\",\n    contentContainerProps: {\n      mt: '1rem'\n    },\n    subheading: \"Send coupons to your lists, segments or new audiences.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  })), __jsx(CampaignMetaModal, {\n    title: \"Create a campaign\",\n    isOpen: isCreateCampaignModalOpen,\n    onClose: onCloseCreateCampaignModal,\n    options: [{\n      icon: 'single-campaign',\n      title: 'One-time message',\n      caption: 'Keep subscribers engaged and drive revenue by sharing your latest news or promoting a product or sale.',\n      onSelect: handleCreateOneTimeCampaign,\n      showButton: false\n    }, {\n      icon: 'multi-campaign',\n      title: 'A/B test',\n      caption: 'Send up to four variants of a single message, testing text to determine which perform best.',\n      onSelect: handleABTestCampaign,\n      showButton: false\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/dashboard/index.tsx"],"names":["Box","Flex","Heading","PseudoBox","Skeleton","Text","useDisclosure","Button","EmptyState","React","useCallback","useState","useQuery","useHistory","numberWithCommas","CampaignMetaModal","getDashboardData","emptyClipImage","DashboardTable","DashboardTableItem","DashboardTableLoadingItem","DateFilterDropdown","dateFilters","label","value","MarketingDashboard","history","isOpen","isCreateCampaignModalOpen","onClose","onCloseCreateCampaignModal","onOpen","onOpenCreateCampaignModal","activeCouponFilter","setActiveCouponFilter","activeCampaignFilter","setActiveCampaignFilter","data","campaignData","isLoading","isFetchingCampaignData","period","couponData","isFetchingCouponData","type","getCVRComparison","current_reports","previous_reports","averageCVRDiff","average_cvr","absoluteAverageCVRDiff","Math","abs","color","text","toFixed","handleCreateCouponClick","push","handleCreateOneTimeCampaign","handleABTestCampaign","renderCampaignTableItem","item","index","id","renderCampaignTableLoadingItem","filter","total_sent","parseFloat","Array","from","length","reports","mt","icon","title","caption","onSelect","showButton"],"mappings":"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","sourcesContent":["import { Box, Flex, Heading, PseudoBox, Skeleton, Text, useDisclosure } from '@chakra-ui/core';\nimport { Button, EmptyState } from 'app/components';\nimport React, { useCallback, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useHistory } from 'react-router';\nimport { numberWithCommas } from '../../../../utils';\nimport { CampaignMetaModal, getDashboardData } from '../campaigns';\nimport emptyClipImage from '../campaigns/assets/search-user.svg';\nimport {\n  DashboardTable,\n  DashboardTableItem,\n  DashboardTableLoadingItem,\n  DateFilter,\n  DateFilterDropdown,\n} from './components';\n\nconst dateFilters: DateFilter[] = [\n  { label: 'last 7 days', value: 7 },\n  { label: 'last 14 days', value: 14 },\n  { label: 'last 28 days', value: 28 },\n];\n\nexport const MarketingDashboard = () => {\n  const history = useHistory();\n  const {\n    isOpen: isCreateCampaignModalOpen,\n    onClose: onCloseCreateCampaignModal,\n    onOpen: onOpenCreateCampaignModal,\n  } = useDisclosure();\n\n  const [activeCouponFilter, setActiveCouponFilter] = useState(7);\n  const [activeCampaignFilter, setActiveCampaignFilter] = useState(7);\n\n  const { data: campaignData, isLoading: isFetchingCampaignData } = useQuery(\n    ['marketing-dashboard-campaigns', activeCampaignFilter, 'sms'],\n    () => getDashboardData({ period: activeCampaignFilter }),\n  );\n  const { data: couponData, isLoading: isFetchingCouponData } = useQuery(\n    ['marketing-dashboard-coupons', activeCouponFilter, 'coupon'],\n    () => getDashboardData({ period: activeCouponFilter, type: 'coupon' }),\n  );\n\n  const getCVRComparison = useCallback((data: any) => {\n    const { current_reports = {}, previous_reports = {} } = data ?? {};\n    const averageCVRDiff =\n      (current_reports?.average_cvr ?? 0) - (previous_reports?.average_cvr ?? 0);\n    const absoluteAverageCVRDiff = Math.abs(averageCVRDiff);\n    if (averageCVRDiff > 0) {\n      return {\n        color: 'green.500',\n        text: `is up ${absoluteAverageCVRDiff.toFixed(1)}%`,\n      };\n    }\n    if (averageCVRDiff > 0) {\n      return { color: 'red.500', text: `is down ${absoluteAverageCVRDiff.toFixed(1)}%` };\n    }\n    return { color: '#4f4f4f', text: `is same` };\n  }, []);\n\n  const handleCreateCouponClick = () => {\n    history.push(`/s/marketing/coupons/new/`);\n  };\n\n  const handleCreateOneTimeCampaign = () => {\n    history.push('/s/marketing/campaigns/new/one-time-campaign');\n  };\n\n  const handleABTestCampaign = () => {\n    history.push('/s/marketing/campaigns/new/ab-test-campaign');\n  };\n\n  const renderCampaignTableItem = (item: any, index: number) => {\n    return (\n      <DashboardTableItem\n        item={item}\n        key={`${index}`}\n        onClick={() => history.push(`/s/marketing/campaigns/${item.id}/analytics`)}\n      />\n    );\n  };\n\n  const renderCampaignTableLoadingItem = (item: any, index: number) => {\n    return <DashboardTableLoadingItem key={`${index}`} />;\n  };\n\n  return (\n    <Box>\n      <Box mb=\"2.5rem\">\n        <Flex mb=\"1.5rem\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <Heading as=\"h4\" fontSize=\"1.2rem\" fontWeight={600} color=\"black\">\n              Campaigns Sent\n            </Heading>\n            <DateFilterDropdown\n              filters={dateFilters}\n              onFilterChange={filter => setActiveCampaignFilter(filter.value)}\n            />\n          </Box>\n          <Button size=\"sm\" variantColor=\"blue\" onClick={onOpenCreateCampaignModal}>\n            Create campaign\n          </Button>\n        </Flex>\n        <Flex mb=\"1.5rem\" justifyContent=\"space-between\">\n          <Box>\n            {isFetchingCampaignData ? (\n              <Skeleton height=\"24px\" width=\"100px\" />\n            ) : (\n              <Heading as=\"h4\" fontSize=\"1.2rem\" fontWeight=\"bold\" color=\"black\">\n                {numberWithCommas(campaignData?.current_reports?.total_sent)}\n              </Heading>\n            )}\n            {isFetchingCampaignData ? (\n              <Box width=\"400px\">\n                <Skeleton height=\"10px\" width=\"80%\" my=\"8px\" />\n              </Box>\n            ) : (\n              <Text maxW=\"500px\" color=\"#4f4f4f\" fontWeight=\"medium\" fontSize=\"0.875rem\">\n                Average message conversion rate{' '}\n                <PseudoBox\n                  as=\"span\"\n                  fontWeight=\"bold\"\n                  color={getCVRComparison(campaignData)?.color}\n                >\n                  {getCVRComparison(campaignData).text}\n                </PseudoBox>{' '}\n                over the last {activeCampaignFilter} days.\n              </Text>\n            )}\n          </Box>\n          <Box>\n            {isFetchingCampaignData ? (\n              <Box width=\"85px\">\n                <Skeleton height=\"10px\" width=\"100%\" my=\"8px\" />\n                <Skeleton height=\"10px\" width=\"100%\" />\n              </Box>\n            ) : (\n              <>\n                <Text fontWeight={500} color=\"#4f4f4f\" fontSize=\"0.875rem\">\n                  {!!campaignData?.current_reports?.average_cvr\n                    ? parseFloat(campaignData?.current_reports?.average_cvr).toFixed(1)\n                    : 0}\n                  %\n                </Text>\n                <Text fontWeight={500} color=\"#4f4f4f\" fontSize=\"0.875rem\">\n                  Average CVR\n                </Text>\n              </>\n            )}\n          </Box>\n        </Flex>\n        {isFetchingCampaignData ? (\n          <DashboardTable<any>\n            data={Array.from({ length: 7 })}\n            renderItem={renderCampaignTableLoadingItem}\n            headings={['title', 'sent', 'delivered', 'ctr', 'cvr']}\n          />\n        ) : !!campaignData?.current_reports?.reports.length ? (\n          <DashboardTable<any>\n            renderItem={renderCampaignTableItem}\n            data={campaignData?.current_reports?.reports ?? []}\n            headings={['title', 'sent', 'delivered', 'ctr', 'cvr']}\n          />\n        ) : (\n          <EmptyState\n            py=\"100px\"\n            imageSize=\"120px\"\n            image={emptyClipImage}\n            heading=\"No campaigns created yet\"\n            contentContainerProps={{ mt: '1rem' }}\n            subheading=\"Send campaigns to your lists, segments or new audiences.\"\n          />\n        )}\n      </Box>\n      <Box>\n        <Flex mb=\"1.5rem\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <Heading as=\"h4\" fontSize=\"1.2rem\" fontWeight={600} color=\"black\">\n              Coupons Sent\n            </Heading>\n            <DateFilterDropdown\n              filters={dateFilters}\n              onFilterChange={filter => setActiveCouponFilter(filter.value)}\n            />\n          </Box>\n          <Button size=\"sm\" variantColor=\"blue\" onClick={handleCreateCouponClick}>\n            Create coupon set\n          </Button>\n        </Flex>\n        <Flex mb=\"1.5rem\" justifyContent=\"space-between\">\n          <Box>\n            {isFetchingCouponData ? (\n              <Skeleton height=\"24px\" width=\"100px\" />\n            ) : (\n              <Heading as=\"h4\" fontSize=\"1.2rem\" fontWeight={600} color=\"black\">\n                {numberWithCommas(couponData?.current_reports?.total_sent)}\n              </Heading>\n            )}\n            {isFetchingCouponData ? (\n              <Box width=\"400px\">\n                <Skeleton height=\"10px\" width=\"80%\" my=\"8px\" />\n              </Box>\n            ) : (\n              <Text maxW=\"500px\" color=\"#4f4f4f\" fontWeight={500} fontSize=\"0.875rem\">\n                Average message conversion rate is up{' '}\n                <PseudoBox as=\"span\" color={getCVRComparison(couponData)?.color} fontWeight=\"bold\">\n                  {getCVRComparison(couponData).text}\n                </PseudoBox>{' '}\n                over the last {activeCouponFilter} days.\n              </Text>\n            )}\n          </Box>\n          <Box>\n            {isFetchingCouponData ? (\n              <Box width=\"85px\">\n                <Skeleton height=\"10px\" width=\"100%\" my=\"8px\" />\n                <Skeleton height=\"10px\" width=\"100%\" />\n              </Box>\n            ) : (\n              <>\n                <Text fontWeight={500} color=\"#4f4f4f\" fontSize=\"0.875rem\">\n                  {!!couponData?.current_reports?.average_cvr\n                    ? parseFloat(couponData?.current_reports?.average_cvr).toFixed(1)\n                    : 0}\n                  %\n                </Text>\n                <Text fontWeight={500} color=\"#4f4f4f\" fontSize=\"0.875rem\">\n                  Average CVR\n                </Text>\n              </>\n            )}\n          </Box>\n        </Flex>\n        {isFetchingCouponData ? (\n          <DashboardTable<any>\n            data={Array.from({ length: 7 })}\n            renderItem={renderCampaignTableLoadingItem}\n            headings={['title', 'sent', 'delivered', 'ctr', 'cvr']}\n          />\n        ) : !!couponData?.current_reports.reports.length ? (\n          <DashboardTable<any>\n            renderItem={renderCampaignTableItem}\n            data={couponData?.current_reports?.reports ?? []}\n            headings={['title', 'sent', 'delivered', 'ctr', 'cvr']}\n          />\n        ) : (\n          <EmptyState\n            py=\"100px\"\n            imageSize=\"120px\"\n            image={emptyClipImage}\n            heading=\"No coupons created yet\"\n            contentContainerProps={{ mt: '1rem' }}\n            subheading=\"Send coupons to your lists, segments or new audiences.\"\n          />\n        )}\n      </Box>\n      <CampaignMetaModal\n        title=\"Create a campaign\"\n        isOpen={isCreateCampaignModalOpen}\n        onClose={onCloseCreateCampaignModal}\n        options={[\n          {\n            icon: 'single-campaign',\n            title: 'One-time message',\n            caption:\n              'Keep subscribers engaged and drive revenue by sharing your latest news or promoting a product or sale.',\n            onSelect: handleCreateOneTimeCampaign,\n            showButton: false,\n          },\n          {\n            icon: 'multi-campaign',\n            title: 'A/B test',\n            caption:\n              'Send up to four variants of a single message, testing text to determine which perform best.',\n            onSelect: handleABTestCampaign,\n            showButton: false,\n          },\n        ]}\n      />\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}