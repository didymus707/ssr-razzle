{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/messages/SnoozeMenu.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Icon, List, ListIcon, ListItem, Popover, PopoverBody, PopoverContent, PopoverTrigger, Stack } from '@chakra-ui/core';\nimport { Button, Input, XSmallText } from 'app/components';\nimport { addDays, addHours, addWeeks, format, formatDistanceToNowStrict, getDay } from 'date-fns';\nimport React, { useState } from 'react';\nexport const SnoozeMenu = ({\n  onSelectDate\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const open = () => setIsOpen(!isOpen);\n\n  const close = () => setIsOpen(false);\n\n  const handleSelect = value => {\n    onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(value);\n    close();\n  };\n\n  return __jsx(Popover, {\n    isOpen: isOpen,\n    onClose: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    px: \"0\",\n    minW: \"unset\",\n    onClick: open,\n    variant: \"unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    size: \"1.5rem\",\n    color: \"gray.500\",\n    name: \"inbox-snoozed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))), __jsx(PopoverContent, {\n    right: \"0\",\n    zIndex: 10,\n    maxW: \"220px\",\n    borderWidth: \"0\",\n    position: \"absolute\",\n    boxShadow: \"0px 5px 20px rgba(21, 27, 38, 0.08)\",\n    _focus: {\n      boxShadow: '0px 5px 20px rgba(21, 27, 38, 0.08)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(PopoverBody, {\n    px: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    mx: \"0.75rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    mb: \"1rem\",\n    size: \"sm\",\n    rounded: \"0\",\n    borderWidth: \"0\",\n    borderColor: \"gray.200\",\n    borderBottomWidth: \"1px\",\n    placeholder: \"E.g. Tomorrow 10am\",\n    _focus: {\n      borderColor: 'blue.500',\n      borderBottomWidth: '1px'\n    },\n    rightIcon: __jsx(Icon, {\n      size: \"1rem\",\n      color: \"gray.800\",\n      name: \"inbox-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, defaultOptions.map(({\n    value,\n    iconProps,\n    label,\n    caption\n  }, index) => __jsx(ListItem, {\n    px: \"0.75rem\",\n    height: \"2rem\",\n    display: \"flex\",\n    cursor: \"pointer\",\n    alignItems: \"center\",\n    key: `${label}-${index}`,\n    _hover: {\n      bg: 'gray.200'\n    },\n    onClick: () => handleSelect(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, __jsx(Flex, {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    flex: 1,\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, __jsx(ListIcon, {\n    size: \"1rem\",\n    icon: iconProps.name,\n    color: iconProps.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), __jsx(XSmallText, {\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, label)), __jsx(XSmallText, {\n    color: \"gray.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, caption))))))));\n};\n\nconst getDayValue = limit => {\n  const dayOfWeek = getDay(new Date());\n\n  if (dayOfWeek < limit) {\n    return addDays(new Date(), limit - dayOfWeek);\n  } else if (dayOfWeek > limit) {\n    return addDays(new Date(), limit + 1);\n  }\n\n  return addWeeks(new Date(), 1);\n};\n\nconst getAfternoonValue = () => {\n  const currentHour = new Date().getHours();\n\n  if (currentHour >= 0 && currentHour < 12) {\n    return addHours(new Date(), 12 - currentHour);\n  } else if (currentHour >= 12 && currentHour < 17) {\n    return addDays(new Date(), 1);\n  } else if (currentHour >= 17 && currentHour < 24) {\n    return addHours(new Date(), currentHour);\n  }\n\n  return addDays(new Date(), 1);\n};\n\nconst defaultOptions = [{\n  label: 'Later',\n  value: addHours(new Date(), 3),\n  iconProps: {\n    name: 'inbox-later',\n    color: 'blue.500'\n  },\n  caption: formatDistanceToNowStrict(addHours(new Date(), 3), {\n    addSuffix: true\n  })\n}, {\n  label: 'Afternoon',\n  value: getAfternoonValue(),\n  caption: format(getAfternoonValue(), 'EEE do, hh:mm'),\n  iconProps: {\n    name: 'inbox-afternoon',\n    color: '#FFD76E'\n  }\n}, {\n  label: 'Tomorrow',\n  value: addDays(new Date(), 1),\n  caption: format(addDays(new Date(), 1), 'EEE do, hh:mm'),\n  iconProps: {\n    name: 'inbox-tomorrow',\n    color: '#5ACA75'\n  }\n}, {\n  label: 'Friday',\n  value: getDayValue(5),\n  caption: format(getDayValue(5), 'EEE do, hh:mm'),\n  iconProps: {\n    name: 'inbox-friday',\n    color: '#4B9BFF'\n  }\n}, {\n  label: 'Saturday',\n  value: getDayValue(6),\n  caption: format(getDayValue(6), 'EEE do, hh:mm'),\n  iconProps: {\n    name: 'inbox-saturday',\n    color: '#DA1414'\n  }\n}];","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/messages/SnoozeMenu.tsx"],"names":["Box","Flex","Icon","List","ListIcon","ListItem","Popover","PopoverBody","PopoverContent","PopoverTrigger","Stack","Button","Input","XSmallText","addDays","addHours","addWeeks","format","formatDistanceToNowStrict","getDay","React","useState","SnoozeMenu","onSelectDate","isOpen","setIsOpen","open","close","handleSelect","value","boxShadow","borderColor","borderBottomWidth","defaultOptions","map","iconProps","label","caption","index","bg","name","color","getDayValue","limit","dayOfWeek","Date","getAfternoonValue","currentHour","getHours","addSuffix"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Icon,\n  List,\n  ListIcon,\n  ListItem,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Stack,\n} from '@chakra-ui/core';\nimport { Button, Input, XSmallText } from 'app/components';\nimport { addDays, addHours, addWeeks, format, formatDistanceToNowStrict, getDay } from 'date-fns';\nimport React, { useState } from 'react';\n\nexport type SnoozeMenuProps = {\n  onSelectDate?(date: Date): void;\n};\n\nexport const SnoozeMenu = ({ onSelectDate }: SnoozeMenuProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const open = () => setIsOpen(!isOpen);\n  const close = () => setIsOpen(false);\n\n  const handleSelect = (value: Date) => {\n    onSelectDate?.(value);\n    close();\n  };\n\n  return (\n    <Popover isOpen={isOpen} onClose={close}>\n      <PopoverTrigger>\n        <Button px=\"0\" minW=\"unset\" onClick={open} variant=\"unstyled\">\n          <Icon size=\"1.5rem\" color=\"gray.500\" name=\"inbox-snoozed\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent\n        right=\"0\"\n        zIndex={10}\n        maxW=\"220px\"\n        borderWidth=\"0\"\n        position=\"absolute\"\n        boxShadow=\"0px 5px 20px rgba(21, 27, 38, 0.08)\"\n        _focus={{ boxShadow: '0px 5px 20px rgba(21, 27, 38, 0.08)' }}\n      >\n        <PopoverBody px=\"0\">\n          <Box mx=\"0.75rem\">\n            <Input\n              mb=\"1rem\"\n              size=\"sm\"\n              rounded=\"0\"\n              borderWidth=\"0\"\n              borderColor=\"gray.200\"\n              borderBottomWidth=\"1px\"\n              placeholder=\"E.g. Tomorrow 10am\"\n              _focus={{\n                borderColor: 'blue.500',\n                borderBottomWidth: '1px',\n              }}\n              rightIcon={<Icon size=\"1rem\" color=\"gray.800\" name=\"inbox-calendar\" />}\n            />\n          </Box>\n          <List>\n            {defaultOptions.map(({ value, iconProps, label, caption }, index) => (\n              <ListItem\n                px=\"0.75rem\"\n                height=\"2rem\"\n                display=\"flex\"\n                cursor=\"pointer\"\n                alignItems=\"center\"\n                key={`${label}-${index}`}\n                _hover={{ bg: 'gray.200' }}\n                onClick={() => handleSelect(value)}\n              >\n                <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"space-between\">\n                  <Stack flex={1} isInline alignItems=\"center\">\n                    <ListIcon size=\"1rem\" icon={iconProps.name} color={iconProps.color} />\n                    <XSmallText color=\"gray.900\">{label}</XSmallText>\n                  </Stack>\n                  <XSmallText color=\"gray.400\">{caption}</XSmallText>\n                </Flex>\n              </ListItem>\n            ))}\n          </List>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nconst getDayValue = (limit: number) => {\n  const dayOfWeek = getDay(new Date());\n  if (dayOfWeek < limit) {\n    return addDays(new Date(), limit - dayOfWeek);\n  } else if (dayOfWeek > limit) {\n    return addDays(new Date(), limit + 1);\n  }\n  return addWeeks(new Date(), 1);\n};\n\nconst getAfternoonValue = () => {\n  const currentHour = new Date().getHours();\n  if (currentHour >= 0 && currentHour < 12) {\n    return addHours(new Date(), 12 - currentHour);\n  } else if (currentHour >= 12 && currentHour < 17) {\n    return addDays(new Date(), 1);\n  } else if (currentHour >= 17 && currentHour < 24) {\n    return addHours(new Date(), currentHour);\n  }\n  return addDays(new Date(), 1);\n};\n\nconst defaultOptions = [\n  {\n    label: 'Later',\n    value: addHours(new Date(), 3),\n    iconProps: { name: 'inbox-later', color: 'blue.500' },\n    caption: formatDistanceToNowStrict(addHours(new Date(), 3), { addSuffix: true }),\n  },\n  {\n    label: 'Afternoon',\n    value: getAfternoonValue(),\n    caption: format(getAfternoonValue(), 'EEE do, hh:mm'),\n    iconProps: { name: 'inbox-afternoon', color: '#FFD76E' },\n  },\n  {\n    label: 'Tomorrow',\n    value: addDays(new Date(), 1),\n    caption: format(addDays(new Date(), 1), 'EEE do, hh:mm'),\n    iconProps: { name: 'inbox-tomorrow', color: '#5ACA75' },\n  },\n  {\n    label: 'Friday',\n    value: getDayValue(5),\n    caption: format(getDayValue(5), 'EEE do, hh:mm'),\n    iconProps: { name: 'inbox-friday', color: '#4B9BFF' },\n  },\n  {\n    label: 'Saturday',\n    value: getDayValue(6),\n    caption: format(getDayValue(6), 'EEE do, hh:mm'),\n    iconProps: { name: 'inbox-saturday', color: '#DA1414' },\n  },\n];\n"]},"metadata":{},"sourceType":"module"}