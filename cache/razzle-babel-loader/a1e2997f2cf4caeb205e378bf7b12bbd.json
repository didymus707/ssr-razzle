{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/Tags.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Skeleton, Stack, useToast } from '@chakra-ui/core';\nimport { ConfirmModal, ToastBox } from 'app/components';\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { deleteTag, getTags } from '../inbox.service';\nimport { InboxSettingsPage, InboxSettingsPageItem } from './component';\nexport const InboxSettingsTags = () => {\n  const toast = useToast();\n  const match = useRouteMatch();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n  const {\n    isLoading,\n    data: tags\n  } = useQuery('tags', getTags);\n  const {\n    0: tagToDelete,\n    1: setTagToDelete\n  } = useState();\n  const {\n    isLoading: isDeleting,\n    mutate\n  } = useMutation(payload => deleteTag(payload), {\n    onMutate: async payload => {\n      await queryClient.cancelQueries('tags');\n      const previousTags = queryClient.getQueryData('tags');\n      queryClient.setQueryData('tags', old => //@ts-ignore\n      old === null || old === void 0 ? void 0 : old.filter(item => item.uuid !== payload.uuid));\n      return {\n        previousTags\n      };\n    },\n    onSuccess: () => {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Tag deleted successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        })\n      });\n      setTagToDelete(undefined);\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData('tags', context.previousTags);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 36\n          }\n        })\n      });\n    }\n  });\n\n  const handleDeleteTag = () => {\n    if (tagToDelete) {\n      mutate(tagToDelete);\n    }\n  };\n\n  return __jsx(InboxSettingsPage, {\n    maxW: \"600px\",\n    title: \"Tags\",\n    helperAlert: {\n      title: 'Tags',\n      caption: 'Tags are labels to help you keep track of conversations related to a given topic. Team tags are visible to everyone on your team. In analytics, admins can create reports based on tags. You can click on the tag icon at the top of a conversation to apply a tag.'\n    },\n    createAction: {\n      label: 'Create a tag',\n      onClick: () => history.push(`${match.path}/new`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, isLoading ? __jsx(Stack, {\n    spacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, Array.from({\n    length: 5\n  }, (v, i) => __jsx(Stack, {\n    isInline: true,\n    py: \"0.5rem\",\n    px: \"0.75rem\",\n    borderBottomWidth: \"1px\",\n    key: `${i.toString()}-${new Date().getTime()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    height: \"50px\",\n    width: \"50px\",\n    rounded: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), __jsx(Stack, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"8px\",\n    width: \"50%\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), __jsx(Skeleton, {\n    height: \"8px\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }))))) : __jsx(Stack, {\n    spacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, tags === null || tags === void 0 ? void 0 : tags.map(tag => __jsx(Box, {\n    key: tag.uuid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(InboxSettingsPageItem, {\n    heading: tag.name,\n    onDelete: () => setTagToDelete(tag),\n    iconProps: {\n      name: 'inbox-tag',\n      color: tag.color\n    },\n    onClick: () => history.push(`${match.path}/${tag.uuid}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })))), __jsx(ConfirmModal, {\n    title: \"Delete Tag\",\n    isOpen: !!tagToDelete,\n    isLoading: isDeleting,\n    onConfirm: handleDeleteTag,\n    onClose: () => setTagToDelete(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/settings/Tags.tsx"],"names":["Box","Skeleton","Stack","useToast","ConfirmModal","ToastBox","React","useState","useMutation","useQuery","useQueryClient","useHistory","useRouteMatch","deleteTag","getTags","InboxSettingsPage","InboxSettingsPageItem","InboxSettingsTags","toast","match","history","queryClient","isLoading","data","tags","tagToDelete","setTagToDelete","isDeleting","mutate","payload","onMutate","cancelQueries","previousTags","getQueryData","setQueryData","old","filter","item","uuid","onSuccess","position","render","onClose","undefined","onError","error","newData","context","message","handleDeleteTag","title","caption","label","onClick","push","path","Array","from","length","v","i","toString","Date","getTime","map","tag","name","color"],"mappings":"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","sourcesContent":["import { Box, Skeleton, Stack, useToast } from '@chakra-ui/core';\nimport { ConfirmModal, ToastBox } from 'app/components';\nimport { AxiosError } from 'axios';\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { deleteTag, getTags } from '../inbox.service';\nimport { InboxTag } from '../inbox.types';\nimport { InboxSettingsPage, InboxSettingsPageItem } from './component';\n\nexport const InboxSettingsTags = () => {\n  const toast = useToast();\n  const match = useRouteMatch();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  const { isLoading, data: tags } = useQuery('tags', getTags);\n\n  const [tagToDelete, setTagToDelete] = useState<InboxTag | undefined>();\n\n  const { isLoading: isDeleting, mutate } = useMutation<any, AxiosError, any, any>(\n    (payload: Partial<InboxTag>) => deleteTag(payload),\n    {\n      onMutate: async payload => {\n        await queryClient.cancelQueries('tags');\n        const previousTags = queryClient.getQueryData('tags');\n        queryClient.setQueryData('tags', old =>\n          //@ts-ignore\n          old?.filter(item => item.uuid !== payload.uuid),\n        );\n        return { previousTags };\n      },\n      onSuccess: () => {\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox status=\"success\" onClose={onClose} message=\"Tag deleted successfully\" />\n          ),\n        });\n        setTagToDelete(undefined);\n      },\n      onError: (error, newData, context) => {\n        queryClient.setQueryData('tags', context.previousTags);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n        });\n      },\n    },\n  );\n\n  const handleDeleteTag = () => {\n    if (tagToDelete) {\n      mutate(tagToDelete);\n    }\n  };\n\n  return (\n    <InboxSettingsPage\n      maxW=\"600px\"\n      title=\"Tags\"\n      helperAlert={{\n        title: 'Tags',\n        caption:\n          'Tags are labels to help you keep track of conversations related to a given topic. Team tags are visible to everyone on your team. In analytics, admins can create reports based on tags. You can click on the tag icon at the top of a conversation to apply a tag.',\n      }}\n      createAction={{\n        label: 'Create a tag',\n        onClick: () => history.push(`${match.path}/new`),\n      }}\n    >\n      {isLoading ? (\n        <Stack spacing=\"0\">\n          {Array.from({ length: 5 }, (v, i) => (\n            <Stack\n              isInline\n              py=\"0.5rem\"\n              px=\"0.75rem\"\n              borderBottomWidth=\"1px\"\n              key={`${i.toString()}-${new Date().getTime()}`}\n            >\n              <Skeleton height=\"50px\" width=\"50px\" rounded=\"50%\" />\n              <Stack flex={1}>\n                <Skeleton height=\"8px\" width=\"50%\" my=\"8px\" />\n                <Skeleton height=\"8px\" my=\"8px\" />\n              </Stack>\n            </Stack>\n          ))}\n        </Stack>\n      ) : (\n        <Stack spacing=\"0\">\n          {tags?.map((tag: InboxTag) => (\n            <Box key={tag.uuid}>\n              <InboxSettingsPageItem\n                heading={tag.name}\n                onDelete={() => setTagToDelete(tag)}\n                iconProps={{ name: 'inbox-tag', color: tag.color }}\n                onClick={() => history.push(`${match.path}/${tag.uuid}`)}\n              />\n            </Box>\n          ))}\n        </Stack>\n      )}\n      <ConfirmModal\n        title=\"Delete Tag\"\n        isOpen={!!tagToDelete}\n        isLoading={isDeleting}\n        onConfirm={handleDeleteTag}\n        onClose={() => setTagToDelete(undefined)}\n      />\n    </InboxSettingsPage>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}