{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/ToastBox/index.tsx\";\nvar __jsx = React.createElement;\nimport { Flex, Icon, IconButton, Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\nexport function ToastBox({\n  message,\n  onClose,\n  status = 'error'\n}) {\n  const toastOptions = {\n    error: {\n      bg: '#FAE7E7',\n      color: '#DA1414',\n      icon: 'alert-error'\n    },\n    success: {\n      bg: '#ECEAF9',\n      color: '#6155EB',\n      icon: 'alert-success'\n    },\n    info: {\n      bg: '#ECEAF9',\n      color: '#6155EB',\n      icon: 'alert-info'\n    }\n  };\n  const {\n    bg,\n    color,\n    icon\n  } = toastOptions[status];\n  return __jsx(Flex, {\n    m: 3,\n    p: 3,\n    bg: bg,\n    rounded: \"8px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    size: \"1.5rem\",\n    name: icon,\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(Text, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, message)), __jsx(IconButton, {\n    ml: \"4rem\",\n    size: \"xs\",\n    icon: \"close\",\n    onClick: onClose,\n    variant: \"unstyled\",\n    \"aria-label\": \"close toast\",\n    _focus: {\n      boxShadow: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/ToastBox/index.tsx"],"names":["Flex","Icon","IconButton","Stack","Text","React","ToastBox","message","onClose","status","toastOptions","error","bg","color","icon","success","info","boxShadow"],"mappings":";;AAAA,SAAmBA,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,EAA2CC,KAA3C,EAAkDC,IAAlD,QAA8D,iBAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAYA,OAAO,SAASC,QAAT,CAAkB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,MAAM,GAAG;AAA7B,CAAlB,EAAyE;AAC9E,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAE,SADC;AAELC,MAAAA,KAAK,EAAE,SAFF;AAGLC,MAAAA,IAAI,EAAE;AAHD,KADY;AAMnBC,IAAAA,OAAO,EAAE;AACPH,MAAAA,EAAE,EAAE,SADG;AAEPC,MAAAA,KAAK,EAAE,SAFA;AAGPC,MAAAA,IAAI,EAAE;AAHC,KANU;AAWnBE,IAAAA,IAAI,EAAE;AACJJ,MAAAA,EAAE,EAAE,SADA;AAEJC,MAAAA,KAAK,EAAE,SAFH;AAGJC,MAAAA,IAAI,EAAE;AAHF;AAXa,GAArB;AAkBA,QAAM;AAAEF,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAAsBJ,YAAY,CAACD,MAAD,CAAxC;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,CAAC,EAAE,CAAT;AAAY,IAAA,CAAC,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAEG,EAAtB;AAA0B,IAAA,OAAO,EAAC,KAAlC;AAAwC,IAAA,UAAU,EAAC,QAAnD;AAA4D,IAAA,cAAc,EAAC,eAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,IAAI,EAAEE,IAA1B;AAAgC,IAAA,KAAK,EAAED,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBN,OAArB,CAFF,CADF,EAKE,MAAC,UAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,OAAO,EAAC,UALV;AAME,kBAAW,aANb;AAOE,IAAA,MAAM,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAiBD","sourcesContent":["import { BoxProps, Flex, Icon, IconButton, Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\n\ntype ToastOptions = {\n  bg?: string;\n  color?: string;\n  icon?: string;\n};\n\ntype ToastStatus = 'success' | 'error' | 'info';\n\nexport type ToastBoxProps = { message?: string; status?: ToastStatus; onClose?(): void } & BoxProps;\n\nexport function ToastBox({ message, onClose, status = 'error' }: ToastBoxProps) {\n  const toastOptions = {\n    error: {\n      bg: '#FAE7E7',\n      color: '#DA1414',\n      icon: 'alert-error',\n    },\n    success: {\n      bg: '#ECEAF9',\n      color: '#6155EB',\n      icon: 'alert-success',\n    },\n    info: {\n      bg: '#ECEAF9',\n      color: '#6155EB',\n      icon: 'alert-info',\n    },\n  } as { [key in ToastStatus]: ToastOptions };\n\n  const { bg, color, icon } = toastOptions[status];\n\n  return (\n    <Flex m={3} p={3} bg={bg} rounded=\"8px\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Stack isInline alignItems=\"center\">\n        <Icon size=\"1.5rem\" name={icon} color={color} />\n        <Text color={color}>{message}</Text>\n      </Stack>\n      <IconButton\n        ml=\"4rem\"\n        size=\"xs\"\n        icon=\"close\"\n        onClick={onClose}\n        variant=\"unstyled\"\n        aria-label=\"close toast\"\n        _focus={{ boxShadow: 'none' }}\n      />\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}