{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/payments/component/payments/components/transaction-history/component.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectPaymentSetupStatus } from '../../../../selectors';\nimport { TransactionHistoryToolbar } from './toolbar';\nimport { Box, Spinner } from '@chakra-ui/core';\nimport { TransactionHistoryTableColumns } from './table-columns';\nimport { Table } from '../components/table';\nimport { EmptyState, Pagination } from '../../../../../../components';\nimport noPaymentRequests from '../../../../assets/no-payment-requests.svg';\nexport const TransactionHistoryComponent = props => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState('');\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState('all');\n  const {\n    0: dateRange,\n    1: setDateRange\n  } = useState({\n    from: null,\n    to: null\n  });\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    managed_account: {\n      transactions\n    }\n  } = props;\n  const {\n    by_id,\n    data,\n    meta,\n    loading\n  } = transactions;\n  const rows = by_id.map(i => data[i]);\n\n  const onNextPage = () => setPage(page + 1);\n\n  const onPrevPage = () => setPage(page - 1);\n\n  const onGoToPage = i => setPage(i);\n\n  const columns = React.useMemo(() => TransactionHistoryTableColumns(), // eslint-disable-next-line react-hooks/exhaustive-deps\n  []); // @ts-ignore\n\n  const setup_status = useSelector(selectPaymentSetupStatus);\n  useEffect(() => {\n    if (setup_status === 'completed') {\n      props.fetchManagedAccountTransactions(page, activeTab, searchQuery, dateRange);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [page, activeTab, searchQuery, dateRange]);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Transaction History\")), __jsx(TransactionHistoryToolbar, {\n    activeTab,\n    setActiveTab,\n    searchQuery,\n    setSearchQuery,\n    dateRange,\n    setDateRange,\n    disable: props.setup_status !== 'completed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: \"section-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, rows.length > 0 && setup_status === 'completed' && __jsx(React.Fragment, null, __jsx(Table // @ts-ignore\n  , {\n    columns: columns // @ts-ignore\n    ,\n    data: rows,\n    onRowClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), __jsx(Pagination, {\n    page: props.page,\n    total: meta.count_total,\n    pageSize: meta.per_page,\n    onNext: onNextPage,\n    onPrev: onPrevPage,\n    onGoTo: onGoToPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), (rows.length === 0 || loading) && __jsx(Box, {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, loading && __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"lg\",\n    margin: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), !loading && setup_status === 'completed' && searchQuery === '' && activeTab === 'all' && !dateRange.to && !dateRange.from && __jsx(EmptyState, {\n    image: noPaymentRequests,\n    paddingY: \"150px\",\n    heading: \"No transactions yet\",\n    subheading: \"Once transactions occur, they show up here.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), !loading && setup_status === 'completed' && (searchQuery !== '' || activeTab !== 'all' || dateRange.to || dateRange.from) && __jsx(EmptyState, {\n    image: noPaymentRequests,\n    paddingY: \"150px\",\n    heading: \"Looks like you don't have any transactions that match the criteria selected\",\n    subheading: \"Once any match, you'll see them all here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/payments/component/payments/components/transaction-history/component.tsx"],"names":["React","useEffect","useState","useSelector","selectPaymentSetupStatus","TransactionHistoryToolbar","Box","Spinner","TransactionHistoryTableColumns","Table","EmptyState","Pagination","noPaymentRequests","TransactionHistoryComponent","props","searchQuery","setSearchQuery","activeTab","setActiveTab","dateRange","setDateRange","from","to","page","setPage","managed_account","transactions","by_id","data","meta","loading","rows","map","i","onNextPage","onPrevPage","onGoToPage","columns","useMemo","setup_status","fetchManagedAccountTransactions","length","count_total","per_page"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AACA,SAASC,yBAAT,QAA0C,WAA1C;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,iBAA7B;AACA,SAASC,8BAAT,QAA+C,iBAA/C;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,8BAAvC;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;AAEA,OAAO,MAAMC,2BAA2B,GAAIC,KAAD,IAAgB;AACzD,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACe,SAAD;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAA6B,KAA7B,CAA1C;AACA,QAAM;AAAA,OAACiB,SAAD;AAAA,OAAYC;AAAZ,MAA4BlB,QAAQ,CAAC;AACzCmB,IAAAA,IAAI,EAAE,IADmC;AAEzCC,IAAAA,EAAE,EAAE;AAFqC,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBtB,QAAQ,CAAS,CAAT,CAAhC;AAEA,QAAM;AACJuB,IAAAA,eAAe,EAAE;AAAEC,MAAAA;AAAF;AADb,MAEFZ,KAFJ;AAIA,QAAM;AAAEa,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,MAAiCJ,YAAvC;AAEA,QAAMK,IAAiC,GAAGJ,KAAK,CAACK,GAAN,CAAWC,CAAD,IAAeL,IAAI,CAACK,CAAD,CAA7B,CAA1C;;AAEA,QAAMC,UAAU,GAAG,MAAMV,OAAO,CAACD,IAAI,GAAG,CAAR,CAAhC;;AACA,QAAMY,UAAU,GAAG,MAAMX,OAAO,CAACD,IAAI,GAAG,CAAR,CAAhC;;AACA,QAAMa,UAAU,GAAIH,CAAD,IAAeT,OAAO,CAACS,CAAD,CAAzC;;AAEA,QAAMI,OAAO,GAAGrC,KAAK,CAACsC,OAAN,CACd,MAAM9B,8BAA8B,EADtB,EAEd;AACA,IAHc,CAAhB,CArByD,CA2BzD;;AACA,QAAM+B,YAAgC,GAAGpC,WAAW,CAACC,wBAAD,CAApD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsC,YAAY,KAAK,WAArB,EAAkC;AAChCzB,MAAAA,KAAK,CAAC0B,+BAAN,CAAsCjB,IAAtC,EAA4CN,SAA5C,EAAuDF,WAAvD,EAAoEI,SAApE;AACD,KAHa,CAId;;AACD,GALQ,EAKN,CAACI,IAAD,EAAON,SAAP,EAAkBF,WAAlB,EAA+BI,SAA/B,CALM,CAAT;AAOA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,EAIE,MAAC,yBAAD;AACQF,IAAAA,SADR;AACmBC,IAAAA,YADnB;AACiCH,IAAAA,WADjC;AAC8CC,IAAAA,cAD9C;AAC8DG,IAAAA,SAD9D;AACyEC,IAAAA,YADzE;AAEE,IAAA,OAAO,EAAEN,KAAK,CAACyB,YAAN,KAAuB,WAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAACU,MAAL,GAAc,CAAd,IAAmBF,YAAY,KAAK,WAApC,IACC,4BACE,MAAC,KAAD,CACE;AADF;AAEE,IAAA,OAAO,EAAEF,OAFX,CAGE;AAHF;AAIE,IAAA,IAAI,EAAEN,IAJR;AAKE,IAAA,UAAU,EAAE,MAAM,CAAE,CALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,UAAD;AACE,IAAA,IAAI,EAAEjB,KAAK,CAACS,IADd;AAEE,IAAA,KAAK,EAAEM,IAAI,CAACa,WAFd;AAGE,IAAA,QAAQ,EAAEb,IAAI,CAACc,QAHjB;AAIE,IAAA,MAAM,EAAET,UAJV;AAKE,IAAA,MAAM,EAAEC,UALV;AAME,IAAA,MAAM,EAAEC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFJ,EAqBG,CAACL,IAAI,CAACU,MAAL,KAAgB,CAAhB,IAAqBX,OAAtB,KACC,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAiC,IAAA,cAAc,EAAC,QAAhD;AAAyD,IAAA,MAAM,EAAC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,IACN,MAAC,OAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,UAAU,EAAC,UAHb;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,MAAM,EAAC,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAWG,CAACA,OAAD,IACCS,YAAY,KAAK,WADlB,IAECxB,WAAW,KAAK,EAFjB,IAGCE,SAAS,KAAK,KAHf,IAIC,CAACE,SAAS,CAACG,EAJZ,IAKC,CAACH,SAAS,CAACE,IALZ,IAMG,MAAC,UAAD;AACE,IAAA,KAAK,EAAET,iBADT;AAEE,IAAA,QAAQ,EAAC,OAFX;AAGE,IAAA,OAAO,EAAC,qBAHV;AAIE,IAAA,UAAU,EAAC,6CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBN,EAyBG,CAACkB,OAAD,IACCS,YAAY,KAAK,WADlB,KAEExB,WAAW,KAAK,EAAhB,IAAsBE,SAAS,KAAK,KAApC,IAA6CE,SAAS,CAACG,EAAvD,IAA6DH,SAAS,CAACE,IAFzE,KAGG,MAAC,UAAD;AACE,IAAA,KAAK,EAAET,iBADT;AAEE,IAAA,QAAQ,EAAC,OAFX;AAGE,IAAA,OAAO,EAAC,6EAHV;AAIE,IAAA,UAAU,EAAC,0CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BN,CAtBJ,CATF,CADF;AAwED,CA7GM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ManagedAccountTransaction, PaymentSetupStatus } from '../../../../payments.types';\nimport { useSelector } from 'react-redux';\nimport { selectPaymentSetupStatus } from '../../../../selectors';\nimport { TransactionHistoryToolbar } from './toolbar';\nimport { Box, Spinner } from '@chakra-ui/core';\nimport { TransactionHistoryTableColumns } from './table-columns';\nimport { Table } from '../components/table';\nimport { EmptyState, Pagination } from '../../../../../../components';\nimport noPaymentRequests from '../../../../assets/no-payment-requests.svg';\n\nexport const TransactionHistoryComponent = (props: any) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState<'all' | 'credit' | 'debit'>('all');\n  const [dateRange, setDateRange] = useState({\n    from: null,\n    to: null,\n  });\n  const [page, setPage] = useState<number>(1);\n\n  const {\n    managed_account: { transactions },\n  } = props;\n\n  const { by_id, data, meta, loading } = transactions;\n\n  const rows: ManagedAccountTransaction[] = by_id.map((i: string) => data[i]);\n\n  const onNextPage = () => setPage(page + 1);\n  const onPrevPage = () => setPage(page - 1);\n  const onGoToPage = (i: number) => setPage(i);\n\n  const columns = React.useMemo(\n    () => TransactionHistoryTableColumns(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  // @ts-ignore\n  const setup_status: PaymentSetupStatus = useSelector(selectPaymentSetupStatus);\n\n  useEffect(() => {\n    if (setup_status === 'completed') {\n      props.fetchManagedAccountTransactions(page, activeTab, searchQuery, dateRange);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, activeTab, searchQuery, dateRange]);\n\n  return (\n    <>\n      <Box className=\"section-title\">\n        <Box className=\"title\">Transaction History</Box>\n      </Box>\n      <TransactionHistoryToolbar\n        {...{ activeTab, setActiveTab, searchQuery, setSearchQuery, dateRange, setDateRange }}\n        disable={props.setup_status !== 'completed'}\n      />\n\n      <Box className=\"section-body\">\n        {rows.length > 0 && setup_status === 'completed' && (\n          <>\n            <Table\n              // @ts-ignore\n              columns={columns}\n              // @ts-ignore\n              data={rows}\n              onRowClick={() => {}}\n            />\n            <Pagination\n              page={props.page}\n              total={meta.count_total}\n              pageSize={meta.per_page}\n              onNext={onNextPage}\n              onPrev={onPrevPage}\n              onGoTo={onGoToPage}\n            />\n          </>\n        )}\n\n        {(rows.length === 0 || loading) && (\n          <Box width=\"100%\" display=\"flex\" justifyContent=\"center\" height=\"100%\">\n            {loading && (\n              <Spinner\n                thickness=\"4px\"\n                speed=\"0.65s\"\n                emptyColor=\"gray.200\"\n                color=\"blue.500\"\n                size=\"lg\"\n                margin=\"auto\"\n              />\n            )}\n            {!loading &&\n              setup_status === 'completed' &&\n              searchQuery === '' &&\n              activeTab === 'all' &&\n              !dateRange.to &&\n              !dateRange.from && (\n                <EmptyState\n                  image={noPaymentRequests}\n                  paddingY=\"150px\"\n                  heading=\"No transactions yet\"\n                  subheading=\"Once transactions occur, they show up here.\"\n                />\n              )}\n\n            {!loading &&\n              setup_status === 'completed' &&\n              (searchQuery !== '' || activeTab !== 'all' || dateRange.to || dateRange.from) && (\n                <EmptyState\n                  image={noPaymentRequests}\n                  paddingY=\"150px\"\n                  heading=\"Looks like you don't have any transactions that match the criteria selected\"\n                  subheading=\"Once any match, you'll see them all here\"\n                />\n              )}\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}