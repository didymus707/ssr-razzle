{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/messages/Content.tsx\";\nvar __jsx = React.createElement;\nimport { Button, Flex } from '@chakra-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { selectUserID } from '../../../../unauthenticated-app/authentication';\nimport { INBOX_INIT } from '../../inbox.data';\nimport { fetchThreadAssignments, fetchThreadByID, selectAssignmentsByThreadID, selectThreadDetailByID } from '../../slices';\nimport { ConversationThread } from './ConversationThread';\nimport { Header } from './Header';\nexport function Content({\n  threadRef,\n  showCompose,\n  setShowCompose,\n  currentThreadID,\n  onCloseMobileMessageDrawer\n}) {\n  var _assignments;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user_id = useSelector(selectUserID);\n  const assignments = useSelector(state => selectAssignmentsByThreadID(state, {\n    thread_id: currentThreadID\n  }));\n  const thread = useSelector(state => selectThreadDetailByID(state, currentThreadID));\n  const {\n    state: threadState,\n    sender_id,\n    receiver_id\n  } = thread || INBOX_INIT.thread;\n  const isLastAssignee = assignments && assignments.length > 0 && ((_assignments = assignments[assignments.length - 1]) === null || _assignments === void 0 ? void 0 : _assignments.assignee_id) === user_id;\n  const isAssign = threadState === 'assigned'; // fetch thread assignments\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (currentThreadID && currentThreadID !== 'start' && !currentThreadID.includes('unknown')) {\n        if (!thread.uuid) {\n          const r = await dispatch(fetchThreadByID({\n            thread_id: currentThreadID\n          }));\n\n          if (fetchThreadByID.rejected.match(r)) {\n            history.push('/s/inbox');\n          }\n        }\n\n        await dispatch(fetchThreadAssignments({\n          thread_id: currentThreadID\n        }));\n      }\n    };\n\n    fetch(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentThreadID]);\n  useEffect(() => {\n    if (isAssign && isLastAssignee) {\n      showCompose === false && setShowCompose(true);\n    } else {\n      showCompose === true && setShowCompose(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isAssign, isLastAssignee]);\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    pt: \"1rem\",\n    px: ['1rem', '1rem', '1.75rem', '1.75rem'],\n    display: ['block', 'block', 'block', 'none'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    variant: \"ghost\",\n    leftIcon: \"chevron-left\",\n    onClick: onCloseMobileMessageDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Back\")), __jsx(Header, {\n    paddingY: \"1rem\",\n    alignItems: \"center\",\n    marginX: ['1rem', '1rem', '1.75rem', '1.75rem'],\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.0334353)\",\n    sender_id: sender_id,\n    receiver_id: receiver_id,\n    currentThreadID: currentThreadID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), __jsx(ConversationThread, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/messages/Content.tsx"],"names":["Button","Flex","React","useEffect","useDispatch","useSelector","useHistory","selectUserID","INBOX_INIT","fetchThreadAssignments","fetchThreadByID","selectAssignmentsByThreadID","selectThreadDetailByID","ConversationThread","Header","Content","threadRef","showCompose","setShowCompose","currentThreadID","onCloseMobileMessageDrawer","dispatch","history","user_id","assignments","state","thread_id","thread","threadState","sender_id","receiver_id","isLastAssignee","length","assignee_id","isAssign","fetch","includes","uuid","r","rejected","match","push"],"mappings":"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","sourcesContent":["import { Button, Flex } from '@chakra-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { RootState } from '../../../../../root';\nimport { selectUserID } from '../../../../unauthenticated-app/authentication';\nimport { INBOX_INIT } from '../../inbox.data';\nimport {\n  fetchThreadAssignments,\n  fetchThreadByID,\n  selectAssignmentsByThreadID,\n  selectThreadDetailByID,\n} from '../../slices';\nimport { ConversationThread } from './ConversationThread';\nimport { Header } from './Header';\n\nexport function Content({\n  threadRef,\n  showCompose,\n  setShowCompose,\n  currentThreadID,\n  onCloseMobileMessageDrawer,\n}: any) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const user_id = useSelector(selectUserID);\n  const assignments = useSelector((state: RootState) =>\n    selectAssignmentsByThreadID(state, { thread_id: currentThreadID }),\n  );\n\n  const thread = useSelector((state: RootState) => selectThreadDetailByID(state, currentThreadID));\n  const { state: threadState, sender_id, receiver_id } = thread || INBOX_INIT.thread;\n  const isLastAssignee =\n    assignments &&\n    assignments.length > 0 &&\n    assignments[assignments.length - 1]?.assignee_id === user_id;\n\n  const isAssign = threadState === 'assigned';\n\n  // fetch thread assignments\n  useEffect(() => {\n    const fetch = async () => {\n      if (currentThreadID && currentThreadID !== 'start' && !currentThreadID.includes('unknown')) {\n        if (!thread.uuid) {\n          const r: any = await dispatch(fetchThreadByID({ thread_id: currentThreadID }));\n          if (fetchThreadByID.rejected.match(r)) {\n            history.push('/s/inbox');\n          }\n        }\n        await dispatch(\n          fetchThreadAssignments({\n            thread_id: currentThreadID,\n          }),\n        );\n      }\n    };\n\n    fetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentThreadID]);\n\n  useEffect(() => {\n    if (isAssign && isLastAssignee) {\n      showCompose === false && setShowCompose(true);\n    } else {\n      showCompose === true && setShowCompose(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAssign, isLastAssignee]);\n\n  return (\n    <>\n      <Flex\n        pt=\"1rem\"\n        px={['1rem', '1rem', '1.75rem', '1.75rem']}\n        display={['block', 'block', 'block', 'none']}\n      >\n        <Button\n          size=\"xs\"\n          variant=\"ghost\"\n          leftIcon=\"chevron-left\"\n          onClick={onCloseMobileMessageDrawer}\n        >\n          Back\n        </Button>\n      </Flex>\n\n      <Header\n        paddingY=\"1rem\"\n        alignItems=\"center\"\n        marginX={['1rem', '1rem', '1.75rem', '1.75rem']}\n        borderBottom=\"1px solid rgba(0, 0, 0, 0.0334353)\"\n        sender_id={sender_id}\n        receiver_id={receiver_id}\n        currentThreadID={currentThreadID}\n      />\n\n      <ConversationThread />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}