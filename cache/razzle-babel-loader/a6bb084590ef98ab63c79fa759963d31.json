{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/components/forms/RegisterForm.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Checkbox, Icon, Link as ChakraLink, Stack } from '@chakra-ui/core';\nimport { Input, Button } from 'app/components';\nimport { useFormik } from 'formik';\nimport * as React from 'react';\nimport * as yup from 'yup';\nconst validationSchema = yup.object().shape({\n  first_name: yup.string().required('First name is required'),\n  last_name: yup.string().required('Last name is required'),\n  organisation_name: yup.string().when('showOrganizationName', {\n    is: value => value === true,\n    otherwise: yup.string(),\n    then: yup.string().required('Organisation name is required')\n  }),\n  password: yup.string().min(6, 'Password must be at least 6 characters long').required('Password is required'),\n  email: yup.string().email('Invalid email format').required('Email name is required'),\n  agreeToTerms: yup.bool().required('Please agree to terms')\n});\nexport function RegisterForm({\n  onSubmit,\n  isLoading,\n  showOrganizationName = true\n}) {\n  const formik = useFormik({\n    validationSchema,\n    initialValues: {\n      email: '',\n      password: '',\n      last_name: '',\n      first_name: '',\n      agreeToTerms: false,\n      organisation_name: '',\n      showOrganizationName\n    },\n    onSubmit: values => onSubmit(values)\n  });\n  const [viewPassword, setViewPassword] = React.useState(false);\n\n  const handleToggleViewPassword = () => {\n    setViewPassword(!viewPassword);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    mb: \"2rem\",\n    isInline: true,\n    spacing: ['0', '0', '24px', '24px'],\n    flexWrap: ['wrap', 'wrap', 'unset', 'unset'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    width: ['100%', '100%', '48%', '48%'],\n    mb: ['24px', '24px', '0', '0'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    autoFocus: true,\n    type: \"text\",\n    id: \"first_name\",\n    name: \"first_name\",\n    label: \"First name\",\n    onChange: formik.handleChange,\n    value: formik.values.first_name,\n    errorMessage: formik.errors.first_name,\n    isInvalid: !!formik.touched.first_name && !!formik.errors.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    width: ['100%', '100%', '48%'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    id: \"last_name\",\n    name: \"last_name\",\n    label: \"Last name\",\n    onChange: formik.handleChange,\n    value: formik.values.last_name,\n    errorMessage: formik.errors.last_name,\n    isInvalid: !!formik.touched.last_name && !!formik.errors.last_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))), showOrganizationName && __jsx(Box, {\n    mb: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    id: \"organisation_name\",\n    name: \"organisation_name\",\n    label: \"Organisation name\",\n    onChange: formik.handleChange,\n    value: formik.values.organisation_name,\n    errorMessage: formik.errors.organisation_name,\n    isInvalid: !!formik.touched.organisation_name && !!formik.errors.organisation_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    mb: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    label: \"Email address\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    errorMessage: formik.errors.email,\n    isInvalid: !!formik.touched.email && !!formik.errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), __jsx(Box, {\n    mb: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    id: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    errorMessage: formik.errors.password,\n    type: viewPassword ? 'text' : 'password',\n    rightIcon: __jsx(Icon, {\n      onClick: handleToggleViewPassword,\n      name: viewPassword ? 'view' : 'view-off',\n      color: \"blue.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }),\n    isInvalid: !!formik.touched.password && !!formik.errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })), __jsx(Box, {\n    mb: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox, {\n    size: \"md\",\n    name: \"agreeToTerms\",\n    variantColor: \"blue\",\n    onChange: formik.handleChange,\n    isChecked: formik.values.agreeToTerms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"I agree to Simpu's\", ' ', __jsx(ChakraLink, {\n    href: \"/terms-conditions\",\n    isExternal: true,\n    color: \"blue.500\",\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Terms & Privacy Policy\"))), __jsx(Button, {\n    width: \"100%\",\n    height: \"50px\",\n    type: \"submit\",\n    variantColor: \"blue\",\n    background: \"#3d50df\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    isDisabled: !formik.values.agreeToTerms,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"Sign up\"));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/components/forms/RegisterForm.tsx"],"names":["Box","Checkbox","Icon","Link","ChakraLink","Stack","Input","Button","useFormik","React","yup","validationSchema","object","shape","first_name","string","required","last_name","organisation_name","when","is","value","otherwise","then","password","min","email","agreeToTerms","bool","RegisterForm","onSubmit","isLoading","showOrganizationName","formik","initialValues","values","viewPassword","setViewPassword","useState","handleToggleViewPassword","handleSubmit","handleChange","errors","touched"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,IAAxB,EAA8BC,IAAI,IAAIC,UAAtC,EAAkDC,KAAlD,QAA+D,iBAA/D;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,UAAU,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAD8B;AAE1CC,EAAAA,SAAS,EAAEP,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CAF+B;AAG1CE,EAAAA,iBAAiB,EAAER,GAAG,CAACK,MAAJ,GAAaI,IAAb,CAAkB,sBAAlB,EAA0C;AAC3DC,IAAAA,EAAE,EAAEC,KAAK,IAAIA,KAAK,KAAK,IADoC;AAE3DC,IAAAA,SAAS,EAAEZ,GAAG,CAACK,MAAJ,EAFgD;AAG3DQ,IAAAA,IAAI,EAAEb,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,+BAAtB;AAHqD,GAA1C,CAHuB;AAQ1CQ,EAAAA,QAAQ,EAAEd,GAAG,CACVK,MADO,GAEPU,GAFO,CAEH,CAFG,EAEA,6CAFA,EAGPT,QAHO,CAGE,sBAHF,CARgC;AAY1CU,EAAAA,KAAK,EAAEhB,GAAG,CAACK,MAAJ,GAAaW,KAAb,CAAmB,sBAAnB,EAA2CV,QAA3C,CAAoD,wBAApD,CAZmC;AAa1CW,EAAAA,YAAY,EAAEjB,GAAG,CAACkB,IAAJ,GAAWZ,QAAX,CAAoB,uBAApB;AAb4B,CAAnB,CAAzB;AA6BA,OAAO,SAASa,YAAT,CAAsB;AAC3BC,EAAAA,QAD2B;AAE3BC,EAAAA,SAF2B;AAG3BC,EAAAA,oBAAoB,GAAG;AAHI,CAAtB,EAIe;AACpB,QAAMC,MAAM,GAAGzB,SAAS,CAAC;AACvBG,IAAAA,gBADuB;AAEvBuB,IAAAA,aAAa,EAAE;AACbR,MAAAA,KAAK,EAAE,EADM;AAEbF,MAAAA,QAAQ,EAAE,EAFG;AAGbP,MAAAA,SAAS,EAAE,EAHE;AAIbH,MAAAA,UAAU,EAAE,EAJC;AAKba,MAAAA,YAAY,EAAE,KALD;AAMbT,MAAAA,iBAAiB,EAAE,EANN;AAObc,MAAAA;AAPa,KAFQ;AAWvBF,IAAAA,QAAQ,EAAGK,MAAD,IAA4CL,QAAQ,CAACK,MAAD;AAXvC,GAAD,CAAxB;AAcA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC5B,KAAK,CAAC6B,QAAN,CAAe,KAAf,CAAxC;;AAEA,QAAMC,wBAAwB,GAAG,MAAM;AACrCF,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,SACE;AAAM,IAAA,QAAQ,EAAEH,MAAM,CAACO,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,MAAnB,CAHX;AAIE,IAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,OAA1B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,GAAD;AAAK,IAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,KAAxB,CAAZ;AAA4C,IAAA,EAAE,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,GAAjB,EAAsB,GAAtB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,YAHL;AAIE,IAAA,IAAI,EAAC,YAJP;AAKE,IAAA,KAAK,EAAC,YALR;AAME,IAAA,QAAQ,EAAEP,MAAM,CAACQ,YANnB;AAOE,IAAA,KAAK,EAAER,MAAM,CAACE,MAAP,CAAcrB,UAPvB;AAQE,IAAA,YAAY,EAAEmB,MAAM,CAACS,MAAP,CAAc5B,UAR9B;AASE,IAAA,SAAS,EAAE,CAAC,CAACmB,MAAM,CAACU,OAAP,CAAe7B,UAAjB,IAA+B,CAAC,CAACmB,MAAM,CAACS,MAAP,CAAc5B,UAT5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAmBE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,KAAK,EAAC,WAJR;AAKE,IAAA,QAAQ,EAAEmB,MAAM,CAACQ,YALnB;AAME,IAAA,KAAK,EAAER,MAAM,CAACE,MAAP,CAAclB,SANvB;AAOE,IAAA,YAAY,EAAEgB,MAAM,CAACS,MAAP,CAAczB,SAP9B;AAQE,IAAA,SAAS,EAAE,CAAC,CAACgB,MAAM,CAACU,OAAP,CAAe1B,SAAjB,IAA8B,CAAC,CAACgB,MAAM,CAACS,MAAP,CAAczB,SAR3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CADF,EAiCGe,oBAAoB,IACnB,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,mBAFL;AAGE,IAAA,IAAI,EAAC,mBAHP;AAIE,IAAA,KAAK,EAAC,mBAJR;AAKE,IAAA,QAAQ,EAAEC,MAAM,CAACQ,YALnB;AAME,IAAA,KAAK,EAAER,MAAM,CAACE,MAAP,CAAcjB,iBANvB;AAOE,IAAA,YAAY,EAAEe,MAAM,CAACS,MAAP,CAAcxB,iBAP9B;AAQE,IAAA,SAAS,EAAE,CAAC,CAACe,MAAM,CAACU,OAAP,CAAezB,iBAAjB,IAAsC,CAAC,CAACe,MAAM,CAACS,MAAP,CAAcxB,iBARnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlCJ,EA+CE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,eAJR;AAKE,IAAA,KAAK,EAAEe,MAAM,CAACE,MAAP,CAAcT,KALvB;AAME,IAAA,QAAQ,EAAEO,MAAM,CAACQ,YANnB;AAOE,IAAA,YAAY,EAAER,MAAM,CAACS,MAAP,CAAchB,KAP9B;AAQE,IAAA,SAAS,EAAE,CAAC,CAACO,MAAM,CAACU,OAAP,CAAejB,KAAjB,IAA0B,CAAC,CAACO,MAAM,CAACS,MAAP,CAAchB,KARvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/CF,EA2DE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,QAAQ,EAAEO,MAAM,CAACQ,YAJnB;AAKE,IAAA,KAAK,EAAER,MAAM,CAACE,MAAP,CAAcX,QALvB;AAME,IAAA,YAAY,EAAES,MAAM,CAACS,MAAP,CAAclB,QAN9B;AAOE,IAAA,IAAI,EAAEY,YAAY,GAAG,MAAH,GAAY,UAPhC;AAQE,IAAA,SAAS,EACP,MAAC,IAAD;AACE,MAAA,OAAO,EAAEG,wBADX;AAEE,MAAA,IAAI,EAAEH,YAAY,GAAG,MAAH,GAAY,UAFhC;AAGE,MAAA,KAAK,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ;AAeE,IAAA,SAAS,EAAE,CAAC,CAACH,MAAM,CAACU,OAAP,CAAenB,QAAjB,IAA6B,CAAC,CAACS,MAAM,CAACS,MAAP,CAAclB,QAf1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3DF,EA8EE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,YAAY,EAAC,MAHf;AAIE,IAAA,QAAQ,EAAES,MAAM,CAACQ,YAJnB;AAKE,IAAA,SAAS,EAAER,MAAM,CAACE,MAAP,CAAcR,YAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAOqB,GAPrB,EAQE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,mBAAjB;AAAqC,IAAA,UAAU,MAA/C;AAAgD,IAAA,KAAK,EAAC,UAAtD;AAAiE,IAAA,QAAQ,EAAE,CAAC,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF,CADF,CA9EF,EA4FE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,YAAY,EAAC,MAJf;AAKE,IAAA,UAAU,EAAC,SALb;AAME,IAAA,QAAQ,EAAC,MANX;AAOE,IAAA,UAAU,EAAC,QAPb;AAQE,IAAA,UAAU,EAAE,CAACM,MAAM,CAACE,MAAP,CAAcR,YAR7B;AASE,IAAA,SAAS,EAAEI,SATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA5FF,CADF;AA4GD","sourcesContent":["import { Box, Checkbox, Icon, Link as ChakraLink, Stack } from '@chakra-ui/core';\nimport { Input, Button } from 'app/components';\nimport { useFormik } from 'formik';\nimport * as React from 'react';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object().shape({\n  first_name: yup.string().required('First name is required'),\n  last_name: yup.string().required('Last name is required'),\n  organisation_name: yup.string().when('showOrganizationName', {\n    is: value => value === true,\n    otherwise: yup.string(),\n    then: yup.string().required('Organisation name is required'),\n  }),\n  password: yup\n    .string()\n    .min(6, 'Password must be at least 6 characters long')\n    .required('Password is required'),\n  email: yup.string().email('Invalid email format').required('Email name is required'),\n  agreeToTerms: yup.bool().required('Please agree to terms'),\n});\n\nexport type RegisterFormInitialValuesProps = yup.InferType<typeof validationSchema> & {\n  team_id?: string;\n  inviteToken?: string;\n  link?: string;\n  showOrganizationName?: boolean;\n};\n\nexport interface RegisterFormProps {\n  isLoading?: boolean;\n  showOrganizationName?: boolean;\n  onSubmit: (values: RegisterFormInitialValuesProps) => void;\n}\n\nexport function RegisterForm({\n  onSubmit,\n  isLoading,\n  showOrganizationName = true,\n}: RegisterFormProps) {\n  const formik = useFormik({\n    validationSchema,\n    initialValues: {\n      email: '',\n      password: '',\n      last_name: '',\n      first_name: '',\n      agreeToTerms: false,\n      organisation_name: '',\n      showOrganizationName,\n    },\n    onSubmit: (values: RegisterFormInitialValuesProps) => onSubmit(values),\n  });\n\n  const [viewPassword, setViewPassword] = React.useState(false);\n\n  const handleToggleViewPassword = () => {\n    setViewPassword(!viewPassword);\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Stack\n        mb=\"2rem\"\n        isInline\n        spacing={['0', '0', '24px', '24px']}\n        flexWrap={['wrap', 'wrap', 'unset', 'unset']}\n      >\n        <Box width={['100%', '100%', '48%', '48%']} mb={['24px', '24px', '0', '0']}>\n          <Input\n            autoFocus\n            type=\"text\"\n            id=\"first_name\"\n            name=\"first_name\"\n            label=\"First name\"\n            onChange={formik.handleChange}\n            value={formik.values.first_name}\n            errorMessage={formik.errors.first_name}\n            isInvalid={!!formik.touched.first_name && !!formik.errors.first_name}\n          />\n        </Box>\n        <Box width={['100%', '100%', '48%']}>\n          <Input\n            type=\"text\"\n            id=\"last_name\"\n            name=\"last_name\"\n            label=\"Last name\"\n            onChange={formik.handleChange}\n            value={formik.values.last_name}\n            errorMessage={formik.errors.last_name}\n            isInvalid={!!formik.touched.last_name && !!formik.errors.last_name}\n          />\n        </Box>\n      </Stack>\n      {showOrganizationName && (\n        <Box mb=\"2rem\">\n          <Input\n            type=\"text\"\n            id=\"organisation_name\"\n            name=\"organisation_name\"\n            label=\"Organisation name\"\n            onChange={formik.handleChange}\n            value={formik.values.organisation_name}\n            errorMessage={formik.errors.organisation_name}\n            isInvalid={!!formik.touched.organisation_name && !!formik.errors.organisation_name}\n          />\n        </Box>\n      )}\n      <Box mb=\"2rem\">\n        <Input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          label=\"Email address\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          errorMessage={formik.errors.email}\n          isInvalid={!!formik.touched.email && !!formik.errors.email}\n        />\n      </Box>\n      <Box mb=\"2rem\">\n        <Input\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n          errorMessage={formik.errors.password}\n          type={viewPassword ? 'text' : 'password'}\n          rightIcon={\n            <Icon\n              onClick={handleToggleViewPassword}\n              name={viewPassword ? 'view' : 'view-off'}\n              color=\"blue.500\"\n            />\n          }\n          isInvalid={!!formik.touched.password && !!formik.errors.password}\n        />\n      </Box>\n      <Box mb=\"2rem\">\n        <Checkbox\n          size=\"md\"\n          name=\"agreeToTerms\"\n          variantColor=\"blue\"\n          onChange={formik.handleChange}\n          isChecked={formik.values.agreeToTerms}\n        >\n          I agree to Simpu's{' '}\n          <ChakraLink href=\"/terms-conditions\" isExternal color=\"blue.500\" tabIndex={-1}>\n            Terms & Privacy Policy\n          </ChakraLink>\n        </Checkbox>\n      </Box>\n      <Button\n        width=\"100%\"\n        height=\"50px\"\n        type=\"submit\"\n        variantColor=\"blue\"\n        background=\"#3d50df\"\n        fontSize=\"18px\"\n        fontWeight=\"normal\"\n        isDisabled={!formik.values.agreeToTerms}\n        isLoading={isLoading}\n      >\n        Sign up\n      </Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}