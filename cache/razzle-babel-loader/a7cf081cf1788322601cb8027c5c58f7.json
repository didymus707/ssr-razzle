{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/data-models/create-data-model/stages/map-schema.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, Collapse, Icon, IconButton, PseudoBox } from '@chakra-ui/core/dist';\nimport { Button, EmptyState, Select } from 'app/components';\nimport noResources from '../../../../../../assets/no-resources.svg';\n\nconst AddedTableItem = props => {\n  const {\n    table_name,\n    columns,\n    isExpanded,\n    expand,\n    collapse,\n    removeColumn,\n    index,\n    baseTable,\n    relationship\n  } = props;\n\n  const generateRelationshipOptions = () => {\n    const options = [];\n    columns.forEach(i => {\n      baseTable.columns.forEach(j => {\n        options.push({\n          value: `${table_name}.${i.value} = ${baseTable.table_name}.${j.name}`,\n          label: `${i.value} = ${baseTable.table_name}.${j.name}`\n        });\n      });\n    });\n    return options;\n  };\n\n  let relationshipOptions = [];\n\n  if (index > 0) {\n    relationshipOptions = generateRelationshipOptions();\n  }\n\n  return __jsx(PseudoBox, {\n    fontWeight: \"500\",\n    padding: \"15px\",\n    borderRadius: \"10px\",\n    cursor: \"default\",\n    backgroundColor: isExpanded ? '#FAFAFA' : '#FFFFFF',\n    _hover: {\n      backgroundColor: '#FAFAFA'\n    },\n    onClick: !isExpanded ? expand : collapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    overflowX: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, table_name), index === 0 && __jsx(Box, {\n    marginLeft: \"20px\",\n    fontSize: \"10px\",\n    color: \"#32a852\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    backgroundColor: \"rgba(50, 168, 82, 0.2)\",\n    borderRadius: \"5px\",\n    padding: \"2px 5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"base\")), __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, isExpanded ? __jsx(Icon, {\n    name: \"chevron-up\",\n    size: \"20px\",\n    ml: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }) : __jsx(Icon, {\n    name: \"chevron-down\",\n    size: \"20px\",\n    ml: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }))), __jsx(Box, {\n    mt: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, index !== 0 && __jsx(Select, {\n    label: \"Relationship\",\n    isInvalid: !relationship,\n    errorMessage: \"Table relationship is required\",\n    width: \"100%\",\n    value: relationship ? `${relationship.target} = ${relationship.base}` : undefined,\n    onClick: event => event.stopPropagation(),\n    onChange: event => {\n      const value = event.target.value;\n\n      if (value === 'null') {\n        props.clearTableRelationship(table_name);\n      } else {\n        const [target, base] = value.split(' = ');\n        props.setTableRelationship(table_name, base, target);\n      }\n    },\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"null\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Select relationship\"), relationshipOptions.map(i => __jsx(\"option\", {\n    key: i.value,\n    value: i.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, i.label)))), __jsx(Collapse, {\n    marginTop: \"20px\",\n    marginBottom: \"10px\",\n    isOpen: isExpanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, columns.map((i, index) => __jsx(AddedColumnItem, {\n    key: index,\n    name: i.value,\n    removeColumn: () => removeColumn(table_name, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst TableItem = props => {\n  const {\n    table_name,\n    columns,\n    isExpanded,\n    expand,\n    collapse,\n    addColumn\n  } = props;\n  return __jsx(PseudoBox, {\n    fontWeight: \"500\",\n    padding: \"15px\",\n    borderRadius: \"10px\",\n    cursor: \"default\",\n    backgroundColor: isExpanded ? '#FAFAFA' : '#FFFFFF',\n    _hover: {\n      backgroundColor: '#FAFAFA'\n    },\n    onClick: !isExpanded ? expand : collapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, table_name), isExpanded ? __jsx(Icon, {\n    name: \"chevron-up\",\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }) : __jsx(Icon, {\n    name: \"chevron-down\",\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), __jsx(Collapse, {\n    marginTop: \"20px\",\n    marginBottom: \"10px\",\n    isOpen: isExpanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, columns.map((i, index) => __jsx(ColumnItem, _extends({\n    key: index\n  }, i, {\n    addColumn: () => addColumn(table_name, i.name, i.data_type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  })))));\n};\n\nconst AddedColumnItem = props => {\n  const {\n    name,\n    removeColumn\n  } = props;\n  return __jsx(PseudoBox, {\n    fontWeight: \"400\",\n    fontSize: \"12px\",\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    _hover: {\n      backgroundColor: '#efefef'\n    },\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    onClick: event => {\n      event.stopPropagation();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, name), __jsx(IconButton // @ts-ignore\n  , {\n    icon: \"trash\",\n    \"aria-label\": \"remove-column\",\n    size: \"xs\",\n    borderRadius: \"10px\",\n    onClick: removeColumn,\n    variant: \"ghost\",\n    variantColor: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ColumnItem = props => {\n  const {\n    name,\n    addColumn\n  } = props;\n  return __jsx(PseudoBox, {\n    fontWeight: \"400\",\n    fontSize: \"12px\",\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    _hover: {\n      backgroundColor: '#efefef'\n    },\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    onClick: event => {\n      event.stopPropagation();\n      addColumn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, name), __jsx(IconButton, {\n    icon: \"arrow-right\",\n    \"aria-label\": \"add-column\",\n    size: \"xs\",\n    borderRadius: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const MapSchema = props => {\n  const {\n    0: expandedLeft,\n    1: setExpandedLeft\n  } = useState(null);\n  const {\n    0: expandedRight,\n    1: setExpandedRight\n  } = useState(null);\n  const {\n    schema,\n    goBack,\n    addedColumns,\n    setAddedColumns,\n    proceed\n  } = props;\n\n  const addColumn = (tableName, columnName, data_type) => {\n    if (!addedColumns[tableName]) {\n      setAddedColumns(_objectSpread(_objectSpread({}, addedColumns), {}, {\n        [tableName]: {\n          table_name: tableName,\n          columns: [{\n            value: columnName,\n            data_type\n          }],\n          relationship: null\n        }\n      }));\n    } else {\n      if (!addedColumns[tableName]['columns'].find(i => i.value === columnName)) {\n        setAddedColumns(_objectSpread(_objectSpread({}, addedColumns), {}, {\n          [tableName]: _objectSpread(_objectSpread({}, addedColumns[tableName]), {}, {\n            columns: [...addedColumns[tableName]['columns'], {\n              value: columnName,\n              data_type\n            }]\n          })\n        }));\n      }\n    }\n\n    setExpandedRight(tableName);\n  };\n\n  const removeColumn = (tableName, columnName) => {\n    if (addedColumns[tableName]['columns'].length > 1) {\n      const updatedAddedColumns = _objectSpread(_objectSpread({}, addedColumns), {}, {\n        [tableName]: _objectSpread(_objectSpread({}, addedColumns[tableName]), {}, {\n          columns: addedColumns[tableName]['columns'].filter(i => i.value !== columnName)\n        })\n      });\n\n      setAddedColumns(updatedAddedColumns);\n    } else {\n      const updatedAddedColumns = _objectSpread({}, addedColumns);\n\n      delete updatedAddedColumns[tableName];\n      setAddedColumns(updatedAddedColumns);\n      setExpandedRight(null);\n    }\n  };\n\n  const setTableRelationship = (table_name, base, target) => {\n    const updatedAddedColumns = _objectSpread({}, addedColumns);\n\n    updatedAddedColumns[table_name]['relationship'] = {\n      base,\n      target\n    };\n    setAddedColumns(updatedAddedColumns);\n  };\n\n  const clearTableRelationship = table_name => {\n    const updatedAddedColumns = _objectSpread({}, addedColumns);\n\n    updatedAddedColumns[table_name]['relationship'] = null;\n    setAddedColumns(updatedAddedColumns);\n  };\n\n  const getTable = tableName => {\n    const table = schema.find(i => i.table_name === tableName);\n    return table;\n  };\n\n  const checkRelationshipsValid = () => {\n    if (Object.keys(addedColumns).length === 0) {\n      return false;\n    }\n\n    const nullRelation = Object.values(addedColumns).find((i, index) => index > 0 && !i.relationship);\n\n    if (nullRelation) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const isColumnsValid = checkRelationshipsValid();\n  return __jsx(React.Fragment, null, schema.length === 0 && __jsx(React.Fragment, null, __jsx(EmptyState, {\n    image: noResources,\n    paddingY: \"20px\",\n    heading: 'Oops, no tables available on this database',\n    subheading: `Select a connection that contains tables, so you can import your data`,\n    subheadingProps: {\n      width: '400px'\n    },\n    children: __jsx(Button, {\n      variantColor: \"blue\",\n      variant: \"outline\",\n      onClick: goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 15\n      }\n    }, \"Select data source\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  })), schema.length > 0 && __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }\n  }, \"Select your base table, and then specify joined tables and their relationship conditions\"), __jsx(Box, {\n    marginTop: \"30px\",\n    fontSize: \"14px\",\n    color: \"#333333\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    width: \"48%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, \"All columns\"), __jsx(Box, {\n    marginTop: \"15px\",\n    maxHeight: \"calc(100vh - 470px)\",\n    overflowY: \"scroll\",\n    paddingLeft: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  }, schema.map((i, index) => __jsx(TableItem, _extends({\n    key: index\n  }, i, {\n    isExpanded: expandedLeft === i.table_name,\n    expand: () => setExpandedLeft(i.table_name),\n    collapse: () => setExpandedLeft(null),\n    addColumn: addColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }))))), __jsx(Box, {\n    width: \"48%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }, \"Added columns\"), __jsx(Box, {\n    marginTop: \"15px\",\n    maxHeight: \"calc(100vh - 470px)\",\n    overflowY: \"scroll\",\n    paddingLeft: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 15\n    }\n  }, Object.keys(addedColumns).map((i, index) => {\n    return __jsx(AddedTableItem, {\n      key: i,\n      baseTable: getTable(Object.keys(addedColumns)[0]),\n      index: index,\n      table_name: addedColumns[i]['table_name'],\n      columns: addedColumns[i]['columns'],\n      relationship: addedColumns[i]['relationship'],\n      isExpanded: i === expandedRight,\n      expand: () => setExpandedRight(i),\n      collapse: () => setExpandedRight(null),\n      removeColumn: removeColumn,\n      setTableRelationship: setTableRelationship,\n      clearTableRelationship: clearTableRelationship,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }\n    });\n  }), Object.keys(addedColumns).length === 0 && __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 19\n    }\n  }, \"No columns have been added to this data model yet, you can add columns by clicking in the table and column list on the left\")))), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    mt: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variantColor: \"blue\",\n    variant: \"solid\",\n    onClick: proceed,\n    isDisabled: !isColumnsValid,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }\n  }, \"Proceed\"))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/data-models/create-data-model/stages/map-schema.tsx"],"names":["React","useState","Box","Collapse","Icon","IconButton","PseudoBox","Button","EmptyState","Select","noResources","AddedTableItem","props","table_name","columns","isExpanded","expand","collapse","removeColumn","index","baseTable","relationship","generateRelationshipOptions","options","forEach","i","j","push","value","name","label","relationshipOptions","backgroundColor","target","base","undefined","event","stopPropagation","clearTableRelationship","split","setTableRelationship","map","TableItem","addColumn","data_type","AddedColumnItem","ColumnItem","MapSchema","expandedLeft","setExpandedLeft","expandedRight","setExpandedRight","schema","goBack","addedColumns","setAddedColumns","proceed","tableName","columnName","find","length","updatedAddedColumns","filter","getTable","table","checkRelationshipsValid","Object","keys","nullRelation","values","isColumnsValid","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Collapse, Icon, IconButton, PseudoBox } from '@chakra-ui/core/dist';\nimport { Button, EmptyState, Select } from 'app/components';\nimport noResources from '../../../../../../assets/no-resources.svg';\n\ninterface AddedTableItemProps {\n  index: number;\n  table_name: string;\n  relationship: {\n    base: string;\n    target: string;\n  } | null;\n  baseTable: any;\n  columns: { value: string; data_type: string }[];\n  isExpanded: boolean;\n  expand: () => void;\n  collapse: () => void;\n  removeColumn: Function;\n  setTableRelationship: Function;\n  clearTableRelationship: Function;\n}\n\nconst AddedTableItem = (props: AddedTableItemProps) => {\n  const {\n    table_name,\n    columns,\n    isExpanded,\n    expand,\n    collapse,\n    removeColumn,\n    index,\n    baseTable,\n    relationship,\n  } = props;\n\n  const generateRelationshipOptions = () => {\n    const options: { label: string; value: string }[] = [];\n\n    columns.forEach((i: any) => {\n      baseTable.columns.forEach((j: any) => {\n        options.push({\n          value: `${table_name}.${i.value} = ${baseTable.table_name}.${j.name}`,\n          label: `${i.value} = ${baseTable.table_name}.${j.name}`,\n        });\n      });\n    });\n    return options;\n  };\n\n  let relationshipOptions: { label: string; value: string }[] = [];\n\n  if (index > 0) {\n    relationshipOptions = generateRelationshipOptions();\n  }\n\n  return (\n    <PseudoBox\n      fontWeight=\"500\"\n      padding=\"15px\"\n      borderRadius=\"10px\"\n      cursor=\"default\"\n      backgroundColor={isExpanded ? '#FAFAFA' : '#FFFFFF'}\n      _hover={{\n        backgroundColor: '#FAFAFA',\n      }}\n      onClick={!isExpanded ? expand : collapse}\n    >\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box overflowX=\"hidden\">{table_name}</Box>\n          {index === 0 && (\n            <Box\n              marginLeft=\"20px\"\n              fontSize=\"10px\"\n              color=\"#32a852\"\n              textAlign=\"center\"\n              alignSelf=\"center\"\n              backgroundColor=\"rgba(50, 168, 82, 0.2)\"\n              borderRadius=\"5px\"\n              padding=\"2px 5px\"\n            >\n              base\n            </Box>\n          )}\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\">\n          {isExpanded ? (\n            <Icon name=\"chevron-up\" size=\"20px\" ml=\"10px\" />\n          ) : (\n            <Icon name=\"chevron-down\" size=\"20px\" ml=\"10px\" />\n          )}\n        </Box>\n      </Box>\n\n      <Box mt=\"1rem\">\n        {index !== 0 && (\n          <Select\n            label=\"Relationship\"\n            isInvalid={!relationship}\n            errorMessage=\"Table relationship is required\"\n            width=\"100%\"\n            value={relationship ? `${relationship.target} = ${relationship.base}` : undefined}\n            onClick={event => event.stopPropagation()}\n            onChange={event => {\n              const value = event.target.value;\n              if (value === 'null') {\n                props.clearTableRelationship(table_name);\n              } else {\n                const [target, base] = value.split(' = ');\n                props.setTableRelationship(table_name, base, target);\n              }\n            }}\n            size=\"sm\"\n          >\n            <option value=\"null\">Select relationship</option>\n            {relationshipOptions.map((i: any) => (\n              <option key={i.value} value={i.value}>\n                {i.label}\n              </option>\n            ))}\n          </Select>\n        )}\n      </Box>\n\n      <Collapse marginTop=\"20px\" marginBottom=\"10px\" isOpen={isExpanded}>\n        {columns.map((i: { value: string; data_type: string }, index: number) => (\n          <AddedColumnItem\n            key={index}\n            name={i.value}\n            removeColumn={() => removeColumn(table_name, i)}\n          />\n        ))}\n      </Collapse>\n    </PseudoBox>\n  );\n};\n\ninterface TableItemProps {\n  columns: any[];\n  table_name: string;\n  isExpanded: boolean;\n  expand: () => void;\n  collapse: () => void;\n  addColumn: Function;\n}\n\nconst TableItem = (props: TableItemProps) => {\n  const { table_name, columns, isExpanded, expand, collapse, addColumn } = props;\n\n  return (\n    <PseudoBox\n      fontWeight=\"500\"\n      padding=\"15px\"\n      borderRadius=\"10px\"\n      cursor=\"default\"\n      backgroundColor={isExpanded ? '#FAFAFA' : '#FFFFFF'}\n      _hover={{\n        backgroundColor: '#FAFAFA',\n      }}\n      onClick={!isExpanded ? expand : collapse}\n    >\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box>{table_name}</Box>\n        {isExpanded ? (\n          <Icon name=\"chevron-up\" size=\"20px\" />\n        ) : (\n          <Icon name=\"chevron-down\" size=\"20px\" />\n        )}\n      </Box>\n      <Collapse marginTop=\"20px\" marginBottom=\"10px\" isOpen={isExpanded}>\n        {columns.map((i: any, index: number) => (\n          <ColumnItem\n            key={index}\n            {...i}\n            addColumn={() => addColumn(table_name, i.name, i.data_type)}\n          />\n        ))}\n      </Collapse>\n    </PseudoBox>\n  );\n};\n\ninterface AddedColumnItemProps {\n  name: string;\n  removeColumn: () => void;\n}\n\nconst AddedColumnItem = (props: AddedColumnItemProps) => {\n  const { name, removeColumn } = props;\n  return (\n    <PseudoBox\n      fontWeight=\"400\"\n      fontSize=\"12px\"\n      padding=\"8px\"\n      borderRadius=\"8px\"\n      cursor=\"pointer\"\n      _hover={{\n        backgroundColor: '#efefef',\n      }}\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      onClick={event => {\n        event.stopPropagation();\n      }}\n    >\n      <Box>{name}</Box>\n      <IconButton\n        // @ts-ignore\n        icon=\"trash\"\n        aria-label=\"remove-column\"\n        size=\"xs\"\n        borderRadius=\"10px\"\n        onClick={removeColumn}\n        variant=\"ghost\"\n        variantColor=\"red\"\n      />\n    </PseudoBox>\n  );\n};\n\ninterface ColumnItemProps {\n  name: string;\n  addColumn: () => void;\n}\n\nconst ColumnItem = (props: ColumnItemProps) => {\n  const { name, addColumn } = props;\n  return (\n    <PseudoBox\n      fontWeight=\"400\"\n      fontSize=\"12px\"\n      padding=\"8px\"\n      borderRadius=\"8px\"\n      cursor=\"pointer\"\n      _hover={{\n        backgroundColor: '#efefef',\n      }}\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      onClick={event => {\n        event.stopPropagation();\n        addColumn();\n      }}\n    >\n      <Box>{name}</Box>\n      <IconButton icon=\"arrow-right\" aria-label=\"add-column\" size=\"xs\" borderRadius=\"10px\" />\n    </PseudoBox>\n  );\n};\n\ninterface Props {\n  schema: any[];\n  goBack: () => void;\n  proceed: () => void;\n  addedColumns: {\n    [key: string]: {\n      table_name: string;\n      columns: { value: string; data_type: string }[];\n      relationship: any;\n    };\n  };\n  setAddedColumns: Function;\n}\n\nexport const MapSchema = (props: Props) => {\n  const [expandedLeft, setExpandedLeft] = useState<string | null>(null);\n  const [expandedRight, setExpandedRight] = useState<string | null>(null);\n\n  const { schema, goBack, addedColumns, setAddedColumns, proceed } = props;\n\n  const addColumn = (tableName: string, columnName: string, data_type: string) => {\n    if (!addedColumns[tableName]) {\n      setAddedColumns({\n        ...addedColumns,\n        [tableName]: {\n          table_name: tableName,\n          columns: [{ value: columnName, data_type }],\n          relationship: null,\n        },\n      });\n    } else {\n      if (!addedColumns[tableName]['columns'].find((i: any) => i.value === columnName)) {\n        setAddedColumns({\n          ...addedColumns,\n          [tableName]: {\n            ...addedColumns[tableName],\n            columns: [...addedColumns[tableName]['columns'], { value: columnName, data_type }],\n          },\n        });\n      }\n    }\n    setExpandedRight(tableName);\n  };\n\n  const removeColumn = (tableName: string, columnName: string) => {\n    if (addedColumns[tableName]['columns'].length > 1) {\n      const updatedAddedColumns = {\n        ...addedColumns,\n        [tableName]: {\n          ...addedColumns[tableName],\n          columns: addedColumns[tableName]['columns'].filter((i: any) => i.value !== columnName),\n        },\n      };\n      setAddedColumns(updatedAddedColumns);\n    } else {\n      const updatedAddedColumns = { ...addedColumns };\n      delete updatedAddedColumns[tableName];\n      setAddedColumns(updatedAddedColumns);\n      setExpandedRight(null);\n    }\n  };\n\n  const setTableRelationship = (table_name: string, base: string, target: string) => {\n    const updatedAddedColumns = { ...addedColumns };\n    updatedAddedColumns[table_name]['relationship'] = {\n      base,\n      target,\n    };\n    setAddedColumns(updatedAddedColumns);\n  };\n\n  const clearTableRelationship = (table_name: string) => {\n    const updatedAddedColumns = { ...addedColumns };\n    updatedAddedColumns[table_name]['relationship'] = null;\n    setAddedColumns(updatedAddedColumns);\n  };\n\n  const getTable = (tableName: string) => {\n    const table = schema.find((i: any) => i.table_name === tableName);\n    return table;\n  };\n\n  const checkRelationshipsValid = () => {\n    if (Object.keys(addedColumns).length === 0) {\n      return false;\n    }\n\n    const nullRelation = Object.values(addedColumns).find(\n      (i: any, index: number) => index > 0 && !i.relationship,\n    );\n    if (nullRelation) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const isColumnsValid: boolean = checkRelationshipsValid();\n\n  return (\n    <>\n      {schema.length === 0 && (\n        <>\n          <EmptyState\n            image={noResources}\n            paddingY=\"20px\"\n            heading={'Oops, no tables available on this database'}\n            subheading={`Select a connection that contains tables, so you can import your data`}\n            subheadingProps={{\n              width: '400px',\n            }}\n            children={\n              <Button variantColor=\"blue\" variant=\"outline\" onClick={goBack}>\n                Select data source\n              </Button>\n            }\n          />\n        </>\n      )}\n\n      {schema.length > 0 && (\n        <>\n          <Box className=\"description\">\n            Select your base table, and then specify joined tables and their relationship conditions\n          </Box>\n          <Box\n            marginTop=\"30px\"\n            fontSize=\"14px\"\n            color=\"#333333\"\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n          >\n            <Box width=\"48%\">\n              <Box fontWeight=\"500\">All columns</Box>\n              <Box\n                marginTop=\"15px\"\n                maxHeight=\"calc(100vh - 470px)\"\n                overflowY=\"scroll\"\n                paddingLeft=\"10px\"\n              >\n                {schema.map((i: any, index: number) => (\n                  <TableItem\n                    key={index}\n                    {...i}\n                    isExpanded={expandedLeft === i.table_name}\n                    expand={() => setExpandedLeft(i.table_name)}\n                    collapse={() => setExpandedLeft(null)}\n                    addColumn={addColumn}\n                  />\n                ))}\n              </Box>\n            </Box>\n            <Box width=\"48%\">\n              <Box fontWeight=\"500\">Added columns</Box>\n              <Box\n                marginTop=\"15px\"\n                maxHeight=\"calc(100vh - 470px)\"\n                overflowY=\"scroll\"\n                paddingLeft=\"10px\"\n              >\n                {Object.keys(addedColumns).map((i: string, index: number) => {\n                  return (\n                    <AddedTableItem\n                      key={i}\n                      baseTable={getTable(Object.keys(addedColumns)[0])}\n                      index={index}\n                      table_name={addedColumns[i]['table_name']}\n                      columns={addedColumns[i]['columns']}\n                      relationship={addedColumns[i]['relationship']}\n                      isExpanded={i === expandedRight}\n                      expand={() => setExpandedRight(i)}\n                      collapse={() => setExpandedRight(null)}\n                      removeColumn={removeColumn}\n                      setTableRelationship={setTableRelationship}\n                      clearTableRelationship={clearTableRelationship}\n                    />\n                  );\n                })}\n                {Object.keys(addedColumns).length === 0 && (\n                  <Box>\n                    No columns have been added to this data model yet, you can add columns by\n                    clicking in the table and column list on the left\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </Box>\n          <Box display=\"flex\" justifyContent=\"flex-end\" mt=\"1rem\">\n            <Button\n              variantColor=\"blue\"\n              variant=\"solid\"\n              onClick={proceed}\n              isDisabled={!isColumnsValid}\n              size=\"sm\"\n            >\n              Proceed\n            </Button>\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}