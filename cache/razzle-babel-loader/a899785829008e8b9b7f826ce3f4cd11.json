{"ast":null,"code":"import _objectWithoutProperties from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"isInvalid\", \"isLoading\", \"onSubmit\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/filters/ConversationFilters.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Icon, InputGroup, InputRightElement, Popover, PopoverBody, PopoverContent, Skeleton, Stack, useToast } from '@chakra-ui/core';\nimport { BodyText, Button, Input, OutsideClickHandler, ToastBox, XSmallText } from 'app/components';\nimport React, { useRef, useState } from 'react';\nimport FocusLock from 'react-focus-lock';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router';\nimport { channelOptions } from '../..';\nimport { typeOptions } from '../../inbox.data';\nimport { createTag } from '../../inbox.service';\nimport { ColorPicker } from './ColorPicker';\nimport { ConversationFilterAccordion, ConversationFilterAccordionItem } from './ConversationFilterAccordion';\nexport const ConversationFilters = props => {\n  const {\n    tags,\n    onFilter,\n    channels,\n    activeFilter,\n    isFetchingTags,\n    filtersUnreadCount,\n    isFetchingChannels\n  } = props;\n  const uniqChannels = new Set(channels === null || channels === void 0 ? void 0 : channels.map(item => item.user.channel_name)); //@ts-ignore\n\n  const userChannels = [...uniqChannels];\n  const channelsWithId = {};\n  channels === null || channels === void 0 ? void 0 : channels.forEach(({\n    uuid,\n    user\n  }) => {\n    if (Object.keys(channelsWithId).includes(user.channel_name)) {\n      channelsWithId[user.channel_name].push(uuid);\n      return;\n    }\n\n    channelsWithId[user.channel_name] = [uuid];\n  });\n  const history = useHistory();\n\n  const handleChannelFilterClick = channel => {\n    const ids = channelsWithId[channel];\n    onFilter === null || onFilter === void 0 ? void 0 : onFilter(channel, ids);\n  };\n\n  const handleTagFilterClick = tag => {\n    const {\n      name,\n      uuid\n    } = tag;\n    onFilter === null || onFilter === void 0 ? void 0 : onFilter(name, uuid);\n  };\n\n  return __jsx(Box, {\n    bg: \"white\",\n    pl: \"1.5rem\",\n    pr: \"0.5rem\",\n    pt: \"1.5rem\",\n    pb: \"8.125rem\",\n    width: \"305px\",\n    height: \"100vh\",\n    overflowY: \"auto\",\n    position: \"relative\",\n    borderRightWidth: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(ConversationFilterAccordion, {\n    title: \"Inbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, Object.keys(typeOptions).map((item, index) => {\n    const value = typeOptions[item];\n    return __jsx(Box, {\n      key: index.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, __jsx(ConversationFilterAccordionItem, _extends({\n      onClick: onFilter,\n      isActive: activeFilter === value.label,\n      rightSection: () => !!(filtersUnreadCount !== null && filtersUnreadCount !== void 0 && filtersUnreadCount[item]) ? __jsx(XSmallText, {\n        color: \"blue.500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }\n      }, filtersUnreadCount === null || filtersUnreadCount === void 0 ? void 0 : filtersUnreadCount[item]) : null\n    }, value, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })));\n  }))), __jsx(ConversationFilterAccordion, {\n    title: \"Channels\",\n    addons: __jsx(ChannelsAccordionAddons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 61\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, isFetchingChannels ? Array.from({\n    length: 6\n  }, (v, i) => __jsx(Box, {\n    key: `${i.toString()}-${new Date().getTime()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(Skeleton, {\n    height: \"25px\",\n    mb: \"0.2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }))) : userChannels.map((item, index) => __jsx(Box, {\n    key: index.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(ConversationFilterAccordionItem, _extends({\n    onClick: handleChannelFilterClick,\n    isActive: activeFilter === item\n  }, channelOptions[item], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  })))))), __jsx(ConversationFilterAccordion, {\n    title: \"Tags\",\n    defaultIndex: [1],\n    addons: __jsx(TagsAccordionAddons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 76\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, isFetchingTags ? Array.from({\n    length: 6\n  }, (v, i) => __jsx(Box, {\n    key: `${i.toString()}-${new Date().getTime()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, __jsx(Skeleton, {\n    height: \"25px\",\n    mb: \"0.2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }))) : tags === null || tags === void 0 ? void 0 : tags.map((item, index) => __jsx(Box, {\n    key: index.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, __jsx(ConversationFilterAccordionItem, {\n    icon: \"inbox-tag\",\n    label: item.name,\n    iconColor: item.color,\n    isActive: activeFilter === item.name,\n    onClick: () => handleTagFilterClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, item.name))))), __jsx(Flex, {\n    left: \"0\",\n    bottom: \"0\",\n    px: \"1.5rem\",\n    width: \"305px\",\n    bg: \"gray.200\",\n    position: \"fixed\",\n    cursor: \"pointer\",\n    height: \"3.125rem\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    onClick: () => history.push('/s/inbox/settings'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    width: \"100%\",\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    color: \"gray.900\",\n    name: \"inbox-settings\",\n    size: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }), __jsx(BodyText, {\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Settings\"))));\n};\n\nconst ChannelsAccordionAddons = () => {\n  const history = useHistory();\n  return __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    variant: \"unstyled\",\n    onClick: e => {\n      e.stopPropagation();\n      history.push('/s/inbox/settings');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    size: \"1.5rem\",\n    color: \"gray.800\",\n    name: \"inbox-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst TagsAccordionAddons = () => {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: color,\n    1: setColor\n  } = useState('#DA9728');\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const inputRef = useRef();\n\n  const open = () => setIsOpen(!isOpen);\n\n  const close = () => setIsOpen(false);\n\n  const toast = useToast();\n  const queryClient = useQueryClient();\n  const {\n    isLoading: isCreatingTag,\n    mutate: mutateCreateTag\n  } = useMutation(payload => createTag(payload), {\n    onMutate: async data => {\n      await queryClient.cancelQueries('tags');\n      const previousTags = queryClient.getQueryData('tags'); //@ts-ignore\n\n      queryClient.setQueryData('tags', old => [...old, data]);\n      return {\n        previousTags\n      };\n    },\n    onSuccess: () => {\n      handleCloseCreateTagMenu();\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Tag created successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 11\n          }\n        })\n      });\n      queryClient.invalidateQueries('tags');\n    },\n    onError: error => toast({\n      position: 'bottom-left',\n      render: ({\n        onClose\n      }) => __jsx(ToastBox, {\n        onClose: onClose,\n        message: error.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 34\n        }\n      })\n    })\n  });\n\n  const handleCreateTag = values => {\n    mutateCreateTag(values);\n  };\n\n  const handleCloseCreateTagMenu = () => {\n    setName('');\n    close();\n  };\n\n  const handleOpenCreateTagMenu = e => {\n    e.stopPropagation();\n    open();\n  };\n\n  const handleSubmit = e => {\n    e.stopPropagation();\n    handleCreateTag({\n      color,\n      name\n    });\n  };\n\n  return __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    variant: \"unstyled\",\n    onClick: handleOpenCreateTagMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    size: \"1.5rem\",\n    color: \"gray.800\",\n    name: \"inbox-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  })), __jsx(Popover, {\n    initialFocusRef: inputRef,\n    isOpen: isOpen,\n    onClose: handleCloseCreateTagMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, __jsx(OutsideClickHandler, {\n    maxW: \"200px\",\n    display: \"block\",\n    onClickOutside: handleCloseCreateTagMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, __jsx(PopoverContent, {\n    zIndex: 4,\n    top: \"2rem\",\n    right: \"0\",\n    maxW: \"200px\",\n    borderWidth: \"0\",\n    position: \"absolute\",\n    onClick: e => e.stopPropagation(),\n    boxShadow: \"0px 10px 15px rgba(0, 0, 0, 0.06)\",\n    _focus: {\n      boxShadow: '0px 10px 15px rgba(0, 0, 0, 0.06)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, __jsx(FocusLock, {\n    returnFocus: true,\n    persistentFocus: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, __jsx(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, __jsx(TextInput, {\n    ref: inputRef,\n    isInvalid: !name,\n    onSubmit: handleSubmit,\n    isLoading: isCreatingTag,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }\n  }), __jsx(ColorPicker, {\n    color: color,\n    onChange: setColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nconst TextInput = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    isInvalid,\n    isLoading,\n    onSubmit\n  } = props,\n        rest = _objectWithoutProperties(props, _excluded);\n\n  return __jsx(InputGroup, {\n    mb: \"0.5rem\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, __jsx(Input, _extends({\n    size: \"sm\",\n    ref: ref,\n    pr: \"2.5rem\",\n    rounded: \"50px\",\n    isInvalid: isInvalid,\n    borderColor: \"gray.200\",\n    placeholder: \"Tag name\",\n    errorMessage: \"Tag name is required\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  })), __jsx(InputRightElement, {\n    width: \"2.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    px: \"0\",\n    size: \"xs\",\n    rounded: \"50%\",\n    onClick: onSubmit,\n    isLoading: isLoading,\n    isDisabled: isInvalid,\n    bg: \"rgba(57, 68, 82, 0.35)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, __jsx(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    fill: \"none\",\n    viewBox: \"0 0 12 12\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, __jsx(\"path\", {\n    d: \"M11 5H8C7.448 5 7 4.552 7 4V1C7 0.448 6.552 0 6 0C5.448 0 5 0.448 5 1V4C5 4.552 4.552 5 4 5H1C0.448 5 0 5.448 0 6C0 6.552 0.448 7 1 7H4C4.552 7 5 7.448 5 8V11C5 11.552 5.448 12 6 12C6.552 12 7 11.552 7 11V8C7 7.448 7.448 7 8 7H11C11.552 7 12 6.552 12 6C12 5.448 11.552 5 11 5Z\",\n    fill: \"#394452\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 15\n    }\n  })))));\n});","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/filters/ConversationFilters.tsx"],"names":["Box","Flex","Icon","InputGroup","InputRightElement","Popover","PopoverBody","PopoverContent","Skeleton","Stack","useToast","BodyText","Button","Input","OutsideClickHandler","ToastBox","XSmallText","React","useRef","useState","FocusLock","useMutation","useQueryClient","useHistory","channelOptions","typeOptions","createTag","ColorPicker","ConversationFilterAccordion","ConversationFilterAccordionItem","ConversationFilters","props","tags","onFilter","channels","activeFilter","isFetchingTags","filtersUnreadCount","isFetchingChannels","uniqChannels","Set","map","item","user","channel_name","userChannels","channelsWithId","forEach","uuid","Object","keys","includes","push","history","handleChannelFilterClick","channel","ids","handleTagFilterClick","tag","name","index","value","toString","label","Array","from","length","v","i","Date","getTime","color","ChannelsAccordionAddons","e","stopPropagation","TagsAccordionAddons","setName","setColor","isOpen","setIsOpen","inputRef","open","close","toast","queryClient","isLoading","isCreatingTag","mutate","mutateCreateTag","payload","onMutate","data","cancelQueries","previousTags","getQueryData","setQueryData","old","onSuccess","handleCloseCreateTagMenu","position","render","onClose","invalidateQueries","onError","error","message","handleCreateTag","values","handleOpenCreateTagMenu","handleSubmit","boxShadow","target","TextInput","forwardRef","ref","isInvalid","onSubmit","rest"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Icon,\n  InputGroup,\n  InputRightElement,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  Skeleton,\n  Stack,\n  useToast,\n} from '@chakra-ui/core';\nimport {\n  BodyText,\n  Button,\n  Input,\n  InputProps,\n  OutsideClickHandler,\n  ToastBox,\n  XSmallText,\n} from 'app/components';\nimport { AxiosError } from 'axios';\nimport React, { MouseEvent, useRef, useState } from 'react';\nimport FocusLock from 'react-focus-lock';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router';\nimport { channelOptions } from '../..';\nimport { typeOptions } from '../../inbox.data';\nimport { createTag } from '../../inbox.service';\nimport { Channel, InboxTag } from '../../inbox.types';\nimport { ColorPicker } from './ColorPicker';\nimport {\n  ConversationFilterAccordion,\n  ConversationFilterAccordionItem,\n} from './ConversationFilterAccordion';\n\nexport type ConversationFiltersProps = {\n  tags?: any[];\n  channels?: any[];\n  activeFilter?: string;\n  isFetchingTags?: boolean;\n  isFetchingChannels?: boolean;\n  filtersUnreadCount?: { [key: string]: number };\n  onFilter?(filter: string, ids?: string | string[]): void;\n};\n\nexport const ConversationFilters = (props: ConversationFiltersProps) => {\n  const {\n    tags,\n    onFilter,\n    channels,\n    activeFilter,\n    isFetchingTags,\n    filtersUnreadCount,\n    isFetchingChannels,\n  } = props;\n  const uniqChannels = new Set(channels?.map((item: any) => item.user.channel_name));\n  //@ts-ignore\n  const userChannels: Channel[] = [...uniqChannels];\n  const channelsWithId: any = {};\n\n  channels?.forEach(({ uuid, user }: { uuid: string; user: any }) => {\n    if (Object.keys(channelsWithId).includes(user.channel_name)) {\n      channelsWithId[user.channel_name].push(uuid);\n      return;\n    }\n    channelsWithId[user.channel_name] = [uuid];\n  });\n\n  const history = useHistory();\n\n  const handleChannelFilterClick = (channel: Channel) => {\n    const ids = channelsWithId[channel];\n    onFilter?.(channel, ids);\n  };\n\n  const handleTagFilterClick = (tag: any) => {\n    const { name, uuid } = tag;\n    onFilter?.(name, uuid);\n  };\n\n  return (\n    <Box\n      bg=\"white\"\n      pl=\"1.5rem\"\n      pr=\"0.5rem\"\n      pt=\"1.5rem\"\n      pb=\"8.125rem\"\n      width=\"305px\"\n      height=\"100vh\"\n      overflowY=\"auto\"\n      position=\"relative\"\n      borderRightWidth=\"1px\"\n    >\n      <ConversationFilterAccordion title=\"Inbox\">\n        <Stack>\n          {Object.keys(typeOptions).map((item, index) => {\n            const value = typeOptions[item];\n            return (\n              <Box key={index.toString()}>\n                <ConversationFilterAccordionItem\n                  onClick={onFilter}\n                  isActive={activeFilter === value.label}\n                  rightSection={() =>\n                    !!filtersUnreadCount?.[item] ? (\n                      <XSmallText color=\"blue.500\">{filtersUnreadCount?.[item]}</XSmallText>\n                    ) : null\n                  }\n                  {...value}\n                />\n              </Box>\n            );\n          })}\n        </Stack>\n      </ConversationFilterAccordion>\n      <ConversationFilterAccordion title=\"Channels\" addons={<ChannelsAccordionAddons />}>\n        <Stack>\n          {isFetchingChannels\n            ? Array.from({ length: 6 }, (v, i) => (\n                <Box key={`${i.toString()}-${new Date().getTime()}`}>\n                  <Skeleton height=\"25px\" mb=\"0.2rem\" />\n                </Box>\n              ))\n            : userChannels.map((item: Channel, index: number) => (\n                <Box key={index.toString()}>\n                  <ConversationFilterAccordionItem\n                    onClick={handleChannelFilterClick}\n                    isActive={activeFilter === item}\n                    {...channelOptions[item]}\n                  />\n                </Box>\n              ))}\n        </Stack>\n      </ConversationFilterAccordion>\n      <ConversationFilterAccordion title=\"Tags\" defaultIndex={[1]} addons={<TagsAccordionAddons />}>\n        <Stack>\n          {isFetchingTags\n            ? Array.from({ length: 6 }, (v, i) => (\n                <Box key={`${i.toString()}-${new Date().getTime()}`}>\n                  <Skeleton height=\"25px\" mb=\"0.2rem\" />\n                </Box>\n              ))\n            : tags?.map((item: any, index: number) => (\n                <Box key={index.toString()}>\n                  <ConversationFilterAccordionItem\n                    icon=\"inbox-tag\"\n                    label={item.name}\n                    iconColor={item.color}\n                    isActive={activeFilter === item.name}\n                    onClick={() => handleTagFilterClick(item)}\n                  >\n                    {item.name}\n                  </ConversationFilterAccordionItem>\n                </Box>\n              ))}\n        </Stack>\n      </ConversationFilterAccordion>\n      <Flex\n        left=\"0\"\n        bottom=\"0\"\n        px=\"1.5rem\"\n        width=\"305px\"\n        bg=\"gray.200\"\n        position=\"fixed\"\n        cursor=\"pointer\"\n        height=\"3.125rem\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        onClick={() => history.push('/s/inbox/settings')}\n      >\n        <Stack width=\"100%\" isInline alignItems=\"center\">\n          <Icon color=\"gray.900\" name=\"inbox-settings\" size=\"1.5rem\" />\n          <BodyText color=\"gray.900\">Settings</BodyText>\n        </Stack>\n      </Flex>\n    </Box>\n  );\n};\n\nconst ChannelsAccordionAddons = () => {\n  const history = useHistory();\n\n  return (\n    <Stack isInline alignItems=\"center\">\n      <Button\n        size=\"xs\"\n        variant=\"unstyled\"\n        onClick={e => {\n          e.stopPropagation();\n          history.push('/s/inbox/settings');\n        }}\n      >\n        <Icon size=\"1.5rem\" color=\"gray.800\" name=\"inbox-add\" />\n      </Button>\n    </Stack>\n  );\n};\n\nconst TagsAccordionAddons = () => {\n  const [name, setName] = useState('');\n  const [color, setColor] = useState('#DA9728');\n  const [isOpen, setIsOpen] = useState(false);\n  const inputRef = useRef<any>();\n\n  const open = () => setIsOpen(!isOpen);\n  const close = () => setIsOpen(false);\n\n  const toast = useToast();\n  const queryClient = useQueryClient();\n\n  const { isLoading: isCreatingTag, mutate: mutateCreateTag } = useMutation<\n    any,\n    AxiosError,\n    any,\n    any\n  >((payload: Partial<InboxTag>) => createTag(payload), {\n    onMutate: async data => {\n      await queryClient.cancelQueries('tags');\n      const previousTags = queryClient.getQueryData('tags');\n      //@ts-ignore\n      queryClient.setQueryData('tags', old => [...old, data]);\n      return { previousTags };\n    },\n    onSuccess: () => {\n      handleCloseCreateTagMenu();\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox status=\"success\" onClose={onClose} message=\"Tag created successfully\" />\n        ),\n      });\n      queryClient.invalidateQueries('tags');\n    },\n    onError: error =>\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n      }),\n  });\n\n  const handleCreateTag = (values: Partial<InboxTag>) => {\n    mutateCreateTag(values);\n  };\n\n  const handleCloseCreateTagMenu = () => {\n    setName('');\n    close();\n  };\n\n  const handleOpenCreateTagMenu = (e: MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    open();\n  };\n\n  const handleSubmit = (e: MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    handleCreateTag({ color, name });\n  };\n\n  return (\n    <Stack isInline alignItems=\"center\">\n      <Box>\n        <Button size=\"xs\" variant=\"unstyled\" onClick={handleOpenCreateTagMenu}>\n          <Icon size=\"1.5rem\" color=\"gray.800\" name=\"inbox-add\" />\n        </Button>\n        <Popover initialFocusRef={inputRef} isOpen={isOpen} onClose={handleCloseCreateTagMenu}>\n          <OutsideClickHandler\n            maxW=\"200px\"\n            display=\"block\"\n            onClickOutside={handleCloseCreateTagMenu}\n          >\n            <PopoverContent\n              zIndex={4}\n              top=\"2rem\"\n              right=\"0\"\n              maxW=\"200px\"\n              borderWidth=\"0\"\n              position=\"absolute\"\n              onClick={e => e.stopPropagation()}\n              boxShadow=\"0px 10px 15px rgba(0, 0, 0, 0.06)\"\n              _focus={{ boxShadow: '0px 10px 15px rgba(0, 0, 0, 0.06)' }}\n            >\n              <FocusLock returnFocus persistentFocus={false}>\n                <PopoverBody>\n                  <TextInput\n                    ref={inputRef}\n                    isInvalid={!name}\n                    onSubmit={handleSubmit}\n                    isLoading={isCreatingTag}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\n                  />\n                  <ColorPicker color={color} onChange={setColor} />\n                </PopoverBody>\n              </FocusLock>\n            </PopoverContent>\n          </OutsideClickHandler>\n        </Popover>\n      </Box>\n    </Stack>\n  );\n};\n\nconst TextInput = React.forwardRef(\n  (\n    props: Omit<InputProps, 'onSubmit'> & {\n      isLoading?: boolean;\n      isInvalid?: boolean;\n      onSubmit(e: MouseEvent<HTMLElement>): void;\n    },\n    ref: any,\n  ) => {\n    const { isInvalid, isLoading, onSubmit, ...rest } = props;\n    return (\n      <InputGroup mb=\"0.5rem\" size=\"md\">\n        <Input\n          size=\"sm\"\n          ref={ref}\n          pr=\"2.5rem\"\n          rounded=\"50px\"\n          isInvalid={isInvalid}\n          borderColor=\"gray.200\"\n          placeholder=\"Tag name\"\n          errorMessage=\"Tag name is required\"\n          {...rest}\n        />\n        <InputRightElement width=\"2.5rem\">\n          <Button\n            px=\"0\"\n            size=\"xs\"\n            rounded=\"50%\"\n            onClick={onSubmit}\n            isLoading={isLoading}\n            isDisabled={isInvalid}\n            bg=\"rgba(57, 68, 82, 0.35)\"\n          >\n            <svg\n              width=\"12\"\n              height=\"12\"\n              fill=\"none\"\n              viewBox=\"0 0 12 12\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11 5H8C7.448 5 7 4.552 7 4V1C7 0.448 6.552 0 6 0C5.448 0 5 0.448 5 1V4C5 4.552 4.552 5 4 5H1C0.448 5 0 5.448 0 6C0 6.552 0.448 7 1 7H4C4.552 7 5 7.448 5 8V11C5 11.552 5.448 12 6 12C6.552 12 7 11.552 7 11V8C7 7.448 7.448 7 8 7H11C11.552 7 12 6.552 12 6C12 5.448 11.552 5 11 5Z\"\n                fill=\"#394452\"\n              />\n            </svg>\n          </Button>\n        </InputRightElement>\n      </InputGroup>\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}