{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/table/table.components/TableDropdown.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Popover, PopoverTrigger, PopoverContent, Flex, Text, Box, List, Icon } from '@chakra-ui/core';\nimport { ConfirmModal } from '../../../../../components';\nimport { TableDropdownItem } from './TableDropdownItem';\nimport { PropertySearchForm } from '../../property';\nexport function TablesDropdown({\n  data = [],\n  children,\n  onClick,\n  onDelete,\n  isLoading,\n  activeTable\n}) {\n  const [list, setList] = React.useState(data || []);\n  const [tableIndex, setTableIndex] = React.useState('');\n  React.useEffect(() => {\n    setList(data);\n  }, [data]);\n\n  function handleClose() {\n    setTableIndex('');\n  }\n\n  function handleSearch(value) {\n    if (value) {\n      const newList = list.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\n\n      if (newList.length) {\n        setList(newList);\n      } else {\n        setList([]);\n      }\n    } else {\n      setList([]);\n    }\n  }\n\n  function handleGroupDelete() {\n    setList(list.filter(x => tableIndex !== x.id));\n\n    if (onDelete) {\n      onDelete({\n        id: tableIndex,\n        callback: handleClose\n      });\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Popover, {\n    placement: \"bottom-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, children), __jsx(PopoverContent, {\n    zIndex: 99999,\n    paddingY: \"1rem\",\n    width: \"fit-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    paddingX: \"1rem\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    size: \"0.75rem\",\n    name: \"folder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), __jsx(Text, {\n    fontSize: \"14px\",\n    fontWeight: 500,\n    paddingLeft: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Tables\")), __jsx(Box, {\n    paddingX: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(PropertySearchForm, {\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, list.map((item, index) => __jsx(TableDropdownItem, {\n    key: index,\n    table: item,\n    onDelete: () => {\n      setTableIndex(item.id);\n    },\n    onClick: () => onClick(item),\n    isActive: (activeTable === null || activeTable === void 0 ? void 0 : activeTable.id) === item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }))))), __jsx(ConfirmModal, {\n    title: \"Delete table\",\n    isOpen: !!tableIndex,\n    isLoading: isLoading,\n    onConfirm: handleGroupDelete,\n    onClose: () => setTableIndex(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/table/table.components/TableDropdown.tsx"],"names":["React","Popover","PopoverTrigger","PopoverContent","Flex","Text","Box","List","Icon","ConfirmModal","TableDropdownItem","PropertySearchForm","TablesDropdown","data","children","onClick","onDelete","isLoading","activeTable","list","setList","useState","tableIndex","setTableIndex","useEffect","handleClose","handleSearch","value","newList","filter","item","name","toLowerCase","includes","length","handleGroupDelete","x","id","callback","map","index"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TablesDropdownProps } from '../table.types';\nimport { TablePropertiesOptions } from '../../../tables.types';\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  Flex,\n  Text,\n  Box,\n  List,\n  Icon,\n} from '@chakra-ui/core';\nimport { ConfirmModal } from '../../../../../components';\nimport { TableDropdownItem } from './TableDropdownItem';\nimport { PropertySearchForm } from '../../property';\n\nexport function TablesDropdown({\n  data = [],\n  children,\n  onClick,\n  onDelete,\n  isLoading,\n  activeTable,\n}: TablesDropdownProps) {\n  const [list, setList] = React.useState<TablePropertiesOptions[]>(data || []);\n  const [tableIndex, setTableIndex] = React.useState<\n    TablePropertiesOptions['id']\n  >('');\n\n  React.useEffect(() => {\n    setList(data);\n  }, [data]);\n\n  function handleClose() {\n    setTableIndex('');\n  }\n\n  function handleSearch(value: string) {\n    if (value) {\n      const newList = list.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      if (newList.length) {\n        setList(newList);\n      } else {\n        setList([]);\n      }\n    } else {\n      setList([]);\n    }\n  }\n\n  function handleGroupDelete() {\n    setList(list.filter((x: TablePropertiesOptions) => tableIndex !== x.id));\n    if (onDelete) {\n      onDelete({ id: tableIndex, callback: handleClose });\n    }\n  }\n\n  return (\n    <>\n      <Popover placement=\"bottom-start\">\n        <PopoverTrigger>{children}</PopoverTrigger>\n        <PopoverContent zIndex={99999} paddingY=\"1rem\" width=\"fit-content\">\n          <Flex paddingX=\"1rem\" alignItems=\"center\">\n            <Icon size=\"0.75rem\" name=\"folder\" />\n            <Text fontSize=\"14px\" fontWeight={500} paddingLeft=\"0.5rem\">\n              Tables\n            </Text>\n          </Flex>\n          <Box paddingX=\"1rem\">\n            <PropertySearchForm onChange={handleSearch} />\n          </Box>\n          <List>\n            {list.map((item, index) => (\n              <TableDropdownItem\n                key={index}\n                table={item}\n                onDelete={() => {\n                  setTableIndex(item.id);\n                }}\n                onClick={() => onClick(item)}\n                isActive={activeTable?.id === item.id}\n              />\n            ))}\n          </List>\n        </PopoverContent>\n      </Popover>\n\n      <ConfirmModal\n        title=\"Delete table\"\n        isOpen={!!tableIndex}\n        isLoading={isLoading}\n        onConfirm={handleGroupDelete}\n        onClose={() => setTableIndex('')}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}