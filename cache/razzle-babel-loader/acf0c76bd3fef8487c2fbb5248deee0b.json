{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/settings/QuickReplies.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Skeleton, Stack, useToast } from '@chakra-ui/core';\nimport { ConfirmModal, ToastBox } from 'app/components';\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { deleteQuickReplies, getQuickReplies } from '../inbox.service';\nimport { InboxSettingsPage, InboxSettingsPageItem } from './component';\nexport const InboxSettingsQuickReplies = () => {\n  var _data$quick_replies;\n\n  const toast = useToast();\n  const match = useRouteMatch();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n  const [page] = React.useState(1);\n  const {\n    0: replyToDelete,\n    1: setReplyToDelete\n  } = useState();\n  const {\n    isLoading,\n    data\n  } = useQuery(['quick-replies', page], () => getQuickReplies({\n    page\n  }));\n  const {\n    isLoading: isDeleting,\n    mutate\n  } = useMutation(payload => {\n    var _payload$uuid;\n\n    return deleteQuickReplies({\n      ids: [(_payload$uuid = payload.uuid) !== null && _payload$uuid !== void 0 ? _payload$uuid : '']\n    });\n  }, {\n    onMutate: async payload => {\n      await queryClient.cancelQueries(['quick-replies', page]); //@ts-ignore\n\n      const previousQuickReplies = queryClient.getQueryData(['quick-replies', page]);\n      queryClient.setQueryData(['quick-replies', page], old => _objectSpread(_objectSpread({}, old), {}, {\n        //@ts-ignore\n        quick_replies: old === null || old === void 0 ? void 0 : old.quick_replies.filter(item => item.uuid !== payload.uuid)\n      }));\n      return {\n        previousQuickReplies\n      };\n    },\n    onSuccess: () => {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: \"Quick reply deleted successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        })\n      });\n      setReplyToDelete(undefined);\n      queryClient.invalidateQueries(['quick-replies', page]);\n    },\n    onError: (error, newData, context) => {\n      queryClient.setQueryData(['quick-replies', page], context.previousQuickReplies);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }\n        })\n      });\n    }\n  });\n\n  const handleDeleteQuickReply = () => {\n    if (replyToDelete) {\n      mutate(replyToDelete);\n    }\n  };\n\n  return __jsx(InboxSettingsPage, {\n    maxW: \"600px\",\n    title: \"Quick Replies\",\n    helperAlert: {\n      title: 'Quick replies',\n      caption: 'You can use quick replies to quickly respond to conversations. You can use variables in your quick replies to fill the dynamic content, such as recipients name.'\n    },\n    createAction: {\n      label: 'Create a quick reply',\n      onClick: () => history.push(`${match.path}/new`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, isLoading ? __jsx(Stack, {\n    spacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, Array.from({\n    length: 5\n  }, (v, i) => __jsx(Stack, {\n    isInline: true,\n    py: \"0.5rem\",\n    px: \"0.75rem\",\n    borderBottomWidth: \"1px\",\n    key: `${i.toString()}-${new Date().getTime()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    height: \"50px\",\n    width: \"50px\",\n    rounded: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), __jsx(Stack, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"8px\",\n    width: \"50%\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), __jsx(Skeleton, {\n    height: \"8px\",\n    my: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }))))) : __jsx(Stack, {\n    spacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$quick_replies = data.quick_replies) === null || _data$quick_replies === void 0 ? void 0 : _data$quick_replies.map(reply => __jsx(Box, {\n    key: reply.uuid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(InboxSettingsPageItem, {\n    heading: reply.name,\n    onDelete: () => setReplyToDelete(reply),\n    onClick: () => history.push(`${match.path}/${reply.uuid}`),\n    iconProps: {\n      name: 'inbox-compose-quote',\n      color: 'gray.900'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })))), __jsx(ConfirmModal, {\n    isLoading: isDeleting,\n    isOpen: !!replyToDelete,\n    title: \"Delete Quick Reply\",\n    onConfirm: handleDeleteQuickReply,\n    onClose: () => setReplyToDelete(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/settings/QuickReplies.tsx"],"names":["Box","Skeleton","Stack","useToast","ConfirmModal","ToastBox","React","useState","useMutation","useQuery","useQueryClient","useHistory","useRouteMatch","deleteQuickReplies","getQuickReplies","InboxSettingsPage","InboxSettingsPageItem","InboxSettingsQuickReplies","toast","match","history","queryClient","page","replyToDelete","setReplyToDelete","isLoading","data","isDeleting","mutate","payload","ids","uuid","onMutate","cancelQueries","previousQuickReplies","getQueryData","setQueryData","old","quick_replies","filter","item","onSuccess","position","render","onClose","undefined","invalidateQueries","onError","error","newData","context","message","handleDeleteQuickReply","title","caption","label","onClick","push","path","Array","from","length","v","i","toString","Date","getTime","map","reply","name","color"],"mappings":"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","sourcesContent":["import { Box, Skeleton, Stack, useToast } from '@chakra-ui/core';\nimport { ConfirmModal, ToastBox } from 'app/components';\nimport { AxiosError } from 'axios';\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { deleteQuickReplies, getQuickReplies } from '../inbox.service';\nimport { QuickReplySchema } from '../inbox.types';\nimport { InboxSettingsPage, InboxSettingsPageItem } from './component';\n\nexport const InboxSettingsQuickReplies = () => {\n  const toast = useToast();\n  const match = useRouteMatch();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  const [page] = React.useState(1);\n  const [replyToDelete, setReplyToDelete] = useState<QuickReplySchema | undefined>();\n\n  const { isLoading, data } = useQuery(['quick-replies', page], () => getQuickReplies({ page }));\n\n  const { isLoading: isDeleting, mutate } = useMutation<any, AxiosError, any, any>(\n    (payload: Partial<QuickReplySchema>) => deleteQuickReplies({ ids: [payload.uuid ?? ''] }),\n    {\n      onMutate: async payload => {\n        await queryClient.cancelQueries(['quick-replies', page]);\n        //@ts-ignore\n        const previousQuickReplies = queryClient.getQueryData(['quick-replies', page]);\n        queryClient.setQueryData(['quick-replies', page], old => ({\n          //@ts-ignore\n          ...old,\n          //@ts-ignore\n          quick_replies: old?.quick_replies.filter(item => item.uuid !== payload.uuid),\n        }));\n        return { previousQuickReplies };\n      },\n      onSuccess: () => {\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox\n              status=\"success\"\n              onClose={onClose}\n              message=\"Quick reply deleted successfully\"\n            />\n          ),\n        });\n        setReplyToDelete(undefined);\n        queryClient.invalidateQueries(['quick-replies', page]);\n      },\n      onError: (error, newData, context) => {\n        queryClient.setQueryData(['quick-replies', page], context.previousQuickReplies);\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error.message} />,\n        });\n      },\n    },\n  );\n\n  const handleDeleteQuickReply = () => {\n    if (replyToDelete) {\n      mutate(replyToDelete);\n    }\n  };\n\n  return (\n    <InboxSettingsPage\n      maxW=\"600px\"\n      title=\"Quick Replies\"\n      helperAlert={{\n        title: 'Quick replies',\n        caption:\n          'You can use quick replies to quickly respond to conversations. You can use variables in your quick replies to fill the dynamic content, such as recipients name.',\n      }}\n      createAction={{\n        label: 'Create a quick reply',\n        onClick: () => history.push(`${match.path}/new`),\n      }}\n    >\n      {isLoading ? (\n        <Stack spacing=\"0\">\n          {Array.from({ length: 5 }, (v, i) => (\n            <Stack\n              isInline\n              py=\"0.5rem\"\n              px=\"0.75rem\"\n              borderBottomWidth=\"1px\"\n              key={`${i.toString()}-${new Date().getTime()}`}\n            >\n              <Skeleton height=\"50px\" width=\"50px\" rounded=\"50%\" />\n              <Stack flex={1}>\n                <Skeleton height=\"8px\" width=\"50%\" my=\"8px\" />\n                <Skeleton height=\"8px\" my=\"8px\" />\n              </Stack>\n            </Stack>\n          ))}\n        </Stack>\n      ) : (\n        <Stack spacing=\"0\">\n          {data?.quick_replies?.map((reply: QuickReplySchema) => (\n            <Box key={reply.uuid}>\n              <InboxSettingsPageItem\n                heading={reply.name}\n                onDelete={() => setReplyToDelete(reply)}\n                onClick={() => history.push(`${match.path}/${reply.uuid}`)}\n                iconProps={{ name: 'inbox-compose-quote', color: 'gray.900' }}\n              />\n            </Box>\n          ))}\n        </Stack>\n      )}\n      <ConfirmModal\n        isLoading={isDeleting}\n        isOpen={!!replyToDelete}\n        title=\"Delete Quick Reply\"\n        onConfirm={handleDeleteQuickReply}\n        onClose={() => setReplyToDelete(undefined)}\n      />\n    </InboxSettingsPage>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}