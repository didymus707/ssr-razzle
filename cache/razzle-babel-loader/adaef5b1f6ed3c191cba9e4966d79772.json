{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/component/billing/change-plan/components/stages/select-plan.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Box, Icon } from '@chakra-ui/core';\nimport { formatCurrency } from '../../../../../../../../utils';\nimport { useSelector } from 'react-redux';\nimport { selectActiveSubscriptionPlan } from '../../../../../selectors';\nimport { Button } from 'app/components';\nconst plan_features = [['Unlimited social channels', 'One user seat', 'Three teams', 'Three lists(1000 rows each))'], ['Everything in Inbox', '25 user seats', 'Unlimited teams', 'Unlimited lists'], ['Everything in Business', 'Custom pricing', 'Higher volume rates', '24/7 enterprise support']];\n\nconst PlanItem = props => {\n  const {\n    index,\n    name,\n    description,\n    price_monthly,\n    price_yearly,\n    features,\n    type: planType,\n    onSelectPlan,\n    billing_period,\n    billing_currency\n  } = props;\n  const active_plan = useSelector(selectActiveSubscriptionPlan);\n  return __jsx(Box, {\n    className: `plan-item ${index !== 1 && 'blurred'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, name), __jsx(Box, {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, description), __jsx(Box, {\n    className: \"pricing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"currency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, billing_currency === 'ngn' ? 'â‚¦' : '$'), planType !== 'enterprise' ? billing_period === 'monthly' ? formatCurrency(price_monthly[billing_currency] / 100) : formatCurrency(price_yearly[billing_currency] / 100) : 'ðŸ’°'), __jsx(Box, {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    verticalAlign: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"billed \", billing_period))), features.map((i, ft_index) => __jsx(Box, {\n    key: ft_index,\n    className: `feature-item ${ft_index === 0 && index !== 0 && 'bold'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"check\",\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), i)), planType === 'standard' && __jsx(React.Fragment, null, props.id === active_plan.id ? __jsx(Box, {\n    margin: \"auto\",\n    fontWeight: \"500\",\n    fontSize: \"12px\",\n    color: \"#16c13c\",\n    padding: \"5px 10px\",\n    backgroundColor: \"#ddf5dd\",\n    borderRadius: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Current Subscription\") : __jsx(Button, {\n    marginY: \"23px\",\n    size: \"sm\",\n    variantColor: \"blue\",\n    onClick: onSelectPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Checkout\")), planType === 'enterprise' && __jsx(Button, {\n    size: \"sm\",\n    marginY: \"23px\",\n    variant: \"link\",\n    variantColor: \"blue\",\n    onClick: () => {\n      window.location.href = 'mailto:info@simpu.co';\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Contact Sales\"));\n};\n\nexport const SelectSubscriptionPlan = props => {\n  const {\n    plans,\n    checkout,\n    billing_period,\n    billing_currency\n  } = props;\n  return __jsx(Box, {\n    className: \"section-plans\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, plans.map((plan, index) => __jsx(PlanItem, _extends({\n    key: index,\n    index: index\n  }, plan, {\n    features: plan_features[index],\n    onSelectPlan: () => checkout(plan),\n    billing_period: billing_period,\n    billing_currency: billing_currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/component/billing/change-plan/components/stages/select-plan.tsx"],"names":["React","Box","Icon","formatCurrency","useSelector","selectActiveSubscriptionPlan","Button","plan_features","PlanItem","props","index","name","description","price_monthly","price_yearly","features","type","planType","onSelectPlan","billing_period","billing_currency","active_plan","map","i","ft_index","id","window","location","href","SelectSubscriptionPlan","plans","checkout","plan"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Icon } from '@chakra-ui/core';\nimport { formatCurrency } from '../../../../../../../../utils';\nimport { useSelector } from 'react-redux';\nimport { selectActiveSubscriptionPlan } from '../../../../../selectors';\nimport { Button } from 'app/components';\n\nconst plan_features = [\n  ['Unlimited social channels', 'One user seat', 'Three teams', 'Three lists(1000 rows each))'],\n  ['Everything in Inbox', '25 user seats', 'Unlimited teams', 'Unlimited lists'],\n  ['Everything in Business', 'Custom pricing', 'Higher volume rates', '24/7 enterprise support'],\n];\n\nconst PlanItem = (props: any) => {\n  const {\n    index,\n    name,\n    description,\n    price_monthly,\n    price_yearly,\n    features,\n    type: planType,\n    onSelectPlan,\n    billing_period,\n    billing_currency,\n  } = props;\n\n  const active_plan = useSelector(selectActiveSubscriptionPlan);\n\n  return (\n    <Box className={`plan-item ${index !== 1 && 'blurred'}`}>\n      <Box className=\"title\">{name}</Box>\n      <Box className=\"description\">{description}</Box>\n      <Box className=\"pricing\">\n        <Box className=\"amount\">\n          <span className=\"currency\">{billing_currency === 'ngn' ? 'â‚¦' : '$'}</span>\n          {planType !== 'enterprise'\n            ? billing_period === 'monthly'\n              ? formatCurrency(price_monthly[billing_currency] / 100)\n              : formatCurrency(price_yearly[billing_currency] / 100)\n            : 'ðŸ’°'}\n        </Box>\n        <Box className=\"info\">\n          <Box verticalAlign=\"top\">billed {billing_period}</Box>\n        </Box>\n      </Box>\n\n      {features.map((i: string, ft_index: number) => (\n        <Box key={ft_index} className={`feature-item ${ft_index === 0 && index !== 0 && 'bold'}`}>\n          <Icon name=\"check\" className=\"icon\" />\n          {i}\n        </Box>\n      ))}\n\n      {planType === 'standard' && (\n        <>\n          {props.id === active_plan.id ? (\n            <Box\n              margin=\"auto\"\n              fontWeight=\"500\"\n              fontSize=\"12px\"\n              color=\"#16c13c\"\n              padding=\"5px 10px\"\n              backgroundColor=\"#ddf5dd\"\n              borderRadius=\"5px\"\n            >\n              Current Subscription\n            </Box>\n          ) : (\n            <Button marginY=\"23px\" size=\"sm\" variantColor=\"blue\" onClick={onSelectPlan}>\n              Checkout\n            </Button>\n          )}\n        </>\n      )}\n      {planType === 'enterprise' && (\n        <Button\n          size=\"sm\"\n          marginY=\"23px\"\n          variant=\"link\"\n          variantColor=\"blue\"\n          onClick={() => {\n            window.location.href = 'mailto:info@simpu.co';\n          }}\n        >\n          Contact Sales\n        </Button>\n      )}\n    </Box>\n  );\n};\n\nexport const SelectSubscriptionPlan = (props: any) => {\n  const { plans, checkout, billing_period, billing_currency } = props;\n\n  return (\n    <Box className=\"section-plans\">\n      {plans.map((plan: any, index: number) => (\n        <PlanItem\n          key={index}\n          index={index}\n          {...plan}\n          features={plan_features[index]}\n          onSelectPlan={() => checkout(plan)}\n          billing_period={billing_period}\n          billing_currency={billing_currency}\n        />\n      ))}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}