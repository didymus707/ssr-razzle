{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/terms-conditions/components/main.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { TopNav } from './topnav';\nimport { useScrollPosition } from '../../../../hooks/use-scroll-position';\nimport { scrollToSection, isInViewport } from '../../../../utils';\nexport const Main = props => {\n  const {\n    0: activeSection,\n    1: setActiveSection\n  } = useState(null);\n  const {\n    link\n  } = props; // @ts-ignore\n\n  useScrollPosition(() => {\n    link.sections.some(i => {\n      if (isInViewport(i.key)) {\n        setActiveSection(i.key);\n        return true;\n      }\n\n      return false;\n    });\n  });\n  return __jsx(\"div\", {\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(TopNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, link.name), __jsx(\"div\", {\n    className: \"last_updated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Last updated: \", link.last_updated), __jsx(link.page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"page_nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, link.sections.length > 0 && __jsx(React.Fragment, null, __jsx(\"h4\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"ON THIS PAGE\"), __jsx(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, link.sections.map(i => __jsx(\"li\", {\n    key: i.key,\n    className: \"item\",\n    onClick: () => scrollToSection(i.key),\n    style: {\n      color: activeSection === i.key ? '#1f1a47' : '#697386'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, i.name)))))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/terms-conditions/components/main.tsx"],"names":["React","useState","TopNav","useScrollPosition","scrollToSection","isInViewport","Main","props","activeSection","setActiveSection","link","sections","some","i","key","name","last_updated","length","map","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;AAGA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAkC;AACpD,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCR,QAAQ,CAAM,IAAN,CAAlD;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAWH,KAAjB,CAHoD,CAKpD;;AACAJ,EAAAA,iBAAiB,CAAC,MAAM;AACtBO,IAAAA,IAAI,CAACC,QAAL,CAAcC,IAAd,CAAoBC,CAAD,IAAO;AACxB,UAAIR,YAAY,CAACQ,CAAC,CAACC,GAAH,CAAhB,EAAyB;AACvBL,QAAAA,gBAAgB,CAACI,CAAC,CAACC,GAAH,CAAhB;AACA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAND;AAOD,GARgB,CAAjB;AAUA,SACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BJ,IAAI,CAACK,IAA/B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA6CL,IAAI,CAACM,YAAlD,CAFF,EAGE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACC,QAAL,CAAcM,MAAd,GAAuB,CAAvB,IACC,4BACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACC,QAAL,CAAcO,GAAd,CAAmBL,CAAD,IACjB;AACE,IAAA,GAAG,EAAEA,CAAC,CAACC,GADT;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE,MAAMV,eAAe,CAACS,CAAC,CAACC,GAAH,CAHhC;AAIE,IAAA,KAAK,EAAE;AACLK,MAAAA,KAAK,EAAEX,aAAa,KAAKK,CAAC,CAACC,GAApB,GAA0B,SAA1B,GAAsC;AADxC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGD,CAAC,CAACE,IARL,CADD,CADH,CAFF,CAFJ,CANF,CAFF,CADF;AAiCD,CAjDM","sourcesContent":["import React, { useState } from 'react';\nimport { TopNav } from './topnav';\nimport { useScrollPosition } from '../../../../hooks/use-scroll-position';\nimport { scrollToSection, isInViewport } from '../../../../utils';\nimport { MainSectionProps } from '../types';\n\nexport const Main = (props: MainSectionProps<any>) => {\n  const [activeSection, setActiveSection] = useState<any>(null);\n\n  const { link } = props;\n\n  // @ts-ignore\n  useScrollPosition(() => {\n    link.sections.some((i) => {\n      if (isInViewport(i.key)) {\n        setActiveSection(i.key);\n        return true;\n      }\n      return false;\n    });\n  });\n\n  return (\n    <div id=\"main\">\n      <TopNav />\n      <div className=\"wrapper\">\n        <div className=\"content\">\n          <div className=\"heading\">{link.name}</div>\n          <div className=\"last_updated\">Last updated: {link.last_updated}</div>\n          <link.page />\n        </div>\n        <div className=\"page_nav\">\n          {link.sections.length > 0 && (\n            <>\n              <h4 className=\"heading\">ON THIS PAGE</h4>\n              <ul className=\"list\">\n                {link.sections.map((i) => (\n                  <li\n                    key={i.key}\n                    className=\"item\"\n                    onClick={() => scrollToSection(i.key)}\n                    style={{\n                      color: activeSection === i.key ? '#1f1a47' : '#697386',\n                    }}\n                  >\n                    {i.name}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}