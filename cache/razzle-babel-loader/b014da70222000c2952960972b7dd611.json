{"ast":null,"code":"import format from 'date-fns/format';\nimport endOfToday from 'date-fns/endOfToday';\nimport endOfTomorrow from 'date-fns/endOfTomorrow';\nimport endOfYesterday from 'date-fns/endOfYesterday';\nimport addWeeks from 'date-fns/addWeeks';\nimport subWeeks from 'date-fns/subWeeks';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport addYears from 'date-fns/addYears';\nimport subYears from 'date-fns/subYears';\nexport const FILTER_CONJUCTIONS = [{\n  label: 'And',\n  value: 'and'\n}, {\n  label: 'Or',\n  value: 'or'\n}];\nexport const TEXT_FIELD_FILTERS = [{\n  label: 'is',\n  value: 'equals'\n}, {\n  label: 'is not',\n  value: 'notEqual'\n}, {\n  label: 'is empty',\n  value: 'empty'\n}, {\n  label: 'is not empty',\n  value: 'notEmpty'\n}, {\n  label: 'contains',\n  value: 'contains'\n}, {\n  label: 'does not contain',\n  value: 'notContain'\n}];\nexport const NUMBER_FIELD_FILTERS = [{\n  label: 'equal to',\n  value: 'equals'\n}, {\n  label: 'greater than',\n  value: 'greater'\n}, {\n  label: 'less than',\n  value: 'less'\n}, {\n  label: 'is empty',\n  value: 'empty'\n}, {\n  label: 'is not empty',\n  value: 'notEmpty'\n}, {\n  label: 'less than or equal to',\n  value: 'lessEq'\n}, {\n  label: 'greater than or equal to',\n  value: 'greaterEq'\n}];\nexport const DATE_FIELD_FILTERS = [{\n  label: 'is',\n  value: 'dateEqual'\n}, {\n  label: 'is within',\n  value: 'dateWithin'\n}, {\n  label: 'is before',\n  value: 'dateBefore'\n}, {\n  label: 'is after',\n  value: 'dateAfter'\n}, {\n  label: 'is on or before',\n  value: 'dateOnBefore'\n}, {\n  label: 'is on or after',\n  value: 'dateOnAfter'\n}, {\n  label: 'is not',\n  value: 'dateNotEqual'\n}, {\n  label: 'is empty',\n  value: 'empty'\n}, {\n  label: 'is not empty',\n  value: 'notEmpty'\n}];\nexport const DATE_FIELD_SUB_FILTERS = [{\n  label: 'today',\n  value: format(endOfToday(), 'dd-MM-yyyy')\n}, {\n  label: 'tomorrow',\n  value: format(endOfTomorrow(), 'dd-MM-yyyy')\n}, {\n  label: 'Yesterday',\n  value: format(endOfYesterday(), 'dd-MM-yyyy')\n}, {\n  label: 'one week ago',\n  value: format(subWeeks(new Date(), 1), 'dd-MM-yyyy')\n}, {\n  label: 'one week from now',\n  value: format(addWeeks(new Date(), 1), 'dd-MM-yyyy')\n}, {\n  label: 'one month ago',\n  value: format(subMonths(new Date(), 1), 'dd-MM-yyyy')\n}, {\n  label: 'one month from now',\n  value: format(addMonths(new Date(), 1), 'dd-MM-yyyy')\n}, {\n  label: 'one year ago',\n  value: format(subYears(new Date(), 1), 'dd-MM-yyyy')\n}, {\n  label: 'one year from now',\n  value: format(addYears(new Date(), 1), 'dd-MM-yyyy')\n}, {\n  label: 'exact date',\n  value: 'exact date'\n}];\nexport const SELECT_FILED_FILTERS = [{\n  label: 'is',\n  value: 'equals'\n}, {\n  label: 'is not',\n  value: 'notEquals'\n}, {\n  label: 'is any of',\n  value: 'isAnyOf'\n}, {\n  label: 'is none of',\n  value: 'isNoneOf'\n}, {\n  label: 'is empty',\n  value: 'empty'\n}, {\n  label: 'is not empty',\n  value: 'notEmpty'\n}];\nexport const MULTI_SELECT_FILED_FILTERS = [{\n  label: 'has any of',\n  value: 'hasAnyOf'\n}, {\n  label: 'has all of',\n  value: 'hasAllOf'\n}, {\n  label: 'is exactly',\n  value: 'hasExactly'\n}, {\n  label: 'has none of',\n  value: 'isNoneOf'\n}, {\n  label: 'is empty',\n  value: 'empty'\n}, {\n  label: 'is not empty',\n  value: 'notEmpty'\n}];\nexport const MEDIA_FIELD_FILTERS = [{\n  label: 'is empty',\n  value: 'empty'\n}, {\n  label: 'is not empty',\n  value: 'notEmpty'\n}];\nexport const PROPERTY_TYPE_OPERATORS = {\n  url: TEXT_FIELD_FILTERS,\n  text: TEXT_FIELD_FILTERS,\n  date: DATE_FIELD_FILTERS,\n  email: TEXT_FIELD_FILTERS,\n  number: NUMBER_FIELD_FILTERS,\n  select: SELECT_FILED_FILTERS,\n  'phone number': TEXT_FIELD_FILTERS,\n  'multi select': MULTI_SELECT_FILED_FILTERS\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/tables/components/filter/filter.data.ts"],"names":["format","endOfToday","endOfTomorrow","endOfYesterday","addWeeks","subWeeks","addMonths","subMonths","addYears","subYears","FILTER_CONJUCTIONS","label","value","TEXT_FIELD_FILTERS","NUMBER_FIELD_FILTERS","DATE_FIELD_FILTERS","DATE_FIELD_SUB_FILTERS","Date","SELECT_FILED_FILTERS","MULTI_SELECT_FILED_FILTERS","MEDIA_FIELD_FILTERS","PROPERTY_TYPE_OPERATORS","url","text","date","email","number","select"],"mappings":"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","sourcesContent":["import { PropertyTypeConjuctionDic } from './filter.types'\nimport format from 'date-fns/format'\nimport endOfToday from 'date-fns/endOfToday'\nimport endOfTomorrow from 'date-fns/endOfTomorrow'\nimport endOfYesterday from 'date-fns/endOfYesterday'\nimport addWeeks from 'date-fns/addWeeks'\nimport subWeeks from 'date-fns/subWeeks'\nimport addMonths from 'date-fns/addMonths'\nimport subMonths from 'date-fns/subMonths'\nimport addYears from 'date-fns/addYears'\nimport subYears from 'date-fns/subYears'\n\nexport const FILTER_CONJUCTIONS = [\n  { label: 'And', value: 'and' },\n  { label: 'Or', value: 'or' }\n]\n\nexport const TEXT_FIELD_FILTERS = [\n  { label: 'is', value: 'equals' },\n  { label: 'is not', value: 'notEqual' },\n  { label: 'is empty', value: 'empty' },\n  { label: 'is not empty', value: 'notEmpty' },\n  { label: 'contains', value: 'contains' },\n  { label: 'does not contain', value: 'notContain' }\n]\n\nexport const NUMBER_FIELD_FILTERS = [\n  { label: 'equal to', value: 'equals' },\n  { label: 'greater than', value: 'greater' },\n  { label: 'less than', value: 'less' },\n  { label: 'is empty', value: 'empty' },\n  { label: 'is not empty', value: 'notEmpty' },\n  { label: 'less than or equal to', value: 'lessEq' },\n  { label: 'greater than or equal to', value: 'greaterEq' }\n]\n\nexport const DATE_FIELD_FILTERS = [\n  { label: 'is', value: 'dateEqual' },\n  { label: 'is within', value: 'dateWithin' },\n  { label: 'is before', value: 'dateBefore' },\n  { label: 'is after', value: 'dateAfter' },\n  { label: 'is on or before', value: 'dateOnBefore' },\n  { label: 'is on or after', value: 'dateOnAfter' },\n  { label: 'is not', value: 'dateNotEqual' },\n  { label: 'is empty', value: 'empty' },\n  { label: 'is not empty', value: 'notEmpty' }\n]\n\nexport const DATE_FIELD_SUB_FILTERS = [\n  { label: 'today', value: format(endOfToday(), 'dd-MM-yyyy') },\n  { label: 'tomorrow', value: format(endOfTomorrow(), 'dd-MM-yyyy') },\n  { label: 'Yesterday', value: format(endOfYesterday(), 'dd-MM-yyyy') },\n  {\n    label: 'one week ago',\n    value: format(subWeeks(new Date(), 1), 'dd-MM-yyyy')\n  },\n  {\n    label: 'one week from now',\n    value: format(addWeeks(new Date(), 1), 'dd-MM-yyyy')\n  },\n  {\n    label: 'one month ago',\n    value: format(subMonths(new Date(), 1), 'dd-MM-yyyy')\n  },\n  {\n    label: 'one month from now',\n    value: format(addMonths(new Date(), 1), 'dd-MM-yyyy')\n  },\n  {\n    label: 'one year ago',\n    value: format(subYears(new Date(), 1), 'dd-MM-yyyy')\n  },\n  {\n    label: 'one year from now',\n    value: format(addYears(new Date(), 1), 'dd-MM-yyyy')\n  },\n  { label: 'exact date', value: 'exact date' }\n]\n\nexport const SELECT_FILED_FILTERS = [\n  { label: 'is', value: 'equals' },\n  { label: 'is not', value: 'notEquals' },\n  { label: 'is any of', value: 'isAnyOf' },\n  { label: 'is none of', value: 'isNoneOf' },\n  { label: 'is empty', value: 'empty' },\n  { label: 'is not empty', value: 'notEmpty' }\n]\n\nexport const MULTI_SELECT_FILED_FILTERS = [\n  { label: 'has any of', value: 'hasAnyOf' },\n  { label: 'has all of', value: 'hasAllOf' },\n  { label: 'is exactly', value: 'hasExactly' },\n  { label: 'has none of', value: 'isNoneOf' },\n  { label: 'is empty', value: 'empty' },\n  { label: 'is not empty', value: 'notEmpty' }\n]\n\nexport const MEDIA_FIELD_FILTERS = [\n  { label: 'is empty', value: 'empty' },\n  { label: 'is not empty', value: 'notEmpty' }\n]\n\nexport const PROPERTY_TYPE_OPERATORS = {\n  url: TEXT_FIELD_FILTERS,\n  text: TEXT_FIELD_FILTERS,\n  date: DATE_FIELD_FILTERS,\n  email: TEXT_FIELD_FILTERS,\n  number: NUMBER_FIELD_FILTERS,\n  select: SELECT_FILED_FILTERS,\n  'phone number': TEXT_FIELD_FILTERS,\n  'multi select': MULTI_SELECT_FILED_FILTERS\n} as PropertyTypeConjuctionDic\n"]},"metadata":{},"sourceType":"module"}