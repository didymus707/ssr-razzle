{"ast":null,"code":"import _extends from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"text\", \"linkProps\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/TextWithLink/index.tsx\";\nvar __jsx = React.createElement;\nimport { unescape } from 'lodash';\nimport React from 'react';\nimport { SmallText } from '../Typography';\nconst urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/gi;\n\nconst parseText = (text, linkProps) => {\n  return text.replace(urlRegex, function (url) {\n    return '<a target=\"_blank\" href=\"' + url + '\" style=\"font-weight: 400; text-decoration-line: underline;\">' + url + '</a>';\n  });\n};\n\nexport function getTextLinks(text) {\n  return text.match(urlRegex) || [];\n}\nexport function TextWithLink(_ref) {\n  let {\n    text,\n    linkProps\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(SmallText, _extends({\n    dangerouslySetInnerHTML: {\n      __html: unescape(parseText(text, linkProps))\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/TextWithLink/index.tsx"],"names":["unescape","React","SmallText","urlRegex","parseText","text","linkProps","replace","url","getTextLinks","match","TextWithLink","rest","__html"],"mappings":";;;;;AACA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,MAAMC,QAAQ,GAAG,2EAAjB;;AAEA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAeC,SAAf,KAAyC;AACzD,SAAOD,IAAI,CAACE,OAAL,CAAaJ,QAAb,EAAuB,UAAUK,GAAV,EAAe;AAC3C,WACE,8BACAA,GADA,GAEA,+DAFA,GAGAA,GAHA,GAIA,MALF;AAOD,GARM,CAAP;AASD,CAVD;;AAYA,OAAO,SAASC,YAAT,CAAsBJ,IAAtB,EAAoC;AACzC,SAAOA,IAAI,CAACK,KAAL,CAAWP,QAAX,KAAwB,EAA/B;AACD;AAED,OAAO,SAASQ,YAAT,OAOO;AAAA,MAPe;AAC3BN,IAAAA,IAD2B;AAE3BC,IAAAA;AAF2B,GAOf;AAAA,MAJTM,IAIS;;AACZ,SACE,MAAC,SAAD;AACE,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEb,QAAQ,CAACI,SAAS,CAACC,IAAD,EAAOC,SAAP,CAAV;AAAlB;AAD3B,KAEMM,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD","sourcesContent":["import { BoxProps, LinkProps } from '@chakra-ui/core';\nimport { unescape } from 'lodash';\nimport React from 'react';\nimport { SmallText } from '../Typography';\n\nconst urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/gi;\n\nconst parseText = (text: string, linkProps?: LinkProps) => {\n  return text.replace(urlRegex, function (url) {\n    return (\n      '<a target=\"_blank\" href=\"' +\n      url +\n      '\" style=\"font-weight: 400; text-decoration-line: underline;\">' +\n      url +\n      '</a>'\n    );\n  });\n};\n\nexport function getTextLinks(text: string) {\n  return text.match(urlRegex) || [];\n}\n\nexport function TextWithLink({\n  text,\n  linkProps,\n  ...rest\n}: {\n  text: string;\n  linkProps?: LinkProps;\n} & BoxProps) {\n  return (\n    <SmallText\n      dangerouslySetInnerHTML={{ __html: unescape(parseText(text, linkProps)) }}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}