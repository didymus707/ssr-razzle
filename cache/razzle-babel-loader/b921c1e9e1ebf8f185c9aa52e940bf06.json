{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/list-view/components/ListHeading/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, Breadcrumb, BreadcrumbItem, BreadcrumbLink, Divider, Flex, Icon, useToast } from '@chakra-ui/core';\nimport { Button, ConfirmModal, ToastBox } from 'app/components';\nimport { ListTitleEditable } from '../ListTitleEditable';\nimport { ListSearch } from '../../../../components/search';\nimport { ListSortMenu } from '../../../../components/sort/sort-menu';\nimport { ListFilterMenu } from '../../../../components/filter/filter-menu';\nimport { ListPropertyMenu } from '../../../../components/list-property-menu';\nimport { useSelector } from 'react-redux';\nimport { selectInitialListId } from '../../../../lists.selectors';\nexport const ListHeading = props => {\n  const {\n    0: showDeleteDialog,\n    1: setShowDeleteDialog\n  } = useState(false);\n  const {\n    history,\n    list,\n    smart_list,\n    rows_loading,\n    columns,\n    columns_by_id,\n    updateColumnArrangement,\n    list_syncing,\n    updateListName,\n    hideColumn,\n    showColumn,\n    addFilter,\n    filters,\n    filters_by_id,\n    updateFilter,\n    deleteFilter,\n    sorts,\n    sorts_by_id,\n    addSort,\n    deleteSort,\n    updateSort,\n    deleteList,\n    createSmartList,\n    updateSmartList,\n    deleteSmartList,\n    selectSmartList,\n    selectSmartListID,\n    updateSmartListFilters,\n    clearFilters,\n    is_smart_list,\n    search_query,\n    updateSearchQuery,\n    selected_rows,\n    openClearRowsDialog,\n    openDeleteRowsDialog\n  } = props;\n\n  const handleListTitleChange = value => {\n    if (!is_smart_list) updateListName(value);else updateSmartList(smart_list.id, {\n      name: value\n    });\n  };\n\n  const toast = useToast();\n\n  const handleDeleteList = () => {\n    setShowDeleteDialog(false);\n    if (is_smart_list) deleteSmartList(smart_list['id']);else deleteList(list['id']);\n    history.push('/s/lists');\n    toast({\n      position: 'bottom-left',\n      render: ({\n        onClose\n      }) => __jsx(ToastBox, {\n        status: \"success\",\n        onClose: onClose,\n        message: `${is_smart_list ? smart_list.name : list.name} ${is_smart_list ? 'smart list' : 'list'} deleted`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      })\n    });\n  };\n\n  const navToList = list_id => {\n    history.push(`/s/lists/view/${list_id}`);\n    clearFilters();\n  };\n\n  const initialListID = useSelector(selectInitialListId);\n  const isInitial = initialListID === list['id'];\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"icon-bg\",\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: \"arrow-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }))), __jsx(ListTitleEditable, {\n    isEditing: false,\n    isInitial: isInitial,\n    value: is_smart_list ? smart_list['name'] : list['name'],\n    onChange: handleListTitleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), isInitial && __jsx(Box, {\n    fontSize: \"10px\",\n    color: \"#32a852\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    backgroundColor: \"rgba(50, 168, 82, 0.2)\",\n    borderRadius: \"5px\",\n    padding: \"2px 5px\",\n    mt: \"5px\",\n    width: \"fit-content\",\n    marginX: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"primary\")), __jsx(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, list_syncing && __jsx(Box, {\n    fontSize: \"12px\",\n    mr: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Syncing...\"), rows_loading && __jsx(Box, {\n    fontSize: \"12px\",\n    mr: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Loading...\"), !!selected_rows.length && __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    mr: \"1rem\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    \"aria-label\": \"delete\" // @ts-ignore\n    ,\n    mr: \"10px\",\n    size: \"xs\",\n    variant: \"ghost\",\n    variantColor: \"red\",\n    onClick: openClearRowsDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Clear \", selected_rows.length, \" row(s)\"), __jsx(Button, {\n    \"aria-label\": \"delete\" // @ts-ignore\n    ,\n    size: \"xs\",\n    variant: \"solid\",\n    variantColor: \"red\",\n    onClick: openDeleteRowsDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"Delete \", selected_rows.length, \" row(s)\")), __jsx(Divider, {\n    orientation: \"vertical\",\n    color: \"#E0E0E0\",\n    height: \"15px\",\n    width: \"1.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  })), is_smart_list && __jsx(Breadcrumb, {\n    marginX: \"5px\",\n    color: \"#757575\",\n    fontSize: \"13px\",\n    spacing: \"8px\",\n    separator: __jsx(Icon, {\n      color: \"gray.300\",\n      name: \"chevron-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, __jsx(BreadcrumbItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, __jsx(BreadcrumbLink, {\n    onClick: () => navToList(list.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, list.name)), __jsx(BreadcrumbItem, {\n    isCurrentPage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, __jsx(BreadcrumbLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, smart_list.name))), is_smart_list && __jsx(Box, {\n    className: \"list-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, \"SMART LIST\"), __jsx(ListSearch, {\n    search_query: search_query,\n    updateSearchQuery: updateSearchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    orientation: \"vertical\",\n    color: \"#E0E0E0\",\n    height: \"15px\",\n    width: \"1.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }), __jsx(ListSortMenu, {\n    columns: columns,\n    columns_by_id: columns_by_id,\n    sorts: sorts,\n    sorts_by_id: sorts_by_id,\n    addSort: addSort,\n    deleteSort: deleteSort,\n    updateSort: updateSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    orientation: \"vertical\",\n    color: \"#E0E0E0\",\n    height: \"15px\",\n    width: \"1.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }), __jsx(ListFilterMenu, {\n    columns: columns,\n    columns_by_id: columns_by_id,\n    addFilter: addFilter,\n    updateFilter: updateFilter,\n    filters: filters,\n    filters_by_id: filters_by_id,\n    deleteFilter: deleteFilter,\n    createSmartList: createSmartList,\n    selectSmartListID: selectSmartListID,\n    selectSmartList: selectSmartList,\n    updateSmartListFilters: updateSmartListFilters,\n    smart_list: smart_list,\n    is_smart_list: is_smart_list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    orientation: \"vertical\",\n    color: \"#E0E0E0\",\n    height: \"15px\",\n    width: \"1.5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }), __jsx(ListPropertyMenu, {\n    columns: columns,\n    columns_by_id: columns_by_id,\n    updateColumnArrangement: updateColumnArrangement,\n    hideColumn: hideColumn,\n    showColumn: showColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }))), __jsx(ConfirmModal, {\n    isOpen: showDeleteDialog,\n    onClose: () => setShowDeleteDialog(false),\n    title: is_smart_list ? 'Delete smart list' : 'Delete list',\n    description: `We'll move this ${smart_list ? 'smart list' : 'list'} to your trash for 30days`,\n    onConfirm: handleDeleteList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/list-view/components/ListHeading/index.tsx"],"names":["React","useState","Box","Breadcrumb","BreadcrumbItem","BreadcrumbLink","Divider","Flex","Icon","useToast","Button","ConfirmModal","ToastBox","ListTitleEditable","ListSearch","ListSortMenu","ListFilterMenu","ListPropertyMenu","useSelector","selectInitialListId","ListHeading","props","showDeleteDialog","setShowDeleteDialog","history","list","smart_list","rows_loading","columns","columns_by_id","updateColumnArrangement","list_syncing","updateListName","hideColumn","showColumn","addFilter","filters","filters_by_id","updateFilter","deleteFilter","sorts","sorts_by_id","addSort","deleteSort","updateSort","deleteList","createSmartList","updateSmartList","deleteSmartList","selectSmartList","selectSmartListID","updateSmartListFilters","clearFilters","is_smart_list","search_query","updateSearchQuery","selected_rows","openClearRowsDialog","openDeleteRowsDialog","handleListTitleChange","value","id","name","toast","handleDeleteList","push","position","render","onClose","navToList","list_id","initialListID","isInitial","goBack","length"],"mappings":"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","sourcesContent":["import { List, SmartList } from '../../../../lists.types';\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Divider,\n  Flex,\n  Icon,\n  useToast,\n} from '@chakra-ui/core';\nimport { Button, ConfirmModal, ToastBox } from 'app/components';\nimport { ListTitleEditable } from '../ListTitleEditable';\nimport { ListSearch } from '../../../../components/search';\nimport { ListSortMenu } from '../../../../components/sort/sort-menu';\nimport { ListFilterMenu } from '../../../../components/filter/filter-menu';\nimport { ListPropertyMenu } from '../../../../components/list-property-menu';\nimport { useSelector } from 'react-redux';\nimport { selectInitialListId } from '../../../../lists.selectors';\n\ntype Props = {\n  list: List;\n  smart_list: SmartList;\n  list_syncing: boolean;\n  rows_loading: boolean;\n  columns: any;\n  columns_by_id: [];\n  updateColumnArrangement: () => {};\n  history: any;\n  updateListName: (value: string) => {};\n  hideColumn: (columnID: string) => {};\n  showColumn: (columnID: string) => {};\n  updateFilter: (filter_id: string, payload: object) => {};\n  deleteFilter: (filter_id: string, payload: object) => {};\n  addFilter: () => {};\n  filters: {};\n  filters_by_id: [];\n  sorts: {};\n  sorts_by_id: [];\n  addSort: () => {};\n  deleteSort: (sort_id: string) => {};\n  updateSort: (filter_id: string, payload: object) => {};\n  deleteList: (list_id: string) => {};\n  createSmartList: Function;\n  updateSmartList: Function;\n  deleteSmartList: Function;\n  selectSmartList: Function;\n  selectSmartListID: Function;\n  updateSmartListFilters: Function;\n  clearFilters: Function;\n  is_smart_list: boolean;\n  search_query: string;\n  updateSearchQuery: Function;\n  initial_list: string;\n  selected_rows: string[];\n  openClearRowsDialog: () => void;\n  openDeleteRowsDialog: () => void;\n};\n\nexport const ListHeading = (props: Props) => {\n  const [showDeleteDialog, setShowDeleteDialog] = useState<boolean>(false);\n\n  const {\n    history,\n    list,\n    smart_list,\n    rows_loading,\n    columns,\n    columns_by_id,\n    updateColumnArrangement,\n    list_syncing,\n    updateListName,\n    hideColumn,\n    showColumn,\n    addFilter,\n    filters,\n    filters_by_id,\n    updateFilter,\n    deleteFilter,\n    sorts,\n    sorts_by_id,\n    addSort,\n    deleteSort,\n    updateSort,\n    deleteList,\n    createSmartList,\n    updateSmartList,\n    deleteSmartList,\n    selectSmartList,\n    selectSmartListID,\n    updateSmartListFilters,\n    clearFilters,\n    is_smart_list,\n    search_query,\n    updateSearchQuery,\n    selected_rows,\n    openClearRowsDialog,\n    openDeleteRowsDialog,\n  } = props;\n\n  const handleListTitleChange = (value: string) => {\n    if (!is_smart_list) updateListName(value);\n    else updateSmartList(smart_list.id, { name: value });\n  };\n\n  const toast = useToast();\n\n  const handleDeleteList = () => {\n    setShowDeleteDialog(false);\n    if (is_smart_list) deleteSmartList(smart_list['id']);\n    else deleteList(list['id']);\n    history.push('/s/lists');\n    toast({\n      position: 'bottom-left',\n      render: ({ onClose }) => (\n        <ToastBox\n          status=\"success\"\n          onClose={onClose}\n          message={`${is_smart_list ? smart_list.name : list.name} ${\n            is_smart_list ? 'smart list' : 'list'\n          } deleted`}\n        />\n      ),\n    });\n  };\n\n  const navToList = (list_id: string) => {\n    history.push(`/s/lists/view/${list_id}`);\n    clearFilters();\n  };\n\n  const initialListID = useSelector(selectInitialListId);\n\n  const isInitial = initialListID === list['id'];\n\n  return (\n    <>\n      <Flex className=\"list-header\">\n        <div>\n          <Box>\n            <Box className=\"icon-bg\" onClick={() => history.goBack()}>\n              <Icon name=\"arrow-back\" />\n            </Box>\n          </Box>\n\n          <ListTitleEditable\n            isEditing={false}\n            isInitial={isInitial}\n            value={is_smart_list ? smart_list['name'] : list['name']}\n            onChange={handleListTitleChange}\n          />\n\n          {isInitial && (\n            <Box\n              fontSize=\"10px\"\n              color=\"#32a852\"\n              textAlign=\"center\"\n              alignSelf=\"center\"\n              backgroundColor=\"rgba(50, 168, 82, 0.2)\"\n              borderRadius=\"5px\"\n              padding=\"2px 5px\"\n              mt=\"5px\"\n              width=\"fit-content\"\n              marginX=\"auto\"\n            >\n              primary\n            </Box>\n          )}\n        </div>\n        <div className=\"toolbar\">\n          {list_syncing && (\n            <Box fontSize=\"12px\" mr=\"20px\">\n              Syncing...\n            </Box>\n          )}\n          {rows_loading && (\n            <Box fontSize=\"12px\" mr=\"20px\">\n              Loading...\n            </Box>\n          )}\n          {!!selected_rows.length && (\n            <>\n              <Box display=\"flex\" mr=\"1rem\" alignItems=\"center\">\n                <Button\n                  aria-label=\"delete\"\n                  // @ts-ignore\n                  mr=\"10px\"\n                  size=\"xs\"\n                  variant=\"ghost\"\n                  variantColor=\"red\"\n                  onClick={openClearRowsDialog}\n                >\n                  Clear {selected_rows.length} row(s)\n                </Button>\n\n                <Button\n                  aria-label=\"delete\"\n                  // @ts-ignore\n                  size=\"xs\"\n                  variant=\"solid\"\n                  variantColor=\"red\"\n                  onClick={openDeleteRowsDialog}\n                >\n                  Delete {selected_rows.length} row(s)\n                </Button>\n              </Box>\n              <Divider orientation=\"vertical\" color=\"#E0E0E0\" height=\"15px\" width=\"1.5px\" />\n            </>\n          )}\n\n          {is_smart_list && (\n            <Breadcrumb\n              marginX=\"5px\"\n              color=\"#757575\"\n              fontSize=\"13px\"\n              spacing=\"8px\"\n              separator={<Icon color=\"gray.300\" name=\"chevron-right\" />}\n            >\n              <BreadcrumbItem>\n                <BreadcrumbLink onClick={() => navToList(list.id)}>{list.name}</BreadcrumbLink>\n              </BreadcrumbItem>\n              <BreadcrumbItem isCurrentPage>\n                <BreadcrumbLink>{smart_list.name}</BreadcrumbLink>\n              </BreadcrumbItem>\n            </Breadcrumb>\n          )}\n          {is_smart_list && <Box className=\"list-badge\">SMART LIST</Box>}\n          <ListSearch search_query={search_query} updateSearchQuery={updateSearchQuery} />\n          <Divider orientation=\"vertical\" color=\"#E0E0E0\" height=\"15px\" width=\"1.5px\" />\n          <ListSortMenu\n            columns={columns}\n            columns_by_id={columns_by_id}\n            sorts={sorts}\n            sorts_by_id={sorts_by_id}\n            addSort={addSort}\n            deleteSort={deleteSort}\n            updateSort={updateSort}\n          />\n          <Divider orientation=\"vertical\" color=\"#E0E0E0\" height=\"15px\" width=\"1.5px\" />\n          <ListFilterMenu\n            columns={columns}\n            columns_by_id={columns_by_id}\n            addFilter={addFilter}\n            updateFilter={updateFilter}\n            filters={filters}\n            filters_by_id={filters_by_id}\n            deleteFilter={deleteFilter}\n            createSmartList={createSmartList}\n            selectSmartListID={selectSmartListID}\n            selectSmartList={selectSmartList}\n            updateSmartListFilters={updateSmartListFilters}\n            smart_list={smart_list}\n            is_smart_list={is_smart_list}\n          />\n          <Divider orientation=\"vertical\" color=\"#E0E0E0\" height=\"15px\" width=\"1.5px\" />\n          <ListPropertyMenu\n            columns={columns}\n            columns_by_id={columns_by_id}\n            updateColumnArrangement={updateColumnArrangement}\n            hideColumn={hideColumn}\n            showColumn={showColumn}\n          />\n        </div>\n      </Flex>\n      <ConfirmModal\n        isOpen={showDeleteDialog}\n        onClose={() => setShowDeleteDialog(false)}\n        title={is_smart_list ? 'Delete smart list' : 'Delete list'}\n        description={`We'll move this ${\n          smart_list ? 'smart list' : 'list'\n        } to your trash for 30days`}\n        onConfirm={handleDeleteList}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}