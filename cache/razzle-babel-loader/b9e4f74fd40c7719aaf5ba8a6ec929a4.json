{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/sort/sort.item.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Box, List, Stack, Button, Popover, ListItem, ListIcon, IconButton, PopoverContent, PopoverTrigger } from '@chakra-ui/core';\nimport { SortableElement } from 'react-sortable-hoc';\nimport { SORT_ORDER_LIST } from './sort.data';\nimport { PROPERTIES } from '../property';\nimport { DragHandle } from '../../../../components';\nimport { objectIsEmpty } from '../../../../../utils';\nexport function SortItemOrder({\n  value,\n  options,\n  onSelect\n}) {\n  const option = options.find(item => item.value === value);\n\n  function handleSelect(option) {\n    onSelect(option.value);\n  }\n\n  return __jsx(Popover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    width: \"100%\",\n    variant: \"outline\",\n    rightIcon: \"chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, option.label)), __jsx(PopoverContent, {\n    zIndex: 1000,\n    paddingY: \"0.5rem\",\n    width: \"fit-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, options.map((option, index) => __jsx(ListItem, {\n    key: index,\n    paddingX: \"1rem\",\n    cursor: \"pointer\",\n    paddingY: \"0.4rem\",\n    fontSize: \"0.75rem\",\n    _hover: {\n      bg: 'gray.100'\n    },\n    onClick: () => handleSelect(option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, option.label)))));\n}\nexport function SortItemPropertyName({\n  value,\n  options,\n  onSelect\n}) {\n  const option = options.find(item => item.value === value);\n\n  function handleSelect(option) {\n    onSelect(option.value);\n  }\n\n  return __jsx(Popover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    width: \"100%\",\n    variant: \"outline\",\n    rightIcon: \"chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, option.label)), __jsx(PopoverContent, {\n    zIndex: 1000,\n    paddingY: \"0.5rem\",\n    width: \"fit-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, options.map((option, index) => __jsx(ListItem, {\n    key: index,\n    paddingX: \"1rem\",\n    cursor: \"pointer\",\n    paddingY: \"0.4rem\",\n    fontSize: \"0.75rem\",\n    _hover: {\n      bg: 'gray.100'\n    },\n    onClick: () => handleSelect(option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(ListIcon, {\n    size: \"0.75rem\",\n    icon: option.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), option.label)))));\n}\nexport const SortItem = SortableElement(({\n  value,\n  onChange,\n  onRemove,\n  properties\n}) => {\n  const SORT_PROPERTIES = properties.map(property => {\n    const selectProperty = PROPERTIES.find(item => item.label.toLowerCase() === property.type.toLowerCase());\n    const propertyIcon = selectProperty && selectProperty.icon;\n    return {\n      label: property.label,\n      value: property.name,\n      icon: propertyIcon\n    };\n  });\n  const initialValue = objectIsEmpty(value) ? {\n    name: SORT_PROPERTIES[0].value,\n    order: SORT_ORDER_LIST[0].value\n  } : value;\n  const [sortItem, setSortItem] = React.useState(initialValue);\n\n  function handleSortItemOrderChange(order) {\n    const value = _objectSpread(_objectSpread({}, sortItem), {}, {\n      order\n    });\n\n    setSortItem(value);\n    onChange(value);\n  }\n\n  function handleSortItemNameChange(name) {\n    const value = _objectSpread(_objectSpread({}, sortItem), {}, {\n      name\n    });\n\n    setSortItem(value);\n    onChange(value);\n  }\n\n  return __jsx(Stack, {\n    isInline: true,\n    zIndex: 1000000,\n    spacing: \"0.25rem\",\n    alignItems: \"center\",\n    marginBottom: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, __jsx(DragHandle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, __jsx(SortItemPropertyName, {\n    options: SORT_PROPERTIES,\n    value: sortItem && sortItem.name,\n    onSelect: handleSortItemNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, __jsx(SortItemOrder, {\n    options: SORT_ORDER_LIST,\n    value: sortItem && sortItem.order,\n    onSelect: handleSortItemOrderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    size: \"xs\",\n    icon: \"close\",\n    fontSize: \"8px\",\n    variant: \"ghost\",\n    \"aria-label\": \"close\",\n    onClick: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/sort/sort.item.tsx"],"names":["React","Box","List","Stack","Button","Popover","ListItem","ListIcon","IconButton","PopoverContent","PopoverTrigger","SortableElement","SORT_ORDER_LIST","PROPERTIES","DragHandle","objectIsEmpty","SortItemOrder","value","options","onSelect","option","find","item","handleSelect","label","map","index","bg","SortItemPropertyName","icon","SortItem","onChange","onRemove","properties","SORT_PROPERTIES","property","selectProperty","toLowerCase","type","propertyIcon","name","initialValue","order","sortItem","setSortItem","useState","handleSortItemOrderChange","handleSortItemNameChange"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Box,\n  List,\n  Stack,\n  Button,\n  Popover,\n  ListItem,\n  ListIcon,\n  IconButton,\n  PopoverContent,\n  PopoverTrigger,\n} from '@chakra-ui/core';\nimport { SortableElement } from 'react-sortable-hoc';\nimport {\n  SortItemProps,\n  SortItemOptions,\n  SortItemOrderProps,\n  SortItemPropertyNameProps,\n} from './sort.types';\nimport { SORT_ORDER_LIST } from './sort.data';\nimport { PROPERTIES } from '../property';\nimport { DragHandle } from '../../../../components';\nimport { objectIsEmpty } from '../../../../../utils';\nimport { SelectOptions } from '../../tables.types';\n\nexport function SortItemOrder({\n  value,\n  options,\n  onSelect,\n}: SortItemOrderProps) {\n  const option = options.find((item) => item.value === value) as SelectOptions;\n\n  function handleSelect(option: SelectOptions) {\n    onSelect(option.value);\n  }\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button\n          size=\"sm\"\n          width=\"100%\"\n          variant=\"outline\"\n          rightIcon=\"chevron-down\"\n        >\n          {option.label}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent zIndex={1000} paddingY=\"0.5rem\" width=\"fit-content\">\n        <List>\n          {options.map((option, index) => (\n            <ListItem\n              key={index}\n              paddingX=\"1rem\"\n              cursor=\"pointer\"\n              paddingY=\"0.4rem\"\n              fontSize=\"0.75rem\"\n              _hover={{ bg: 'gray.100' }}\n              onClick={() => handleSelect(option)}\n            >\n              {option.label}\n            </ListItem>\n          ))}\n        </List>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport function SortItemPropertyName({\n  value,\n  options,\n  onSelect,\n}: SortItemPropertyNameProps) {\n  const option = options.find((item) => item.value === value) as SelectOptions;\n\n  function handleSelect(option: SelectOptions) {\n    onSelect(option.value);\n  }\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button\n          size=\"sm\"\n          width=\"100%\"\n          variant=\"outline\"\n          rightIcon=\"chevron-down\"\n        >\n          {option.label}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent zIndex={1000} paddingY=\"0.5rem\" width=\"fit-content\">\n        <List>\n          {options.map((option, index) => (\n            <ListItem\n              key={index}\n              paddingX=\"1rem\"\n              cursor=\"pointer\"\n              paddingY=\"0.4rem\"\n              fontSize=\"0.75rem\"\n              _hover={{ bg: 'gray.100' }}\n              onClick={() => handleSelect(option)}\n            >\n              <ListIcon size=\"0.75rem\" icon={option.icon} />\n              {option.label}\n            </ListItem>\n          ))}\n        </List>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport const SortItem = SortableElement(\n  ({ value, onChange, onRemove, properties }: SortItemProps) => {\n    const SORT_PROPERTIES = properties.map((property) => {\n      const selectProperty = PROPERTIES.find(\n        (item) => item.label.toLowerCase() === property.type.toLowerCase()\n      );\n      const propertyIcon = selectProperty && selectProperty.icon;\n      return {\n        label: property.label,\n        value: property.name,\n        icon: propertyIcon,\n      };\n    });\n    const initialValue = objectIsEmpty(value)\n      ? {\n          name: SORT_PROPERTIES[0].value,\n          order: SORT_ORDER_LIST[0].value,\n        }\n      : value;\n    const [sortItem, setSortItem] = React.useState<SortItemOptions | null>(\n      initialValue\n    );\n\n    function handleSortItemOrderChange(order: string) {\n      const value = { ...sortItem, order };\n      setSortItem(value);\n      onChange(value);\n    }\n\n    function handleSortItemNameChange(name: string) {\n      const value = { ...sortItem, name };\n      setSortItem(value);\n      onChange(value);\n    }\n\n    return (\n      <Stack\n        isInline\n        zIndex={1000000}\n        spacing=\"0.25rem\"\n        alignItems=\"center\"\n        marginBottom=\"0.5rem\"\n      >\n        <Box>\n          <DragHandle />\n        </Box>\n        <Box flex={1}>\n          <SortItemPropertyName\n            options={SORT_PROPERTIES}\n            value={sortItem && sortItem.name}\n            onSelect={handleSortItemNameChange}\n          />\n        </Box>\n        <Box flex={1}>\n          <SortItemOrder\n            options={SORT_ORDER_LIST}\n            value={sortItem && sortItem.order}\n            onSelect={handleSortItemOrderChange}\n          />\n        </Box>\n        <Box>\n          <IconButton\n            size=\"xs\"\n            icon=\"close\"\n            fontSize=\"8px\"\n            variant=\"ghost\"\n            aria-label=\"close\"\n            onClick={onRemove}\n          />\n        </Box>\n      </Stack>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}