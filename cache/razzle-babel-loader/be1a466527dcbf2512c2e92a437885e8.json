{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/filter/filter-item/column-select.tsx\";\nvar __jsx = React.createElement;\n// @ts-nocheck\nimport { Box, Icon, Popover, PopoverContent, PopoverTrigger } from '@chakra-ui/core';\nimport { PopoverWrapper } from '../../../list-view.styles';\nimport { available_properties } from '../../../list.data';\nimport React from 'react';\nexport const ColumnSelect = props => {\n  const {\n    columns,\n    columns_by_id\n  } = props;\n  const selected_column = columns[props.selected_column];\n  return __jsx(Popover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, ({\n    onClose\n  }) => __jsx(React.Fragment, null, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: \"column-select\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: available_properties[selected_column.type].icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), __jsx(Box, {\n    className: \"selected-label-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, (selected_column === null || selected_column === void 0 ? void 0 : selected_column.label) || (selected_column === null || selected_column === void 0 ? void 0 : selected_column.name))), __jsx(Icon, {\n    name: \"chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }))), __jsx(PopoverContent, {\n    zIndex: 4,\n    width: \"max-content\",\n    boxShadow: \"none\",\n    _focus: {\n      boxShadow: 'none',\n      outline: 'none'\n    },\n    overflowY: \"scroll\",\n    maxH: \"320px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(PopoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, columns_by_id.map(i => __jsx(Box, {\n    key: i,\n    className: `list-item ${selected_column.uid === i ? 'active' : ''}`,\n    width: \"100%\",\n    style: {\n      fontSize: 14\n    },\n    onClick: () => {\n      props.onChange(i);\n      onClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: available_properties[columns[i].type].icon,\n    size: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }), columns[i].label || columns[i].name))))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/filter/filter-item/column-select.tsx"],"names":["Box","Icon","Popover","PopoverContent","PopoverTrigger","PopoverWrapper","available_properties","React","ColumnSelect","props","columns","columns_by_id","selected_column","onClose","type","icon","label","name","boxShadow","outline","map","i","uid","fontSize","onChange"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { Box, Icon, Popover, PopoverContent, PopoverTrigger } from '@chakra-ui/core';\nimport { PopoverWrapper } from '../../../list-view.styles';\nimport { available_properties } from '../../../list.data';\nimport React from 'react';\n\nexport const ColumnSelect = (props: any) => {\n  const { columns, columns_by_id } = props;\n\n  const selected_column = columns[props.selected_column];\n\n  return (\n    <Popover>\n      {({ onClose }) => (\n        <>\n          <PopoverTrigger>\n            <Box className=\"column-select\" alignItems=\"center\">\n              <Box display=\"flex\" alignItems=\"center\">\n                <Icon className=\"icon\" name={available_properties[selected_column.type].icon} />\n                <Box className=\"selected-label-text\">\n                  {selected_column?.label || selected_column?.name}\n                </Box>\n              </Box>\n              <Icon name=\"chevron-down\" />\n            </Box>\n          </PopoverTrigger>\n          <PopoverContent\n            zIndex={4}\n            width=\"max-content\"\n            boxShadow=\"none\"\n            _focus={{\n              boxShadow: 'none',\n              outline: 'none',\n            }}\n            overflowY=\"scroll\"\n            maxH=\"320px\"\n          >\n            <PopoverWrapper>\n              {columns_by_id.map((i: string) => (\n                <Box\n                  key={i}\n                  className={`list-item ${selected_column.uid === i ? 'active' : ''}`}\n                  width=\"100%\"\n                  style={{\n                    fontSize: 14,\n                  }}\n                  onClick={() => {\n                    props.onChange(i);\n                    onClose();\n                  }}\n                >\n                  <Icon\n                    className=\"icon\"\n                    name={available_properties[columns[i].type].icon}\n                    size=\"14px\"\n                  />\n                  {columns[i].label || columns[i].name}\n                </Box>\n              ))}\n            </PopoverWrapper>\n          </PopoverContent>\n        </>\n      )}\n    </Popover>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}