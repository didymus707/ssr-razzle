{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"template_type\", \"campaign_id\"],\n      _excluded2 = [\"template_type\", \"campaign_id\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/planner/send-campaign-modal.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, FormControl, FormErrorMessage, FormLabel, Image, ModalCloseButton, Stack, Text } from '@chakra-ui/core';\nimport { format } from 'date-fns';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { numberWithCommas } from '../../../../../../utils';\nimport { AdvancedSelect, DatePickerComponent, getTimeArray, ModalContainer, timezones, Button } from 'app/components';\nimport scheduleImage from '../../assets/campaign-schedule.svg';\nimport sendNowImage from '../../assets/campaign-send-now.svg';\nimport { CreditTopupCard } from '../credit-topup-card';\n\nconst SendNow = ({\n  onClose,\n  initialValues,\n  isLoading,\n  onSubmit,\n  credit_balance\n}) => {\n  var _initialValues$count;\n\n  const timezone = typeof window.Intl === undefined ? '' : window.Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  const handleSubmit = () => {\n    if (initialValues) {\n      const {\n        template_type,\n        campaign_id\n      } = initialValues,\n            rest = _objectWithoutProperties(initialValues, _excluded);\n\n      onSubmit(_objectSpread(_objectSpread({}, rest), {}, {\n        timezone,\n        state: 'started',\n        template_id: template_type === 'built-in' ? null : rest.template_id,\n        content: rest.template_id && template_type !== 'built-in' ? null : rest.content\n      }));\n    }\n  };\n\n  const amountToPay = ((_initialValues$count = initialValues === null || initialValues === void 0 ? void 0 : initialValues.count) !== null && _initialValues$count !== void 0 ? _initialValues$count : 0) * 2.65;\n  return __jsx(React.Fragment, null, !!(initialValues !== null && initialValues !== void 0 && initialValues.count) && credit_balance / 100 < amountToPay && __jsx(Box, {\n    px: \"1.5rem\",\n    pb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(CreditTopupCard, {\n    amount: amountToPay,\n    content: `We'll only be sending approximately ${numberWithCommas(Math.floor(credit_balance / (2.65 * 100)))} SMSs as you are low on campaign credits for the number of recipients (${numberWithCommas(initialValues === null || initialValues === void 0 ? void 0 : initialValues.count)}) for this campaign. Please top-up to ensure all recipients receive this campaign.`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), __jsx(Flex, {\n    py: \"1rem\",\n    px: \"1.5rem\",\n    alignItems: \"center\",\n    borderTopWidth: \"1px\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    onClick: onClose,\n    variant: \"outline\",\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    variantColor: \"blue\",\n    isLoading: isLoading,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\n\nconst Schedule = ({\n  onClose,\n  isLoading,\n  onSubmit,\n  initialValues,\n  credit_balance\n}) => {\n  var _initialValues$timezo, _initialValues$count2;\n\n  const userTimezone = typeof window.Intl === undefined ? '' : window.Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const {\n    values,\n    touched,\n    errors,\n    handleSubmit,\n    setFieldValue\n  } = useFormik({\n    onSubmit: payload => {\n      const {\n        template_type,\n        campaign_id\n      } = payload,\n            rest = _objectWithoutProperties(payload, _excluded2);\n\n      onSubmit(_objectSpread(_objectSpread({}, rest), {}, {\n        state: 'started',\n        template_id: template_type === 'built-in' ? null : rest.template_id,\n        content: rest.template_id && template_type !== 'built-in' ? null : rest.content,\n        schedule_end: rest.schedule_end && format(rest.schedule_end, 'yyyy-MM-dd hh:mm a'),\n        schedule_start: rest.schedule_start && format(rest.schedule_start, 'yyyy-MM-dd hh:mm a')\n      }));\n    },\n    validationSchema: yup.object().shape({\n      timezone: yup.string().required('Timezone is required'),\n      schedule_end: yup.date().required('End date is required'),\n      schedule_start: yup.date().required('Start date is required'),\n      send_time: yup.array().required('Send time is required').nullable()\n    }),\n    initialValues: initialValues ? _objectSpread(_objectSpread({}, initialValues), {}, {\n      timezone: (_initialValues$timezo = initialValues.timezone) !== null && _initialValues$timezo !== void 0 ? _initialValues$timezo : userTimezone,\n      schedule_start: initialValues !== null && initialValues !== void 0 && initialValues.schedule_start ? new Date(initialValues === null || initialValues === void 0 ? void 0 : initialValues.schedule_start) : undefined,\n      schedule_end: initialValues !== null && initialValues !== void 0 && initialValues.schedule_end ? new Date(initialValues === null || initialValues === void 0 ? void 0 : initialValues.schedule_end) : undefined\n    }) : {\n      timezone: userTimezone,\n      schedule_start: new Date(),\n      schedule_end: new Date(),\n      send_time: [`${new Date().getHours() + 1}:00`]\n    }\n  });\n  const amountToPay = ((_initialValues$count2 = initialValues === null || initialValues === void 0 ? void 0 : initialValues.count) !== null && _initialValues$count2 !== void 0 ? _initialValues$count2 : 0) * 3.65;\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    px: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    mb: \"8px\",\n    width: ['100%', '100%', '48%'],\n    isInvalid: !!touched.schedule_start && !!errors.schedule_start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(FormLabel, {\n    fontSize: \"0.8rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Start Date\"), __jsx(DatePickerComponent, {\n    size: \"sm\",\n    value: values.schedule_start,\n    onDayChange: date => setFieldValue('schedule_start', date),\n    dayPickerProps: {\n      disabledDays: {\n        before: new Date()\n      }\n    },\n    isInvalid: !!touched.schedule_start && !!errors.schedule_start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, errors.schedule_end)), __jsx(FormControl, {\n    mb: \"8px\",\n    width: ['100%', '100%', '48%'],\n    isInvalid: !!touched.schedule_end && !!errors.schedule_end,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, __jsx(FormLabel, {\n    fontSize: \"0.8rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"End Date\"), __jsx(DatePickerComponent, {\n    size: \"sm\",\n    value: values.schedule_end,\n    onDayChange: date => setFieldValue('schedule_end', date),\n    isInvalid: !!touched.schedule_end && !!errors.schedule_end,\n    dayPickerProps: {\n      disabledDays: {\n        before: new Date()\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, errors.schedule_end))), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    width: ['100%', '100%', '48%'],\n    isInvalid: !!touched.send_time && !!errors.send_time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, __jsx(AdvancedSelect, {\n    size: \"sm\",\n    isSearchable: true,\n    placeholder: \"Select time\",\n    value: values !== null && values !== void 0 && values.send_time ? values.send_time[0] : '',\n    isInvalid: !!touched.send_time && !!errors.send_time,\n    onChange: ({\n      value\n    }) => setFieldValue('send_time', [value]),\n    options: getTimeArray().map(item => ({\n      label: item,\n      value: item\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, errors.send_time)), __jsx(FormControl, {\n    width: ['100%', '100%', '48%'],\n    isInvalid: !!touched.timezone && !!errors.timezone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, __jsx(AdvancedSelect, {\n    size: \"sm\",\n    isSearchable: true,\n    value: values.timezone,\n    placeholder: \"Select timezone\",\n    isInvalid: !!touched.timezone && !!errors.timezone,\n    onChange: ({\n      value\n    }) => setFieldValue('timezone', value),\n    options: timezones.map(item => ({\n      label: item,\n      value: item\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, errors.timezone)))), !!(initialValues !== null && initialValues !== void 0 && initialValues.count) && credit_balance / 100 < amountToPay && __jsx(Box, {\n    px: \"1.5rem\",\n    pb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, __jsx(CreditTopupCard, {\n    amount: amountToPay,\n    content: `We'll only be sending approximately ${numberWithCommas(Math.floor(credit_balance / (3.65 * 100)))} SMSs as you are low on campaign credits for the number of recipients (${numberWithCommas(initialValues === null || initialValues === void 0 ? void 0 : initialValues.count)}) for this campaign. Please top-up to ensure all recipients receive this campaign.`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  })), __jsx(Flex, {\n    py: \"1rem\",\n    mt: \"1.5rem\",\n    px: \"1.5rem\",\n    alignItems: \"center\",\n    borderTopWidth: \"1px\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    onClick: onClose,\n    variant: \"outline\",\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    variantColor: \"blue\",\n    isLoading: isLoading,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, \"Schedule\")));\n};\n\nexport const SendCampaignModal = ({\n  isOpen,\n  onClose,\n  campaign,\n  isLoading,\n  credit_balance,\n  onCreateCampaign\n}) => {\n  const [section, setSection] = React.useState(campaign !== null && campaign !== void 0 && campaign.schedule_start ? 0 : 1);\n  return __jsx(ModalContainer, {\n    size: \"sm\",\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"Ready to send?\",\n    titleStyleProps: {\n      fontSize: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, __jsx(ModalCloseButton, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    px: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    w: \"100%\",\n    pb: \"1.5rem\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    p: \"0.8rem\",\n    width: \"48%\",\n    as: \"button\",\n    align: \"center\",\n    outline: \"none\",\n    justify: \"center\",\n    borderRadius: \"4px\",\n    flexDirection: \"column\",\n    onClick: () => setSection(0),\n    borderWidth: section === 0 ? '2px' : '1px',\n    borderColor: section === 0 ? 'primary' : '#E2E8F0',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    width: \"80px\",\n    src: scheduleImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }), __jsx(FormLabel, {\n    pb: \"0\",\n    fontSize: \"0.8rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, \"Schedule\"), __jsx(Text, {\n    pb: \"0.5rem\",\n    color: \"gray.600\",\n    fontSize: \"0.7rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Send on a future date\")), __jsx(Flex, {\n    p: \"0.8rem\",\n    as: \"button\",\n    width: \"48%\",\n    align: \"center\",\n    outline: \"none\",\n    justify: \"center\",\n    borderRadius: \"4px\",\n    flexDirection: \"column\",\n    onClick: () => setSection(1),\n    borderWidth: section === 1 ? '2px' : '1px',\n    borderColor: section === 1 ? 'primary' : '#E2E8F0',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    width: \"110px\",\n    src: sendNowImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }), __jsx(FormLabel, {\n    textAlign: \"center\",\n    pb: \"0\",\n    fontSize: \"0.8rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, \"Send now\"), __jsx(Text, {\n    textAlign: \"center\",\n    pb: \"0.5rem\",\n    color: \"gray.600\",\n    fontSize: \"0.7rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, \"Send immediately\")))), section === 0 && __jsx(Schedule, {\n    onClose: onClose,\n    isLoading: isLoading,\n    initialValues: campaign,\n    onSubmit: onCreateCampaign,\n    credit_balance: credit_balance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }), section === 1 && __jsx(SendNow, {\n    onClose: onClose,\n    isLoading: isLoading,\n    initialValues: campaign,\n    onSubmit: onCreateCampaign,\n    credit_balance: credit_balance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/planner/send-campaign-modal.tsx"],"names":["Box","Flex","FormControl","FormErrorMessage","FormLabel","Image","ModalCloseButton","Stack","Text","format","useFormik","React","yup","numberWithCommas","AdvancedSelect","DatePickerComponent","getTimeArray","ModalContainer","timezones","Button","scheduleImage","sendNowImage","CreditTopupCard","SendNow","onClose","initialValues","isLoading","onSubmit","credit_balance","timezone","window","Intl","undefined","DateTimeFormat","resolvedOptions","timeZone","handleSubmit","template_type","campaign_id","rest","state","template_id","content","amountToPay","count","Math","floor","Schedule","userTimezone","values","touched","errors","setFieldValue","payload","schedule_end","schedule_start","validationSchema","object","shape","string","required","date","send_time","array","nullable","Date","getHours","disabledDays","before","value","map","item","label","SendCampaignModal","isOpen","campaign","onCreateCampaign","section","setSection","useState","fontSize"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Image,\n  ModalCloseButton,\n  Stack,\n  Text,\n} from '@chakra-ui/core';\nimport { format } from 'date-fns';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { numberWithCommas } from '../../../../../../utils';\nimport {\n  AdvancedSelect,\n  DatePickerComponent,\n  getTimeArray,\n  ModalContainer,\n  ModalContainerOptions,\n  timezones,\n  Button,\n} from 'app/components';\nimport scheduleImage from '../../assets/campaign-schedule.svg';\nimport sendNowImage from '../../assets/campaign-send-now.svg';\nimport { CampaignData } from '../../campaigns.types';\nimport { CreditTopupCard } from '../credit-topup-card';\nimport { CampaignPayload } from './planner.index';\n\ntype SendCampaignModalProps = {\n  isLoading?: boolean;\n  credit_balance: number;\n  campaign?: CampaignPayload;\n  onCreateCampaign(payload: CampaignPayload): void;\n} & ModalContainerOptions;\n\ninterface SectionProps {\n  credit_balance: number;\n  initialValues?: CampaignPayload;\n  onSubmit(data: CampaignData): void;\n  onClose: SendCampaignModalProps['onClose'];\n  isLoading: SendCampaignModalProps['isLoading'];\n}\n\nconst SendNow = ({ onClose, initialValues, isLoading, onSubmit, credit_balance }: SectionProps) => {\n  const timezone =\n    typeof window.Intl === undefined ? '' : window.Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const handleSubmit = () => {\n    if (initialValues) {\n      const { template_type, campaign_id, ...rest } = initialValues;\n      onSubmit({\n        ...rest,\n        timezone,\n        state: 'started',\n        template_id: template_type === 'built-in' ? null : rest.template_id,\n        content: rest.template_id && template_type !== 'built-in' ? null : rest.content,\n      });\n    }\n  };\n\n  const amountToPay = (initialValues?.count ?? 0) * 2.65;\n\n  return (\n    <>\n      {!!initialValues?.count && credit_balance / 100 < amountToPay && (\n        <Box px=\"1.5rem\" pb=\"1rem\">\n          <CreditTopupCard\n            amount={amountToPay}\n            content={`We'll only be sending approximately ${numberWithCommas(\n              Math.floor(credit_balance / (2.65 * 100)),\n            )} SMSs as you are low on campaign credits for the number of recipients (${numberWithCommas(\n              initialValues?.count,\n            )}) for this campaign. Please top-up to ensure all recipients receive this campaign.`}\n          />\n        </Box>\n      )}\n      <Flex\n        py=\"1rem\"\n        px=\"1.5rem\"\n        alignItems=\"center\"\n        borderTopWidth=\"1px\"\n        justifyContent=\"space-between\"\n      >\n        <Button size=\"sm\" width=\"48%\" onClick={onClose} variant=\"outline\" variantColor=\"blue\">\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          width=\"48%\"\n          variantColor=\"blue\"\n          isLoading={isLoading}\n          onClick={handleSubmit}\n        >\n          Send\n        </Button>\n      </Flex>\n    </>\n  );\n};\n\nconst Schedule = ({\n  onClose,\n  isLoading,\n  onSubmit,\n  initialValues,\n  credit_balance,\n}: SectionProps) => {\n  const userTimezone =\n    typeof window.Intl === undefined ? '' : window.Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  const { values, touched, errors, handleSubmit, setFieldValue } = useFormik({\n    onSubmit: payload => {\n      const { template_type, campaign_id, ...rest } = payload;\n      onSubmit({\n        ...rest,\n        state: 'started',\n        template_id: template_type === 'built-in' ? null : rest.template_id,\n        content: rest.template_id && template_type !== 'built-in' ? null : rest.content,\n        schedule_end: rest.schedule_end && format(rest.schedule_end, 'yyyy-MM-dd hh:mm a'),\n        schedule_start: rest.schedule_start && format(rest.schedule_start, 'yyyy-MM-dd hh:mm a'),\n      });\n    },\n    validationSchema: yup.object().shape({\n      timezone: yup.string().required('Timezone is required'),\n      schedule_end: yup.date().required('End date is required'),\n      schedule_start: yup.date().required('Start date is required'),\n      send_time: yup.array().required('Send time is required').nullable(),\n    }),\n    initialValues: initialValues\n      ? {\n          ...initialValues,\n          timezone: initialValues.timezone ?? userTimezone,\n          schedule_start: initialValues?.schedule_start\n            ? new Date(initialValues?.schedule_start)\n            : undefined,\n          schedule_end: initialValues?.schedule_end\n            ? new Date(initialValues?.schedule_end)\n            : undefined,\n        }\n      : {\n          timezone: userTimezone,\n          schedule_start: new Date(),\n          schedule_end: new Date(),\n          send_time: [`${new Date().getHours() + 1}:00`],\n        },\n  });\n\n  const amountToPay = (initialValues?.count ?? 0) * 3.65;\n\n  return (\n    <>\n      <Box px=\"1.5rem\">\n        <Stack isInline alignItems=\"center\" justify=\"space-between\">\n          <FormControl\n            mb=\"8px\"\n            width={['100%', '100%', '48%']}\n            isInvalid={!!touched.schedule_start && !!errors.schedule_start}\n          >\n            <FormLabel fontSize=\"0.8rem\">Start Date</FormLabel>\n            <DatePickerComponent\n              size=\"sm\"\n              value={values.schedule_start}\n              onDayChange={date => setFieldValue('schedule_start', date)}\n              dayPickerProps={{ disabledDays: { before: new Date() } }}\n              isInvalid={!!touched.schedule_start && !!errors.schedule_start}\n            />\n            <FormErrorMessage>{errors.schedule_end}</FormErrorMessage>\n          </FormControl>\n          <FormControl\n            mb=\"8px\"\n            width={['100%', '100%', '48%']}\n            isInvalid={!!touched.schedule_end && !!errors.schedule_end}\n          >\n            <FormLabel fontSize=\"0.8rem\">End Date</FormLabel>\n            <DatePickerComponent\n              size=\"sm\"\n              value={values.schedule_end}\n              onDayChange={date => setFieldValue('schedule_end', date)}\n              isInvalid={!!touched.schedule_end && !!errors.schedule_end}\n              dayPickerProps={{ disabledDays: { before: new Date() } }}\n            />\n            <FormErrorMessage>{errors.schedule_end}</FormErrorMessage>\n          </FormControl>\n        </Stack>\n        <Stack isInline alignItems=\"center\" justify=\"space-between\">\n          <FormControl\n            width={['100%', '100%', '48%']}\n            isInvalid={!!touched.send_time && !!errors.send_time}\n          >\n            <AdvancedSelect\n              size=\"sm\"\n              isSearchable\n              placeholder=\"Select time\"\n              value={values?.send_time ? values.send_time[0] : ''}\n              isInvalid={!!touched.send_time && !!errors.send_time}\n              onChange={({ value }) => setFieldValue('send_time', [value])}\n              options={getTimeArray().map(item => ({ label: item, value: item }))}\n            />\n            <FormErrorMessage>{errors.send_time}</FormErrorMessage>\n          </FormControl>\n          <FormControl\n            width={['100%', '100%', '48%']}\n            isInvalid={!!touched.timezone && !!errors.timezone}\n          >\n            <AdvancedSelect\n              size=\"sm\"\n              isSearchable\n              value={values.timezone}\n              placeholder=\"Select timezone\"\n              isInvalid={!!touched.timezone && !!errors.timezone}\n              onChange={({ value }) => setFieldValue('timezone', value)}\n              options={timezones.map(item => ({ label: item, value: item }))}\n            />\n            <FormErrorMessage>{errors.timezone}</FormErrorMessage>\n          </FormControl>\n        </Stack>\n      </Box>\n      {!!initialValues?.count && credit_balance / 100 < amountToPay && (\n        <Box px=\"1.5rem\" pb=\"1rem\">\n          <CreditTopupCard\n            amount={amountToPay}\n            content={`We'll only be sending approximately ${numberWithCommas(\n              Math.floor(credit_balance / (3.65 * 100)),\n            )} SMSs as you are low on campaign credits for the number of recipients (${numberWithCommas(\n              initialValues?.count,\n            )}) for this campaign. Please top-up to ensure all recipients receive this campaign.`}\n          />\n        </Box>\n      )}\n      <Flex\n        py=\"1rem\"\n        mt=\"1.5rem\"\n        px=\"1.5rem\"\n        alignItems=\"center\"\n        borderTopWidth=\"1px\"\n        justifyContent=\"space-between\"\n      >\n        <Button size=\"sm\" width=\"48%\" onClick={onClose} variant=\"outline\" variantColor=\"blue\">\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          width=\"48%\"\n          variantColor=\"blue\"\n          isLoading={isLoading}\n          onClick={handleSubmit}\n        >\n          Schedule\n        </Button>\n      </Flex>\n    </>\n  );\n};\n\nexport const SendCampaignModal = ({\n  isOpen,\n  onClose,\n  campaign,\n  isLoading,\n  credit_balance,\n  onCreateCampaign,\n}: SendCampaignModalProps) => {\n  const [section, setSection] = React.useState(campaign?.schedule_start ? 0 : 1);\n\n  return (\n    <ModalContainer\n      size=\"sm\"\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Ready to send?\"\n      titleStyleProps={{ fontSize: '1rem' }}\n    >\n      <ModalCloseButton size=\"sm\" />\n      <Box px=\"1.5rem\">\n        <Flex w=\"100%\" pb=\"1.5rem\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex\n            p=\"0.8rem\"\n            width=\"48%\"\n            as=\"button\"\n            align=\"center\"\n            outline=\"none\"\n            justify=\"center\"\n            borderRadius=\"4px\"\n            flexDirection=\"column\"\n            onClick={() => setSection(0)}\n            borderWidth={section === 0 ? '2px' : '1px'}\n            borderColor={section === 0 ? 'primary' : '#E2E8F0'}\n          >\n            <Image width=\"80px\" src={scheduleImage} />\n            <FormLabel pb=\"0\" fontSize=\"0.8rem\">\n              Schedule\n            </FormLabel>\n            <Text pb=\"0.5rem\" color=\"gray.600\" fontSize=\"0.7rem\">\n              Send on a future date\n            </Text>\n          </Flex>\n          <Flex\n            p=\"0.8rem\"\n            as=\"button\"\n            width=\"48%\"\n            align=\"center\"\n            outline=\"none\"\n            justify=\"center\"\n            borderRadius=\"4px\"\n            flexDirection=\"column\"\n            onClick={() => setSection(1)}\n            borderWidth={section === 1 ? '2px' : '1px'}\n            borderColor={section === 1 ? 'primary' : '#E2E8F0'}\n          >\n            <Image width=\"110px\" src={sendNowImage} />\n            <FormLabel textAlign=\"center\" pb=\"0\" fontSize=\"0.8rem\">\n              Send now\n            </FormLabel>\n            <Text textAlign=\"center\" pb=\"0.5rem\" color=\"gray.600\" fontSize=\"0.7rem\">\n              Send immediately\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n      {section === 0 && (\n        <Schedule\n          onClose={onClose}\n          isLoading={isLoading}\n          initialValues={campaign}\n          onSubmit={onCreateCampaign}\n          credit_balance={credit_balance}\n        />\n      )}\n      {section === 1 && (\n        <SendNow\n          onClose={onClose}\n          isLoading={isLoading}\n          initialValues={campaign}\n          onSubmit={onCreateCampaign}\n          credit_balance={credit_balance}\n        />\n      )}\n    </ModalContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}