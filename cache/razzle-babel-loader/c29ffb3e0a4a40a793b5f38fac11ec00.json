{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/pages/ForgotPassword/ForgotPassword.container.tsx\";\nvar __jsx = React.createElement;\nimport { useToast } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ToastBox } from '../../../../components';\nimport { forgotPasswordAsync } from '../../service';\nimport { ForgotPassword } from './ForgotPassword.component';\nimport { useEffect } from 'react';\nimport { sendAmplitudeData } from '../../../../../utils/amplitude';\nconst stateConnector = connect(null, {\n  forgotPasswordAsync\n});\n\nfunction ForgotPasswordComponent(props) {\n  const toast = useToast();\n  const [loading, setLoading] = React.useState(false);\n  const [isSuccess, setIsSuccess] = React.useState(false);\n  const {\n    forgotPasswordAsync\n  } = props;\n  const BASE_URL = true ? 'http://localhost:3000/' : process.env.REACT_APP_DEMO_URL;\n\n  async function handleForgotPassword(values) {\n    try {\n      setLoading(true);\n      await forgotPasswordAsync(_objectSpread(_objectSpread({}, values), {}, {\n        link: `${BASE_URL}reset-password/{{token}}`\n      }));\n      setLoading(false);\n      setIsSuccess(true);\n      sendAmplitudeData('resetPasswordRequest');\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  }\n\n  useEffect(() => {\n    document.title = 'Simpu: Forgot Password';\n  }, []);\n  return __jsx(ForgotPassword, _extends({}, props, {\n    isLoading: loading,\n    isSuccess: isSuccess,\n    onSubmit: handleForgotPassword,\n    closeAlert: () => setIsSuccess(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport const ForgotPasswordContainer = stateConnector(ForgotPasswordComponent);","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/authentication/pages/ForgotPassword/ForgotPassword.container.tsx"],"names":["useToast","React","connect","ToastBox","forgotPasswordAsync","ForgotPassword","useEffect","sendAmplitudeData","stateConnector","ForgotPasswordComponent","props","toast","loading","setLoading","useState","isSuccess","setIsSuccess","BASE_URL","process","env","REACT_APP_DEMO_URL","handleForgotPassword","values","link","error","position","render","onClose","document","title","ForgotPasswordContainer"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,mBAAT,QAAoC,eAApC;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAKA,MAAMC,cAAc,GAAGN,OAAO,CAAC,IAAD,EAAO;AACnCE,EAAAA;AADmC,CAAP,CAA9B;;AAIA,SAASK,uBAAT,CAAiCC,KAAjC,EAA+C;AAC7C,QAAMC,KAAK,GAAGX,QAAQ,EAAtB;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,KAAK,CAACa,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM;AAAEV,IAAAA;AAAF,MAA0BM,KAAhC;AAEA,QAAMO,QAAQ,GACZ,OACI,wBADJ,GAEIC,OAAO,CAACC,GAAR,CAAYC,kBAHlB;;AAKA,iBAAeC,oBAAf,CAAoCC,MAApC,EAA8E;AAC5E,QAAI;AACFT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMT,mBAAmB,iCACpBkB,MADoB;AAEvBC,QAAAA,IAAI,EAAG,GAAEN,QAAS;AAFK,SAAzB;AAIAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAT,MAAAA,iBAAiB,CAAC,sBAAD,CAAjB;AACD,KATD,CASE,OAAOiB,KAAP,EAAc;AACdX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,KAAK,CAAC;AACJc,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAiB,MAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,OAAnB;AAA4B,UAAA,OAAO,EAAEH,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFrB,OAAD,CAAL;AAID;AACF;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACC,KAAT,GAAiB,wBAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,cAAD,eACMnB,KADN;AAEE,IAAA,SAAS,EAAEE,OAFb;AAGE,IAAA,SAAS,EAAEG,SAHb;AAIE,IAAA,QAAQ,EAAEM,oBAJZ;AAKE,IAAA,UAAU,EAAE,MAAML,YAAY,CAAC,KAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD;;AAED,OAAO,MAAMc,uBAAuB,GAAGtB,cAAc,CAACC,uBAAD,CAA9C","sourcesContent":["import { useToast } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { ToastBox } from '../../../../components';\nimport { ForgotPasswordInitialValuesProps } from '../../components';\nimport { forgotPasswordAsync } from '../../service';\nimport { ForgotPassword } from './ForgotPassword.component';\nimport { useEffect } from 'react';\nimport { sendAmplitudeData } from '../../../../../utils/amplitude';\n\ntype PropsWithRedux = ConnectedProps<typeof stateConnector>;\ntype Props = PropsWithRedux & RouteComponentProps;\n\nconst stateConnector = connect(null, {\n  forgotPasswordAsync,\n});\n\nfunction ForgotPasswordComponent(props: Props) {\n  const toast = useToast();\n  const [loading, setLoading] = React.useState(false);\n  const [isSuccess, setIsSuccess] = React.useState(false);\n  const { forgotPasswordAsync } = props;\n\n  const BASE_URL =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:3000/'\n      : process.env.REACT_APP_DEMO_URL;\n\n  async function handleForgotPassword(values: ForgotPasswordInitialValuesProps) {\n    try {\n      setLoading(true);\n      await forgotPasswordAsync({\n        ...values,\n        link: `${BASE_URL}reset-password/{{token}}`,\n      });\n      setLoading(false);\n      setIsSuccess(true);\n      sendAmplitudeData('resetPasswordRequest');\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  }\n\n  useEffect(() => {\n    document.title = 'Simpu: Forgot Password';\n  }, []);\n\n  return (\n    <ForgotPassword\n      {...props}\n      isLoading={loading}\n      isSuccess={isSuccess}\n      onSubmit={handleForgotPassword}\n      closeAlert={() => setIsSuccess(false)}\n    />\n  );\n}\n\nexport const ForgotPasswordContainer = stateConnector(ForgotPasswordComponent);\n"]},"metadata":{},"sourceType":"module"}