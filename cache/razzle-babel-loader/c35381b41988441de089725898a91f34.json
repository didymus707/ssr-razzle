{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/channels/components/ChannelItem.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Flex, Text, Stack, Icon, Link } from '@chakra-ui/core';\nimport { SocialIcon, Button } from '../../../components';\nimport { NavLink } from 'react-router-dom';\nimport { getBtnText, getIntegrationUrl } from '../channels.utils';\nimport { apps, requestAccessUrls } from '../channels.data';\nimport { useSelector } from 'react-redux';\nimport { selectIsCredentialConnected } from '../slices';\nimport { selectOrganisationID } from '../../../unauthenticated-app/authentication';\nexport const ChannelConnectBtn = ({\n  which,\n  children\n}) => {\n  const organisation_id = useSelector(selectOrganisationID);\n  const token = useSelector(state => state.auth.token);\n  const {\n    status,\n    isMultipleClick\n  } = apps[which];\n  return isMultipleClick ? __jsx(NavLink, {\n    to: {\n      pathname: `/s/integrations/${['sms', 'voice'].includes(which) ? 'phone' : `_${which}`}`\n    },\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, children) : __jsx(Link, {\n    isExternal: status === 'request',\n    href: status === 'request' ? requestAccessUrls[which] : getIntegrationUrl({\n      key: '',\n      channel: which,\n      token: token || '',\n      organisation_id: organisation_id || ''\n    }),\n    _hover: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const ChannelItem = ({\n  name,\n  which,\n  description\n}) => {\n  const organisation_id = useSelector(selectOrganisationID);\n  const token = useSelector(state => state.auth.token);\n  const isConnected = useSelector(state => selectIsCredentialConnected(state, which));\n  const url = `/s/integrations/${which === 'sms' || which === 'voice' ? 'phone' : which}`;\n  const integrationUrl = `/s/integrations/${which}-integration`;\n\n  const Child = __jsx(Box, {\n    p: \"1.3125rem\",\n    rounded: \".375rem\",\n    lineHeight: \"1.6\",\n    fontSize: \".9375rem\",\n    boxShadow: \"0 0 1px 0 rgba(67, 90, 111, 0.47)\" // maxWidth={['auto', 'auto', 'auto', '19.8125rem']}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    alignItems: \"flex-start\",\n    mb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    marginTop: \".625rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(SocialIcon, {\n    size: \"1.75rem\",\n    which: which,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    color: \"brandBlack\",\n    fontSize: \"0.875rem\",\n    marginLeft: \"1.25rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, name), __jsx(Text, {\n    color: \"lightBlack\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, description))), isConnected ? __jsx(Stack, {\n    isInline: true,\n    justifyContent: \"flex-end\",\n    spacing: \".625rem\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"check\",\n    size: \"1.25rem\",\n    color: \"#6ac803\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), __jsx(Text, {\n    fontWeight: 600,\n    fontSize: \".875rem\",\n    color: \"#6ac803\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Connected\")) : __jsx(Button, {\n    py: \".5rem\",\n    variantColor: isConnected ? 'blue' : 'gray',\n    width: \"100%\",\n    fontSize: \".875rem\",\n    color: isConnected ? '#fff' : 'brandBlack',\n    variant: isConnected ? 'solid' : 'ghost',\n    fontWeight: 500,\n    border: \"solid 1px rgba(0, 0, 0, 0.08)\",\n    borderRadius: \".1875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, getBtnText(which)));\n\n  return isConnected ? __jsx(NavLink, {\n    to: {\n      pathname: integrationUrl\n    },\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, Child) : ['whatsapp', 'sms', 'voice', 'android', 'ios', 'web-chat'].includes(which) ? __jsx(NavLink, {\n    to: {\n      pathname: url\n    },\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, Child) : __jsx(Link, {\n    isExternal: which === 'instagram',\n    href: which === 'instagram' ? requestAccessUrls[which] : getIntegrationUrl({\n      key: '',\n      channel: which,\n      token: token || '',\n      organisation_id: organisation_id || ''\n    }),\n    _hover: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, Child);\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/channels/components/ChannelItem.tsx"],"names":["React","Box","Flex","Text","Stack","Icon","Link","SocialIcon","Button","NavLink","getBtnText","getIntegrationUrl","apps","requestAccessUrls","useSelector","selectIsCredentialConnected","selectOrganisationID","ChannelConnectBtn","which","children","organisation_id","token","state","auth","status","isMultipleClick","pathname","includes","key","channel","textDecoration","ChannelItem","name","description","isConnected","url","integrationUrl","Child"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport { Box, Flex, Text, Stack, Icon, Link } from '@chakra-ui/core';\nimport { SocialIcon, Button } from '../../../components';\nimport { ChannelItemProps } from '../channels.types';\nimport { NavLink } from 'react-router-dom';\nimport { getBtnText, getIntegrationUrl } from '../channels.utils';\nimport { apps, requestAccessUrls } from '../channels.data';\nimport { useSelector } from 'react-redux';\nimport { selectIsCredentialConnected } from '../slices';\nimport { RootState } from '../../../../root';\nimport { selectOrganisationID } from '../../../unauthenticated-app/authentication';\n\nexport const ChannelConnectBtn = ({ which, children }: { which: string; children: ReactNode }) => {\n  const organisation_id = useSelector(selectOrganisationID);\n  const token = useSelector((state: RootState) => state.auth.token);\n  const { status, isMultipleClick } = apps[which];\n\n  return isMultipleClick ? (\n    <NavLink\n      to={{\n        pathname: `/s/integrations/${['sms', 'voice'].includes(which) ? 'phone' : `_${which}`}`,\n      }}\n      activeClassName=\"active\"\n    >\n      {children}\n    </NavLink>\n  ) : (\n    <Link\n      isExternal={status === 'request'}\n      href={\n        status === 'request'\n          ? requestAccessUrls[which]\n          : getIntegrationUrl({\n              key: '',\n              channel: which,\n              token: token || '',\n              organisation_id: organisation_id || '',\n            })\n      }\n      _hover={{\n        textDecoration: 'none',\n      }}\n    >\n      {children}\n    </Link>\n  );\n};\n\nexport const ChannelItem = ({ name, which, description }: ChannelItemProps) => {\n  const organisation_id = useSelector(selectOrganisationID);\n  const token = useSelector((state: RootState) => state.auth.token);\n  const isConnected = useSelector((state: RootState) => selectIsCredentialConnected(state, which));\n\n  const url = `/s/integrations/${which === 'sms' || which === 'voice' ? 'phone' : which}`;\n  const integrationUrl = `/s/integrations/${which}-integration`;\n\n  const Child = (\n    <Box\n      p=\"1.3125rem\"\n      rounded=\".375rem\"\n      lineHeight=\"1.6\"\n      fontSize=\".9375rem\"\n      boxShadow=\"0 0 1px 0 rgba(67, 90, 111, 0.47)\"\n      // maxWidth={['auto', 'auto', 'auto', '19.8125rem']}\n    >\n      <Flex alignItems=\"flex-start\" mb=\"1rem\">\n        <Box marginTop=\".625rem\">\n          <SocialIcon size=\"1.75rem\" which={which} />\n        </Box>\n\n        <Box color=\"brandBlack\" fontSize=\"0.875rem\" marginLeft=\"1.25rem\">\n          <Text fontWeight=\"bold\">{name}</Text>\n\n          <Text color=\"lightBlack\" fontSize=\"0.875rem\">\n            {description}\n          </Text>\n        </Box>\n      </Flex>\n\n      {isConnected ? (\n        <Stack isInline justifyContent=\"flex-end\" spacing=\".625rem\" alignItems=\"center\">\n          <Icon name=\"check\" size=\"1.25rem\" color=\"#6ac803\" />\n\n          <Text fontWeight={600} fontSize=\".875rem\" color=\"#6ac803\">\n            Connected\n          </Text>\n        </Stack>\n      ) : (\n        <Button\n          py=\".5rem\"\n          variantColor={isConnected ? 'blue' : 'gray'}\n          width=\"100%\"\n          fontSize=\".875rem\"\n          color={isConnected ? '#fff' : 'brandBlack'}\n          variant={isConnected ? 'solid' : 'ghost'}\n          fontWeight={500}\n          border=\"solid 1px rgba(0, 0, 0, 0.08)\"\n          borderRadius=\".1875rem\"\n        >\n          {getBtnText(which)}\n        </Button>\n      )}\n    </Box>\n  );\n\n  return isConnected ? (\n    <NavLink\n      to={{\n        pathname: integrationUrl,\n      }}\n      activeClassName=\"active\"\n    >\n      {Child}\n    </NavLink>\n  ) : ['whatsapp', 'sms', 'voice', 'android', 'ios', 'web-chat'].includes(which) ? (\n    <NavLink\n      to={{\n        pathname: url,\n      }}\n      activeClassName=\"active\"\n    >\n      {Child}\n    </NavLink>\n  ) : (\n    <Link\n      isExternal={which === 'instagram'}\n      href={\n        which === 'instagram'\n          ? requestAccessUrls[which]\n          : getIntegrationUrl({\n              key: '',\n              channel: which,\n              token: token || '',\n              organisation_id: organisation_id || '',\n            })\n      }\n      _hover={{\n        textDecoration: 'none',\n      }}\n    >\n      {Child}\n    </Link>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}