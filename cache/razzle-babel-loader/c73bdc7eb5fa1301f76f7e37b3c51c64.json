{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { OptionTypeBase } from 'react-select';\nimport { Cell, Column, Row } from 'react-table';\nimport { ModalContainerOptions } from '../../../../components';\nimport {\n  ImportRowsMappingOptions,\n  ImportRowsOptions,\n  SelectOptions,\n  TablePropertiesOptions,\n} from '../../tables.types';\n\nexport interface TableEditableCellProps {\n  cell: Cell;\n  row: Row;\n  column: Column;\n  updateCellData: (index: number, id: string | number, value: string) => void;\n}\n\nexport interface DataTableProps {\n  data: any[];\n  columns: Column[];\n  onAddRow?: () => void;\n  hasNextPage?: boolean;\n  skipPageReset?: boolean;\n  isNextPageLoading?: boolean;\n  onDeleteRow?: (id: string) => void;\n  onExpandRow?: (id: string) => void;\n  loadNextPage?: (startIndex: number, stopIndex: number) => Promise<void>;\n}\n\nexport interface importedData {\n  id?: string;\n  name?: string;\n  status?: number;\n  errors?: number;\n  source?: string;\n  success?: number;\n  file_name?: string;\n  error_logs?: null;\n  delimiter?: string;\n  duplicates?: number;\n  extras?: OptionTypeBase;\n  mapping?: OptionTypeBase;\n  object_id?: string | null;\n  created_datetime?: string;\n  updated_datetime?: string;\n  date_format?: string | null;\n  columns?: OptionTypeBase[];\n  object?: OptionTypeBase | null;\n}\n\nexport interface TableImportModalProps {\n  file: any;\n  isNew?: boolean;\n  isLoading?: boolean;\n  onRemoveFile: () => void;\n  importedData: importedData;\n  tables: TablePropertiesOptions[];\n  isOpen: ModalContainerOptions['isOpen'];\n  onClose: ModalContainerOptions['onClose'];\n  handleMapping: (payload: ImportRowsMappingOptions) => void;\n  handleUpload: ({ file, date_format, source }: ImportRowsOptions) => void;\n}\n\nexport interface NewTableImportModalProps {\n  file: any;\n  isLoading?: boolean;\n  onRemoveFile: () => void;\n  importedData: importedData;\n  isOpen: ModalContainerOptions['isOpen'];\n  onClose: ModalContainerOptions['onClose'];\n  handleMapping: (payload: ImportRowsMappingOptions) => void;\n  handleCreateTable: (payload: TablePropertiesOptions['columns']) => void;\n  handleUpload: ({ file, date_format, source }: ImportRowsOptions) => void;\n}\n\nexport interface TableDataSchema {\n  type?: string;\n  value?: string | string[];\n  options?: SelectOptions[];\n}\n\nexport interface TableDropdownItemProps {\n  isActive?: boolean;\n  onClick?: () => void;\n  onDelete?: () => void;\n  table: TablePropertiesOptions;\n}\n\nexport interface TablesDropdownProps {\n  isLoading?: boolean;\n  children: React.ReactNode;\n  data: TablePropertiesOptions[];\n  activeTable?: TablePropertiesOptions;\n  onDelete?: ({ id, callback }: { id: TablePropertiesOptions['id']; callback: () => void }) => void;\n  onClick: (group: TablePropertiesOptions) => void;\n}\n"]},"metadata":{},"sourceType":"module"}