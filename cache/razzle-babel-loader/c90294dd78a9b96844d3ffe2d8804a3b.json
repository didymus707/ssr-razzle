{"ast":null,"code":"import _objectWithoutProperties from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"icon\", \"title\", \"caption\", \"onSelect\", \"showButton\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/campaigns/components/planner/campaign-meta-modal.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button, Flex, Heading, Icon, ModalCloseButton, PseudoBox, Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport { ModalContainer } from '../../../../../components';\nexport const CampaignMetaModal = ({\n  title = 'Choose a link or template for your message',\n  isOpen,\n  onClose,\n  options\n}) => {\n  return __jsx(ModalContainer, {\n    size: \"md\",\n    title: title,\n    isOpen: isOpen,\n    onClose: onClose,\n    titleStyleProps: {\n      fontSize: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(ModalCloseButton, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    px: \"1.5rem\",\n    pb: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, options === null || options === void 0 ? void 0 : options.map((option, index) => __jsx(MetaItem, _extends({\n    key: `${index}`\n  }, option, {\n    borderBottomWidth: index === options.length - 1 ? '0' : '1px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })))));\n};\nexport const MetaItem = _ref => {\n  let {\n    icon,\n    title,\n    caption,\n    onSelect,\n    showButton\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(PseudoBox, _extends({\n    py: \"1rem\",\n    cursor: \"pointer\",\n    transition: \"all 0.2s\",\n    onClick: e => {\n      e.stopPropagation();\n      onSelect();\n    },\n    _hover: {\n      bg: 'gray.200',\n      rounded: '12px'\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    size: \"30px\",\n    rounded: \"50%\",\n    bg: \"#f2f2f2\",\n    flex: \"0 0 30px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    size: \"1rem\",\n    name: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    pb: \"0.2rem\",\n    fontSize: \"0.875rem\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, title), __jsx(Text, {\n    width: \"90%\",\n    fontSize: \"0.7rem\",\n    color: \"#4f4f4f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, caption))), showButton && __jsx(Button, {\n    size: \"xs\",\n    onClick: onSelect,\n    variant: \"outline\",\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Select\")));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/campaigns/components/planner/campaign-meta-modal.tsx"],"names":["Box","Button","Flex","Heading","Icon","ModalCloseButton","PseudoBox","Stack","Text","React","ModalContainer","CampaignMetaModal","title","isOpen","onClose","options","fontSize","map","option","index","length","MetaItem","icon","caption","onSelect","showButton","rest","e","stopPropagation","bg","rounded"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  ModalCloseButton,\n  PseudoBox,\n  PseudoBoxProps,\n  Stack,\n  Text,\n} from '@chakra-ui/core';\nimport React from 'react';\nimport { ModalContainer, ModalContainerOptions } from '../../../../../components';\n\ntype CampaignMetaModalProps = { options?: any[] } & ModalContainerOptions;\ntype MetaItemProps = {\n  icon: string;\n  title: string;\n  caption: string;\n  onSelect(): void;\n  showButton?: boolean;\n} & PseudoBoxProps;\n\nexport const CampaignMetaModal = ({\n  title = 'Choose a link or template for your message',\n  isOpen,\n  onClose,\n  options,\n}: CampaignMetaModalProps) => {\n  return (\n    <ModalContainer\n      size=\"md\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      titleStyleProps={{ fontSize: '1rem' }}\n    >\n      <ModalCloseButton size=\"sm\" />\n      <Box px=\"1.5rem\" pb=\"1.5rem\">\n        {options?.map((option, index) => (\n          <MetaItem\n            key={`${index}`}\n            {...option}\n            borderBottomWidth={index === options.length - 1 ? '0' : '1px'}\n          />\n        ))}\n      </Box>\n    </ModalContainer>\n  );\n};\n\nexport const MetaItem = ({\n  icon,\n  title,\n  caption,\n  onSelect,\n  showButton,\n  ...rest\n}: MetaItemProps) => {\n  return (\n    <PseudoBox\n      py=\"1rem\"\n      cursor=\"pointer\"\n      transition=\"all 0.2s\"\n      onClick={e => {\n        e.stopPropagation();\n        onSelect();\n      }}\n      _hover={{ bg: 'gray.200', rounded: '12px' }}\n      {...rest}\n    >\n      <Stack isInline alignItems=\"center\">\n        <Stack isInline flex={1}>\n          <Flex\n            size=\"30px\"\n            rounded=\"50%\"\n            bg=\"#f2f2f2\"\n            flex=\"0 0 30px\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Icon size=\"1rem\" name={icon} />\n          </Flex>\n          <Box>\n            <Heading pb=\"0.2rem\" fontSize=\"0.875rem\" fontWeight=\"bold\">\n              {title}\n            </Heading>\n            <Text width=\"90%\" fontSize=\"0.7rem\" color=\"#4f4f4f\">\n              {caption}\n            </Text>\n          </Box>\n        </Stack>\n        {showButton && (\n          <Button size=\"xs\" onClick={onSelect} variant=\"outline\" variantColor=\"blue\">\n            Select\n          </Button>\n        )}\n      </Stack>\n    </PseudoBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}