{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/group/group.ui.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Icon, List, Popover, PopoverContent, PopoverTrigger, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport { ConfirmModal } from '../../../../components';\nimport { GroupDropdownItem, GroupModal } from './group.components';\nimport { PropertySearchForm } from '../property';\nexport function GroupsDropdown({\n  data,\n  onEdit,\n  onClick,\n  onDelete,\n  children,\n  isLoading,\n  activeGroup,\n  loadingDispatch,\n  onFetchTableRows\n}) {\n  const [list, setList] = React.useState(data || []);\n  const [groupToDelete, setGroupToDelete] = React.useState('');\n  const [groupToEdit, setGroupToEdit] = React.useState();\n  React.useEffect(() => {\n    setList(data);\n  }, [data]);\n\n  function handleSearch(value) {\n    if (value) {\n      const newList = list.filter(item => item.name.toLowerCase().startsWith(value.toLowerCase()));\n\n      if (newList.length) {\n        setList(newList);\n      } else {\n        setList(data);\n      }\n    } else {\n      setList(data);\n    }\n  }\n\n  function handleEditGroup(value) {\n    setList(list.map(x => {\n      if (x.id === value.id) {\n        return value;\n      }\n\n      return x;\n    }));\n\n    if (onEdit) {\n      onEdit(value, () => setGroupToEdit(undefined));\n    }\n  }\n\n  function handleDeleteGroup() {\n    setList(list.filter(x => groupToDelete !== x.id));\n\n    if (onDelete) {\n      loadingDispatch({\n        type: 'LOADING_STARTED'\n      });\n      onDelete({\n        id: groupToDelete\n      }, () => setGroupToDelete(''));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Popover, {\n    placement: \"bottom-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, children), __jsx(PopoverContent, {\n    zIndex: 99999,\n    paddingY: \"1rem\",\n    width: \"fit-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    paddingX: \"1rem\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    size: \"0.75rem\",\n    name: \"folder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), __jsx(Text, {\n    fontSize: \"14px\",\n    fontWeight: 500,\n    paddingLeft: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Groups\")), __jsx(Box, {\n    paddingX: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(PropertySearchForm, {\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(GroupDropdownItem, {\n    group: {\n      name: 'Table'\n    },\n    onClick: onFetchTableRows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), list.map((item, index) => __jsx(GroupDropdownItem, {\n    key: index,\n    group: item,\n    onDelete: () => {\n      setGroupToDelete(item.id);\n    },\n    onClick: () => onClick(item),\n    onEdit: () => setGroupToEdit(item),\n    isActive: (activeGroup === null || activeGroup === void 0 ? void 0 : activeGroup.id) === item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))))), __jsx(GroupModal, {\n    title: \"Edit group\",\n    isLoading: isLoading,\n    isOpen: !!groupToEdit,\n    onSubmit: handleEditGroup,\n    initialValues: groupToEdit,\n    onClose: () => setGroupToEdit(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), __jsx(ConfirmModal, {\n    title: \"Delete group\",\n    isLoading: isLoading,\n    isOpen: !!groupToDelete,\n    onConfirm: handleDeleteGroup,\n    onClose: () => setGroupToDelete(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/group/group.ui.tsx"],"names":["Box","Flex","Icon","List","Popover","PopoverContent","PopoverTrigger","Text","React","ConfirmModal","GroupDropdownItem","GroupModal","PropertySearchForm","GroupsDropdown","data","onEdit","onClick","onDelete","children","isLoading","activeGroup","loadingDispatch","onFetchTableRows","list","setList","useState","groupToDelete","setGroupToDelete","groupToEdit","setGroupToEdit","useEffect","handleSearch","value","newList","filter","item","name","toLowerCase","startsWith","length","handleEditGroup","map","x","id","undefined","handleDeleteGroup","type","index"],"mappings":";;AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,cANF,EAOEC,cAPF,EAQEC,IARF,QASO,iBATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,oBAA9C;AAEA,SAASC,kBAAT,QAAmC,aAAnC;AAEA,OAAO,SAASC,cAAT,CAAwB;AAC7BC,EAAAA,IAD6B;AAE7BC,EAAAA,MAF6B;AAG7BC,EAAAA,OAH6B;AAI7BC,EAAAA,QAJ6B;AAK7BC,EAAAA,QAL6B;AAM7BC,EAAAA,SAN6B;AAO7BC,EAAAA,WAP6B;AAQ7BC,EAAAA,eAR6B;AAS7BC,EAAAA;AAT6B,CAAxB,EAUiB;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,KAAK,CAACiB,QAAN,CAA8BX,IAAI,IAAI,EAAtC,CAAxB;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCnB,KAAK,CAACiB,QAAN,CACxC,EADwC,CAA1C;AAGA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCrB,KAAK,CAACiB,QAAN,EAAtC;AAIAjB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpBN,IAAAA,OAAO,CAACV,IAAD,CAAP;AACD,GAFD,EAEG,CAACA,IAAD,CAFH;;AAIA,WAASiB,YAAT,CAAsBC,KAAtB,EAAqC;AACnC,QAAIA,KAAJ,EAAW;AACT,YAAMC,OAAO,GAAGV,IAAI,CAACW,MAAL,CAAaC,IAAD,IAC1BA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,UAAxB,CAAmCN,KAAK,CAACK,WAAN,EAAnC,CADc,CAAhB;;AAGA,UAAIJ,OAAO,CAACM,MAAZ,EAAoB;AAClBf,QAAAA,OAAO,CAACS,OAAD,CAAP;AACD,OAFD,MAEO;AACLT,QAAAA,OAAO,CAACV,IAAD,CAAP;AACD;AACF,KATD,MASO;AACLU,MAAAA,OAAO,CAACV,IAAD,CAAP;AACD;AACF;;AAED,WAAS0B,eAAT,CAAyBR,KAAzB,EAA6C;AAC3CR,IAAAA,OAAO,CACLD,IAAI,CAACkB,GAAL,CAAUC,CAAD,IAAoB;AAC3B,UAAIA,CAAC,CAACC,EAAF,KAASX,KAAK,CAACW,EAAnB,EAAuB;AACrB,eAAOX,KAAP;AACD;;AACD,aAAOU,CAAP;AACD,KALD,CADK,CAAP;;AAQA,QAAI3B,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACiB,KAAD,EAAQ,MAAMH,cAAc,CAACe,SAAD,CAA5B,CAAN;AACD;AACF;;AAED,WAASC,iBAAT,GAA6B;AAC3BrB,IAAAA,OAAO,CAACD,IAAI,CAACW,MAAL,CAAaQ,CAAD,IAAoBhB,aAAa,KAAKgB,CAAC,CAACC,EAApD,CAAD,CAAP;;AACA,QAAI1B,QAAJ,EAAc;AACZI,MAAAA,eAAe,CAAC;AAAEyB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAf;AACA7B,MAAAA,QAAQ,CAAC;AAAE0B,QAAAA,EAAE,EAAEjB;AAAN,OAAD,EAAwB,MAAMC,gBAAgB,CAAC,EAAD,CAA9C,CAAR;AACD;AACF;;AAED,SACE,4BACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBT,QAAjB,CADF,EAEE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAE,KAAxB;AAA+B,IAAA,QAAQ,EAAC,MAAxC;AAA+C,IAAA,KAAK,EAAC,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,UAAU,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,UAAU,EAAE,GAAlC;AAAuC,IAAA,WAAW,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,EAOE,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEa,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAUE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AACE,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAE;AAAR,KADT;AAEE,IAAA,OAAO,EAAEd,gBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKGC,IAAI,CAACkB,GAAL,CAAS,CAACN,IAAD,EAAOY,KAAP,KACR,MAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,KAAK,EAAEZ,IAFT;AAGE,IAAA,QAAQ,EAAE,MAAM;AACdR,MAAAA,gBAAgB,CAACQ,IAAI,CAACQ,EAAN,CAAhB;AACD,KALH;AAME,IAAA,OAAO,EAAE,MAAM3B,OAAO,CAACmB,IAAD,CANxB;AAOE,IAAA,MAAM,EAAE,MAAMN,cAAc,CAACM,IAAD,CAP9B;AAQE,IAAA,QAAQ,EAAE,CAAAf,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEuB,EAAb,MAAoBR,IAAI,CAACQ,EARrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALH,CAVF,CAFF,CADF,EAkCE,MAAC,UAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,SAAS,EAAExB,SAFb;AAGE,IAAA,MAAM,EAAE,CAAC,CAACS,WAHZ;AAIE,IAAA,QAAQ,EAAEY,eAJZ;AAKE,IAAA,aAAa,EAAEZ,WALjB;AAME,IAAA,OAAO,EAAE,MAAMC,cAAc,CAACe,SAAD,CAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EA2CE,MAAC,YAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,SAAS,EAAEzB,SAFb;AAGE,IAAA,MAAM,EAAE,CAAC,CAACO,aAHZ;AAIE,IAAA,SAAS,EAAEmB,iBAJb;AAKE,IAAA,OAAO,EAAE,MAAMlB,gBAAgB,CAAC,EAAD,CALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CF,CADF;AAqDD","sourcesContent":["import {\n  Box,\n  Flex,\n  Icon,\n  List,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Text,\n} from '@chakra-ui/core';\nimport React from 'react';\nimport { ConfirmModal } from '../../../../components';\nimport { GroupDropdownItem, GroupModal } from './group.components';\nimport { GroupSchema, GroupsDropdownProps } from './group.types';\nimport { PropertySearchForm } from '../property';\n\nexport function GroupsDropdown({\n  data,\n  onEdit,\n  onClick,\n  onDelete,\n  children,\n  isLoading,\n  activeGroup,\n  loadingDispatch,\n  onFetchTableRows,\n}: GroupsDropdownProps) {\n  const [list, setList] = React.useState<GroupSchema[]>(data || []);\n  const [groupToDelete, setGroupToDelete] = React.useState<string | undefined>(\n    ''\n  );\n  const [groupToEdit, setGroupToEdit] = React.useState<\n    GroupSchema | undefined\n  >();\n\n  React.useEffect(() => {\n    setList(data);\n  }, [data]);\n\n  function handleSearch(value: string) {\n    if (value) {\n      const newList = list.filter((item) =>\n        item.name.toLowerCase().startsWith(value.toLowerCase())\n      );\n      if (newList.length) {\n        setList(newList);\n      } else {\n        setList(data);\n      }\n    } else {\n      setList(data);\n    }\n  }\n\n  function handleEditGroup(value: GroupSchema) {\n    setList(\n      list.map((x: GroupSchema) => {\n        if (x.id === value.id) {\n          return value;\n        }\n        return x;\n      })\n    );\n    if (onEdit) {\n      onEdit(value, () => setGroupToEdit(undefined));\n    }\n  }\n\n  function handleDeleteGroup() {\n    setList(list.filter((x: GroupSchema) => groupToDelete !== x.id));\n    if (onDelete) {\n      loadingDispatch({ type: 'LOADING_STARTED' });\n      onDelete({ id: groupToDelete }, () => setGroupToDelete(''));\n    }\n  }\n\n  return (\n    <>\n      <Popover placement=\"bottom-start\">\n        <PopoverTrigger>{children}</PopoverTrigger>\n        <PopoverContent zIndex={99999} paddingY=\"1rem\" width=\"fit-content\">\n          <Flex paddingX=\"1rem\" alignItems=\"center\">\n            <Icon size=\"0.75rem\" name=\"folder\" />\n            <Text fontSize=\"14px\" fontWeight={500} paddingLeft=\"0.5rem\">\n              Groups\n            </Text>\n          </Flex>\n          <Box paddingX=\"1rem\">\n            <PropertySearchForm onChange={handleSearch} />\n          </Box>\n          <List>\n            <GroupDropdownItem\n              group={{ name: 'Table' }}\n              onClick={onFetchTableRows}\n            />\n            {list.map((item, index) => (\n              <GroupDropdownItem\n                key={index}\n                group={item}\n                onDelete={() => {\n                  setGroupToDelete(item.id);\n                }}\n                onClick={() => onClick(item)}\n                onEdit={() => setGroupToEdit(item)}\n                isActive={activeGroup?.id === item.id}\n              />\n            ))}\n          </List>\n        </PopoverContent>\n      </Popover>\n\n      <GroupModal\n        title=\"Edit group\"\n        isLoading={isLoading}\n        isOpen={!!groupToEdit}\n        onSubmit={handleEditGroup}\n        initialValues={groupToEdit}\n        onClose={() => setGroupToEdit(undefined)}\n      />\n\n      <ConfirmModal\n        title=\"Delete group\"\n        isLoading={isLoading}\n        isOpen={!!groupToDelete}\n        onConfirm={handleDeleteGroup}\n        onClose={() => setGroupToDelete('')}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}