{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/cell-properties/select/cell.tsx\";\nvar __jsx = React.createElement;\n// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Icon, Input, Box } from '@chakra-ui/core';\n\nconst SelectValueItem = props => {\n  const handleDeleteValue = event => {\n    event.stopPropagation();\n    props.delete();\n  };\n\n  return __jsx(\"div\", {\n    className: \"value-item\",\n    style: {\n      fontSize: 12,\n      backgroundColor: props.color,\n      marginRight: 5,\n      padding: '2px 5px',\n      borderRadius: 2,\n      lineHeight: 'normal',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, props.value, __jsx(Box, {\n    marginLeft: \"5px\",\n    display: \"flex\",\n    padding: \"2.5px\",\n    borderRadius: \"2px\",\n    backgroundColor: \"rgba(0,0,0,0.1)\",\n    onClick: handleDeleteValue,\n    className: \"close-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: \"close\",\n    size: \"8px\",\n    cursor: \"pointer\",\n    className: \"close-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst SelectInput = ({\n  addOption\n}) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleKeyPress = e => {\n    if (e.key !== 'Enter') return;\n    if (value === '') return;\n    addOption(value);\n    setValue('');\n  };\n\n  return __jsx(Input, {\n    variant: \"unstyled\",\n    value: value,\n    onChange: handleChange,\n    onKeyPress: handleKeyPress,\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  });\n};\n\nexport const SelectCell = props => {\n  var _props$_column;\n\n  const addOption = async value => {\n    const option = await props.addOption(props._column.uid, value);\n    const row_index = props.node.rowIndex;\n    const row = await props.getRowByIndex(row_index);\n    const columnID = props._column.uid;\n    const row_id = row['uid'];\n    await props.updateCellValue([option.id], row_id, columnID);\n  };\n\n  const deleteValue = async () => {\n    const row_index = props.node.rowIndex;\n    const row = await props.getRowByIndex(row_index);\n    const columnID = props._column.uid;\n    const row_id = row['uid'];\n    props.updateCellValue([], row_id, columnID);\n  };\n\n  let value = props.value;\n  if (Array.isArray(props.value)) value = value[0];\n  const options = (_props$_column = props._column) !== null && _props$_column !== void 0 && _props$_column.options ? props._column.options.filter(i => !i.isDeleted) : [];\n  const selected_option = options.find(i => i.id === value);\n  return __jsx(\"div\", {\n    className: \"select-cell\",\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, selected_option && __jsx(SelectValueItem, {\n    value: selected_option.name,\n    color: selected_option.color,\n    delete: deleteValue,\n    id: selected_option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), __jsx(SelectInput, {\n    addOption: addOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/cell-properties/select/cell.tsx"],"names":["React","useState","Icon","Input","Box","SelectValueItem","props","handleDeleteValue","event","stopPropagation","delete","fontSize","backgroundColor","color","marginRight","padding","borderRadius","lineHeight","display","flexDirection","alignItems","e","value","SelectInput","addOption","setValue","handleChange","target","handleKeyPress","key","SelectCell","option","_column","uid","row_index","node","rowIndex","row","getRowByIndex","columnID","row_id","updateCellValue","id","deleteValue","Array","isArray","options","filter","i","isDeleted","selected_option","find","name"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Icon, Input, Box } from '@chakra-ui/core';\n\nconst SelectValueItem = (props: any) => {\n  const handleDeleteValue = (event: any) => {\n    event.stopPropagation();\n    props.delete();\n  };\n\n  return (\n    <div\n      className=\"value-item\"\n      style={{\n        fontSize: 12,\n        backgroundColor: props.color,\n        marginRight: 5,\n        padding: '2px 5px',\n        borderRadius: 2,\n        lineHeight: 'normal',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n      }}\n      onClick={(e: any) => e.stopPropagation()}\n    >\n      {props.value}\n      <Box\n        marginLeft=\"5px\"\n        display=\"flex\"\n        padding=\"2.5px\"\n        borderRadius=\"2px\"\n        backgroundColor=\"rgba(0,0,0,0.1)\"\n        onClick={handleDeleteValue}\n        className=\"close-icon\"\n      >\n        <Icon name=\"close\" size=\"8px\" cursor=\"pointer\" className=\"close-icon\" />\n      </Box>\n    </div>\n  );\n};\n\nconst SelectInput = ({ addOption }: any) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (event: any) => {\n    setValue(event.target.value);\n  };\n\n  const handleKeyPress = (e: any) => {\n    if (e.key !== 'Enter') return;\n    if (value === '') return;\n    addOption(value);\n    setValue('');\n  };\n\n  return (\n    <Input\n      variant=\"unstyled\"\n      value={value}\n      onChange={handleChange}\n      onKeyPress={handleKeyPress}\n      fontSize=\"14px\"\n    />\n  );\n};\n\nexport const SelectCell = (props: any) => {\n  const addOption = async (value: string) => {\n    const option = await props.addOption(props._column.uid, value);\n    const row_index = props.node.rowIndex;\n    const row = await props.getRowByIndex(row_index);\n    const columnID = props._column.uid;\n    const row_id = row['uid'];\n    await props.updateCellValue([option.id], row_id, columnID);\n  };\n\n  const deleteValue = async () => {\n    const row_index = props.node.rowIndex;\n    const row = await props.getRowByIndex(row_index);\n    const columnID = props._column.uid;\n    const row_id = row['uid'];\n    props.updateCellValue([], row_id, columnID);\n  };\n\n  let value = props.value;\n  if (Array.isArray(props.value)) value = value[0];\n  const options = props._column?.options\n    ? props._column.options.filter((i: any) => !i.isDeleted)\n    : [];\n  const selected_option = options.find((i: any) => i.id === value);\n\n  return (\n    <div className=\"select-cell\" style={{ display: 'flex', alignItems: 'center' }}>\n      <div>\n        {selected_option && (\n          <SelectValueItem\n            value={selected_option.name}\n            color={selected_option.color}\n            delete={deleteValue}\n            id={selected_option.id}\n          />\n        )}\n      </div>\n      <SelectInput addOption={addOption} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}