{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/components/UseCase.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Text, useDisclosure, Modal, ModalOverlay, ModalContent, ModalCloseButton, ModalBody, Input, PseudoBox, FormControl, FormLabel, Icon } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport { Dropdown } from './Dropdown';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectOrganisations } from '../../settings/slices';\nimport { connectChannelAcct } from '../../channels';\nimport { ErrorModal } from '../../channels/components';\nexport function UseCase() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const organisations = useSelector(selectOrganisations);\n  const {\n    0: isErrorModalOpen,\n    1: setIsErrorModalOpen\n  } = useState(false);\n  const {\n    0: errorDetail,\n    1: setErrorDetail\n  } = useState({\n    title: 'Error! Failed to buy phone number',\n    description: ''\n  });\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    companyName: '',\n    industry: '',\n    role: '',\n    companySize: ''\n  });\n  const {\n    isOpen: isModalOpen,\n    onClose: onModalClose,\n    onOpen: onModalOpen\n  } = useDisclosure();\n  const items = [{\n    icon: 'briefcase',\n    title: 'Work',\n    description: 'You need a phone number for your business.'\n  }, {\n    icon: 'user',\n    title: 'Personal',\n    description: 'You need it for personal reasons.'\n  }];\n  const formItems = [{\n    type: 'input',\n    name: 'companyName',\n    label: 'Company Name',\n    placeholder: 'Enter name'\n  }, {\n    type: 'select',\n    name: 'industry',\n    label: 'Industry',\n    placeholder: 'Select industry',\n    list: ['Aerospace and Defense', 'Agriculture and Forestry', 'Automotive', 'Banks', 'Chemicals', 'Civic, Non-Profit and Membership Groups', 'Computer Hardware', 'Computer Software', 'Construction and Building Materials', 'Consumer Products', 'Consumer Services', 'Corporate Services', 'Electronics', 'Energy and Environmental', 'Financial Services', 'Food and Beverage', 'Government', 'Holding Companies ', 'Hospitals and Healthcare', 'Industrial Manufacturing and Services', 'Insurance', 'Leisure, Sports and Recreation', 'Media', 'Mining and Metals', 'Pharmaceuticals and Biotech', 'Real Estate Services', 'Retail', 'Schools and Education', 'Telecommunications', 'Transportation']\n  }, {\n    type: 'input',\n    name: 'role',\n    label: 'Your Role',\n    placeholder: 'Choose your role',\n    list: []\n  }, {\n    type: 'select',\n    name: 'companySize',\n    label: 'Company Size',\n    placeholder: 'Select your size',\n    list: ['1', '2-10', '11-50', '51-200', '201-500', '501-1000', '1001-5000', '5001-10,000', '10,000+']\n  }];\n\n  const handleItemClicked = async event => {\n    var _location$state;\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.phone_number) {\n      const result = await dispatch(connectChannelAcct({\n        channel: 'phone',\n        useCaseData: formData !== null && formData !== void 0 && formData.companySize ? formData : undefined,\n        phone_number: true ? '+15005550006' : location.state.phone_number\n      }));\n\n      if (connectChannelAcct.fulfilled.match(result)) {\n        history.push('/s/integrations/sms');\n      } else {\n        var _result$error;\n\n        if (result !== null && result !== void 0 && (_result$error = result.error) !== null && _result$error !== void 0 && _result$error.message) {\n          isModalOpen === true && onModalClose();\n          setErrorDetail(_objectSpread(_objectSpread({}, errorDetail), {}, {\n            description: result.error.message\n          }));\n          setIsErrorModalOpen(true);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (organisations && organisations.length > 0) {\n      const [org] = organisations;\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        companyName: org.name\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [organisations]);\n  useEffect(() => {\n    if (!location.state) {\n      history.push('/s/integrations/phone');\n    }\n  }, [history, location.state]);\n\n  if (!location.state) {\n    return __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Box, {\n    height: \"100vh\",\n    backgroundColor: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    p: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    variant: \"ghost\",\n    leftIcon: \"chevron-left\",\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"Back\")), __jsx(Box, {\n    paddingTop: \"3.25rem\",\n    marginX: \"auto\",\n    maxWidth: \"20.125rem\",\n    color: \"brandBlack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    fontSize: \"1.125rem\",\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"What\\u2019s your use case?\"), __jsx(Text, {\n    fontSize: \".875rem\",\n    color: \"rgba(46, 56, 77, 0.5)\",\n    marginTop: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, \"Help us provide the best in class experience.\"), items.map(({\n    icon,\n    title,\n    description\n  }) => __jsx(PseudoBox, {\n    key: title,\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: \"3.125rem\",\n    cursor: \"pointer\",\n    onClick: title === 'Work' ? onModalOpen : handleItemClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: icon,\n    size: \"3rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    marginLeft: \".625rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    fontWeight: 600,\n    marginBottom: \".5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, title), __jsx(Text, {\n    color: \"rgba(17, 17, 17, 0.5)\",\n    fontSize: \".75rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, description)))), __jsx(Modal, {\n    isOpen: isModalOpen,\n    onClose: onModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), __jsx(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), __jsx(ModalBody, {\n    marginX: \"auto\",\n    width: \"18.125rem\",\n    paddingY: \"3.125rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    fontSize: \"1.125rem\",\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"Your Company\"), __jsx(Text, {\n    marginBottom: \"3.125rem\",\n    fontSize: \".875rem\",\n    color: \"rgba(46, 56, 77, 0.5)\",\n    marginTop: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"Setup your company Profile\"), __jsx(\"form\", {\n    onSubmit: event => handleItemClicked(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, formItems.map(({\n    type,\n    label,\n    placeholder,\n    list,\n    name\n  }, index) => __jsx(FormControl, {\n    key: label,\n    marginTop: index === 0 ? '0' : '1.25rem',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, __jsx(FormLabel, {\n    fontSize: \".625rem\",\n    color: \"rgba(17, 17, 17, 0.5)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, label), type === 'input' ? __jsx(Input, {\n    isRequired: true,\n    placeholder: placeholder,\n    fontSize: \".875rem\",\n    paddingX: \"0\",\n    paddingY: \".75rem\",\n    border: \"none\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.08)\",\n    name: name,\n    value: formData[name],\n    onChange: ({\n      target: {\n        name: n,\n        value\n      }\n    }) => setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [n]: value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }) : __jsx(Dropdown, {\n    list: (list || []).map(value => ({\n      value,\n      label: value\n    })),\n    placeholder: placeholder,\n    selected: {\n      value: formData[name],\n      label: formData[name]\n    },\n    setSelected: item => setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [name]: item.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 23\n    }\n  }))), __jsx(Button, {\n    isDisabled: !(formData.industry && formData.companySize),\n    variantColor: \"blue\",\n    type: \"submit\",\n    marginTop: \"1.875rem\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, \"Continue\"))))), __jsx(ErrorModal, _extends({}, errorDetail, {\n    isOpen: isErrorModalOpen,\n    setIsOpen: setIsErrorModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/components/UseCase.tsx"],"names":["React","useState","useEffect","Box","Text","useDisclosure","Modal","ModalOverlay","ModalContent","ModalCloseButton","ModalBody","Input","PseudoBox","FormControl","FormLabel","Icon","Button","Dropdown","useHistory","useLocation","useDispatch","useSelector","selectOrganisations","connectChannelAcct","ErrorModal","UseCase","history","dispatch","location","organisations","isErrorModalOpen","setIsErrorModalOpen","errorDetail","setErrorDetail","title","description","formData","setFormData","companyName","industry","role","companySize","isOpen","isModalOpen","onClose","onModalClose","onOpen","onModalOpen","items","icon","formItems","type","name","label","placeholder","list","handleItemClicked","event","preventDefault","state","phone_number","result","channel","useCaseData","undefined","fulfilled","match","push","error","message","length","org","goBack","map","index","target","n","value","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ChangeEvent, FormEvent } from 'react';\nimport {\n  Box,\n  Text,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalCloseButton,\n  ModalBody,\n  Input,\n  PseudoBox,\n  FormControl,\n  FormLabel,\n  Icon\n} from '@chakra-ui/core';\nimport { PhoneSchema } from '../integrations.type';\nimport { Button } from 'app/components';\nimport { Dropdown } from './Dropdown';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectOrganisations } from '../../settings/slices';\nimport { connectChannelAcct, ErrorModalProps } from '../../channels';\nimport { ErrorModal } from '../../channels/components';\n\nexport function UseCase() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation<PhoneSchema>();\n  const organisations = useSelector(selectOrganisations);\n  const [isErrorModalOpen, setIsErrorModalOpen] = useState(false);\n  const [errorDetail, setErrorDetail] = useState<Pick<ErrorModalProps, 'title' | 'description'>>({\n    title: 'Error! Failed to buy phone number',\n    description: '',\n  });\n\n  const [formData, setFormData] = useState<any>({\n    companyName: '',\n    industry: '',\n    role: '',\n    companySize: '',\n  });\n  const { isOpen: isModalOpen, onClose: onModalClose, onOpen: onModalOpen } = useDisclosure();\n\n  const items: { icon: string; title: string; description: string }[] = [\n    { icon: 'briefcase', title: 'Work', description: 'You need a phone number for your business.' },\n    { icon: 'user', title: 'Personal', description: 'You need it for personal reasons.' },\n  ];\n\n  const formItems: {\n    type: string;\n    name: string;\n    label: string;\n    placeholder: string;\n    list?: string[];\n  }[] = [\n    { type: 'input', name: 'companyName', label: 'Company Name', placeholder: 'Enter name' },\n    {\n      type: 'select',\n      name: 'industry',\n      label: 'Industry',\n      placeholder: 'Select industry',\n      list: [\n        'Aerospace and Defense',\n        'Agriculture and Forestry',\n        'Automotive',\n        'Banks',\n        'Chemicals',\n        'Civic, Non-Profit and Membership Groups',\n        'Computer Hardware',\n        'Computer Software',\n        'Construction and Building Materials',\n        'Consumer Products',\n        'Consumer Services',\n        'Corporate Services',\n        'Electronics',\n        'Energy and Environmental',\n        'Financial Services',\n        'Food and Beverage',\n        'Government',\n        'Holding Companies ',\n        'Hospitals and Healthcare',\n        'Industrial Manufacturing and Services',\n        'Insurance',\n        'Leisure, Sports and Recreation',\n        'Media',\n        'Mining and Metals',\n        'Pharmaceuticals and Biotech',\n        'Real Estate Services',\n        'Retail',\n        'Schools and Education',\n        'Telecommunications',\n        'Transportation',\n      ],\n    },\n    { type: 'input', name: 'role', label: 'Your Role', placeholder: 'Choose your role', list: [] },\n    {\n      type: 'select',\n      name: 'companySize',\n      label: 'Company Size',\n      placeholder: 'Select your size',\n      list: [\n        '1',\n        '2-10',\n        '11-50',\n        '51-200',\n        '201-500',\n        '501-1000',\n        '1001-5000',\n        '5001-10,000',\n        '10,000+',\n      ],\n    },\n  ];\n\n  const handleItemClicked = async (event?: FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (location.state?.phone_number) {\n      const result: any = await dispatch(\n        connectChannelAcct({\n          channel: 'phone',\n          useCaseData: formData?.companySize ? formData : undefined,\n          phone_number:\n            process.env.NODE_ENV === 'development' ? '+15005550006' : location.state.phone_number,\n        }),\n      );\n      if (connectChannelAcct.fulfilled.match(result)) {\n        history.push('/s/integrations/sms');\n      } else {\n        if (result?.error?.message) {\n          isModalOpen === true && onModalClose();\n          setErrorDetail({ ...errorDetail, description: result.error.message });\n          setIsErrorModalOpen(true);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (organisations && organisations.length > 0) {\n      const [org] = organisations;\n      setFormData({ ...formData, companyName: org.name });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [organisations]);\n\n  useEffect(() => {\n    if (!location.state) {\n      history.push('/s/integrations/phone');\n    }\n  }, [history, location.state]);\n\n  if (!location.state) {\n    return <Box />;\n  }\n\n  return (\n    <Box height=\"100vh\" backgroundColor=\"white\">\n      <Box p=\"1rem\">\n        <Button size=\"sm\" variant=\"ghost\" leftIcon=\"chevron-left\" onClick={() => history.goBack()}>\n          Back\n        </Button>\n      </Box>\n      <Box paddingTop=\"3.25rem\" marginX=\"auto\" maxWidth=\"20.125rem\" color=\"brandBlack\">\n        <Text fontSize=\"1.125rem\" fontWeight={600}>\n          What’s your use case?\n        </Text>\n\n        <Text fontSize=\".875rem\" color=\"rgba(46, 56, 77, 0.5)\" marginTop=\"1rem\">\n          Help us provide the best in class experience.\n        </Text>\n\n        {items.map(({ icon, title, description }) => (\n          <PseudoBox\n            key={title}\n            display=\"flex\"\n            alignItems=\"center\"\n            marginTop=\"3.125rem\"\n            cursor=\"pointer\"\n            onClick={title === 'Work' ? onModalOpen : handleItemClicked}\n          >\n            <Icon name={icon} size=\"3rem\" />\n\n            <Box marginLeft=\".625rem\">\n              <Text fontWeight={600} marginBottom=\".5rem\">\n                {title}\n              </Text>\n              <Text color=\"rgba(17, 17, 17, 0.5)\" fontSize=\".75rem\">\n                {description}\n              </Text>\n            </Box>\n          </PseudoBox>\n        ))}\n\n        <Modal isOpen={isModalOpen} onClose={onModalClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalCloseButton />\n            <ModalBody marginX=\"auto\" width=\"18.125rem\" paddingY=\"3.125rem\">\n              <Text fontSize=\"1.125rem\" fontWeight={600}>\n                Your Company\n              </Text>\n\n              <Text\n                marginBottom=\"3.125rem\"\n                fontSize=\".875rem\"\n                color=\"rgba(46, 56, 77, 0.5)\"\n                marginTop=\"1rem\"\n              >\n                Setup your company Profile\n              </Text>\n\n              <form onSubmit={(event: FormEvent<HTMLFormElement>) => handleItemClicked(event)}>\n                {formItems.map(({ type, label, placeholder, list, name }, index) => (\n                  <FormControl key={label} marginTop={index === 0 ? '0' : '1.25rem'}>\n                    <FormLabel fontSize=\".625rem\" color=\"rgba(17, 17, 17, 0.5)\">\n                      {label}\n                    </FormLabel>\n\n                    {type === 'input' ? (\n                      <Input\n                        isRequired\n                        placeholder={placeholder}\n                        fontSize=\".875rem\"\n                        paddingX=\"0\"\n                        paddingY=\".75rem\"\n                        border=\"none\"\n                        borderBottom=\"1px solid rgba(0, 0, 0, 0.08)\"\n                        name={name}\n                        value={formData[name]}\n                        onChange={({ target: { name: n, value } }: ChangeEvent<HTMLInputElement>) =>\n                          setFormData({ ...formData, [n]: value })\n                        }\n                      />\n                    ) : (\n                      <Dropdown\n                        list={(list || []).map(value => ({ value, label: value }))}\n                        placeholder={placeholder}\n                        selected={{ value: formData[name], label: formData[name] }}\n                        setSelected={item => setFormData({ ...formData, [name]: item.value })}\n                      />\n                    )}\n                  </FormControl>\n                ))}\n\n                <Button\n                  isDisabled={!(formData.industry && formData.companySize)}\n                  variantColor=\"blue\"\n                  type=\"submit\"\n                  marginTop=\"1.875rem\"\n                  width=\"100%\"\n                >\n                  Continue\n                </Button>\n              </form>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n\n        <ErrorModal {...errorDetail} isOpen={isErrorModalOpen} setIsOpen={setIsErrorModalOpen} />\n      </Box>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}