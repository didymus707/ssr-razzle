{"ast":null,"code":"const _excluded = [\"searchQuery\", \"toggleResolve\", \"searchedResult\", \"setToggleResolve\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/conversation/Chat.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex, Box, Text, Tabs, TabList, Tab, TabPanels, TabPanel, Button, Icon } from '@chakra-ui/core';\nimport { isEmpty } from 'lodash';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { ConversationList } from './ConversationList';\nimport { SocialIcon } from '../../../../components';\nimport { selectActiveOrgCredentials } from '../../../channels';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeConversationTabIndex, selectConversationTabIndex, selectOrgThreadsByStateStatusCount, selectOrgThreadsCount } from '../../slices';\nimport { selectOrganisationID, selectUserID } from '../../../../unauthenticated-app/authentication';\nimport { SearchResult } from './SearchResult';\nexport function Chat(_ref) {\n  let {\n    searchQuery,\n    toggleResolve,\n    searchedResult,\n    setToggleResolve\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const supportedChannels = useSelector(selectActiveOrgCredentials);\n  const conversationTabIndex = useSelector(selectConversationTabIndex);\n  const organisation_id = useSelector(selectOrganisationID) || '';\n  const queuedThreadscount = useSelector(state => selectOrgThreadsCount(state, {\n    organisation_id,\n    state: 'queued'\n  }));\n  const user_id = useSelector(selectUserID) || '';\n  const assignedThreadsUnreadCount = useSelector(state => selectOrgThreadsByStateStatusCount(state, {\n    organisation_id,\n    user_id,\n    state: 'assigned'\n  }));\n  const resolvedThreadsUnreadCount = useSelector(state => selectOrgThreadsByStateStatusCount(state, {\n    organisation_id,\n    user_id,\n    state: 'resolved'\n  }));\n  const inds = [queuedThreadscount, assignedThreadsUnreadCount, resolvedThreadsUnreadCount].map(item => item > 0);\n  const tabItems = [{\n    icon: 'time',\n    title: 'unassigned'\n  }, {\n    icon: 'open-mail',\n    title: 'open'\n  }, {\n    icon: 'check',\n    title: 'closed'\n  }];\n  return __jsx(Flex, _extends({\n    flexDirection: \"column\",\n    overflowY: \"hidden\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), searchQuery.length >= 2 ? __jsx(SearchResult, {\n    searchedResult: searchedResult,\n    searchQuery: searchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 34\n    }\n  }) : __jsx(Tabs, {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    index: conversationTabIndex,\n    overflowY: \"hidden\",\n    onChange: tabIndex => dispatch(changeConversationTabIndex({\n      tabIndex\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(TabList, {\n    paddingX: \"1rem\",\n    borderColor: \"rgba(0, 0, 0, 0.05)\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, tabItems.map(({\n    icon,\n    title\n  }, index) => __jsx(Tab, {\n    key: title,\n    fontSize: \".875rem\",\n    opacity: 0.5,\n    _selected: {\n      color: '#3d50df',\n      borderBottom: '3px solid #3d50df',\n      outline: 'none',\n      opacity: 'unset',\n      paddingBottom: '.5rem',\n      boxShadow: 'none'\n    },\n    _focus: {\n      boxShadow: 'none'\n    },\n    _active: {\n      boxShadow: 'none'\n    },\n    fontWeight: 500,\n    paddingX: \".5rem\",\n    paddingBottom: \".6875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, __jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: icon,\n    size: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }), __jsx(Text, {\n    fontSize: \".6875rem\",\n    lineHeight: \"16px\",\n    textAlign: \"center\",\n    letterSpacing: \".05rem\",\n    marginLeft: \".25rem\",\n    textTransform: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, title), inds[index] && __jsx(Box, {\n    height: \"0\",\n    padding: \".1875rem\",\n    borderRadius: \"50%\",\n    alignSelf: \"flex-start\",\n    backgroundColor: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }))))), __jsx(TabPanels, {\n    flex: 1,\n    id: \"scrollableDiv\",\n    className: \"remove-focus-outline\",\n    overflowY: \"auto\",\n    height: \"100%\",\n    paddingY: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, isEmpty(supportedChannels) ? __jsx(Box, {\n    textAlign: \"center\",\n    paddingTop: \"1rem\",\n    paddingX: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    fontWeight: 600,\n    marginBottom: \".625rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Connect your accounts\"), __jsx(Text, {\n    fontSize: \".875rem\",\n    opacity: 0.5,\n    lineHeight: 1.79,\n    marginBottom: \"1.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Once you\\u2019ve connected all your inboxes, all your messages will show here.\"), [{\n    icon: 'whatsapp',\n    text: 'Connect WhatsApp'\n  }, {\n    icon: 'twitter',\n    text: 'Connect Twitter'\n  }].map(({\n    icon,\n    text\n  }, index) => __jsx(Button, {\n    key: icon,\n    variantColor: \"blue\",\n    marginTop: index !== 0 ? '.625rem' : '0',\n    borderRadius: \"5px\",\n    padding: \"0.375rem .75rem\",\n    fontWeight: \"normal\",\n    height: \"auto\",\n    onClick: () => history.push(`/s/integrations/${icon}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, __jsx(SocialIcon, {\n    which: icon,\n    size: \"1.1875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }), __jsx(Text, {\n    fontSize: \".875rem\",\n    marginLeft: \".625rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, text))), __jsx(NavLink, {\n    to: \"/s/channels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    fontSize: \".875rem\",\n    fontWeight: 500,\n    color: \"blue.500\",\n    marginTop: \"1.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"Check more channels\"))) : ['queued', 'assigned', 'resolved'].map(item => __jsx(TabPanel, {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, __jsx(ConversationList, {\n    heading: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/conversation/Chat.tsx"],"names":["React","Flex","Box","Text","Tabs","TabList","Tab","TabPanels","TabPanel","Button","Icon","isEmpty","NavLink","useHistory","ConversationList","SocialIcon","selectActiveOrgCredentials","useDispatch","useSelector","changeConversationTabIndex","selectConversationTabIndex","selectOrgThreadsByStateStatusCount","selectOrgThreadsCount","selectOrganisationID","selectUserID","SearchResult","Chat","searchQuery","toggleResolve","searchedResult","setToggleResolve","rest","history","dispatch","supportedChannels","conversationTabIndex","organisation_id","queuedThreadscount","state","user_id","assignedThreadsUnreadCount","resolvedThreadsUnreadCount","inds","map","item","tabItems","icon","title","length","tabIndex","index","color","borderBottom","outline","opacity","paddingBottom","boxShadow","text","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Flex, Box, Text, Tabs, TabList, Tab, TabPanels, TabPanel, Button, Icon\n} from '@chakra-ui/core';\nimport { isEmpty } from 'lodash';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { ConversationList } from './ConversationList';\nimport { ChatProps, ThreadSchema } from '../../inbox.types';\nimport { SocialIcon } from '../../../../components';\nimport { selectActiveOrgCredentials } from '../../../channels';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  changeConversationTabIndex, selectConversationTabIndex, selectOrgThreadsByStateStatusCount,\n  selectOrgThreadsCount,\n} from '../../slices';\nimport { RootState } from '../../../../../root';\nimport { selectOrganisationID, selectUserID } from '../../../../unauthenticated-app/authentication';\nimport { SearchResult } from './SearchResult';\n\nexport function Chat({\n  searchQuery, toggleResolve, searchedResult, setToggleResolve, ...rest\n}: ChatProps) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const supportedChannels = useSelector(selectActiveOrgCredentials);\n  const conversationTabIndex = useSelector(selectConversationTabIndex);\n  const organisation_id = useSelector(selectOrganisationID) || '';\n  const queuedThreadscount = useSelector(\n    (state: RootState) => selectOrgThreadsCount(state, {\n      organisation_id, state: 'queued'\n    })\n  );\n  const user_id = useSelector(selectUserID) || '';\n  const assignedThreadsUnreadCount = useSelector(\n    (state: RootState) => selectOrgThreadsByStateStatusCount(state, {\n      organisation_id, user_id, state: 'assigned'\n    })\n  );\n  const resolvedThreadsUnreadCount = useSelector(\n    (state: RootState) => selectOrgThreadsByStateStatusCount(state, {\n      organisation_id, user_id, state: 'resolved'\n    })\n  );\n\n  const inds: boolean[] = [queuedThreadscount, assignedThreadsUnreadCount, resolvedThreadsUnreadCount].map(\n    (item) => item > 0\n  );\n  const tabItems: ({ icon: string, title: string })[] = [\n    { icon: 'time', title: 'unassigned' },\n    { icon: 'open-mail', title: 'open' },\n    { icon: 'check', title: 'closed' },\n  ];\n\n  return (\n    <Flex flexDirection=\"column\" overflowY=\"hidden\" {...rest}>\n      {searchQuery.length >= 2 ? <SearchResult searchedResult={searchedResult} searchQuery={searchQuery} /> : (\n        <Tabs\n          flex={1}\n          display=\"flex\"\n          flexDirection=\"column\"\n          index={conversationTabIndex}\n          overflowY=\"hidden\"\n          onChange={(tabIndex: number) => dispatch(changeConversationTabIndex({ tabIndex }))}\n        >\n          <TabList paddingX=\"1rem\" borderColor=\"rgba(0, 0, 0, 0.05)\" justifyContent=\"space-between\">\n            {tabItems.map(({ icon, title }, index) => (\n              <Tab\n                key={title}\n                fontSize=\".875rem\"\n                opacity={0.5}\n                _selected={{\n                  color: '#3d50df',\n                  borderBottom: '3px solid #3d50df',\n                  outline: 'none',\n                  opacity: 'unset',\n                  paddingBottom: '.5rem',\n                  boxShadow: 'none',\n                }}\n                _focus={{ boxShadow: 'none' }}\n                _active={{ boxShadow: 'none' }}\n                fontWeight={500}\n                paddingX=\".5rem\"\n                paddingBottom=\".6875rem\"\n              >\n                <Flex alignItems=\"center\" justifyContent=\"center\">\n                  <Icon name={icon} size=\"1rem\" />\n                  <Text\n                    fontSize='.6875rem'\n                    lineHeight=\"16px\"\n                    textAlign=\"center\"\n                    letterSpacing=\".05rem\"\n                    marginLeft=\".25rem\"\n                    textTransform=\"uppercase\"\n                  >\n                    {title}\n                  </Text>\n\n                  {inds[index] && (\n                    <Box\n                      height=\"0\"\n                      padding=\".1875rem\"\n                      borderRadius=\"50%\"\n                      alignSelf=\"flex-start\"\n                      backgroundColor=\"blue.500\"\n                    />\n                  )}\n                </Flex>\n              </Tab>\n            ))}\n          </TabList>\n\n          <TabPanels\n            flex={1}\n            id=\"scrollableDiv\"\n            className=\"remove-focus-outline\"\n            overflowY=\"auto\"\n            height=\"100%\"\n            paddingY=\"1rem\"\n          >\n            {isEmpty(supportedChannels) ? (\n              <Box textAlign=\"center\" paddingTop=\"1rem\" paddingX=\"1.5rem\">\n                <Text fontWeight={600} marginBottom=\".625rem\">\n                  Connect your accounts\n              </Text>\n\n                <Text fontSize=\".875rem\" opacity={0.5} lineHeight={1.79} marginBottom=\"1.875rem\">\n                  Once you’ve connected all your inboxes, all your messages will show here.\n              </Text>\n\n                {[\n                  { icon: 'whatsapp', text: 'Connect WhatsApp' },\n                  { icon: 'twitter', text: 'Connect Twitter' },\n                ].map(({ icon, text }, index) => (\n                  <Button\n                    key={icon}\n                    variantColor=\"blue\"\n                    marginTop={index !== 0 ? '.625rem' : '0'}\n                    borderRadius=\"5px\"\n                    padding=\"0.375rem .75rem\"\n                    fontWeight=\"normal\"\n                    height=\"auto\"\n                    onClick={() => history.push(`/s/integrations/${icon}`)}\n                  >\n                    <SocialIcon which={icon} size=\"1.1875rem\" />\n\n                    <Text fontSize=\".875rem\" marginLeft=\".625rem\">\n                      {text}\n                    </Text>\n                  </Button>\n                ))}\n\n                <NavLink to=\"/s/channels\">\n                  <Text fontSize=\".875rem\" fontWeight={500} color=\"blue.500\" marginTop=\"1.875rem\">\n                    Check more channels\n                </Text>\n                </NavLink>\n              </Box>\n            ) : (\n              (['queued', 'assigned', 'resolved'] as ThreadSchema['state'][]).map(item => (\n                <TabPanel key={item}>\n                  <ConversationList heading={item} />\n                </TabPanel>\n              ))\n            )}\n          </TabPanels>\n        </Tabs>\n      )}\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}