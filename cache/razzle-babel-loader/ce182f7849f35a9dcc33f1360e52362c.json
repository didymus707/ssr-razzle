{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/property/property.components/PropertiesList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, List } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport { Property } from './Property';\nexport const PropertiesList = SortableContainer(({\n  onDelete,\n  onChange,\n  properties,\n  onDuplicate\n}) => {\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, properties.map((item, index) => __jsx(Property, _extends({}, item, {\n    index: index,\n    key: `${item.name}-${index}`,\n    onDelete: () => onDelete && onDelete(index),\n    onDuplicate: () => onDuplicate && onDuplicate(item),\n    onChange: property => onChange && onChange(property, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })))));\n});","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/tables/components/property/property.components/PropertiesList.tsx"],"names":["Box","List","React","SortableContainer","Property","PropertiesList","onDelete","onChange","properties","onDuplicate","map","item","index","name","property"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,iBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AAEA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,cAAc,GAAGF,iBAAiB,CAC7C,CAAC;AACCG,EAAAA,QADD;AAECC,EAAAA,QAFD;AAGCC,EAAAA,UAHD;AAICC,EAAAA;AAJD,CAAD,KAUM;AACJ,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,CAACE,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KACd,MAAC,QAAD,eACMD,IADN;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,GAAG,EAAG,GAAED,IAAI,CAACE,IAAK,IAAGD,KAAM,EAH7B;AAIE,IAAA,QAAQ,EAAE,MAAMN,QAAQ,IAAIA,QAAQ,CAACM,KAAD,CAJtC;AAKE,IAAA,WAAW,EAAE,MAAMH,WAAW,IAAIA,WAAW,CAACE,IAAD,CAL/C;AAME,IAAA,QAAQ,EAAGG,QAAD,IAAcP,QAAQ,IAAIA,QAAQ,CAACO,QAAD,EAAWF,KAAX,CAN9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADF,CADF;AAgBD,CA5B4C,CAAxC","sourcesContent":["import { Box, List } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport { PropertySchema } from '../property.types';\nimport { Property } from './Property';\n\nexport const PropertiesList = SortableContainer(\n  ({\n    onDelete,\n    onChange,\n    properties,\n    onDuplicate,\n  }: {\n    properties: PropertySchema[];\n    onDelete?: (index: number) => void;\n    onDuplicate?: (property: PropertySchema) => void;\n    onChange?: (property: PropertySchema, index: number) => void;\n  }) => {\n    return (\n      <Box>\n        <List>\n          {properties.map((item, index) => (\n            <Property\n              {...item}\n              index={index}\n              key={`${item.name}-${index}`}\n              onDelete={() => onDelete && onDelete(index)}\n              onDuplicate={() => onDuplicate && onDuplicate(item)}\n              onChange={(property) => onChange && onChange(property, index)}\n            />\n          ))}\n        </List>\n      </Box>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}