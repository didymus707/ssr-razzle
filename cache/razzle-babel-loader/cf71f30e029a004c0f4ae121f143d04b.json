{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/more-info/NoteModal.tsx\";\nvar __jsx = React.createElement;\nimport { ModalBody, ModalFooter, Stack } from '@chakra-ui/core';\nimport { BodyText, Button, ModalContainer, Textarea } from 'app/components';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nexport const NoteModal = props => {\n  const {\n    onClose,\n    isOpen,\n    onSubmit,\n    isLoading,\n    initialValues\n  } = props;\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleSubmit\n  } = useFormik({\n    onSubmit,\n    validationSchema: yup.object().shape({\n      content: yup.string().required('Note content is required')\n    }),\n    initialValues: initialValues !== null && initialValues !== void 0 ? initialValues : {\n      content: ''\n    }\n  });\n  return __jsx(ModalContainer, {\n    isOpen: isOpen,\n    onClose: onClose,\n    title: `${initialValues ? 'Edit' : 'Add'} note`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, !initialValues && __jsx(BodyText, {\n    pb: \"1rem\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Add an internal note to give more context to this conversation.\"), __jsx(Textarea, {\n    name: \"content\",\n    value: values.content,\n    onChange: handleChange,\n    placeholder: \"Enter note\",\n    errorMessage: errors.content,\n    isInvalid: !!touched.content && !!errors.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), __jsx(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    width: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    variant: \"outline\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    type: \"submit\",\n    variantColor: \"blue\",\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, initialValues ? 'Edit' : 'Add', \" note\")))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/inbox/components/more-info/NoteModal.tsx"],"names":["ModalBody","ModalFooter","Stack","BodyText","Button","ModalContainer","Textarea","useFormik","React","yup","NoteModal","props","onClose","isOpen","onSubmit","isLoading","initialValues","values","touched","errors","handleChange","handleSubmit","validationSchema","object","shape","content","string","required"],"mappings":"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","sourcesContent":["import { ModalBody, ModalFooter, Stack } from '@chakra-ui/core';\nimport { BodyText, Button, ModalContainer, ModalContainerOptions, Textarea } from 'app/components';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { NoteSchema } from '../../inbox.types';\n\nexport type NoteModalProps = ModalContainerOptions & {\n  isLoading?: boolean;\n  initialValues?: Partial<NoteSchema>;\n  onSubmit(payload: Partial<NoteSchema>): void;\n};\nexport const NoteModal = (props: NoteModalProps) => {\n  const { onClose, isOpen, onSubmit, isLoading, initialValues } = props;\n  const { values, touched, errors, handleChange, handleSubmit } = useFormik<Partial<NoteSchema>>({\n    onSubmit,\n    validationSchema: yup.object().shape({\n      content: yup.string().required('Note content is required'),\n    }),\n    initialValues: initialValues ?? { content: '' },\n  });\n\n  return (\n    <ModalContainer\n      isOpen={isOpen}\n      onClose={onClose}\n      title={`${initialValues ? 'Edit' : 'Add'} note`}\n    >\n      <form onSubmit={handleSubmit}>\n        <ModalBody>\n          {!initialValues && (\n            <BodyText pb=\"1rem\" color=\"gray.500\">\n              Add an internal note to give more context to this conversation.\n            </BodyText>\n          )}\n          <Textarea\n            name=\"content\"\n            value={values.content}\n            onChange={handleChange}\n            placeholder=\"Enter note\"\n            errorMessage={errors.content}\n            isInvalid={!!touched.content && !!errors.content}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Stack isInline width=\"100%\" justifyContent=\"center\">\n            <Button size=\"sm\" width=\"48%\" variant=\"outline\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button size=\"sm\" width=\"48%\" type=\"submit\" variantColor=\"blue\" isLoading={isLoading}>\n              {initialValues ? 'Edit' : 'Add'} note\n            </Button>\n          </Stack>\n        </ModalFooter>\n      </form>\n    </ModalContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}