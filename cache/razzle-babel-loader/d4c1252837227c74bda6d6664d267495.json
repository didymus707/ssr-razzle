{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/cell-properties/email/cell.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Icon } from '@chakra-ui/core';\nimport { CustomCellWrapper as Wrapper } from '../../grid/custom-cell/index.styles';\nexport const EmailCell = props => {\n  const handleActionClick = event => {\n    event.stopPropagation();\n    props.api.stopEditing();\n    window.location.href = `mailto:${props.value}`;\n  };\n\n  useEffect(() => {\n    var _props$value;\n\n    if (props.search_query !== '' && props.value && (_props$value = props.value) !== null && _props$value !== void 0 && _props$value.toString().toLowerCase().includes(props.search_query.toLowerCase())) {\n      props.eGridCell.style.backgroundColor = '#fff3d4';\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return __jsx(Wrapper, {\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"email-cell\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.value, props.value && __jsx(\"div\", {\n    className: \"icon-button\",\n    onClick: handleActionClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"email\",\n    size: \"10px\",\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/components/cell-properties/email/cell.tsx"],"names":["React","useEffect","Icon","CustomCellWrapper","Wrapper","EmailCell","props","handleActionClick","event","stopPropagation","api","stopEditing","window","location","href","value","search_query","toString","toLowerCase","includes","eGridCell","style","backgroundColor","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,iBAAiB,IAAIC,OAA9B,QAA6C,qCAA7C;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AACvC,QAAMC,iBAAiB,GAAIC,KAAD,IAAgB;AACxCA,IAAAA,KAAK,CAACC,eAAN;AACAH,IAAAA,KAAK,CAACI,GAAN,CAAUC,WAAV;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,UAASR,KAAK,CAACS,KAAM,EAA7C;AACD,GAJD;;AAMAd,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QACEK,KAAK,CAACU,YAAN,KAAuB,EAAvB,IACAV,KAAK,CAACS,KADN,oBAEAT,KAAK,CAACS,KAFN,yCAEA,aAAaE,QAAb,GAAwBC,WAAxB,GAAsCC,QAAtC,CAA+Cb,KAAK,CAACU,YAAN,CAAmBE,WAAnB,EAA/C,CAHF,EAIE;AACAZ,MAAAA,KAAK,CAACc,SAAN,CAAgBC,KAAhB,CAAsBC,eAAtB,GAAwC,SAAxC;AACD,KAPa,CAQd;;AACD,GATQ,EASN,EATM,CAAT;AAWA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACd,eAAF,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAEc,CAAC,IAAIA,CAAC,CAACd,eAAF,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACS,KADT,EAEGT,KAAK,CAACS,KAAN,IACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAER,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,CADF,CADF;AAYD,CA9BM","sourcesContent":["import React, { useEffect } from 'react';\nimport { Icon } from '@chakra-ui/core';\nimport { CustomCellWrapper as Wrapper } from '../../grid/custom-cell/index.styles';\n\nexport const EmailCell = (props: any) => {\n  const handleActionClick = (event: any) => {\n    event.stopPropagation();\n    props.api.stopEditing();\n    window.location.href = `mailto:${props.value}`;\n  };\n\n  useEffect(() => {\n    if (\n      props.search_query !== '' &&\n      props.value &&\n      props.value?.toString().toLowerCase().includes(props.search_query.toLowerCase())\n    ) {\n      props.eGridCell.style.backgroundColor = '#fff3d4';\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Wrapper onClick={e => e.stopPropagation()}>\n      <div className=\"email-cell\" onClick={e => e.stopPropagation()}>\n        {props.value}\n        {props.value && (\n          <div className=\"icon-button\" onClick={handleActionClick}>\n            <Icon name=\"email\" size=\"10px\" color=\"black\" />\n          </div>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}