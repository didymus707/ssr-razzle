{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/payments/component/payments/components/payment-requests/component.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Box, Spinner, useToast } from '@chakra-ui/core/dist';\nimport { useSelector } from 'react-redux';\nimport { selectPaymentSetupStatus } from '../../../../selectors';\nimport { PaymentRequestToolbar } from './toolbar';\nimport { Table } from '../components/table';\nimport { EmptyState, Pagination, ToastBox } from '../../../../../../components';\nimport noPaymentRequests from '../../../../assets/no-payment-requests.svg';\nimport { PaymentRequestTableColumns } from './table-columns';\nimport { useHistory } from 'react-router-dom';\nexport const PaymentRequestsComponent = props => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState('');\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState('all');\n  const {\n    0: dateRange,\n    1: setDateRange\n  } = useState({\n    from: null,\n    to: null,\n    on: null\n  });\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const onNextPage = () => setPage(page + 1);\n\n  const onPrevPage = () => setPage(page - 1);\n\n  const onGoToPage = i => setPage(i);\n\n  const toast = useToast();\n  const router_history = useHistory();\n  const {\n    payment_requests,\n    fetchPaymentRequests,\n    cancelPaymentRequest,\n    markPaymentRequestPaid\n  } = props;\n\n  const copy_request_link = request => {\n    const request_link = `https://paylink${true ? '.demo' : ''}.simpu.co/?code=${request.code}`;\n    navigator.clipboard.writeText(request_link);\n    toast({\n      position: 'bottom-left',\n      render: ({\n        onClose\n      }) => __jsx(ToastBox, {\n        status: \"success\",\n        onClose: onClose,\n        message: \"Request link copied\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      })\n    });\n  };\n\n  const view_request_conversation = conversation_id => {\n    router_history.push(`/s/inbox/${conversation_id}`);\n  };\n\n  const columns = React.useMemo(() => PaymentRequestTableColumns({\n    copy_request_link,\n    cancel_request: cancelPaymentRequest,\n    mark_request_paid: markPaymentRequestPaid,\n    view_request_conversation\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  []); // @ts-ignore\n\n  const setup_status = useSelector(selectPaymentSetupStatus);\n  useEffect(() => {\n    if (setup_status === 'completed') fetchPaymentRequests(page, activeTab, searchQuery, dateRange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, activeTab, searchQuery, dateRange]);\n  const rows = payment_requests.by_id.map(id => payment_requests.data[id]); // @ts-ignore\n\n  const {\n    meta,\n    loading\n  } = payment_requests;\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Payment Requests\")), __jsx(PaymentRequestToolbar, {\n    activeTab,\n    setActiveTab,\n    searchQuery,\n    setSearchQuery,\n    dateRange,\n    setDateRange,\n    onGoToPage,\n    disable: props.setup_status !== 'completed',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: \"section-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, rows.length > 0 && setup_status === 'completed' && __jsx(React.Fragment, null, __jsx(Table // @ts-ignore\n  , {\n    columns: columns // @ts-ignore\n    ,\n    data: rows,\n    onRowClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), __jsx(Pagination, {\n    page: page,\n    total: meta.count_total,\n    pageSize: meta.per_page,\n    onNext: onNextPage,\n    onPrev: onPrevPage,\n    onGoTo: onGoToPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), (rows.length === 0 || loading) && __jsx(Box, {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, loading && __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"lg\",\n    margin: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), !loading && setup_status === 'completed' && searchQuery === '' && activeTab === 'all' && !dateRange.to && !dateRange.from && __jsx(EmptyState, {\n    image: noPaymentRequests,\n    paddingY: \"150px\",\n    heading: \"No transactions yet\",\n    subheading: \"Once transactions occur, they show up here.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), !loading && setup_status === 'completed' && (searchQuery !== '' || activeTab !== 'all' || dateRange.to || dateRange.from) && __jsx(EmptyState, {\n    image: noPaymentRequests,\n    paddingY: \"150px\",\n    heading: \"Looks like you don't have any payment requests that match the criteria selected\",\n    subheading: \"Once any match, you'll see them all here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/payments/component/payments/components/payment-requests/component.tsx"],"names":["React","useEffect","useState","Box","Spinner","useToast","useSelector","selectPaymentSetupStatus","PaymentRequestToolbar","Table","EmptyState","Pagination","ToastBox","noPaymentRequests","PaymentRequestTableColumns","useHistory","PaymentRequestsComponent","props","searchQuery","setSearchQuery","activeTab","setActiveTab","dateRange","setDateRange","from","to","on","page","setPage","onNextPage","onPrevPage","onGoToPage","i","toast","router_history","payment_requests","fetchPaymentRequests","cancelPaymentRequest","markPaymentRequestPaid","copy_request_link","request","request_link","code","navigator","clipboard","writeText","position","render","onClose","view_request_conversation","conversation_id","push","columns","useMemo","cancel_request","mark_request_paid","setup_status","rows","by_id","map","id","data","meta","loading","length","count_total","per_page"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Spinner, useToast } from '@chakra-ui/core/dist';\nimport { PaymentRequest, PaymentSetupStatus } from '../../../../payments.types';\nimport { useSelector } from 'react-redux';\nimport { selectPaymentSetupStatus } from '../../../../selectors';\nimport { PaymentRequestToolbar } from './toolbar';\nimport { Table } from '../components/table';\nimport { EmptyState, Pagination, ToastBox } from '../../../../../../components';\nimport noPaymentRequests from '../../../../assets/no-payment-requests.svg';\nimport { PaymentRequestTableColumns } from './table-columns';\nimport { useHistory } from 'react-router-dom';\n\nexport const PaymentRequestsComponent = (props: any) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState<'all' | 'paid' | 'pending' | 'expired' | 'cancelled'>(\n    'all',\n  );\n  const [dateRange, setDateRange] = useState({\n    from: null,\n    to: null,\n    on: null,\n  });\n  const [page, setPage] = useState<number>(1);\n\n  const onNextPage = () => setPage(page + 1);\n  const onPrevPage = () => setPage(page - 1);\n  const onGoToPage = (i: number) => setPage(i);\n\n  const toast = useToast();\n\n  const router_history = useHistory();\n\n  const {\n    payment_requests,\n    fetchPaymentRequests,\n    cancelPaymentRequest,\n    markPaymentRequestPaid,\n  } = props;\n\n  const copy_request_link = (request: PaymentRequest) => {\n    const request_link = `https://paylink${\n      process.env.NODE_ENV === 'development' ? '.demo' : ''\n    }.simpu.co/?code=${request.code}`;\n    navigator.clipboard.writeText(request_link);\n    toast({\n      position: 'bottom-left',\n      render: ({ onClose }) => (\n        <ToastBox status=\"success\" onClose={onClose} message=\"Request link copied\" />\n      ),\n    });\n  };\n\n  const view_request_conversation = (conversation_id: string) => {\n    router_history.push(`/s/inbox/${conversation_id}`);\n  };\n\n  const columns = React.useMemo(\n    () =>\n      PaymentRequestTableColumns({\n        copy_request_link,\n        cancel_request: cancelPaymentRequest,\n        mark_request_paid: markPaymentRequestPaid,\n        view_request_conversation,\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  // @ts-ignore\n  const setup_status: PaymentSetupStatus = useSelector(selectPaymentSetupStatus);\n\n  useEffect(() => {\n    if (setup_status === 'completed') fetchPaymentRequests(page, activeTab, searchQuery, dateRange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, activeTab, searchQuery, dateRange]);\n\n  const rows: PaymentRequest[] = payment_requests.by_id.map(\n    (id: string) => payment_requests.data[id],\n  );\n  // @ts-ignore\n  const { meta, loading } = payment_requests;\n\n  return (\n    <>\n      <Box className=\"section-title\">\n        <Box className=\"title\">Payment Requests</Box>\n      </Box>\n      <PaymentRequestToolbar\n        {...{ activeTab, setActiveTab, searchQuery, setSearchQuery, dateRange, setDateRange, onGoToPage }}\n        disable={props.setup_status !== 'completed'}\n      />\n      <Box className=\"section-body\">\n        {rows.length > 0 && setup_status === 'completed' && (\n          <>\n            <Table\n              // @ts-ignore\n              columns={columns}\n              // @ts-ignore\n              data={rows}\n              onRowClick={() => {}}\n            />\n            <Pagination\n              page={page}\n              total={meta.count_total}\n              pageSize={meta.per_page}\n              onNext={onNextPage}\n              onPrev={onPrevPage}\n              onGoTo={onGoToPage}\n            />\n          </>\n        )}\n\n        {(rows.length === 0 || loading) && (\n          <Box width=\"100%\" display=\"flex\" justifyContent=\"center\" height=\"100%\">\n            {loading && (\n              <Spinner\n                thickness=\"4px\"\n                speed=\"0.65s\"\n                emptyColor=\"gray.200\"\n                color=\"blue.500\"\n                size=\"lg\"\n                margin=\"auto\"\n              />\n            )}\n            {!loading &&\n              setup_status === 'completed' &&\n              searchQuery === '' &&\n              activeTab === 'all' &&\n              !dateRange.to &&\n              !dateRange.from && (\n                <EmptyState\n                  image={noPaymentRequests}\n                  paddingY=\"150px\"\n                  heading=\"No transactions yet\"\n                  subheading=\"Once transactions occur, they show up here.\"\n                />\n              )}\n\n            {!loading &&\n              setup_status === 'completed' &&\n              (searchQuery !== '' || activeTab !== 'all' || dateRange.to || dateRange.from) && (\n                <EmptyState\n                  image={noPaymentRequests}\n                  paddingY=\"150px\"\n                  heading=\"Looks like you don't have any payment requests that match the criteria selected\"\n                  subheading=\"Once any match, you'll see them all here\"\n                />\n              )}\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}