{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/components/resources/create-resource/stages/select-resource-type.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Divider, Icon, SimpleGrid } from '@chakra-ui/core/dist';\nimport { resource_types } from '../../../../../../list.data';\n\nconst ResourceTypeItem = props => {\n  return __jsx(Box, {\n    className: `item ${props.disabled && 'disabled'}`,\n    onClick: props.handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    size: \"18px\",\n    name: props.icon || 'copy',\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), props.label, props.disabled && __jsx(Box, {\n    className: \"coming-soon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 26\n    }\n  }, \"coming soon\"));\n};\n\nexport const SelectResourceType = props => {\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: \"section-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"section-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Databases\", __jsx(Divider, {\n    marginLeft: \"20px\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    className: \"section-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleGrid, {\n    spacing: \"20px\",\n    minChildWidth: 220,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, resource_types.filter(i => i.type === 'database').map(i => __jsx(ResourceTypeItem, _extends({}, i, {\n    handleClick: () => {\n      if (!i.disabled) {\n        props.selectType(i.key);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })))))), __jsx(Box, {\n    className: \"section-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"section-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"APIs\", __jsx(Divider, {\n    marginLeft: \"20px\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    className: \"section-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(SimpleGrid, {\n    spacing: \"20px\",\n    minChildWidth: 220,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, resource_types.filter(i => ['api', 'app'].includes(i.type)).map(i => __jsx(ResourceTypeItem, _extends({}, i, {\n    handleClick: () => {\n      if (!i.disabled) {\n        props.selectType(i.key);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })))))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/components/resources/create-resource/stages/select-resource-type.tsx"],"names":["React","Box","Divider","Icon","SimpleGrid","resource_types","ResourceTypeItem","props","disabled","handleClick","icon","label","SelectResourceType","filter","i","type","map","selectType","key","includes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Divider, Icon, SimpleGrid } from '@chakra-ui/core/dist';\nimport { resource_types } from '../../../../../../list.data';\nimport { ResourceType } from '../../../../../../lists.types';\n\ninterface ItemProps {\n  handleClick: () => void;\n}\n\nconst ResourceTypeItem = (props: ResourceType & ItemProps) => {\n  return (\n    <Box className={`item ${props.disabled && 'disabled'}`} onClick={props.handleClick}>\n      <Icon size=\"18px\" name={props.icon || 'copy'} mr=\"10px\" />\n      {props.label}\n      {props.disabled && <Box className=\"coming-soon\">coming soon</Box>}\n    </Box>\n  );\n};\n\ninterface Props {\n  selectType: Function;\n}\n\nexport const SelectResourceType = (props: Props) => {\n  return (\n    <Box>\n      <Box className=\"section-type\">\n        <Box className=\"section-heading\">\n          Databases\n          <Divider marginLeft=\"20px\" width=\"100%\" />\n        </Box>\n\n        <Box className=\"section-grid\">\n          <SimpleGrid spacing=\"20px\" minChildWidth={220}>\n            {resource_types\n              .filter((i: ResourceType) => i.type === 'database')\n              .map((i: ResourceType) => (\n                <ResourceTypeItem\n                  {...i}\n                  handleClick={() => {\n                    if (!i.disabled) {\n                      props.selectType(i.key);\n                    }\n                  }}\n                />\n              ))}\n          </SimpleGrid>\n        </Box>\n      </Box>\n\n      <Box className=\"section-type\">\n        <Box className=\"section-heading\">\n          APIs\n          <Divider marginLeft=\"20px\" width=\"100%\" />\n        </Box>\n\n        <Box className=\"section-grid\">\n          <SimpleGrid spacing=\"20px\" minChildWidth={220}>\n            {resource_types\n              .filter((i: ResourceType) => ['api', 'app'].includes(i.type))\n              .map((i: ResourceType) => (\n                <ResourceTypeItem\n                  {...i}\n                  handleClick={() => {\n                    if (!i.disabled) {\n                      props.selectType(i.key);\n                    }\n                  }}\n                />\n              ))}\n          </SimpleGrid>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}