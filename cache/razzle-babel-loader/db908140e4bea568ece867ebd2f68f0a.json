{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/grid/property/property-select.tsx\";\nvar __jsx = React.createElement;\n// @ts-nocheck\nimport React, { useState } from 'react';\nimport { PopoverWrapper } from '../../../list-view.styles';\nimport { Box, Icon, Popover, PopoverTrigger, PopoverContent, Input } from '@chakra-ui/core';\nimport { PopoverListItem } from '../../popover-list-item';\nimport { available_properties } from '../../../list.data';\nexport const PropertySelect = props => {\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState('');\n  const column = props.column;\n\n  const handleSearchValueChange = event => {\n    const value = event.target.value;\n    setSearchValue(value);\n  };\n\n  const filtered_properties = Object.values(available_properties).filter(i => i.label.toLowerCase().includes(searchValue.toLowerCase()) && !i.system);\n  return __jsx(Popover, {\n    isOpen: props.disabled ? false : undefined,\n    trigger: \"hover\",\n    placement: \"right-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, ({\n    onClose\n  }) => {\n    var _available_properties, _available_properties2;\n\n    return __jsx(React.Fragment, null, __jsx(PopoverTrigger, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, __jsx(Box, {\n      className: \"list-item\",\n      cursor: props.disabled && 'not-allowed !important',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      className: \"icon\",\n      name: (_available_properties = available_properties[column === null || column === void 0 ? void 0 : column.type]) === null || _available_properties === void 0 ? void 0 : _available_properties.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }), (_available_properties2 = available_properties[column === null || column === void 0 ? void 0 : column.type]) === null || _available_properties2 === void 0 ? void 0 : _available_properties2.label, __jsx(Box, {\n      width: \"-webkit-fill-available\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: \"chevron-right\",\n      size: \"12.5px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    })))), __jsx(PopoverContent, {\n      zIndex: 4,\n      width: \"max-content\",\n      boxShadow: \"none\",\n      _focus: {\n        boxShadow: 'none',\n        outline: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(PopoverWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      className: \"input-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      value: searchValue,\n      onChange: handleSearchValueChange,\n      placeholder: \"Search property types\",\n      variant: \"filled\",\n      height: 30,\n      fontSize: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    })), filtered_properties.map(i => __jsx(PopoverListItem, _extends({}, i, {\n      active: i.key === (column === null || column === void 0 ? void 0 : column.type),\n      onClick: () => {\n        props.onChange(i.key);\n        onClose();\n      },\n      tooltip: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }))))));\n  });\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/grid/property/property-select.tsx"],"names":["React","useState","PopoverWrapper","Box","Icon","Popover","PopoverTrigger","PopoverContent","Input","PopoverListItem","available_properties","PropertySelect","props","searchValue","setSearchValue","column","handleSearchValueChange","event","value","target","filtered_properties","Object","values","filter","i","label","toLowerCase","includes","system","disabled","undefined","onClose","type","icon","boxShadow","outline","map","key","onChange"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,cAA7B,EAA6CC,cAA7C,EAA6DC,KAA7D,QAA0E,iBAA1E;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,oBAAT,QAAqC,oBAArC;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAgB;AAC5C,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMc,MAAM,GAAGH,KAAK,CAACG,MAArB;;AAEA,QAAMC,uBAAuB,GAAIC,KAAD,IAAgB;AAC9C,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAJ,IAAAA,cAAc,CAACI,KAAD,CAAd;AACD,GAHD;;AAKA,QAAME,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAcZ,oBAAd,EAAoCa,MAApC,CACzBC,CAAD,IAAYA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+Bd,WAAW,CAACa,WAAZ,EAA/B,KAA6D,CAACF,CAAC,CAACI,MADlD,CAA5B;AAIA,SACE,MAAC,OAAD;AAAS,IAAA,MAAM,EAAEhB,KAAK,CAACiB,QAAN,GAAiB,KAAjB,GAAyBC,SAA1C;AAAqD,IAAA,OAAO,EAAC,OAA7D;AAAqE,IAAA,SAAS,EAAC,aAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA;;AAAA,WACC,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,MAAM,EAAEnB,KAAK,CAACiB,QAAN,IAAkB,wBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,IAAI,2BAAEnB,oBAAoB,CAACK,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEiB,IAAT,CAAtB,0DAAE,sBAAoCC,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,4BAEGvB,oBAAoB,CAACK,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEiB,IAAT,CAFvB,2DAEG,uBAAoCP,KAFvC,EAGE,MAAC,GAAD;AACE,MAAA,KAAK,EAAC,wBADR;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,cAAc,EAAC,UAHjB;AAIE,MAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAHF,CADF,CADF,EAgBE,MAAC,cAAD;AACE,MAAA,MAAM,EAAE,CADV;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,SAAS,EAAC,MAHZ;AAIE,MAAA,MAAM,EAAE;AACNS,QAAAA,SAAS,EAAE,MADL;AAENC,QAAAA,OAAO,EAAE;AAFH,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,KAAK,EAAEtB,WADT;AAEE,MAAA,QAAQ,EAAEG,uBAFZ;AAGE,MAAA,WAAW,EAAC,uBAHd;AAIE,MAAA,OAAO,EAAC,QAJV;AAKE,MAAA,MAAM,EAAE,EALV;AAME,MAAA,QAAQ,EAAE,EANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAWGI,mBAAmB,CAACgB,GAApB,CAAyBZ,CAAD,IACvB,MAAC,eAAD,eACMA,CADN;AAEE,MAAA,MAAM,EAAEA,CAAC,CAACa,GAAF,MAAUtB,MAAV,aAAUA,MAAV,uBAAUA,MAAM,CAAEiB,IAAlB,CAFV;AAGE,MAAA,OAAO,EAAE,MAAM;AACbpB,QAAAA,KAAK,CAAC0B,QAAN,CAAed,CAAC,CAACa,GAAjB;AACAN,QAAAA,OAAO;AACR,OANH;AAOE,MAAA,OAAO,MAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CAXH,CATF,CAhBF,CADD;AAAA,GADH,CADF;AAwDD,CAtEM","sourcesContent":["// @ts-nocheck\nimport React, { useState } from 'react';\nimport { PopoverWrapper } from '../../../list-view.styles';\nimport { Box, Icon, Popover, PopoverTrigger, PopoverContent, Input } from '@chakra-ui/core';\nimport { PopoverListItem } from '../../popover-list-item';\nimport { available_properties } from '../../../list.data';\n\nexport const PropertySelect = (props: any) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const column = props.column;\n\n  const handleSearchValueChange = (event: any) => {\n    const value = event.target.value;\n    setSearchValue(value);\n  };\n\n  const filtered_properties = Object.values(available_properties).filter(\n    (i: any) => i.label.toLowerCase().includes(searchValue.toLowerCase()) && !i.system,\n  );\n\n  return (\n    <Popover isOpen={props.disabled ? false : undefined} trigger=\"hover\" placement=\"right-start\">\n      {({ onClose }) => (\n        <>\n          <PopoverTrigger>\n            <Box className=\"list-item\" cursor={props.disabled && 'not-allowed !important'}>\n              <Icon className=\"icon\" name={available_properties[column?.type]?.icon} />\n              {available_properties[column?.type]?.label}\n              <Box\n                width=\"-webkit-fill-available\"\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                alignItems=\"center\"\n              >\n                <Icon name=\"chevron-right\" size=\"12.5px\" />\n              </Box>\n            </Box>\n          </PopoverTrigger>\n\n          <PopoverContent\n            zIndex={4}\n            width=\"max-content\"\n            boxShadow=\"none\"\n            _focus={{\n              boxShadow: 'none',\n              outline: 'none',\n            }}\n          >\n            <PopoverWrapper>\n              <Box className=\"input-item\">\n                <Input\n                  value={searchValue}\n                  onChange={handleSearchValueChange}\n                  placeholder=\"Search property types\"\n                  variant=\"filled\"\n                  height={30}\n                  fontSize={13}\n                />\n              </Box>\n              {filtered_properties.map((i: any) => (\n                <PopoverListItem\n                  {...i}\n                  active={i.key === column?.type}\n                  onClick={() => {\n                    props.onChange(i.key);\n                    onClose();\n                  }}\n                  tooltip\n                />\n              ))}\n            </PopoverWrapper>\n          </PopoverContent>\n        </>\n      )}\n    </Popover>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}