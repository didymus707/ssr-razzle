{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"theme\", \"children\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Dashboard/dashboard.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Box } from '@chakra-ui/core';\nexport const Dashboard = _ref => {\n  let {\n    theme,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(Box, _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), React.Children.map(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        theme\n      });\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Dashboard/dashboard.tsx"],"names":["React","Box","Dashboard","theme","children","rest","Children","map","child","isValidElement","cloneElement"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,SAAS,GAAG,QAOR;AAAA,MAPS;AACxBC,IAAAA,KADwB;AAExBC,IAAAA;AAFwB,GAOT;AAAA,MAJZC,IAIY;;AACf,SACE,MAAC,GAAD,eAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGL,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA8BI,KAAD,IAAW;AACvC,sBAAIR,KAAK,CAACS,cAAN,CAAqBD,KAArB,CAAJ,EAAiC;AAC/B,0BAAOR,KAAK,CAACU,YAAN,CAAmBF,KAAnB,EAA0B;AAAEL,QAAAA;AAAF,OAA1B,CAAP;AACD;AACF,GAJA,CADH,CADF;AASD,CAjBM","sourcesContent":["import * as React from 'react';\nimport { Box, BoxProps } from '@chakra-ui/core';\n\nexport const Dashboard = ({\n  theme,\n  children,\n  ...rest\n}: {\n  theme?: any;\n  children: React.ReactNode;\n} & BoxProps) => {\n  return (\n    <Box {...rest}>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, { theme });\n        }\n      })}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}