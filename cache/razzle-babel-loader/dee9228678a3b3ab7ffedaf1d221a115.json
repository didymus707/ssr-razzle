{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { SelectProps, InputProps } from '@chakra-ui/core'\nimport { PropertySchema } from '../property'\nimport { SelectOptions } from '../../tables.types'\n\nexport interface FilterItemSelectOptions {\n  data: string | undefined\n  onChange: (val: string) => void\n  options: SelectOptions[] | undefined\n}\n\nexport type FilterItemSelectProps = FilterItemSelectOptions &\n  Omit<SelectProps, 'onChange'>\n\ninterface FilterItemInputOptions {\n  value?: string\n  onChange?: (val: string) => void\n}\n\nexport type FilterItemInputProps = FilterItemInputOptions &\n  Omit<InputProps, 'onChange'>\n\nexport interface FilterProps {\n  name?: string\n  value?: any\n  operator?: string\n  columnID?: number | string | undefined\n  conjunction?: string\n}\n\nexport interface FilterItemProps<T> {\n  filter?: T\n  isFirst?: boolean\n  onRemove?: () => void\n  onChange?: (val: T) => void\n  properties?: PropertySchema[]\n}\n\nexport interface FilterListProps {\n  filters: FilterProps[]\n  properties?: PropertySchema[]\n  onRemove?: (index: number) => void\n  onChange?: (value: FilterProps, index: number) => void\n}\n\nexport interface FiltersDropdownProps {\n  actions: any\n  filters: FilterProps[]\n  children: React.ReactNode\n  openGroupModal?: () => void\n  properties: PropertySchema[]\n  onCreateCampaign?: () => void\n  onChange?: (value: FilterProps[]) => void\n}\n\nexport interface PropertyTypeConjuctionDic {\n  [key: string]: SelectOptions[]\n}\n"]},"metadata":{},"sourceType":"module"}