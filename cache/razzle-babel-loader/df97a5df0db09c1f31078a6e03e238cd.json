{"ast":null,"code":"import _objectSpread from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/AdvancedSelect/index.tsx\";\nvar __jsx = React.createElement;\nimport { Box, FormLabel, Icon, Text } from '@chakra-ui/core';\nimport * as React from 'react';\nimport Select, { components } from 'react-select';\nconst sizes = {\n  inputHeight: {\n    sm: '2rem',\n    md: '2.5rem',\n    lg: '3rem'\n  },\n  placeholder: {\n    sm: '45%',\n    md: '50%',\n    lg: '50%'\n  },\n  multiValueTopPosition: {\n    sm: '0',\n    md: '0',\n    lg: '0'\n  }\n};\n\nconst DropdownIndicator = props => {\n  return __jsx(components.DropdownIndicator, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), __jsx(Icon, {\n    size: \"1.25rem\",\n    color: \"gray.600\",\n    name: props.selectProps.menuIsOpen ? 'select-arrow-up' : 'select-arrow-up',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ClearIndicator = props => {\n  return __jsx(components.ClearIndicator, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), __jsx(Icon, {\n    size: \"0.5rem\",\n    color: \"gray.600\",\n    name: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport function AdvancedSelect({\n  name,\n  label,\n  onBlur,\n  isMulti,\n  isGroup,\n  options,\n  onChange,\n  isInvalid,\n  isClearable,\n  size = 'md',\n  placeholder,\n  isSearchable,\n  defaultValue,\n  onInputChange,\n  value: valueProp,\n  closeMenuOnSelect,\n  defaultInputValue,\n  labelColor = 'gray.900'\n}) {\n  const [value, setValue] = React.useState(getValue(valueProp));\n  const groupStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  };\n  const groupBadgeStyles = {\n    minWidth: 1,\n    fontSize: 12,\n    color: 'white',\n    lineHeight: '1',\n    fontWeight: 400,\n    borderRadius: '2em',\n    display: 'inline-block',\n    backgroundColor: '#3525E6',\n    padding: '0.16666666666667em 0.5em'\n  };\n\n  function handleChange(newValue) {\n    setValue(newValue);\n    onChange && onChange(newValue);\n  }\n\n  function handleInputChange(inputValue) {\n    onInputChange && onInputChange(inputValue);\n  }\n\n  function getValue(stringValue) {\n    if (stringValue) {\n      if (isGroup) {\n        return options === null || options === void 0 ? void 0 : options.reduce((acc, item) => [...acc, ...(item === null || item === void 0 ? void 0 : item.options)], []).find(item => item.value === stringValue);\n      }\n\n      if (isMulti) {\n        return [];\n      }\n\n      return options === null || options === void 0 ? void 0 : options.find(item => item.value === stringValue);\n    }\n\n    return null;\n  }\n\n  function formatGroupLabel(data) {\n    return __jsx(\"div\", {\n      style: groupStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, __jsx(Text, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, data.label), data.showBadge && __jsx(\"span\", {\n      style: groupBadgeStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 28\n      }\n    }, data.options.length));\n  }\n\n  const styles = {\n    valueContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      fontSize: '0.875rem'\n    }),\n    menu: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      zIndex: 10000\n    }),\n    control: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      // minHeight: 'unset',\n      borderRadius: '8px',\n      minHeight: sizes.inputHeight[size],\n      boxShadow: isInvalid ? '0 0 0 1px #e53e3e' : 'none',\n      border: `1px solid ${isInvalid ? '#e53e3e' : '#858C94'}`,\n      '&:hover': {\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#DADEE3'}`\n      },\n      '&:focus': {\n        boxShadow: `0 0 0 1px ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#3525E6'}`\n      },\n      '&:active': {\n        boxShadow: `0 0 0 1px ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#3525E6'}`\n      }\n    }),\n    multiValue: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      position: 'relative',\n      backgroundColor: '#edf2f7',\n      top: sizes.multiValueTopPosition[size]\n    }),\n    singleValue: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      top: sizes.placeholder[size]\n    }),\n    multiValueRemove: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      ':hover': {\n        cursor: 'pointer',\n        backgroundColor: '#e2e8f0'\n      }\n    }),\n    option: (styles, {\n      isSelected\n    }) => _objectSpread(_objectSpread({}, styles), {}, {\n      cursor: 'pointer',\n      padding: '0.2rem 0.5rem',\n      fontSize: '0.875rem',\n      color: isSelected ? '#ffffff' : '#333333',\n      backgroundColor: isSelected ? '#3525E6' : 'transparent',\n      '&:hover': {\n        color: isSelected ? '#ffffff' : '#333333',\n        backgroundColor: isSelected ? '#3525E6' : '#f7fafc'\n      }\n    }),\n    indicatorSeparator: () => ({\n      display: 'none'\n    }),\n    indicatorsContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      '&:hover': {\n        opacity: 1,\n        color: '#212121'\n      }\n    }),\n    placeholder: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      color: '#8ca0b5',\n      top: sizes.placeholder[size]\n    }),\n    dropdownIndicator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      opacity: 1,\n      color: '#212121',\n      padding: '0 8px',\n      '&:hover': {\n        opacity: 1,\n        color: '#212121'\n      }\n    }),\n    clearIndicator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n      opacity: 1,\n      color: '#212121',\n      paddingRight: 0,\n      '&:hover': {\n        opacity: 1,\n        color: '#212121'\n      }\n    })\n  };\n  React.useEffect(() => {\n    setValue(getValue(valueProp)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueProp]);\n  return __jsx(Box, {\n    width: \"100%\",\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, __jsx(Select, {\n    name: name,\n    value: value,\n    styles: styles,\n    onBlur: onBlur,\n    isMulti: isMulti,\n    options: options,\n    onChange: handleChange,\n    isClearable: isClearable,\n    placeholder: placeholder,\n    isSearchable: isSearchable,\n    \"aria-label\": \"advanced-select\",\n    defaultValue: defaultValue,\n    onInputChange: handleInputChange,\n    formatGroupLabel: formatGroupLabel,\n    defaultInputValue: defaultInputValue,\n    closeMenuOnSelect: closeMenuOnSelect,\n    components: {\n      DropdownIndicator,\n      ClearIndicator\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }), label && __jsx(FormLabel, {\n    p: \"0 8px\",\n    top: \"-4px\",\n    left: \"16px\",\n    zIndex: 2,\n    rounded: \"8px\",\n    fontWeight: \"400\",\n    color: labelColor,\n    fontSize: \"0.75rem\",\n    position: \"absolute\",\n    transition: \"all 200ms\",\n    backgroundColor: \"white\",\n    transform: \"translate3d(0, -30%, 0)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, label));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/AdvancedSelect/index.tsx"],"names":["Box","FormLabel","Icon","Text","React","Select","components","sizes","inputHeight","sm","md","lg","placeholder","multiValueTopPosition","DropdownIndicator","props","selectProps","menuIsOpen","ClearIndicator","AdvancedSelect","name","label","onBlur","isMulti","isGroup","options","onChange","isInvalid","isClearable","size","isSearchable","defaultValue","onInputChange","value","valueProp","closeMenuOnSelect","defaultInputValue","labelColor","setValue","useState","getValue","groupStyles","display","alignItems","justifyContent","groupBadgeStyles","minWidth","fontSize","color","lineHeight","fontWeight","borderRadius","backgroundColor","padding","handleChange","newValue","handleInputChange","inputValue","stringValue","reduce","acc","item","find","formatGroupLabel","data","showBadge","length","styles","valueContainer","menu","zIndex","control","minHeight","boxShadow","border","multiValue","position","top","singleValue","multiValueRemove","cursor","option","isSelected","indicatorSeparator","indicatorsContainer","opacity","dropdownIndicator","clearIndicator","paddingRight","useEffect"],"mappings":"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","sourcesContent":["import { Box, FormLabel, Icon, Text } from '@chakra-ui/core';\nimport * as React from 'react';\nimport Select, { components } from 'react-select';\n\ntype Option = {\n  label?: string;\n  value?: string;\n  options?: any[];\n};\n\nexport type AdvancedSelectProps<T> = {\n  value?: string | string[] | null;\n  name?: string;\n  label?: string | React.ReactNode;\n  labelColor?: string;\n  isGroup?: boolean;\n  defaultValue?: T;\n  isMulti?: boolean;\n  onBlur?: () => void;\n  isInvalid?: boolean;\n  placeholder?: string;\n  isClearable?: boolean;\n  isSearchable?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n  defaultInputValue?: string;\n  closeMenuOnSelect?: boolean;\n  onChange?: (value: any) => void;\n  options: Option[] | undefined;\n  onInputChange?: (value: string) => void;\n};\n\nconst sizes = {\n  inputHeight: { sm: '2rem', md: '2.5rem', lg: '3rem' },\n  placeholder: { sm: '45%', md: '50%', lg: '50%' },\n  multiValueTopPosition: { sm: '0', md: '0', lg: '0' },\n} as { [key: string]: { [key: string]: string } };\n\nconst DropdownIndicator = (props: any) => {\n  return (\n    <components.DropdownIndicator {...props}>\n      <Icon\n        size=\"1.25rem\"\n        color=\"gray.600\"\n        name={props.selectProps.menuIsOpen ? 'select-arrow-up' : 'select-arrow-up'}\n      />\n    </components.DropdownIndicator>\n  );\n};\n\nconst ClearIndicator = (props: any) => {\n  return (\n    <components.ClearIndicator {...props}>\n      <Icon size=\"0.5rem\" color=\"gray.600\" name=\"close\" />\n    </components.ClearIndicator>\n  );\n};\n\nexport function AdvancedSelect({\n  name,\n  label,\n  onBlur,\n  isMulti,\n  isGroup,\n  options,\n  onChange,\n  isInvalid,\n  isClearable,\n  size = 'md',\n  placeholder,\n  isSearchable,\n  defaultValue,\n  onInputChange,\n  value: valueProp,\n  closeMenuOnSelect,\n  defaultInputValue,\n  labelColor = 'gray.900',\n}: AdvancedSelectProps<Option>) {\n  const [value, setValue] = React.useState(getValue(valueProp));\n\n  const groupStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  };\n  const groupBadgeStyles = {\n    minWidth: 1,\n    fontSize: 12,\n    color: 'white',\n    lineHeight: '1',\n    fontWeight: 400,\n    borderRadius: '2em',\n    display: 'inline-block',\n    backgroundColor: '#3525E6',\n    padding: '0.16666666666667em 0.5em',\n  };\n\n  function handleChange(newValue: any) {\n    setValue(newValue);\n    onChange && onChange(newValue);\n  }\n\n  function handleInputChange(inputValue: any) {\n    onInputChange && onInputChange(inputValue);\n  }\n\n  function getValue(stringValue?: string | string[] | null) {\n    if (stringValue) {\n      if (isGroup) {\n        return options\n          ?.reduce((acc, item) => [...acc, ...(item?.options as any[])], [] as any[])\n          .find(item => item.value === stringValue);\n      }\n      if (isMulti) {\n        return [];\n      }\n      return options?.find(item => item.value === stringValue);\n    }\n    return null;\n  }\n\n  function formatGroupLabel(data: any) {\n    return (\n      <div style={groupStyles}>\n        <Text color=\"primary\">{data.label}</Text>\n        {data.showBadge && <span style={groupBadgeStyles}>{data.options.length}</span>}\n      </div>\n    );\n  }\n\n  const styles = {\n    valueContainer: (styles: any) => ({\n      ...styles,\n      fontSize: '0.875rem',\n    }),\n    menu: (styles: any) => ({\n      ...styles,\n      zIndex: 10000,\n    }),\n    control: (styles: any) => ({\n      ...styles,\n      // minHeight: 'unset',\n      borderRadius: '8px',\n      minHeight: sizes.inputHeight[size],\n      boxShadow: isInvalid ? '0 0 0 1px #e53e3e' : 'none',\n      border: `1px solid ${isInvalid ? '#e53e3e' : '#858C94'}`,\n      '&:hover': {\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#DADEE3'}`,\n      },\n      '&:focus': {\n        boxShadow: `0 0 0 1px ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n      },\n      '&:active': {\n        boxShadow: `0 0 0 1px ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n        border: `1px solid ${isInvalid ? '#e53e3e' : '#3525E6'}`,\n      },\n    }),\n    multiValue: (styles: any) => ({\n      ...styles,\n      position: 'relative',\n      backgroundColor: '#edf2f7',\n      top: sizes.multiValueTopPosition[size],\n    }),\n    singleValue: (styles: any) => ({\n      ...styles,\n      top: sizes.placeholder[size],\n    }),\n    multiValueRemove: (styles: any) => ({\n      ...styles,\n      ':hover': {\n        cursor: 'pointer',\n        backgroundColor: '#e2e8f0',\n      },\n    }),\n    option: (styles: any, { isSelected }: any) => ({\n      ...styles,\n      cursor: 'pointer',\n      padding: '0.2rem 0.5rem',\n      fontSize: '0.875rem',\n      color: isSelected ? '#ffffff' : '#333333',\n      backgroundColor: isSelected ? '#3525E6' : 'transparent',\n      '&:hover': {\n        color: isSelected ? '#ffffff' : '#333333',\n        backgroundColor: isSelected ? '#3525E6' : '#f7fafc',\n      },\n    }),\n    indicatorSeparator: () => ({\n      display: 'none',\n    }),\n    indicatorsContainer: (styles: any) => ({\n      ...styles,\n      '&:hover': {\n        opacity: 1,\n        color: '#212121',\n      },\n    }),\n    placeholder: (styles: any) => ({\n      ...styles,\n      color: '#8ca0b5',\n      top: sizes.placeholder[size],\n    }),\n    dropdownIndicator: (styles: any) => ({\n      ...styles,\n      opacity: 1,\n      color: '#212121',\n      padding: '0 8px',\n      '&:hover': {\n        opacity: 1,\n        color: '#212121',\n      },\n    }),\n    clearIndicator: (styles: any) => ({\n      ...styles,\n      opacity: 1,\n      color: '#212121',\n      paddingRight: 0,\n      '&:hover': {\n        opacity: 1,\n        color: '#212121',\n      },\n    }),\n  };\n\n  React.useEffect(() => {\n    setValue(getValue(valueProp));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueProp]);\n\n  return (\n    <Box width=\"100%\" position=\"relative\">\n      <Select\n        name={name}\n        value={value}\n        styles={styles}\n        onBlur={onBlur}\n        isMulti={isMulti}\n        options={options}\n        onChange={handleChange}\n        isClearable={isClearable}\n        placeholder={placeholder}\n        isSearchable={isSearchable}\n        aria-label=\"advanced-select\"\n        defaultValue={defaultValue}\n        onInputChange={handleInputChange}\n        formatGroupLabel={formatGroupLabel}\n        defaultInputValue={defaultInputValue}\n        closeMenuOnSelect={closeMenuOnSelect}\n        components={{ DropdownIndicator, ClearIndicator }}\n      />\n      {label && (\n        <FormLabel\n          p=\"0 8px\"\n          top=\"-4px\"\n          left=\"16px\"\n          zIndex={2}\n          rounded=\"8px\"\n          fontWeight=\"400\"\n          color={labelColor}\n          fontSize=\"0.75rem\"\n          position=\"absolute\"\n          transition=\"all 200ms\"\n          backgroundColor=\"white\"\n          transform=\"translate3d(0, -30%, 0)\"\n        >\n          {label}\n        </FormLabel>\n      )}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}