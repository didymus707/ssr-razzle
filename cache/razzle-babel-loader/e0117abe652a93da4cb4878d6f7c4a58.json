{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/cell-properties/dnd/customization-menu.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Icon, Popover, PopoverContent, PopoverTrigger, PseudoBox } from '@chakra-ui/core/dist';\nimport { available_properties } from '../../../list.data';\nimport { PopoverWrapper } from '../../../list-view.styles';\nexport const ColumnSelect = props => {\n  const {\n    columns,\n    selected_column\n  } = props;\n  return __jsx(Popover, {\n    placement: \"right\",\n    trigger: \"hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, ({\n    onClose\n  }) => __jsx(React.Fragment, null, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(PseudoBox, {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    paddingX: \"10px\",\n    paddingY: \"5px\",\n    marginY: \"5px\",\n    justifyContent: \"space-between\",\n    _hover: {\n      backgroundColor: '#FAFAFA'\n    },\n    cursor: \"pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    size: \"14px\",\n    name: available_properties['PHONE NUMBER'].icon,\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), __jsx(Box, {\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, selected_column === null || selected_column === void 0 ? void 0 : selected_column.label)), __jsx(Icon, {\n    size: \"12px\",\n    name: \"chevron-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }))), __jsx(PopoverContent, {\n    zIndex: 4,\n    width: \"max-content\",\n    boxShadow: \"none\",\n    _focus: {\n      boxShadow: 'none',\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(PopoverWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, columns.map(i => __jsx(Box, {\n    key: i.uid,\n    className: `list-item ${selected_column.uid === i.uid ? 'active' : ''}`,\n    width: \"100%\",\n    style: {\n      fontSize: 14\n    },\n    onClick: () => {\n      props.onChange(i.uid);\n      if (onClose) onClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: available_properties['PHONE NUMBER'].icon,\n    size: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }), i.label))))));\n};\nexport const DNDCustomizationMenu = props => {\n  const {\n    column\n  } = props;\n  const customization = (column === null || column === void 0 ? void 0 : column.customization) || {};\n  const phone_columns = Object.values(props.columns).filter(i => i.type === 'PHONE NUMBER');\n  const tracked_column = Object.values(props.columns).find(i => i.id === customization['tracked_column']);\n\n  const handleTrackedColumnChange = column_uid => {\n    const columnID = props.columns[column_uid].id;\n    if ((tracked_column === null || tracked_column === void 0 ? void 0 : tracked_column.id) === columnID) return;\n    props.updateCustomization(column.uid, {\n      tracked_column: columnID\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"property-type-label\",\n    marginTop: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"TRACKED PHONE NUMBER COLUMN\"), __jsx(ColumnSelect, {\n    selected_column: tracked_column,\n    columns: phone_columns,\n    columns_by_id: phone_columns.map(i => i.uid),\n    onChange: handleTrackedColumnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/cell-properties/dnd/customization-menu.tsx"],"names":["React","Box","Icon","Popover","PopoverContent","PopoverTrigger","PseudoBox","available_properties","PopoverWrapper","ColumnSelect","props","columns","selected_column","onClose","backgroundColor","icon","label","boxShadow","outline","map","i","uid","fontSize","onChange","DNDCustomizationMenu","column","customization","phone_columns","Object","values","filter","type","tracked_column","find","id","handleTrackedColumnChange","column_uid","columnID","updateCustomization","columns_by_id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Icon,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  PseudoBox,\n} from '@chakra-ui/core/dist';\nimport { available_properties } from '../../../list.data';\nimport { PopoverWrapper } from '../../../list-view.styles';\n\nexport const ColumnSelect = (props: any) => {\n  const { columns, selected_column } = props;\n  return (\n    <Popover placement=\"right\" trigger=\"hover\">\n      {({ onClose }) => (\n        <>\n          <PopoverTrigger>\n            <PseudoBox\n              display=\"flex\"\n              alignItems=\"center\"\n              width=\"100%\"\n              paddingX=\"10px\"\n              paddingY=\"5px\"\n              marginY=\"5px\"\n              justifyContent=\"space-between\"\n              _hover={{\n                backgroundColor: '#FAFAFA',\n              }}\n              cursor=\"pointer\"\n            >\n              <Box display=\"flex\" alignItems=\"center\">\n                <Icon size=\"14px\" name={available_properties['PHONE NUMBER'].icon} mr=\"10px\" />\n                <Box fontWeight=\"400\" fontSize=\"14px\">\n                  {selected_column?.label}\n                </Box>\n              </Box>\n              <Icon size=\"12px\" name=\"chevron-right\" />\n            </PseudoBox>\n          </PopoverTrigger>\n          <PopoverContent\n            zIndex={4}\n            width=\"max-content\"\n            boxShadow=\"none\"\n            _focus={{\n              boxShadow: 'none',\n              outline: 'none',\n            }}\n          >\n            <PopoverWrapper>\n              {columns.map((i: any) => (\n                <Box\n                  key={i.uid}\n                  className={`list-item ${selected_column.uid === i.uid ? 'active' : ''}`}\n                  width=\"100%\"\n                  style={{\n                    fontSize: 14,\n                  }}\n                  onClick={() => {\n                    props.onChange(i.uid);\n                    if (onClose) onClose();\n                  }}\n                >\n                  <Icon\n                    className=\"icon\"\n                    name={available_properties['PHONE NUMBER'].icon}\n                    size=\"14px\"\n                  />\n                  {i.label}\n                </Box>\n              ))}\n            </PopoverWrapper>\n          </PopoverContent>\n        </>\n      )}\n    </Popover>\n  );\n};\n\nexport const DNDCustomizationMenu = (props: any) => {\n  const { column } = props;\n  const customization = column?.customization || {};\n\n  const phone_columns: any[] = Object.values(props.columns).filter(\n    (i: any) => i.type === 'PHONE NUMBER',\n  );\n\n  const tracked_column: any = Object.values(props.columns).find(\n    (i: any) => i.id === customization['tracked_column'],\n  );\n\n  const handleTrackedColumnChange = (column_uid: string) => {\n    const columnID = props.columns[column_uid].id;\n    if (tracked_column?.id === columnID) return;\n    props.updateCustomization(column.uid, { tracked_column: columnID });\n  };\n\n  return (\n    <>\n      <Box className=\"property-type-label\" marginTop=\"10px\">\n        TRACKED PHONE NUMBER COLUMN\n      </Box>\n      <ColumnSelect\n        {...{\n          selected_column: tracked_column,\n          columns: phone_columns,\n          columns_by_id: phone_columns.map((i: any) => i.uid),\n          onChange: handleTrackedColumnChange,\n        }}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}