{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/component.content.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box } from '@chakra-ui/core/dist';\nimport { Lists, ListResources } from './components';\nimport { DataModels } from './components/data-models';\nimport { Segments } from './components/segments';\nexport const ListContent = props => {\n  const {\n    importedData,\n    searchValue,\n    visualization,\n    selectedTab,\n    selectTab,\n    addList,\n    addListFromTemplate,\n    handleImport,\n    handleImportMapping,\n    handleImportNewTable\n  } = props;\n  if (['all', 'lists', 'smart', 'favorites', 'trash'].includes(selectedTab)) return __jsx(Lists, {\n    importedData,\n    searchValue,\n    visualization,\n    selectedTab,\n    selectTab,\n    addList,\n    addListFromTemplate,\n    handleImport,\n    handleImportMapping,\n    handleImportNewTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  });\n  if (selectedTab === 'connections') return __jsx(ListResources, {\n    searchValue,\n    visualization,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  });\n  if (selectedTab === 'data-models') return __jsx(DataModels, {\n    searchValue,\n    visualization,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  });\n  if (selectedTab === 'segments') return __jsx(Segments, {\n    searchValue,\n    visualization,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  });\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/component/lists/component.content.tsx"],"names":["React","Box","Lists","ListResources","DataModels","Segments","ListContent","props","importedData","searchValue","visualization","selectedTab","selectTab","addList","addListFromTemplate","handleImport","handleImportMapping","handleImportNewTable","includes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,cAArC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAeA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAkB;AAC3C,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,mBAPI;AAQJC,IAAAA,YARI;AASJC,IAAAA,mBATI;AAUJC,IAAAA;AAVI,MAWFV,KAXJ;AAaA,MAAI,CAAC,KAAD,EAAQ,OAAR,EAAiB,OAAjB,EAA0B,WAA1B,EAAuC,OAAvC,EAAgDW,QAAhD,CAAyDP,WAAzD,CAAJ,EACE,OACE,MAAC,KAAD;AAEIH,IAAAA,YAFJ;AAGIC,IAAAA,WAHJ;AAIIC,IAAAA,aAJJ;AAKIC,IAAAA,WALJ;AAMIC,IAAAA,SANJ;AAOIC,IAAAA,OAPJ;AAQIC,IAAAA,mBARJ;AASIC,IAAAA,YATJ;AAUIC,IAAAA,mBAVJ;AAWIC,IAAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAiBF,MAAIN,WAAW,KAAK,aAApB,EACE,OACE,MAAC,aAAD;AAEIF,IAAAA,WAFJ;AAGIC,IAAAA,aAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASF,MAAIC,WAAW,KAAK,aAApB,EACE,OACE,MAAC,UAAD;AAEIF,IAAAA,WAFJ;AAGIC,IAAAA,aAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASF,MAAIC,WAAW,KAAK,UAApB,EACE,OACE,MAAC,QAAD;AAEIF,IAAAA,WAFJ;AAGIC,IAAAA,aAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASF,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA/DM","sourcesContent":["import React from 'react';\nimport { Box } from '@chakra-ui/core/dist';\nimport { ListVisualization } from '../../lists.types';\nimport { Lists, ListResources } from './components';\nimport { DataModels } from './components/data-models';\nimport { Segments } from './components/segments';\n\ninterface Props {\n  searchValue: string;\n  selectedTab: string;\n  selectTab: Function;\n  importedData: any;\n  visualization: ListVisualization;\n  addList: Function;\n  addListFromTemplate: Function;\n  handleImport: Function;\n  handleImportMapping: Function;\n  handleImportNewTable: Function;\n}\n\nexport const ListContent = (props: Props) => {\n  const {\n    importedData,\n    searchValue,\n    visualization,\n    selectedTab,\n    selectTab,\n    addList,\n    addListFromTemplate,\n    handleImport,\n    handleImportMapping,\n    handleImportNewTable,\n  } = props;\n\n  if (['all', 'lists', 'smart', 'favorites', 'trash'].includes(selectedTab))\n    return (\n      <Lists\n        {...{\n          importedData,\n          searchValue,\n          visualization,\n          selectedTab,\n          selectTab,\n          addList,\n          addListFromTemplate,\n          handleImport,\n          handleImportMapping,\n          handleImportNewTable,\n        }}\n      />\n    );\n\n  if (selectedTab === 'connections')\n    return (\n      <ListResources\n        {...{\n          searchValue,\n          visualization,\n        }}\n      />\n    );\n\n  if (selectedTab === 'data-models')\n    return (\n      <DataModels\n        {...{\n          searchValue,\n          visualization,\n        }}\n      />\n    );\n\n  if (selectedTab === 'segments')\n    return (\n      <Segments\n        {...{\n          searchValue,\n          visualization,\n        }}\n      />\n    );\n\n  return <Box />;\n};\n"]},"metadata":{},"sourceType":"module"}