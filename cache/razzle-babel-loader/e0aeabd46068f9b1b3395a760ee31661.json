{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/resources/update-resource-dialog/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport { Box, Modal, ModalCloseButton, ModalOverlay, useToast } from '@chakra-ui/core/dist';\nimport { AddResourceDialogWrapper as Wrapper } from './index.styles';\nimport { ToastBox, Button, Input } from 'app/components';\nimport { useSelector } from 'react-redux';\nimport { selectListResources } from '../../../../../lists.selectors';\nimport { Checkbox, SlideIn } from '@chakra-ui/core';\nexport const UpdateResourceDialog = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: resource,\n    1: setResource\n  } = useState(false);\n  const {\n    0: payload,\n    1: setPayload\n  } = useState();\n  const {\n    0: resourceName,\n    1: setResourceName\n  } = useState('');\n  const {\n    0: resourceType,\n    1: setResourceType\n  } = useState(null);\n  const {\n    isOpen,\n    onClose,\n    selectedResource\n  } = props;\n  const toast = useToast();\n  const resources = useSelector(selectListResources);\n  useEffect(() => {\n    setLoading(false);\n    setResourceName('');\n    setResourceType(null);\n    setPayload(null); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n  useEffect(() => {\n    if (isOpen && selectedResource) {\n      const resource = resources.find(i => i.id === selectedResource);\n      setResource(resource);\n      setResourceName(resource.name);\n      setResourceType(resource.provider);\n      setPayload({\n        name: resource.name,\n        webhooks_enabled: resource.webhooks_enabled\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n\n  const handleUpdate = async () => {\n    setLoading(true);\n\n    try {\n      await props.updateResource(selectedResource, payload);\n\n      if (payload.webhooks_enabled !== resource.webhooks_enabled) {\n        if (payload.webhooks_enabled) {\n          await props.enableResourceWebhook(resource.id, resource.provider);\n        } else {\n          await props.disableResourceWebhook(resource.id, resource.provider);\n        }\n      }\n\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          status: \"success\",\n          onClose: onClose,\n          message: `${resource.name} connection updated successfully`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        })\n      });\n      return onClose();\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: \"Unable to update connection, please try again\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }\n        })\n      });\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(SlideIn, {\n    in: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, styles => __jsx(Modal, {\n    isOpen: true,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), __jsx(ModalCloseButton, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), __jsx(Wrapper, _extends({}, styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Update connection\"), __jsx(Box, {\n    className: \"prompt-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Enter new information to update this connection\"), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    marginBottom: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    label: \"Name\",\n    autoFocus: true,\n    placeholder: \"i.e Marketing Drive\",\n    value: (payload === null || payload === void 0 ? void 0 : payload.name) || '',\n    onChange: e => {\n      setPayload(_objectSpread(_objectSpread({}, payload), {}, {\n        name: e.target.value\n      }));\n    },\n    isInvalid: !!(payload !== null && payload !== void 0 && payload.name) === 0 && isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))), ['shopify', 'woo-commerce'].includes(resourceType) && __jsx(Box, {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, __jsx(Checkbox, {\n    isChecked: payload.webhooks_enabled,\n    name: \"enableSync\",\n    onChange: e => setPayload(_objectSpread(_objectSpread({}, payload), {}, {\n      webhooks_enabled: e.target.checked\n    })),\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    fontSize: \"14px\",\n    mt: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, \"Enable webhook sync\"))), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"ghost\",\n    size: \"sm\",\n    onClick: onClose,\n    mr: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    isDisabled: resourceName.length === 0,\n    variantColor: \"blue\",\n    variant: \"solid\",\n    size: \"sm\",\n    isLoading: loading,\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Update connection\")))));\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/lists/component/lists/components/resources/update-resource-dialog/index.tsx"],"names":["React","useEffect","useState","Box","Modal","ModalCloseButton","ModalOverlay","useToast","AddResourceDialogWrapper","Wrapper","ToastBox","Button","Input","useSelector","selectListResources","Checkbox","SlideIn","UpdateResourceDialog","props","loading","setLoading","resource","setResource","payload","setPayload","resourceName","setResourceName","resourceType","setResourceType","isOpen","onClose","selectedResource","toast","resources","find","i","id","name","provider","webhooks_enabled","handleUpdate","updateResource","enableResourceWebhook","disableResourceWebhook","position","render","e","styles","target","value","includes","checked","length"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport { Box, Modal, ModalCloseButton, ModalOverlay, useToast } from '@chakra-ui/core/dist';\nimport { AddResourceDialogWrapper as Wrapper } from './index.styles';\nimport { ToastBox, Button, Input } from 'app/components';\nimport { useSelector } from 'react-redux';\nimport { selectListResources } from '../../../../../lists.selectors';\nimport { Checkbox, SlideIn } from '@chakra-ui/core';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  selectedResource: string | null;\n  updateResource: Function;\n  enableResourceWebhook: Function;\n  disableResourceWebhook: Function;\n}\n\nexport const UpdateResourceDialog = (props: Props) => {\n  const [loading, setLoading] = useState(false);\n  const [resource, setResource] = useState(false);\n  const [payload, setPayload] = useState();\n  const [resourceName, setResourceName] = useState('');\n  const [resourceType, setResourceType] = useState(null);\n\n  const { isOpen, onClose, selectedResource } = props;\n\n  const toast = useToast();\n\n  const resources: any[] = useSelector(selectListResources);\n\n  useEffect(() => {\n    setLoading(false);\n    setResourceName('');\n    setResourceType(null);\n    setPayload(null);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isOpen && selectedResource) {\n      const resource = resources.find((i: any) => i.id === selectedResource);\n      setResource(resource);\n      setResourceName(resource.name);\n      setResourceType(resource.provider);\n\n      setPayload({\n        name: resource.name,\n        webhooks_enabled: resource.webhooks_enabled,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  const handleUpdate = async () => {\n    setLoading(true);\n    try {\n      await props.updateResource(selectedResource, payload);\n\n      if (payload.webhooks_enabled !== resource.webhooks_enabled) {\n        if (payload.webhooks_enabled) {\n          await props.enableResourceWebhook(resource.id, resource.provider);\n        } else {\n          await props.disableResourceWebhook(resource.id, resource.provider);\n        }\n      }\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox\n            status=\"success\"\n            onClose={onClose}\n            message={`${resource.name} connection updated successfully`}\n          />\n        ),\n      });\n      return onClose();\n    } catch (e) {\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox onClose={onClose} message=\"Unable to update connection, please try again\" />\n        ),\n      });\n    }\n    setLoading(false);\n  };\n\n  return (\n    <SlideIn in={isOpen}>\n      {(styles: Object) => (\n        <Modal isOpen={true} onClose={onClose}>\n          <ModalOverlay />\n          <ModalCloseButton size=\"sm\" />\n          <Wrapper {...styles}>\n            <Box className=\"heading\">Update connection</Box>\n            <Box className=\"prompt-text\">Enter new information to update this connection</Box>\n            <Box display=\"flex\" flexDirection=\"column\" marginBottom=\"20px\">\n              <Box marginBottom=\"10px\">\n                <Input\n                  label=\"Name\"\n                  autoFocus\n                  placeholder=\"i.e Marketing Drive\"\n                  value={payload?.name || ''}\n                  onChange={(e: any) => {\n                    setPayload({ ...payload, name: e.target.value });\n                  }}\n                  isInvalid={!!payload?.name === 0 && isOpen}\n                />\n              </Box>\n            </Box>\n\n            {['shopify', 'woo-commerce'].includes(resourceType) && (\n              <Box display=\"flex\" marginBottom=\"10px\">\n                <Checkbox\n                  isChecked={payload.webhooks_enabled}\n                  name=\"enableSync\"\n                  onChange={e => setPayload({ ...payload, webhooks_enabled: e.target.checked })}\n                  alignItems=\"center\"\n                >\n                  <Box fontSize=\"14px\" mt=\"1px\">\n                    Enable webhook sync\n                  </Box>\n                </Checkbox>\n              </Box>\n            )}\n\n            <Box display=\"flex\" flexDirection=\"row\" width=\"100%\" justifyContent=\"flex-end\">\n              <Button variant=\"ghost\" size=\"sm\" onClick={onClose} mr=\"10px\">\n                Cancel\n              </Button>\n              <Button\n                isDisabled={resourceName.length === 0}\n                variantColor=\"blue\"\n                variant=\"solid\"\n                size=\"sm\"\n                isLoading={loading}\n                onClick={handleUpdate}\n              >\n                Update connection\n              </Button>\n            </Box>\n          </Wrapper>\n        </Modal>\n      )}\n    </SlideIn>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}