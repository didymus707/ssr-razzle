{"ast":null,"code":"import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { getProfile, updateProfile, changePassword, forgotPassword } from './authentication.service';\nconst initialState = {\n  user: null,\n  token: null,\n  profile: null,\n  organisations: null,\n  forgotPasswordToken: null,\n  loading: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    saveUser(state, action) {\n      const {\n        user,\n        token,\n        profile,\n        organisations\n      } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.profile = profile;\n      state.organisations = organisations;\n    },\n\n    logUserOut(state) {\n      state.user = null;\n      state.token = null;\n      state.profile = null;\n      state.organisations = null;\n    },\n\n    setForgotPasswordToken(state, action) {\n      const {\n        token\n      } = action.payload;\n      state.token = token;\n    },\n\n    setAuthLoading(state, action) {\n      state.loading = action.payload.loading;\n    }\n\n  }\n});\nexport const {\n  saveUser,\n  logUserOut,\n  setForgotPasswordToken,\n  setAuthLoading\n} = authSlice.actions;\nexport const authReducer = authSlice.reducer;\nexport const fetchProfile = organizationID => async dispatch => {\n  const data = await getProfile(organizationID);\n  dispatch(saveUser(data));\n  return data;\n};\nexport const editProfile = values => async dispatch => {\n  const data = await updateProfile(values);\n  dispatch(saveUser(data));\n  return data;\n};\nexport const editPassword = values => async () => {\n  return await changePassword(values);\n};\nexport const forgotPasswordAsync = values => async dispatch => {\n  const {\n    reset\n  } = await forgotPassword(values);\n  dispatch(setForgotPasswordToken({\n    token: reset.token\n  }));\n  return reset;\n};\nexport const authLoading = loading => async dispatch => {\n  dispatch(setAuthLoading({\n    loading\n  }));\n  return loading;\n};\nexport const selectProfile = createSelector(state => state.auth, auth => auth.profile);\nexport const selectOrganisationID = createSelector(selectProfile, profile => profile === null || profile === void 0 ? void 0 : profile.organisation_id);\nexport const selectUserID = createSelector(selectProfile, profile => profile === null || profile === void 0 ? void 0 : profile.user_id);\nexport const selectUser = createSelector(state => state.auth, auth => auth.user);\nexport const selectUserEmail = createSelector(selectUser, user => (user === null || user === void 0 ? void 0 : user.email) || '');","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/unauthenticated-app/authentication/service/authentication.reducers.ts"],"names":["createSelector","createSlice","getProfile","updateProfile","changePassword","forgotPassword","initialState","user","token","profile","organisations","forgotPasswordToken","loading","authSlice","name","reducers","saveUser","state","action","payload","logUserOut","setForgotPasswordToken","setAuthLoading","actions","authReducer","reducer","fetchProfile","organizationID","dispatch","data","editProfile","values","editPassword","forgotPasswordAsync","reset","authLoading","selectProfile","auth","selectOrganisationID","organisation_id","selectUserID","user_id","selectUser","selectUserEmail","email"],"mappings":"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","sourcesContent":["import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppDispatch, RootState } from '../../../../root';\nimport {\n  getProfile,\n  updateProfile,\n  changePassword,\n  forgotPassword,\n} from './authentication.service';\nimport { AuthInitialState, UserProfile, User } from './types';\nimport { ForgotPasswordInitialValuesProps } from '../components';\nconst initialState = {\n  user: null,\n  token: null,\n  profile: null,\n  organisations: null,\n  forgotPasswordToken: null,\n  loading: false,\n} as AuthInitialState;\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    saveUser(state, action) {\n      const { user, token, profile, organisations } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.profile = profile;\n      state.organisations = organisations;\n    },\n    logUserOut(state) {\n      state.user = null;\n      state.token = null;\n      state.profile = null;\n      state.organisations = null;\n    },\n    setForgotPasswordToken(state, action: PayloadAction<{ token: string }>) {\n      const { token } = action.payload;\n      state.token = token;\n    },\n    setAuthLoading(state, action: PayloadAction<{ loading: boolean }>) {\n      state.loading = action.payload.loading;\n    },\n  },\n});\n\nexport const { saveUser, logUserOut, setForgotPasswordToken, setAuthLoading } = authSlice.actions;\n\nexport const authReducer = authSlice.reducer;\n\nexport const fetchProfile = (organizationID: string) => async (dispatch: AppDispatch) => {\n  const data = await getProfile(organizationID);\n  dispatch(saveUser(data));\n  return data;\n};\n\nexport const editProfile = (\n  values: Partial<Pick<UserProfile, 'first_name' | 'last_name' | 'organisation_id'>> & {\n    user_id: User['id'];\n  },\n) => async (dispatch: AppDispatch) => {\n  const data = await updateProfile(values);\n  dispatch(saveUser(data));\n  return data;\n};\n\nexport const editPassword = (values: {\n  old_password: string;\n  new_password: string;\n}) => async () => {\n  return await changePassword(values);\n};\n\nexport const forgotPasswordAsync = (\n  values: ForgotPasswordInitialValuesProps & { link: string },\n) => async (dispatch: AppDispatch) => {\n  const { reset } = await forgotPassword(values);\n  dispatch(setForgotPasswordToken({ token: reset.token }));\n  return reset;\n};\n\nexport const authLoading = (loading: boolean) => async (dispatch: AppDispatch) => {\n  dispatch(setAuthLoading({ loading }));\n  return loading;\n};\n\nexport const selectProfile = createSelector(\n  (state: RootState) => state.auth,\n  (auth) => auth.profile,\n);\n\nexport const selectOrganisationID = createSelector(\n  selectProfile, (profile) => profile?.organisation_id\n);\n\nexport const selectUserID = createSelector(\n  selectProfile, (profile) => profile?.user_id\n);\n\nexport const selectUser = createSelector(\n  (state: RootState) => state.auth,\n  (auth) => auth.user,\n);\n\nexport const selectUserEmail = createSelector(\n  selectUser, user => user?.email || ''\n);\n"]},"metadata":{},"sourceType":"module"}