{"ast":null,"code":"const _excluded = [\"plan\", \"email\", \"label\", \"phone\", \"amount\", \"bearer\", \"children\", \"onClose\", \"callback\", \"last_name\", \"first_name\", \"reference\", \"metadata\", \"currency\", \"channels\", \"quantity\", \"subaccount\", \"split_code\", \"transaction_charge\"];\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/PaystackButton/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { usePaystackPayment } from 'react-paystack';\nimport { getReference } from '../../../utils';\nimport { Button } from '../Button';\nexport function PayButton(_ref) {\n  let {\n    plan,\n    email,\n    label,\n    phone,\n    amount,\n    bearer,\n    children,\n    onClose,\n    callback,\n    last_name,\n    first_name,\n    reference,\n    metadata,\n    currency,\n    channels,\n    quantity,\n    subaccount,\n    split_code,\n    transaction_charge\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const publicKey = process.env.REACT_APP_PAYSTACK_PUBLIC_KEY;\n  const config = {\n    plan,\n    phone,\n    label,\n    amount,\n    last_name,\n    first_name,\n    metadata,\n    currency,\n    channels,\n    quantity,\n    subaccount,\n    email: email ? email : '',\n    reference: getReference(),\n    publicKey: publicKey || ''\n  }; // @ts-ignore\n\n  const initializePayment = usePaystackPayment(config);\n\n  const handleCallback = () => {\n    callback && callback();\n  };\n\n  const handleClose = () => {\n    onClose && onClose();\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Button, _extends({}, rest, {\n    onClick: () => {\n      initializePayment(handleCallback, handleClose);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), children));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/components/PaystackButton/index.tsx"],"names":["React","usePaystackPayment","getReference","Button","PayButton","plan","email","label","phone","amount","bearer","children","onClose","callback","last_name","first_name","reference","metadata","currency","channels","quantity","subaccount","split_code","transaction_charge","rest","publicKey","process","env","REACT_APP_PAYSTACK_PUBLIC_KEY","config","initializePayment","handleCallback","handleClose"],"mappings":";;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAaA,OAAO,SAASC,SAAT,OAqBY;AAAA,MArBO;AACxBC,IAAAA,IADwB;AAExBC,IAAAA,KAFwB;AAGxBC,IAAAA,KAHwB;AAIxBC,IAAAA,KAJwB;AAKxBC,IAAAA,MALwB;AAMxBC,IAAAA,MANwB;AAOxBC,IAAAA,QAPwB;AAQxBC,IAAAA,OARwB;AASxBC,IAAAA,QATwB;AAUxBC,IAAAA,SAVwB;AAWxBC,IAAAA,UAXwB;AAYxBC,IAAAA,SAZwB;AAaxBC,IAAAA,QAbwB;AAcxBC,IAAAA,QAdwB;AAexBC,IAAAA,QAfwB;AAgBxBC,IAAAA,QAhBwB;AAiBxBC,IAAAA,UAjBwB;AAkBxBC,IAAAA,UAlBwB;AAmBxBC,IAAAA;AAnBwB,GAqBP;AAAA,MADdC,IACc;;AACjB,QAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,6BAA9B;AACA,QAAMC,MAAM,GAAG;AACbxB,IAAAA,IADa;AAEbG,IAAAA,KAFa;AAGbD,IAAAA,KAHa;AAIbE,IAAAA,MAJa;AAKbK,IAAAA,SALa;AAMbC,IAAAA,UANa;AAObE,IAAAA,QAPa;AAQbC,IAAAA,QARa;AASbC,IAAAA,QATa;AAUbC,IAAAA,QAVa;AAWbC,IAAAA,UAXa;AAYbf,IAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAH,GAAW,EAZV;AAabU,IAAAA,SAAS,EAAEd,YAAY,EAbV;AAcbuB,IAAAA,SAAS,EAAEA,SAAS,IAAI;AAdX,GAAf,CAFiB,CAkBjB;;AACA,QAAMK,iBAAiB,GAAG7B,kBAAkB,CAAC4B,MAAD,CAA5C;;AAEA,QAAME,cAAc,GAAG,MAAM;AAC3BlB,IAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,GAFD;;AAIA,QAAMmB,WAAW,GAAG,MAAM;AACxBpB,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,eACMY,IADN;AAEE,IAAA,OAAO,EAAE,MAAM;AACbM,MAAAA,iBAAiB,CAACC,cAAD,EAAiBC,WAAjB,CAAjB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGrB,QANH,CADF,CADF;AAYD","sourcesContent":["import { ButtonProps } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { usePaystackPayment } from 'react-paystack';\nimport { getReference } from '../../../utils';\nimport { Button } from '../Button';\nimport { PaystackProps } from './types';\n\ntype PayButtonProps = {\n  email?: string;\n  amount: number;\n  first_name?: string;\n  last_name?: string;\n  onClose?: () => void;\n  callback?: () => void;\n} & ButtonProps &\n  Omit<PaystackProps, 'publicKey'>;\n\nexport function PayButton({\n  plan,\n  email,\n  label,\n  phone,\n  amount,\n  bearer,\n  children,\n  onClose,\n  callback,\n  last_name,\n  first_name,\n  reference,\n  metadata,\n  currency,\n  channels,\n  quantity,\n  subaccount,\n  split_code,\n  transaction_charge,\n  ...rest\n}: PayButtonProps) {\n  const publicKey = process.env.REACT_APP_PAYSTACK_PUBLIC_KEY;\n  const config = {\n    plan,\n    phone,\n    label,\n    amount,\n    last_name,\n    first_name,\n    metadata,\n    currency,\n    channels,\n    quantity,\n    subaccount,\n    email: email ? email : '',\n    reference: getReference(),\n    publicKey: publicKey || '',\n  };\n  // @ts-ignore\n  const initializePayment = usePaystackPayment(config);\n\n  const handleCallback = () => {\n    callback && callback();\n  };\n\n  const handleClose = () => {\n    onClose && onClose();\n  };\n\n  return (\n    <div>\n      <Button\n        {...rest}\n        onClick={() => {\n          initializePayment(handleCallback, handleClose);\n        }}\n      >\n        {children}\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}