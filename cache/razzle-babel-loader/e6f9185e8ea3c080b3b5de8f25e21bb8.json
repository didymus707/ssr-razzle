{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/campaigns/components/campaign-content.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, Flex, Skeleton, Stack, Text } from '@chakra-ui/core';\nimport { ListSearch } from 'app/authenticated-app/lists/components/search';\nimport React from 'react';\nimport { EmptyState } from '../../../../components';\nimport emptyClipImage from '../assets/search-user.svg';\nimport { CAMPAIGN_LIST_LIMIT } from '../campaigns.service';\nimport { CampaignListItem } from './campaign-list-item';\nimport { CampaignTablePagination } from './campaign-table-pagination';\nexport const CampaignContent = props => {\n  const {\n    end,\n    page,\n    start,\n    onSearch,\n    isLoading,\n    searchQuery,\n    onTabChange,\n    selectedTab,\n    total_count,\n    stateOptions,\n    onPagination,\n    campaignsList,\n    getTableActions\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: \"0\",\n    isInline: true,\n    rounded: \"4px\",\n    borderWidth: \"1px\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, stateOptions.map((item, index) => {\n    const isFirst = index === 0;\n    const isLast = index === stateOptions.length - 1;\n    let borderRadiusStyles = {};\n\n    if (isFirst) {\n      borderRadiusStyles = {\n        roundedTopLeft: '4px',\n        roundedBottomLeft: '4px'\n      };\n    }\n\n    if (isLast) {\n      borderRadiusStyles = {\n        roundedTopRight: '4px',\n        roundedBottomRight: '4px'\n      };\n    }\n\n    return __jsx(Box, _extends({\n      py: \"0.4rem\",\n      width: \"94px\",\n      fontWeight: \"500\",\n      cursor: \"pointer\",\n      textAlign: \"center\",\n      fontSize: \"0.875rem\",\n      borderRightWidth: isLast ? '0' : '1px',\n      onClick: () => onTabChange(item.value),\n      color: selectedTab === item.value ? 'white' : 'black',\n      backgroundColor: selectedTab === item.value ? 'blue.500' : 'transparent'\n    }, borderRadiusStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), item.label);\n  })), __jsx(ListSearch, {\n    height: \"36px\",\n    focusWidth: \"150px\",\n    search_query: searchQuery !== null && searchQuery !== void 0 ? searchQuery : '',\n    updateSearchQuery: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    fontSize: \"0.8rem\",\n    fontWeight: 500,\n    color: \"gray.900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Viewing \", start, \"-\", total_count < end ? total_count : end, \" of \", total_count), __jsx(CampaignTablePagination, {\n    page: page,\n    onClick: onPagination,\n    metaData: {\n      pageCount: CAMPAIGN_LIST_LIMIT,\n      noOfPages: Math.ceil(total_count / CAMPAIGN_LIST_LIMIT)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })))), isLoading ? __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, Array.from({\n    length: 15\n  }, (v, i) => __jsx(Stack, {\n    isInline: true,\n    px: \"1rem\",\n    pt: \"1rem\",\n    borderTopWidth: \"1px\",\n    key: `${i.toString()}-${new Date().getTime()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    width: ['calc(33.33% - 1rem)', 'calc(50% - 1rem)', 'calc(33.33% - 1rem)'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"80%\",\n    my: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"50%\",\n    my: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"25%\",\n    my: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), __jsx(Flex, {\n    justifyContent: \"flex-end\",\n    width: ['calc(33.33% - 1rem)', 'calc(50% - 1rem)', 'calc(33.33% - 1rem)'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"60px\",\n    my: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), __jsx(Flex, {\n    justifyContent: \"flex-end\",\n    width: ['calc(33.33% - 1rem)', 'calc(50% - 1rem)', 'calc(33.33% - 1rem)'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, __jsx(Skeleton, {\n    height: \"10px\",\n    width: \"60px\",\n    my: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }))))) : __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, !(campaignsList !== null && campaignsList !== void 0 && campaignsList.length) ? __jsx(EmptyState, {\n    py: \"100px\",\n    imageSize: \"120px\",\n    image: emptyClipImage,\n    heading: \"No campaigns created yet\",\n    contentContainerProps: {\n      mt: '1rem'\n    },\n    subheading: \"Send campaigns to your lists, segments or new audiences.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }) : campaignsList === null || campaignsList === void 0 ? void 0 : campaignsList.map(campaign => __jsx(CampaignListItem, {\n    key: campaign.id,\n    campaign: campaign,\n    isLoading: isLoading,\n    getTableActions: getTableActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/campaigns/components/campaign-content.tsx"],"names":["Box","Flex","Skeleton","Stack","Text","ListSearch","React","EmptyState","emptyClipImage","CAMPAIGN_LIST_LIMIT","CampaignListItem","CampaignTablePagination","CampaignContent","props","end","page","start","onSearch","isLoading","searchQuery","onTabChange","selectedTab","total_count","stateOptions","onPagination","campaignsList","getTableActions","map","item","index","isFirst","isLast","length","borderRadiusStyles","roundedTopLeft","roundedBottomLeft","roundedTopRight","roundedBottomRight","value","label","pageCount","noOfPages","Math","ceil","Array","from","v","i","toString","Date","getTime","mt","campaign","id"],"mappings":"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","sourcesContent":["import { Box, Flex, Skeleton, Stack, Text } from '@chakra-ui/core';\nimport { ListSearch } from 'app/authenticated-app/lists/components/search';\nimport React from 'react';\nimport { EmptyState, TableDropdownAction } from '../../../../components';\nimport emptyClipImage from '../assets/search-user.svg';\nimport { CAMPAIGN_LIST_LIMIT } from '../campaigns.service';\nimport { CampaignData, CampaignTypes } from '../campaigns.types';\nimport { CampaignListItem } from './campaign-list-item';\nimport { CampaignTablePagination } from './campaign-table-pagination';\n\ntype Props = {\n  end: number;\n  page: number;\n  start: number;\n  total_count: number;\n  isLoading?: boolean;\n  searchQuery?: string;\n  selectedTab: CampaignTypes;\n  campaignsList: CampaignData[];\n  onSearch(query: string): void;\n  onPagination(page: number): void;\n  onTabChange: (tab: CampaignTypes) => void;\n  stateOptions: { label: string; value: CampaignTypes }[];\n  getTableActions(data: CampaignData): TableDropdownAction<CampaignData>[];\n};\n\nexport const CampaignContent = (props: Props) => {\n  const {\n    end,\n    page,\n    start,\n    onSearch,\n    isLoading,\n    searchQuery,\n    onTabChange,\n    selectedTab,\n    total_count,\n    stateOptions,\n    onPagination,\n    campaignsList,\n    getTableActions,\n  } = props;\n  return (\n    <div>\n      <Box className=\"section-title\">\n        <Stack isInline alignItems=\"center\">\n          <Stack spacing=\"0\" isInline rounded=\"4px\" borderWidth=\"1px\" alignItems=\"center\">\n            {stateOptions.map((item, index) => {\n              const isFirst = index === 0;\n              const isLast = index === stateOptions.length - 1;\n\n              let borderRadiusStyles = {};\n\n              if (isFirst) {\n                borderRadiusStyles = {\n                  roundedTopLeft: '4px',\n                  roundedBottomLeft: '4px',\n                };\n              }\n              if (isLast) {\n                borderRadiusStyles = {\n                  roundedTopRight: '4px',\n                  roundedBottomRight: '4px',\n                };\n              }\n\n              return (\n                <Box\n                  py=\"0.4rem\"\n                  width=\"94px\"\n                  fontWeight=\"500\"\n                  cursor=\"pointer\"\n                  textAlign=\"center\"\n                  fontSize=\"0.875rem\"\n                  borderRightWidth={isLast ? '0' : '1px'}\n                  onClick={() => onTabChange(item.value)}\n                  color={selectedTab === item.value ? 'white' : 'black'}\n                  backgroundColor={selectedTab === item.value ? 'blue.500' : 'transparent'}\n                  {...borderRadiusStyles}\n                >\n                  {item.label}\n                </Box>\n              );\n            })}\n          </Stack>\n\n          <ListSearch\n            height=\"36px\"\n            focusWidth=\"150px\"\n            search_query={searchQuery ?? ''}\n            updateSearchQuery={onSearch}\n          />\n        </Stack>\n        <Stack isInline alignItems=\"center\">\n          <Stack isInline alignItems=\"center\">\n            <Text fontSize=\"0.8rem\" fontWeight={500} color=\"gray.900\">\n              Viewing {start}-{total_count < end ? total_count : end} of {total_count}\n            </Text>\n            <CampaignTablePagination\n              page={page}\n              onClick={onPagination}\n              metaData={{\n                pageCount: CAMPAIGN_LIST_LIMIT,\n                noOfPages: Math.ceil(total_count / CAMPAIGN_LIST_LIMIT),\n              }}\n            />\n          </Stack>\n        </Stack>\n      </Box>\n      {isLoading ? (\n        <Stack>\n          {Array.from({ length: 15 }, (v, i) => (\n            <Stack\n              isInline\n              px=\"1rem\"\n              pt=\"1rem\"\n              borderTopWidth=\"1px\"\n              key={`${i.toString()}-${new Date().getTime()}`}\n            >\n              <Box width={['calc(33.33% - 1rem)', 'calc(50% - 1rem)', 'calc(33.33% - 1rem)']}>\n                <Skeleton height=\"10px\" width=\"80%\" my=\"10px\" />\n                <Skeleton height=\"10px\" width=\"50%\" my=\"10px\" />\n                <Skeleton height=\"10px\" width=\"25%\" my=\"10px\" />\n              </Box>\n              <Flex\n                justifyContent=\"flex-end\"\n                width={['calc(33.33% - 1rem)', 'calc(50% - 1rem)', 'calc(33.33% - 1rem)']}\n              >\n                <Skeleton height=\"10px\" width=\"60px\" my=\"10px\" />\n              </Flex>\n              <Flex\n                justifyContent=\"flex-end\"\n                width={['calc(33.33% - 1rem)', 'calc(50% - 1rem)', 'calc(33.33% - 1rem)']}\n              >\n                <Skeleton height=\"10px\" width=\"60px\" my=\"10px\" />\n              </Flex>\n            </Stack>\n          ))}\n        </Stack>\n      ) : (\n        <Box>\n          {!campaignsList?.length ? (\n            <EmptyState\n              py=\"100px\"\n              imageSize=\"120px\"\n              image={emptyClipImage}\n              heading=\"No campaigns created yet\"\n              contentContainerProps={{ mt: '1rem' }}\n              subheading=\"Send campaigns to your lists, segments or new audiences.\"\n            />\n          ) : (\n            campaignsList?.map(campaign => (\n              <CampaignListItem\n                key={campaign.id}\n                campaign={campaign}\n                isLoading={isLoading}\n                getTableActions={getTableActions}\n              />\n            ))\n          )}\n        </Box>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}