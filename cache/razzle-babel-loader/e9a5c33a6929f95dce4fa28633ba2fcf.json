{"ast":null,"code":"var _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/component/notifications/NotificationsForm.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Radio, RadioGroup, Stack, Text } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport React from 'react';\nexport function NotificationsForm({\n  onSubmit,\n  initialValues,\n  isLoading\n}) {\n  const notificationOptions = [{\n    label: 'All notifications',\n    value: 'all'\n  }, {\n    label: 'Smart notifications',\n    value: 'smart'\n  }, {\n    label: 'No notifications',\n    value: 'no'\n  }];\n  const [smsNotifications, setSmsNotifications] = React.useState((initialValues === null || initialValues === void 0 ? void 0 : initialValues.smsNotifications) || '');\n  const [emailNotifications, setEmailNotifications] = React.useState((initialValues === null || initialValues === void 0 ? void 0 : initialValues.emailNotifications) || '');\n\n  const handleSubmit = () => {\n    onSubmit && onSubmit({\n      emailNotifications,\n      smsNotifications\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    marginBottom: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    fontSize: \"1rem\",\n    color: \"#333333\",\n    marginBottom: \"1.5rem\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Email notifications\"), __jsx(RadioGroup, {\n    value: emailNotifications,\n    onChange: e => setEmailNotifications(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, notificationOptions.map((item, index) => __jsx(Radio, {\n    key: index,\n    value: item.value,\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, item.label)))), __jsx(Box, {\n    marginBottom: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    fontSize: \"1rem\",\n    color: \"#333333\",\n    marginBottom: \"1.5rem\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"SMS/mobile notifications\"), __jsx(RadioGroup, {\n    value: smsNotifications,\n    onChange: e => setSmsNotifications(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, notificationOptions.map((item, index) => __jsx(Radio, {\n    variantColor: \"blue\",\n    key: index,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, item.label)))), __jsx(Stack, {\n    isInline: true,\n    alignItems: \"center\",\n    marginBottom: \"4rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    variantColor: \"blue\",\n    isLoading: isLoading,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Save Details\")));\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/settings/component/notifications/NotificationsForm.tsx"],"names":["Box","Radio","RadioGroup","Stack","Text","Button","React","NotificationsForm","onSubmit","initialValues","isLoading","notificationOptions","label","value","smsNotifications","setSmsNotifications","useState","emailNotifications","setEmailNotifications","handleSubmit","e","target","map","item","index"],"mappings":"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","sourcesContent":["import { Box, Radio, RadioGroup, Stack, Text } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport React from 'react';\n\ntype FormValue = {\n  smsNotifications?: string;\n  emailNotifications?: string;\n};\n\nexport type NotificationsFormProps = {\n  isLoading?: boolean;\n  initialValues?: FormValue;\n  onSubmit?: (values: FormValue) => void;\n};\n\nexport function NotificationsForm({ onSubmit, initialValues, isLoading }: NotificationsFormProps) {\n  const notificationOptions = [\n    { label: 'All notifications', value: 'all' },\n    { label: 'Smart notifications', value: 'smart' },\n    { label: 'No notifications', value: 'no' },\n  ];\n  const [smsNotifications, setSmsNotifications] = React.useState(\n    initialValues?.smsNotifications || '',\n  );\n  const [emailNotifications, setEmailNotifications] = React.useState(\n    initialValues?.emailNotifications || '',\n  );\n\n  const handleSubmit = () => {\n    onSubmit && onSubmit({ emailNotifications, smsNotifications });\n  };\n\n  return (\n    <>\n      <Box marginBottom=\"1.5rem\">\n        <Text fontSize=\"1rem\" color=\"#333333\" marginBottom=\"1.5rem\" fontWeight=\"semibold\">\n          Email notifications\n        </Text>\n        <RadioGroup\n          value={emailNotifications}\n          onChange={e => setEmailNotifications(e.target.value)}\n        >\n          {notificationOptions.map((item, index) => (\n            <Radio key={index} value={item.value} variantColor=\"blue\">\n              {item.label}\n            </Radio>\n          ))}\n        </RadioGroup>\n      </Box>\n      <Box marginBottom=\"1.5rem\">\n        <Text fontSize=\"1rem\" color=\"#333333\" marginBottom=\"1.5rem\" fontWeight=\"semibold\">\n          SMS/mobile notifications\n        </Text>\n        <RadioGroup value={smsNotifications} onChange={e => setSmsNotifications(e.target.value)}>\n          {notificationOptions.map((item, index) => (\n            <Radio variantColor=\"blue\" key={index} value={item.value}>\n              {item.label}\n            </Radio>\n          ))}\n        </RadioGroup>\n      </Box>\n      <Stack isInline alignItems=\"center\" marginBottom=\"4rem\">\n        <Button size=\"sm\" variantColor=\"blue\" isLoading={isLoading} onSubmit={handleSubmit}>\n          Save Details\n        </Button>\n      </Stack>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}