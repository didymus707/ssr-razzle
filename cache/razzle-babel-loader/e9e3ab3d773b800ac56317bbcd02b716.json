{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/reports/components/generate-report-modal.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, FormControl, FormErrorMessage, FormLabel, ModalBody, ModalCloseButton, Stack, Text } from '@chakra-ui/core';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { DatePickerComponent, ModalContainer, Input, Button } from 'app/components';\nexport const GenerateReportModal = props => {\n  const {\n    isOpen,\n    onClose,\n    onSubmit,\n    initialValues\n  } = props;\n  const {\n    touched,\n    values,\n    errors,\n    isSubmitting,\n    submitForm,\n    setFieldValue,\n    handleChange\n  } = useFormik({\n    onSubmit,\n    initialValues: initialValues ? initialValues : {\n      recipient: '',\n      to: undefined,\n      from: undefined\n    },\n    validationSchema: yup.object().shape({\n      to: yup.date().required('End date is required'),\n      from: yup.date().required('Start date is required'),\n      recipient: yup.string().email('Invalid email format').required('Recipient email is required')\n    })\n  });\n  return __jsx(ModalContainer, {\n    size: \"sm\",\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"Generate a Report\",\n    titleStyleProps: {\n      pb: '0',\n      fontSize: '1.2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(ModalCloseButton, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(ModalBody, {\n    pt: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    pb: \"1.5rem\",\n    fontSize: \"0.8rem\",\n    color: \"#4f4f4f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"When your report is ready, it will be sent to the email provided below.\"), __jsx(FormLabel, {\n    fontSize: \"0.875rem\",\n    color: \"#1a1a1a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Date Range\"), __jsx(Stack, {\n    isInline: true,\n    mb: \"1.5rem\",\n    spacing: ['0', '0', '1rem', '1rem'],\n    flexWrap: ['wrap', 'wrap', 'unset', 'unset'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: ['100%', '100%', '48%', '48%'],\n    mb: ['1.5rem', '1.5rem', '0', '0'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    isInvalid: !!touched.from && !!errors.from,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(DatePickerComponent, {\n    size: \"sm\",\n    value: values.from,\n    onDayChange: date => setFieldValue('from', date),\n    dayPickerProps: {\n      disabledDays: {\n        after: new Date()\n      }\n    },\n    isInvalid: !!touched.from && !!errors.from,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, errors.from))), __jsx(Box, {\n    width: ['100%', '100%', '48%'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    isInvalid: !!touched.to && !!errors.to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(DatePickerComponent, {\n    size: \"sm\",\n    value: values.to,\n    onDayChange: date => setFieldValue('to', date),\n    dayPickerProps: {\n      disabledDays: {\n        after: new Date()\n      }\n    },\n    isInvalid: !!touched.to && !!errors.to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, errors.to)))), __jsx(FormControl, {\n    mb: \"1.5rem\",\n    isInvalid: !!touched.recipient && !!errors.recipient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    fontSize: \"0.875rem\",\n    color: \"#1a1a1a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Recipient's Email\"), __jsx(Input, {\n    size: \"sm\",\n    type: \"email\",\n    id: \"recipient\",\n    name: \"recipient\",\n    value: values.recipient,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, errors.recipient))), __jsx(Flex, {\n    py: \"1rem\",\n    px: \"1.5rem\",\n    alignItems: \"center\",\n    borderTopWidth: \"1px\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    onClick: onClose,\n    variant: \"outline\",\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    size: \"sm\",\n    width: \"48%\",\n    variantColor: \"blue\",\n    onClick: submitForm,\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Generate\")));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/marketing/reports/components/generate-report-modal.tsx"],"names":["Box","Flex","FormControl","FormErrorMessage","FormLabel","ModalBody","ModalCloseButton","Stack","Text","yup","useFormik","React","DatePickerComponent","ModalContainer","Input","Button","GenerateReportModal","props","isOpen","onClose","onSubmit","initialValues","touched","values","errors","isSubmitting","submitForm","setFieldValue","handleChange","recipient","to","undefined","from","validationSchema","object","shape","date","required","string","email","pb","fontSize","disabledDays","after","Date"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  ModalBody,\n  ModalCloseButton,\n  Stack,\n  Text,\n} from '@chakra-ui/core';\nimport * as yup from 'yup';\nimport { FormikConfig, useFormik } from 'formik';\nimport React from 'react';\nimport {\n  DatePickerComponent,\n  ModalContainer,\n  ModalContainerOptions,\n  Input,\n  Button,\n} from 'app/components';\nimport { MarketingReportSchema } from '../../campaigns/campaigns.types';\n\ntype GenerateReportModalProps = {\n  initialValues?: Pick<MarketingReportSchema, 'from' | 'recipient' | 'to'>;\n  onSubmit: FormikConfig<Pick<MarketingReportSchema, 'from' | 'recipient' | 'to'>>['onSubmit'];\n} & ModalContainerOptions;\n\nexport const GenerateReportModal = (props: GenerateReportModalProps) => {\n  const { isOpen, onClose, onSubmit, initialValues } = props;\n  const {\n    touched,\n    values,\n    errors,\n    isSubmitting,\n    submitForm,\n    setFieldValue,\n    handleChange,\n  } = useFormik({\n    onSubmit,\n    initialValues: initialValues\n      ? initialValues\n      : {\n          recipient: '',\n          to: undefined,\n          from: undefined,\n        },\n    validationSchema: yup.object().shape({\n      to: yup.date().required('End date is required'),\n      from: yup.date().required('Start date is required'),\n      recipient: yup.string().email('Invalid email format').required('Recipient email is required'),\n    }),\n  });\n\n  return (\n    <ModalContainer\n      size=\"sm\"\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Generate a Report\"\n      titleStyleProps={{ pb: '0', fontSize: '1.2rem' }}\n    >\n      <ModalCloseButton size=\"sm\" />\n      <ModalBody pt=\"0\">\n        <Text pb=\"1.5rem\" fontSize=\"0.8rem\" color=\"#4f4f4f\">\n          When your report is ready, it will be sent to the email provided below.\n        </Text>\n        <FormLabel fontSize=\"0.875rem\" color=\"#1a1a1a\">\n          Date Range\n        </FormLabel>\n        <Stack\n          isInline\n          mb=\"1.5rem\"\n          spacing={['0', '0', '1rem', '1rem']}\n          flexWrap={['wrap', 'wrap', 'unset', 'unset']}\n        >\n          <Box width={['100%', '100%', '48%', '48%']} mb={['1.5rem', '1.5rem', '0', '0']}>\n            <FormControl isInvalid={!!touched.from && !!errors.from}>\n              <DatePickerComponent\n                size=\"sm\"\n                value={values.from}\n                onDayChange={date => setFieldValue('from', date)}\n                dayPickerProps={{ disabledDays: { after: new Date() } }}\n                isInvalid={!!touched.from && !!errors.from}\n              />\n              <FormErrorMessage>{errors.from}</FormErrorMessage>\n            </FormControl>\n          </Box>\n          <Box width={['100%', '100%', '48%']}>\n            <FormControl isInvalid={!!touched.to && !!errors.to}>\n              <DatePickerComponent\n                size=\"sm\"\n                value={values.to}\n                onDayChange={date => setFieldValue('to', date)}\n                dayPickerProps={{ disabledDays: { after: new Date() } }}\n                isInvalid={!!touched.to && !!errors.to}\n              />\n              <FormErrorMessage>{errors.to}</FormErrorMessage>\n            </FormControl>\n          </Box>\n        </Stack>\n        <FormControl mb=\"1.5rem\" isInvalid={!!touched.recipient && !!errors.recipient}>\n          <FormLabel fontSize=\"0.875rem\" color=\"#1a1a1a\">\n            Recipient's Email\n          </FormLabel>\n          <Input\n            size=\"sm\"\n            type=\"email\"\n            id=\"recipient\"\n            name=\"recipient\"\n            value={values.recipient}\n            onChange={handleChange}\n          />\n          <FormErrorMessage>{errors.recipient}</FormErrorMessage>\n        </FormControl>\n      </ModalBody>\n      <Flex\n        py=\"1rem\"\n        px=\"1.5rem\"\n        alignItems=\"center\"\n        borderTopWidth=\"1px\"\n        justifyContent=\"space-between\"\n      >\n        <Button size=\"sm\" width=\"48%\" onClick={onClose} variant=\"outline\" variantColor=\"blue\">\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          width=\"48%\"\n          variantColor=\"blue\"\n          onClick={submitForm}\n          isLoading={isSubmitting}\n        >\n          Generate\n        </Button>\n      </Flex>\n    </ModalContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}