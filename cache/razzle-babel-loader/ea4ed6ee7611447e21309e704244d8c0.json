{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/settings/component/teams/TeamForm.tsx\";\nvar __jsx = React.createElement;\nimport { Box, FormControl, FormErrorMessage, FormLabel, Stack } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { CirclePicker } from 'react-color';\nimport * as yup from 'yup';\nimport { Input } from 'app/components';\nconst validationSchema = yup.object().shape({\n  name: yup.string().trim().required('Team name is required'),\n  color: yup.string().trim().required('Color is required')\n});\nexport function TeamForm({\n  onClose,\n  onSubmit,\n  isLoading,\n  initialValues\n}) {\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const handleSubmit = values => {\n    onSubmit && onSubmit(values, formik.resetForm);\n  };\n\n  const handleClose = () => {\n    formik.resetForm();\n    onClose && onClose();\n  };\n\n  const formik = useFormik({\n    validationSchema,\n    initialValues: initialValues || {\n      name: '',\n      color: '#f44336'\n    },\n    onSubmit: handleSubmit\n  });\n  return __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    marginBottom: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(FormControl, {\n    isInvalid: !!formik.touched.name && !!formik.errors.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    color: \"#333333\",\n    fontSize: \"0.875rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Team Name\"), __jsx(Input, {\n    size: \"sm\",\n    name: \"name\",\n    ref: inputRef,\n    value: formik.values.name,\n    onChange: formik.handleChange,\n    placeholder: \"Give your team a name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, formik.errors.name))), __jsx(Box, {\n    marginBottom: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(FormControl, {\n    isInvalid: !!formik.touched.color && !!formik.errors.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    color: \"#333333\",\n    fontSize: \"0.875rem\",\n    marginBottom: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Team Colour\"), __jsx(CirclePicker, {\n    color: formik.values.color,\n    width: \"100%\",\n    circleSize: 36,\n    onChangeComplete: color => {\n      formik.setFieldValue('color', color.hex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))), __jsx(Stack, {\n    marginY: \"1.25rem\",\n    isInline: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    type: \"button\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    size: \"sm\",\n    type: \"submit\",\n    isLoading: isLoading,\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/settings/component/teams/TeamForm.tsx"],"names":["Box","FormControl","FormErrorMessage","FormLabel","Stack","Button","useFormik","React","CirclePicker","yup","Input","validationSchema","object","shape","name","string","trim","required","color","TeamForm","onClose","onSubmit","isLoading","initialValues","inputRef","useRef","useEffect","current","focus","handleSubmit","values","formik","resetForm","handleClose","touched","errors","handleChange","setFieldValue","hex"],"mappings":"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","sourcesContent":["import { Box, FormControl, FormErrorMessage, FormLabel, Stack } from '@chakra-ui/core';\nimport { Button } from 'app/components';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { CirclePicker } from 'react-color';\nimport * as yup from 'yup';\nimport { ModalContainerOptions, Input } from 'app/components';\nimport { Team } from '../../settings.types';\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().trim().required('Team name is required'),\n  color: yup.string().trim().required('Color is required'),\n});\n\nexport type TeamFormValues = yup.InferType<typeof validationSchema> & { id?: Team['id'] };\n\nexport type TeamFormProps = {\n  isLoading?: boolean;\n  initialValues?: TeamFormValues | Team | null;\n  onSubmit?(values: TeamFormValues | Team, callback: () => void): void;\n  onClose: ModalContainerOptions['onClose'];\n};\n\nexport function TeamForm({ onClose, onSubmit, isLoading, initialValues }: TeamFormProps) {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const handleSubmit = (values: TeamFormValues | Team) => {\n    onSubmit && onSubmit(values, formik.resetForm);\n  };\n\n  const handleClose = () => {\n    formik.resetForm();\n    onClose && onClose();\n  };\n\n  const formik = useFormik<TeamFormValues | Team>({\n    validationSchema,\n    initialValues: initialValues || {\n      name: '',\n      color: '#f44336',\n    },\n    onSubmit: handleSubmit,\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Box marginBottom=\"1.5rem\">\n        <FormControl isInvalid={!!formik.touched.name && !!formik.errors.name}>\n          <FormLabel color=\"#333333\" fontSize=\"0.875rem\">\n            Team Name\n          </FormLabel>\n          <Input\n            size=\"sm\"\n            name=\"name\"\n            ref={inputRef}\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            placeholder=\"Give your team a name\"\n          />\n          <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\n        </FormControl>\n      </Box>\n      <Box marginBottom=\"2rem\">\n        <FormControl isInvalid={!!formik.touched.color && !!formik.errors.color}>\n          <FormLabel color=\"#333333\" fontSize=\"0.875rem\" marginBottom=\"20px\">\n            Team Colour\n          </FormLabel>\n          <CirclePicker\n            color={formik.values.color}\n            width=\"100%\"\n            circleSize={36}\n            onChangeComplete={color => {\n              formik.setFieldValue('color', color.hex);\n            }}\n          />\n        </FormControl>\n      </Box>\n      <Stack marginY=\"1.25rem\" isInline justifyContent=\"flex-end\">\n        <Button size=\"sm\" type=\"button\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button size=\"sm\" type=\"submit\" isLoading={isLoading} variantColor=\"blue\">\n          Save\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}