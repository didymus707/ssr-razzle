{"ast":null,"code":"import { client, buildConversationUrl } from '../../../utils';\nexport function getSupportedCountries(params) {\n  return client('', {\n    url: buildConversationUrl('phones/supported-countries')\n  });\n}\nexport function getRandomPhone(params) {\n  const {\n    countryCode\n  } = params;\n  return client('', {\n    url: buildConversationUrl('phones/random'),\n    data: {\n      countryCode\n    },\n    method: 'POST'\n  });\n}\nexport function filterPhones(params) {\n  const {\n    inRegion,\n    areaCode,\n    contains,\n    type,\n    countryCode,\n    country\n  } = params;\n  return client('', {\n    url: buildConversationUrl('phones/search'),\n    data: {\n      inRegion,\n      areaCode,\n      type,\n      contains,\n      countryCode,\n      country\n    },\n    method: 'POST'\n  });\n}\nexport function provisionPhone(params) {\n  const {\n    useCaseData,\n    phone,\n    user_id,\n    organisation_id\n  } = params;\n  return client('', {\n    url: buildConversationUrl(`phones/buy/${organisation_id}`),\n    data: {\n      useCaseData,\n      phone,\n      user_id\n    },\n    method: 'POST'\n  });\n}\nexport function getFBPages(params) {\n  const {\n    id\n  } = params;\n  return client('', {\n    url: buildConversationUrl(`auth/facebook-messenger/fb-pages/${id}`)\n  });\n}\nexport function choseAcctItem(params) {\n  const {\n    id,\n    itemID\n  } = params;\n  return client('', {\n    url: buildConversationUrl(`auth/accounts/${id}`),\n    data: {\n      itemID\n    },\n    method: 'POST'\n  });\n}\nexport function forceAdd(params) {\n  const {\n    id,\n    channel\n  } = params;\n  return client('', {\n    url: buildConversationUrl(`auth/temps/${id}`),\n    data: {\n      channel\n    },\n    method: 'POST'\n  });\n}\nexport function getTemp(params) {\n  const {\n    id,\n    channel\n  } = params;\n  return client('', {\n    url: buildConversationUrl(`auth/temps/${id}?channel=${channel}`)\n  });\n}","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/integrations/integrations.service.ts"],"names":["client","buildConversationUrl","getSupportedCountries","params","url","getRandomPhone","countryCode","data","method","filterPhones","inRegion","areaCode","contains","type","country","provisionPhone","useCaseData","phone","user_id","organisation_id","getFBPages","id","choseAcctItem","itemID","forceAdd","channel","getTemp"],"mappings":"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","sourcesContent":["import { AxiosRequestConfig } from 'axios'\nimport { client, buildConversationUrl } from '../../../utils'\n\nexport function getSupportedCountries(params?: AxiosRequestConfig['params']) {\n  return client('', { url: buildConversationUrl('phones/supported-countries') })\n}\n\nexport function getRandomPhone(params?: AxiosRequestConfig['params']) {\n  const { countryCode } = params;\n\n  return client('', {\n    url: buildConversationUrl('phones/random'),\n    data: { countryCode },\n    method: 'POST'\n  });\n}\n\nexport function filterPhones(params?: AxiosRequestConfig['params']) {\n  const {\n    inRegion, areaCode, contains, type, countryCode, country\n  } = params;\n\n  return client('', {\n    url: buildConversationUrl('phones/search'),\n    data: {\n      inRegion, areaCode, type, contains, countryCode, country\n    },\n    method: 'POST'\n  });\n}\n\nexport function provisionPhone(params?: AxiosRequestConfig['params']) {\n  const {\n    useCaseData, phone, user_id, organisation_id\n  } = params;\n\n  return client('', {\n    url: buildConversationUrl(`phones/buy/${organisation_id}`),\n    data: { useCaseData, phone, user_id },\n    method: 'POST'\n  });\n}\n\nexport function getFBPages(params?: AxiosRequestConfig['params']) {\n  const { id } = params;\n\n  return client('', { url: buildConversationUrl(`auth/facebook-messenger/fb-pages/${id}`) });\n}\n\nexport function choseAcctItem(params?: AxiosRequestConfig['params']) {\n  const { id, itemID } = params;\n\n  return client('', {\n    url: buildConversationUrl(`auth/accounts/${id}`),\n    data: { itemID },\n    method: 'POST'\n  });\n}\n\nexport function forceAdd(params?: AxiosRequestConfig['params']) {\n  const { id, channel } = params;\n\n  return client('', {\n    url: buildConversationUrl(`auth/temps/${id}`),\n    data: { channel },\n    method: 'POST'\n  });\n}\n\nexport function getTemp(params?: AxiosRequestConfig['params']) {\n  const { id, channel } = params;\n\n  return client('', { url: buildConversationUrl(`auth/temps/${id}?channel=${channel}`) });\n}\n"]},"metadata":{},"sourceType":"module"}