{"ast":null,"code":"import _extends from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/public1/Documents/Projects/ssr-razzle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"id\", \"type\", \"name\", \"size\", \"label\", \"value\", \"onBlur\", \"onChange\", \"isInvalid\", \"isDisabled\", \"placeholder\", \"labelColor\"],\n      _excluded2 = [\"m\", \"ml\", \"mr\", \"mb\", \"mt\", \"mx\", \"my\", \"isInvalid\", \"isDisabled\", \"errorMessage\"];\nvar _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Textarea/index.tsx\";\nvar __jsx = React.createElement;\nimport { FormControl, FormErrorMessage, FormLabel as ChakraFormLabel, Textarea as ChakraTextarea } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { InputContainer } from '../Input';\nexport const SimpuTextarea = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    id,\n    type,\n    name,\n    size,\n    label,\n    value,\n    onBlur,\n    onChange,\n    isInvalid,\n    isDisabled,\n    placeholder,\n    labelColor = 'gray.900'\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(ChakraTextarea, _extends({\n    id: id,\n    ref: ref,\n    name: name,\n    type: type,\n    size: size,\n    value: value,\n    rounded: \"8px\",\n    onBlur: onBlur,\n    onChange: onChange,\n    isDisabled: isDisabled,\n    placeholder: placeholder,\n    backgroundColor: \"white\",\n    borderColor: \"gray.500\",\n    _disabled: {\n      opacity: 0.5,\n      cursor: 'not-allowed',\n      borderColor: 'gray.500'\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), label && __jsx(ChakraFormLabel, {\n    p: \"0 8px\",\n    top: \"-4px\",\n    left: \"16px\",\n    zIndex: 2,\n    opacity: 1,\n    htmlFor: id,\n    rounded: \"8px\",\n    fontWeight: \"400\",\n    color: labelColor,\n    fontSize: \"0.75rem\",\n    position: \"absolute\",\n    transition: \"all 200ms\",\n    backgroundColor: \"white\",\n    transform: \"translate3d(0, -30%, 0)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, label));\n});\nexport const Textarea = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    m,\n    ml,\n    mr,\n    mb,\n    mt,\n    mx,\n    my,\n    isInvalid,\n    isDisabled,\n    errorMessage\n  } = props,\n        rest = _objectWithoutProperties(props, _excluded2);\n\n  return __jsx(FormControl, {\n    m: m,\n    mx: mx,\n    my: my,\n    mb: mb,\n    ml: ml,\n    mr: mr,\n    mt: mt,\n    width: \"100%\",\n    isInvalid: isInvalid,\n    isDisabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(SimpuTextarea, _extends({\n    ref: ref\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  })), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, errorMessage));\n});","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/components/Textarea/index.tsx"],"names":["FormControl","FormErrorMessage","FormLabel","ChakraFormLabel","Textarea","ChakraTextarea","React","InputContainer","SimpuTextarea","forwardRef","ref","id","type","name","size","label","value","onBlur","onChange","isInvalid","isDisabled","placeholder","labelColor","props","opacity","cursor","borderColor","m","ml","mr","mb","mt","mx","my","errorMessage","rest"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  FormErrorMessage,\n  FormLabel as ChakraFormLabel,\n  Textarea as ChakraTextarea,\n} from '@chakra-ui/core';\nimport * as React from 'react';\nimport { InputContainer, InputProps } from '../Input';\n\nexport const SimpuTextarea = React.forwardRef(\n  (\n    {\n      id,\n      type,\n      name,\n      size,\n      label,\n      value,\n      onBlur,\n      onChange,\n      isInvalid,\n      isDisabled,\n      placeholder,\n      labelColor = 'gray.900',\n      ...props\n    }: InputProps,\n    ref: any,\n  ) => {\n    return (\n      <InputContainer>\n        <ChakraTextarea\n          id={id}\n          ref={ref}\n          name={name}\n          type={type}\n          size={size}\n          value={value}\n          rounded=\"8px\"\n          onBlur={onBlur}\n          onChange={onChange}\n          isDisabled={isDisabled}\n          placeholder={placeholder}\n          backgroundColor=\"white\"\n          borderColor=\"gray.500\"\n          _disabled={{\n            opacity: 0.5,\n            cursor: 'not-allowed',\n            borderColor: 'gray.500',\n          }}\n          {...props}\n        />\n        {label && (\n          <ChakraFormLabel\n            p=\"0 8px\"\n            top=\"-4px\"\n            left=\"16px\"\n            zIndex={2}\n            opacity={1}\n            htmlFor={id}\n            rounded=\"8px\"\n            fontWeight=\"400\"\n            color={labelColor}\n            fontSize=\"0.75rem\"\n            position=\"absolute\"\n            transition=\"all 200ms\"\n            backgroundColor=\"white\"\n            transform=\"translate3d(0, -30%, 0)\"\n          >\n            {label}\n          </ChakraFormLabel>\n        )}\n      </InputContainer>\n    );\n  },\n);\n\nexport const Textarea = React.forwardRef((props: InputProps, ref: any) => {\n  const { m, ml, mr, mb, mt, mx, my, isInvalid, isDisabled, errorMessage, ...rest } = props;\n\n  return (\n    <FormControl\n      m={m}\n      mx={mx}\n      my={my}\n      mb={mb}\n      ml={ml}\n      mr={mr}\n      mt={mt}\n      width=\"100%\"\n      isInvalid={isInvalid}\n      isDisabled={isDisabled}\n    >\n      <SimpuTextarea ref={ref} {...rest} />\n      <FormErrorMessage>{errorMessage}</FormErrorMessage>\n    </FormControl>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}