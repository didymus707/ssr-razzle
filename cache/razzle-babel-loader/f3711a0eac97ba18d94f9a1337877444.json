{"ast":null,"code":"import _objectSpread from \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/planner/planner.content.design.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Divider, Flex, FormControl, FormErrorMessage, Icon, IconButton, Popover, PopoverContent, PopoverTrigger, PseudoBox, Stack, Text, Tooltip, useDisclosure, useToast } from '@chakra-ui/core';\nimport { shortenLink } from 'app/authenticated-app/marketing/templates';\nimport { Button, ToastBox } from 'app/components';\nimport { selectOrganisationID } from 'app/unauthenticated-app/authentication';\nimport Picker from 'emoji-picker-react';\nimport { useFormik } from 'formik';\nimport { useLoading } from 'hooks';\nimport { isEmpty } from 'lodash';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { sendAmplitudeData } from '../../../../../../utils/amplitude';\nimport { Editable } from '../../../../marketing/templates/components/Editable';\nimport { html2Text } from '../../../../marketing/templates/templates.utils';\nimport { sendTestCampaignMessage } from '../../campaigns.service';\nimport { CampaignLinkModal } from './campaign-link-modal';\nimport { CampaignMetaModal } from './campaign-meta-modal';\nimport { PhoneContainer, SectionFooter } from './planner.layout';\nimport { TemplateSelectModal } from './template-select-modal';\nimport { TestMessageModal } from './test-message-modal';\nexport const PlannerContentDesign = ({\n  index,\n  onGoBack,\n  onSubmit,\n  fetchWallet,\n  onTabChange,\n  initialValues,\n  fetchTemplates,\n  credit_balance,\n  templateCategories,\n  continueButtonLabel,\n  fetchSampleTemplates,\n  handleUpdateTemplate,\n  goBackButtonLabel = 'Back'\n}) => {\n  const editableRef = /*#__PURE__*/React.createRef();\n  const designInitialValues = {\n    link: null,\n    content: null,\n    template_id: null\n  };\n  const [currentEmoji, setCurrentEmoji] = React.useState('');\n  const [smsCount, setSmsCount] = React.useState(0);\n  const [characterCount, setCharacterCount] = React.useState(0);\n  const [selectedTemplate, setSelectedTemplate] = React.useState();\n  const {\n    isOpen: testMessageModalIsOpen,\n    onOpen: onOpenTestMessageModal,\n    onClose: onCloseTestMessageModal\n  } = useDisclosure();\n  const {\n    isOpen: metaModalIsOpen,\n    onOpen: onOpenMetaModal,\n    onClose: onCloseMetaModal\n  } = useDisclosure();\n  const {\n    isOpen: campaignLinkModalIsOpen,\n    onOpen: onOpenCampaignLinkModal,\n    onClose: onCloseCampaignLinkModal\n  } = useDisclosure();\n  const {\n    isOpen: templateModalIsOpen,\n    onOpen: onOpenTemplateModal,\n    onClose: onCloseTemplateModal\n  } = useDisclosure();\n  const toast = useToast();\n  const {\n    loading,\n    dispatch\n  } = useLoading();\n  const validationSchema = yup.object().shape({\n    content: yup.string().when('template_id', {\n      is: value => !!value,\n      then: yup.string(),\n      otherwise: yup.string().max(160, '160 character limit exceeded').required('Campaign message is required')\n    }).nullable()\n  });\n\n  const getContent = value => {\n    if (value) {\n      if (typeof value === 'string') {\n        return value;\n      } else {\n        var _value$content;\n\n        return (_value$content = value === null || value === void 0 ? void 0 : value.content) !== null && _value$content !== void 0 ? _value$content : '';\n      }\n    }\n\n    return '';\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    setFieldValue\n  } = useFormik({\n    validationSchema,\n    enableReinitialize: true,\n    initialValues: !isEmpty(initialValues) ? _objectSpread({}, initialValues) : designInitialValues,\n    onSubmit: values => {\n      if (values.template_id && selectedTemplate && (selectedTemplate === null || selectedTemplate === void 0 ? void 0 : selectedTemplate.template) !== values.content) {\n        handleUpdateTemplate(_objectSpread(_objectSpread({}, selectedTemplate), {}, {\n          template: html2Text(getContent(values === null || values === void 0 ? void 0 : values.content))\n        }));\n      }\n\n      onSubmit(_objectSpread(_objectSpread({}, values), {}, {\n        content: html2Text(getContent(values.content))\n      }));\n    }\n  });\n  const isInvalid = !!touched.content && !!errors.content;\n\n  function getCharacterCount(value) {\n    const characterCount = value.length;\n    const smsCount = Math.ceil(characterCount / 160);\n    setCharacterCount(characterCount);\n    setSmsCount(smsCount);\n  }\n\n  function handleChange(value) {\n    getCharacterCount(value);\n    setFieldValue('content', value);\n    onTabChange === null || onTabChange === void 0 ? void 0 : onTabChange(index !== null && index !== void 0 ? index : 0, _objectSpread(_objectSpread({}, values), {}, {\n      content: value\n    }));\n  }\n\n  function onEmojiClick(event, emojiObject) {\n    setCurrentEmoji(emojiObject.emoji);\n    sendAmplitudeData('campaignEmojiAdded');\n  }\n\n  const organisationId = useSelector(selectOrganisationID);\n\n  function handleOpenCampaignLinkModal() {\n    onCloseMetaModal();\n    onOpenCampaignLinkModal();\n  }\n\n  function handleOpenTemplateModal() {\n    onCloseMetaModal();\n    onOpenTemplateModal();\n  }\n\n  function handleSelectTemplate(data) {\n    const {\n      id,\n      type,\n      name,\n      template\n    } = data;\n    setFieldValue('template_id', id);\n    setFieldValue('content', template);\n    setFieldValue('template_type', type);\n    sendAmplitudeData('campaignTemplateSelected', {\n      name,\n      type,\n      id\n    });\n    setSelectedTemplate(data);\n    onCloseTemplateModal();\n    onTabChange === null || onTabChange === void 0 ? void 0 : onTabChange(index !== null && index !== void 0 ? index : 0, {\n      template_id: id,\n      content: template\n    });\n  }\n\n  async function handleShortenLink({\n    link,\n    analytics\n  }) {\n    try {\n      dispatch({\n        type: 'LOADING_STARTED'\n      });\n      const response = await shortenLink({\n        link\n      });\n      const {\n        short: shortenedLink\n      } = response.data.link.link;\n      let content = '';\n      dispatch({\n        type: 'LOADING_RESOLVED'\n      });\n      onCloseCampaignLinkModal();\n\n      if (values.content) {\n        if (contentHasURL(getContent(values.content))) {\n          content = `${contentWithoutURL(getContent(values.content))}\\n${shortenedLink}`;\n        } else {\n          content = `${values.content}\\n${shortenedLink}`;\n        }\n      } else {\n        content = shortenedLink;\n      }\n\n      setFieldValue('link', link);\n      setFieldValue('analytics', analytics);\n      handleChange(content);\n      onTabChange === null || onTabChange === void 0 ? void 0 : onTabChange(index !== null && index !== void 0 ? index : 0, _objectSpread(_objectSpread({}, values), {}, {\n        link,\n        content\n      }));\n      sendAmplitudeData('campaignLinkAdded');\n    } catch (error) {\n      dispatch({\n        type: 'LOADING_RESOLVED'\n      });\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  }\n\n  const handleSendTestMessage = async ({\n    recipients\n  }, {\n    resetForm\n  }) => {\n    if (values.content) {\n      const payload = {\n        recipients,\n        // \n        sender_id: values.sender_id,\n        content: typeof values.content === 'string' ? values.content : values.content.content\n      };\n\n      try {\n        dispatch({\n          type: 'LOADING_STARTED'\n        });\n        await sendTestCampaignMessage(payload);\n        dispatch({\n          type: 'LOADING_RESOLVED'\n        });\n        organisationId && (await fetchWallet(organisationId));\n        onCloseTestMessageModal();\n        resetForm();\n        toast({\n          position: 'bottom-left',\n          render: ({\n            onClose\n          }) => __jsx(ToastBox, {\n            status: \"success\",\n            onClose: onClose,\n            message: \"Test message sent successfully\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 13\n            }\n          })\n        });\n        sendAmplitudeData('campaignTestMessageSent');\n      } catch (error) {\n        dispatch({\n          type: 'LOADING_RESOLVED'\n        });\n        toast({\n          position: 'bottom-left',\n          render: ({\n            onClose\n          }) => __jsx(ToastBox, {\n            onClose: onClose,\n            message: error,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 36\n            }\n          })\n        });\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (values.content) {\n      if (typeof values.content === 'string') {\n        getCharacterCount(values.content);\n      } else {\n        getCharacterCount(values.content.content);\n      }\n    }\n\n    if (editableRef.current) {\n      editableRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [values.content]);\n  React.useEffect(() => {\n    if (currentEmoji) {\n      if (values.content) {\n        setFieldValue('content', `${values.content}${currentEmoji}`);\n      } else {\n        setFieldValue('content', currentEmoji);\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [currentEmoji]);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"left-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    isInvalid: isInvalid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    p: \"0.5rem\",\n    borderWidth: \"1px\",\n    borderRadius: \"8px\",\n    borderColor: isInvalid ? '#e53e3e' : '#e2e8f0',\n    boxShadow: isInvalid ? '0 0 0 1px #e53e3e' : 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, __jsx(Flex, {\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    pb: \"0.5rem\",\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, __jsx(Editable, {\n    onBlur: handleChange // innerRef={editableRef}\n    ,\n    onChange: handleChange,\n    placeholder: \"Write here...\",\n    value: getContent(values.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  })), __jsx(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, __jsx(PseudoBox, {\n    as: \"span\",\n    fontSize: \"0.7rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }, characterCount), __jsx(Divider, {\n    mx: \"0.4rem\",\n    height: \"0.75rem\",\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 19\n    }\n  }), __jsx(PseudoBox, {\n    as: \"span\",\n    fontSize: \"0.7rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, smsCount, \" SMS\"))), __jsx(Stack, {\n    pt: \"0.5rem\",\n    isInline: true,\n    borderTopWidth: \"1px\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, __jsx(Tooltip, {\n    hasArrow: true,\n    placement: \"top\",\n    \"aria-label\": \"add\",\n    label: \"Add link/use template\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }, __jsx(IconButton, {\n    size: \"xs\",\n    rounded: \"8px\",\n    icon: \"small-add\",\n    \"aria-label\": \"add\",\n    variant: \"outline\",\n    variantColor: \"blue\",\n    onClick: onOpenMetaModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }))), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, __jsx(Popover, {\n    placement: \"bottom-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  }, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    variant: \"outline\",\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 23\n    }\n  }, __jsx(Tooltip, {\n    hasArrow: true,\n    label: \"Emoji\",\n    placement: \"top\",\n    \"aria-label\": \"emoji\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 25\n    }\n  }, __jsx(Icon, {\n    name: \"happy\",\n    size: \"0.8rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 27\n    }\n  })))), __jsx(PopoverContent, {\n    width: \"auto\",\n    zIndex: 4,\n    boxShadow: \"0px 5px 20px rgba(21, 27, 38, 0.08)\",\n    _focus: {\n      boxShadow: '0px 5px 20px rgba(21, 27, 38, 0.08)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }\n  }, __jsx(Picker, {\n    onEmojiClick: onEmojiClick,\n    preload: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 23\n    }\n  })))))), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, errors.content)), __jsx(SectionFooter, {\n    onGoBack: onGoBack,\n    onContinue: handleSubmit,\n    goBackLabel: goBackButtonLabel !== null && goBackButtonLabel !== void 0 ? goBackButtonLabel : '',\n    continueLabel: continueButtonLabel !== null && continueButtonLabel !== void 0 ? continueButtonLabel : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    className: \"right-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, __jsx(PhoneContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, values.content && __jsx(React.Fragment, null, __jsx(Box, {\n    mb: \"1rem\",\n    flex: 1,\n    maxH: \"calc(100% - 140px)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    p: \"0.5rem\",\n    maxH: \"100%\",\n    width: \"100%\",\n    bg: \"#f3f3f3\",\n    overflowY: \"auto\",\n    borderRadius: \"8px\",\n    wordBreak: \"break-word\",\n    whiteSpace: \"pre-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    fontSize: \"0.75rem\",\n    color: \"color.700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 21\n    }\n  }, html2Text(getContent(values.content))))), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    isFullWidth: true,\n    variant: \"outline\",\n    variantColor: \"blue\",\n    onClick: onOpenTestMessageModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 19\n    }\n  }, \"Send test message\")))))), __jsx(TestMessageModal, {\n    credit_balance: credit_balance,\n    isOpen: testMessageModalIsOpen,\n    onSubmit: handleSendTestMessage,\n    onClose: onCloseTestMessageModal,\n    isLoading: loading === 'pending',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }\n  }), __jsx(TemplateSelectModal, {\n    goBack: onOpenMetaModal,\n    isOpen: templateModalIsOpen,\n    onClose: onCloseTemplateModal,\n    categories: templateCategories,\n    fetchTemplates: fetchTemplates,\n    selectedTemplate: values.template_id,\n    onSelectTemplate: handleSelectTemplate,\n    fetchSampleTemplates: fetchSampleTemplates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }\n  }), __jsx(CampaignLinkModal, {\n    goBack: onOpenMetaModal,\n    onSubmit: handleShortenLink,\n    isOpen: campaignLinkModalIsOpen,\n    isLoading: loading === 'pending',\n    onClose: onCloseCampaignLinkModal,\n    initialValues: {\n      link: initialValues === null || initialValues === void 0 ? void 0 : initialValues.link\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }\n  }), __jsx(CampaignMetaModal, {\n    isOpen: metaModalIsOpen,\n    onClose: onCloseMetaModal,\n    options: [{\n      icon: 'copy',\n      title: 'Templates',\n      onSelect: handleOpenTemplateModal,\n      caption: 'Use your custom templates or one of our prewritten ones.'\n    }, {\n      icon: 'link',\n      title: 'Short link',\n      onSelect: handleOpenCampaignLinkModal,\n      caption: 'A shortened link that redirects recipients to an expanded URL'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction contentHasURL(content) {\n  return !!content.split('\\n').filter(item => item.startsWith('http')).length;\n}\n\nfunction contentWithoutURL(content) {\n  return content.split('\\n').filter(item => !item.startsWith('http')).join('');\n}","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/authenticated-app/marketing/campaigns/components/planner/planner.content.design.tsx"],"names":["Box","Divider","Flex","FormControl","FormErrorMessage","Icon","IconButton","Popover","PopoverContent","PopoverTrigger","PseudoBox","Stack","Text","Tooltip","useDisclosure","useToast","shortenLink","Button","ToastBox","selectOrganisationID","Picker","useFormik","useLoading","isEmpty","React","useSelector","yup","sendAmplitudeData","Editable","html2Text","sendTestCampaignMessage","CampaignLinkModal","CampaignMetaModal","PhoneContainer","SectionFooter","TemplateSelectModal","TestMessageModal","PlannerContentDesign","index","onGoBack","onSubmit","fetchWallet","onTabChange","initialValues","fetchTemplates","credit_balance","templateCategories","continueButtonLabel","fetchSampleTemplates","handleUpdateTemplate","goBackButtonLabel","editableRef","createRef","designInitialValues","link","content","template_id","currentEmoji","setCurrentEmoji","useState","smsCount","setSmsCount","characterCount","setCharacterCount","selectedTemplate","setSelectedTemplate","isOpen","testMessageModalIsOpen","onOpen","onOpenTestMessageModal","onClose","onCloseTestMessageModal","metaModalIsOpen","onOpenMetaModal","onCloseMetaModal","campaignLinkModalIsOpen","onOpenCampaignLinkModal","onCloseCampaignLinkModal","templateModalIsOpen","onOpenTemplateModal","onCloseTemplateModal","toast","loading","dispatch","validationSchema","object","shape","string","when","is","value","then","otherwise","max","required","nullable","getContent","values","errors","touched","handleSubmit","setFieldValue","enableReinitialize","template","isInvalid","getCharacterCount","length","Math","ceil","handleChange","onEmojiClick","event","emojiObject","emoji","organisationId","handleOpenCampaignLinkModal","handleOpenTemplateModal","handleSelectTemplate","data","id","type","name","handleShortenLink","analytics","response","short","shortenedLink","contentHasURL","contentWithoutURL","error","position","render","handleSendTestMessage","recipients","resetForm","payload","sender_id","useEffect","current","focus","boxShadow","icon","title","onSelect","caption","split","filter","item","startsWith","join"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Divider,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  Icon,\n  IconButton,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  PseudoBox,\n  Stack,\n  Text,\n  Tooltip,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/core';\nimport { shortenLink, TemplateData } from 'app/authenticated-app/marketing/templates';\nimport { Button, ToastBox } from 'app/components';\nimport { selectOrganisationID } from 'app/unauthenticated-app/authentication';\nimport Picker, { IEmojiData } from 'emoji-picker-react';\nimport { FormikHelpers, useFormik } from 'formik';\nimport { useLoading } from 'hooks';\nimport { isEmpty } from 'lodash';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { sendAmplitudeData } from '../../../../../../utils/amplitude';\nimport { Editable } from '../../../../marketing/templates/components/Editable';\nimport { html2Text } from '../../../../marketing/templates/templates.utils';\nimport { sendTestCampaignMessage } from '../../campaigns.service';\nimport { CampaignVariant } from '../../campaigns.types';\nimport { CampaignLinkModal } from './campaign-link-modal';\nimport { CampaignMetaModal } from './campaign-meta-modal';\nimport { DesignProps } from './planner.design';\nimport { CampaignPayload } from './planner.index';\nimport { PhoneContainer, SectionFooter } from './planner.layout';\nimport { TemplateSelectModal } from './template-select-modal';\nimport { TestMessageModal } from './test-message-modal';\n\nexport type PlannerContentDesignInitialValuesProp = {\n  content?: null | string | CampaignVariant;\n} & Pick<CampaignPayload, 'link' | 'template_id' | 'sender_id'>;\n\nexport type PlannerContentDesignProps = Pick<\n  DesignProps,\n  | 'fetchWallet'\n  | 'credit_balance'\n  | 'fetchTemplates'\n  | 'fetchSampleTemplates'\n  | 'onGoBack'\n  | 'goBackButtonLabel'\n  | 'continueButtonLabel'\n  | 'templateCategories'\n  | 'handleUpdateTemplate'\n> & {\n  index?: number;\n  initialValues: PlannerContentDesignInitialValuesProp;\n  onSubmit: (data: PlannerContentDesignInitialValuesProp) => void;\n  onTabChange?(index: number, values?: PlannerContentDesignInitialValuesProp): void;\n};\n\nexport const PlannerContentDesign = ({\n  index,\n  onGoBack,\n  onSubmit,\n  fetchWallet,\n  onTabChange,\n  initialValues,\n  fetchTemplates,\n  credit_balance,\n  templateCategories,\n  continueButtonLabel,\n  fetchSampleTemplates,\n  handleUpdateTemplate,\n  goBackButtonLabel = 'Back',\n}: PlannerContentDesignProps) => {\n  const editableRef = React.createRef<HTMLInputElement>();\n  const designInitialValues = {\n    link: null,\n    content: null,\n    template_id: null,\n  };\n  const [currentEmoji, setCurrentEmoji] = React.useState('');\n  const [smsCount, setSmsCount] = React.useState(0);\n  const [characterCount, setCharacterCount] = React.useState(0);\n  const [selectedTemplate, setSelectedTemplate] = React.useState<TemplateData | undefined>();\n\n  const {\n    isOpen: testMessageModalIsOpen,\n    onOpen: onOpenTestMessageModal,\n    onClose: onCloseTestMessageModal,\n  } = useDisclosure();\n  const {\n    isOpen: metaModalIsOpen,\n    onOpen: onOpenMetaModal,\n    onClose: onCloseMetaModal,\n  } = useDisclosure();\n  const {\n    isOpen: campaignLinkModalIsOpen,\n    onOpen: onOpenCampaignLinkModal,\n    onClose: onCloseCampaignLinkModal,\n  } = useDisclosure();\n  const {\n    isOpen: templateModalIsOpen,\n    onOpen: onOpenTemplateModal,\n    onClose: onCloseTemplateModal,\n  } = useDisclosure();\n  const toast = useToast();\n  const { loading, dispatch } = useLoading();\n\n  const validationSchema = yup.object().shape({\n    content: yup\n      .string()\n      .when('template_id', {\n        is: value => !!value,\n        then: yup.string(),\n        otherwise: yup\n          .string()\n          .max(160, '160 character limit exceeded')\n          .required('Campaign message is required'),\n      })\n      .nullable(),\n  });\n\n  const getContent = (value?: null | string | CampaignVariant): string => {\n    if (value) {\n      if (typeof value === 'string') {\n        return value;\n      } else {\n        return value?.content ?? '';\n      }\n    }\n    return '';\n  };\n\n  const { values, errors, touched, handleSubmit, setFieldValue } = useFormik({\n    validationSchema,\n    enableReinitialize: true,\n    initialValues: !isEmpty(initialValues) ? { ...initialValues } : designInitialValues,\n\n    onSubmit: values => {\n      if (values.template_id && selectedTemplate && selectedTemplate?.template !== values.content) {\n        handleUpdateTemplate({\n          ...selectedTemplate,\n          template: html2Text(getContent(values?.content)),\n        });\n      }\n      onSubmit({\n        ...values,\n        content: html2Text(getContent(values.content)),\n      });\n    },\n  });\n\n  const isInvalid = !!touched.content && !!errors.content;\n\n  function getCharacterCount(value: string) {\n    const characterCount = value.length;\n    const smsCount = Math.ceil(characterCount / 160);\n\n    setCharacterCount(characterCount);\n    setSmsCount(smsCount);\n  }\n\n  function handleChange(value: string) {\n    getCharacterCount(value);\n    setFieldValue('content', value);\n    onTabChange?.(index ?? 0, { ...values, content: value });\n  }\n\n  function onEmojiClick(event: React.MouseEvent<Element, MouseEvent>, emojiObject: IEmojiData) {\n    setCurrentEmoji(emojiObject.emoji);\n    sendAmplitudeData('campaignEmojiAdded');\n  }\n\n  const organisationId = useSelector(selectOrganisationID);\n\n  function handleOpenCampaignLinkModal() {\n    onCloseMetaModal();\n    onOpenCampaignLinkModal();\n  }\n\n  function handleOpenTemplateModal() {\n    onCloseMetaModal();\n    onOpenTemplateModal();\n  }\n\n  function handleSelectTemplate(data: TemplateData) {\n    const { id, type, name, template } = data;\n    setFieldValue('template_id', id);\n    setFieldValue('content', template);\n    setFieldValue('template_type', type);\n    sendAmplitudeData('campaignTemplateSelected', { name, type, id });\n    setSelectedTemplate(data);\n    onCloseTemplateModal();\n    onTabChange?.(index ?? 0, { template_id: id, content: template });\n  }\n\n  async function handleShortenLink({ link, analytics }: any) {\n    try {\n      dispatch({ type: 'LOADING_STARTED' });\n      const response = await shortenLink({ link });\n      const { short: shortenedLink } = response.data.link.link;\n      let content = '';\n\n      dispatch({ type: 'LOADING_RESOLVED' });\n      onCloseCampaignLinkModal();\n      if (values.content) {\n        if (contentHasURL(getContent(values.content))) {\n          content = `${contentWithoutURL(getContent(values.content))}\\n${shortenedLink}`;\n        } else {\n          content = `${values.content}\\n${shortenedLink}`;\n        }\n      } else {\n        content = shortenedLink;\n      }\n      setFieldValue('link', link);\n      setFieldValue('analytics', analytics);\n      handleChange(content);\n      onTabChange?.(index ?? 0, { ...values, link, content });\n      sendAmplitudeData('campaignLinkAdded');\n    } catch (error) {\n      dispatch({ type: 'LOADING_RESOLVED' });\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  }\n\n  const handleSendTestMessage = async (\n    { recipients }: { recipients: string },\n    { resetForm }: FormikHelpers<{ recipients: string }>,\n  ) => {\n    if (values.content) {\n      const payload = {\n        recipients,\n        // \n        sender_id: values.sender_id,\n        content: typeof values.content === 'string' ? values.content : values.content.content,\n      };\n      try {\n        dispatch({ type: 'LOADING_STARTED' });\n        await sendTestCampaignMessage(payload);\n        dispatch({ type: 'LOADING_RESOLVED' });\n        organisationId && (await fetchWallet(organisationId));\n        onCloseTestMessageModal();\n        resetForm();\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => (\n            <ToastBox status=\"success\" onClose={onClose} message=\"Test message sent successfully\" />\n          ),\n        });\n        sendAmplitudeData('campaignTestMessageSent');\n      } catch (error) {\n        dispatch({ type: 'LOADING_RESOLVED' });\n        toast({\n          position: 'bottom-left',\n          render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n        });\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (values.content) {\n      if (typeof values.content === 'string') {\n        getCharacterCount(values.content);\n      } else {\n        getCharacterCount(values.content.content);\n      }\n    }\n    if (editableRef.current) {\n      editableRef.current.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.content]);\n\n  React.useEffect(() => {\n    if (currentEmoji) {\n      if (values.content) {\n        setFieldValue('content', `${values.content}${currentEmoji}`);\n      } else {\n        setFieldValue('content', currentEmoji);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentEmoji]);\n\n  return (\n    <>\n      <Box className=\"content\">\n        <Box className=\"left-section\">\n          <FormControl isInvalid={isInvalid}>\n            <Box\n              p=\"0.5rem\"\n              borderWidth=\"1px\"\n              borderRadius=\"8px\"\n              borderColor={isInvalid ? '#e53e3e' : '#e2e8f0'}\n              boxShadow={isInvalid ? '0 0 0 1px #e53e3e' : 'none'}\n            >\n              <Flex flexDirection=\"column\">\n                <Box pb=\"0.5rem\" flex={1}>\n                  <Editable\n                    onBlur={handleChange}\n                    // innerRef={editableRef}\n                    onChange={handleChange}\n                    placeholder=\"Write here...\"\n                    value={getContent(values.content)}\n                  />\n                </Box>\n                <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n                  <PseudoBox as=\"span\" fontSize=\"0.7rem\">\n                    {characterCount}\n                  </PseudoBox>\n                  <Divider mx=\"0.4rem\" height=\"0.75rem\" orientation=\"vertical\" />\n                  <PseudoBox as=\"span\" fontSize=\"0.7rem\">\n                    {smsCount} SMS\n                  </PseudoBox>\n                </Flex>\n              </Flex>\n              <Stack pt=\"0.5rem\" isInline borderTopWidth=\"1px\" alignItems=\"center\">\n                <Box>\n                  <Tooltip hasArrow placement=\"top\" aria-label=\"add\" label=\"Add link/use template\">\n                    <IconButton\n                      size=\"xs\"\n                      rounded=\"8px\"\n                      icon=\"small-add\"\n                      aria-label=\"add\"\n                      variant=\"outline\"\n                      variantColor=\"blue\"\n                      onClick={onOpenMetaModal}\n                    />\n                  </Tooltip>\n                </Box>\n                <Box>\n                  <Popover placement=\"bottom-end\">\n                    <PopoverTrigger>\n                      <Button size=\"xs\" variant=\"outline\" variantColor=\"blue\">\n                        <Tooltip\n                          hasArrow\n                          label=\"Emoji\"\n                          placement=\"top\"\n                          aria-label=\"emoji\"\n                          shouldWrapChildren\n                        >\n                          <Icon name=\"happy\" size=\"0.8rem\" />\n                        </Tooltip>\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent\n                      width=\"auto\"\n                      zIndex={4}\n                      boxShadow=\"0px 5px 20px rgba(21, 27, 38, 0.08)\"\n                      _focus={{ boxShadow: '0px 5px 20px rgba(21, 27, 38, 0.08)' }}\n                    >\n                      <Picker onEmojiClick={onEmojiClick} preload={true} />\n                    </PopoverContent>\n                  </Popover>\n                </Box>\n              </Stack>\n            </Box>\n            <FormErrorMessage>{errors.content}</FormErrorMessage>\n          </FormControl>\n          <SectionFooter\n            onGoBack={onGoBack}\n            onContinue={handleSubmit}\n            goBackLabel={goBackButtonLabel ?? ''}\n            continueLabel={continueButtonLabel ?? ''}\n          />\n        </Box>\n        <Box className=\"right-section\">\n          <PhoneContainer>\n            {values.content && (\n              <>\n                <Box mb=\"1rem\" flex={1} maxH=\"calc(100% - 140px)\">\n                  <Box\n                    p=\"0.5rem\"\n                    maxH=\"100%\"\n                    width=\"100%\"\n                    bg=\"#f3f3f3\"\n                    overflowY=\"auto\"\n                    borderRadius=\"8px\"\n                    wordBreak=\"break-word\"\n                    whiteSpace=\"pre-line\"\n                  >\n                    <Text fontSize=\"0.75rem\" color=\"color.700\">\n                      {html2Text(getContent(values.content))}\n                    </Text>\n                  </Box>\n                </Box>\n                <Box>\n                  <Button\n                    size=\"sm\"\n                    isFullWidth\n                    variant=\"outline\"\n                    variantColor=\"blue\"\n                    onClick={onOpenTestMessageModal}\n                  >\n                    Send test message\n                  </Button>\n                </Box>\n              </>\n            )}\n          </PhoneContainer>\n        </Box>\n      </Box>\n      <TestMessageModal\n        credit_balance={credit_balance}\n        isOpen={testMessageModalIsOpen}\n        onSubmit={handleSendTestMessage}\n        onClose={onCloseTestMessageModal}\n        isLoading={loading === 'pending'}\n      />\n      <TemplateSelectModal\n        goBack={onOpenMetaModal}\n        isOpen={templateModalIsOpen}\n        onClose={onCloseTemplateModal}\n        categories={templateCategories}\n        fetchTemplates={fetchTemplates}\n        selectedTemplate={values.template_id}\n        onSelectTemplate={handleSelectTemplate}\n        fetchSampleTemplates={fetchSampleTemplates}\n      />\n      <CampaignLinkModal\n        goBack={onOpenMetaModal}\n        onSubmit={handleShortenLink}\n        isOpen={campaignLinkModalIsOpen}\n        isLoading={loading === 'pending'}\n        onClose={onCloseCampaignLinkModal}\n        initialValues={{ link: initialValues?.link }}\n      />\n      <CampaignMetaModal\n        isOpen={metaModalIsOpen}\n        onClose={onCloseMetaModal}\n        options={[\n          {\n            icon: 'copy',\n            title: 'Templates',\n            onSelect: handleOpenTemplateModal,\n            caption: 'Use your custom templates or one of our prewritten ones.',\n          },\n          {\n            icon: 'link',\n            title: 'Short link',\n            onSelect: handleOpenCampaignLinkModal,\n            caption: 'A shortened link that redirects recipients to an expanded URL',\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nfunction contentHasURL(content: string) {\n  return !!content.split('\\n').filter(item => item.startsWith('http')).length;\n}\n\nfunction contentWithoutURL(content: string) {\n  return content\n    .split('\\n')\n    .filter(item => !item.startsWith('http'))\n    .join('');\n}\n"]},"metadata":{},"sourceType":"module"}