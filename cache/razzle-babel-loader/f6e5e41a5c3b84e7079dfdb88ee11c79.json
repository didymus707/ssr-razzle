{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { RouteComponentProps } from \"react-router-dom\";\nimport { ConnectedProps } from \"react-redux\";\nimport { stateConnector } from \"./integrations.container\";\n\nexport type IntegrationProps = RouteComponentProps<{ id: string }> & ConnectedProps<typeof stateConnector>\n\nexport type PhoneSchema = {\n  friendly_name: string;\n  iso_country: string;\n  phone_number: string;\n  region: string | null;\n  locality?: string;\n  capabilities: string[];\n  type: string\n}\n\nexport type UseCaseDataSchema = {\n  company_name: string;\n  industry: string;\n  role: string;\n  company_size: string;\n}\n\nexport type FeatureSchema = {\n  left: string;\n  right?: string;\n}\n\nexport type IntegrationState = {\n  channel: string;\n  supported_countries: { country: string; country_code: string }[];\n  random_phone: PhoneSchema;\n  selected_phone_types: string[];\n  phones: PhoneSchema[];\n  use_case_data: UseCaseDataSchema;\n}\n\nexport type IntegrationCommonProps = RouteComponentProps<{ id: string }>;\n\nexport type ChannelIntegrationProps = IntegrationCommonProps & {\n  profile: IntegrationProps['profile'];\n  user: IntegrationProps['user'];\n  fetchSupportedChannels: IntegrationProps['fetchSupportedChannels'];\n  fetchFBPages: IntegrationProps['fetchFBPages'];\n  selectAcctItem: IntegrationProps['selectAcctItem'];\n  fetchTemp: IntegrationProps['fetchTemp'];\n  forceConnect: IntegrationProps['forceConnect'];\n}\n\nexport type SubscriptionProps = IntegrationCommonProps & {\n  random_phone: IntegrationProps['randomPhone'];\n  resetRandomPhone: IntegrationProps['resetRandomPhone'];\n  use_case_data: IntegrationProps['useCaseData'];\n  resetUseCaseData: IntegrationProps['resetUseCaseData'];\n  buyPhone: IntegrationProps['buyPhone'];\n  profile: IntegrationProps['profile'];\n  user: IntegrationProps['user'];\n}\n\nexport type PhoneIntegrationProps = IntegrationCommonProps & {\n  channel: string;\n  profile: IntegrationProps['profile'];\n  user: IntegrationProps['user'];\n}\n\nexport type PlatformIntegrationProps = IntegrationCommonProps & {\n  channel: string;\n}\n\nexport type ConnectedAccountDataProps = {\n  subHeading: string;\n  baseUrl?: string;\n  disconnectBtnText?: string;\n  organisation_id: string;\n}\n\nexport type ConnectedAccountProps = IntegrationCommonProps & {\n  disconnectAccount: (platform_nick: string, credential_id: string) => Promise<void>;\n  isDisconnectLoading: boolean;\n  isModalOpen: boolean;\n  handleModelOpen: (v: boolean) => void;\n  channel: string;\n  data: ConnectedAccountDataProps;\n}\n"]},"metadata":{},"sourceType":"module"}