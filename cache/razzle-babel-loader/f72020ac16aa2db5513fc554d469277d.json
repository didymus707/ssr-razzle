{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/messages/Chatbubble.tsx\";\nvar __jsx = React.createElement;\nimport { Accordion, AccordionHeader, AccordionIcon, AccordionItem, AccordionPanel, Box, Flex, Icon, Image, Link, PseudoBox, Spinner, Stack, Tooltip } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport { BodyText, Button, SmallText, Subtitle, TextWithLink, XSmallText } from 'app/components';\nimport React, { forwardRef } from 'react';\nimport { useQuery } from 'react-query';\nimport { numberWithCommas } from 'utils';\nimport { updateConversationNotificationStatus } from '../../inbox.service';\nimport { formatMessageDateTime, isOnlyEmoji } from '../../inbox.utils';\nimport { Attachment } from './Attachment';\nimport { Attachments } from './compose/Attachments';\nexport const Chatbubble = props => {\n  const {\n    thread,\n    message,\n    receiver,\n    timeViewRef,\n    onEmailReply,\n    onEmailForward,\n    onEmailReplyAll,\n    emailBubbleDefaultIndex\n  } = props;\n  const {\n    uuid,\n    author,\n    meta,\n    type,\n    content,\n    attachments,\n    status,\n    request\n  } = message;\n  const threadType = thread === null || thread === void 0 ? void 0 : thread.type; // const firstAttachment = attachments?.[0];\n\n  const hasAttachment = !!attachments && !!attachments.length; // const attachmentType = !!firstAttachment && firstAttachment.type;\n\n  const isChannelAcct = receiver.user_id === author.uuid; // const copyAttachmentText = `Copy link to ${attachmentType === 'image' ? 'image' : 'file'}`;\n\n  const isRhs = !author.is_customer || !!(isChannelAcct && (meta === null || meta === void 0 ? void 0 : meta.message_type) !== 'payment_received'); // const { onCopy } = useClipboard(firstAttachment?.data?.url);\n  // const onDownload = () => {\n  //   window.open(firstAttachment?.data?.url, '_blank');\n  // };\n  // const menuOptions = hasAttachment\n  //   ? !content?.body\n  //     ? [\n  //         { label: copyAttachmentText, onItemClick: onCopy },\n  //         { label: 'Download', onItemClick: onDownload },\n  //       ]\n  //     : [\n  //         { label: 'Reply', onItemClick: () => {} },\n  //         { label: copyAttachmentText, onItemClick: onCopy },\n  //         { label: 'Download', onItemClick: onDownload },\n  //       ]\n  //   : [{ label: 'Reply', onItemClick: () => {} }];\n\n  const renderBubbleContent = () => {\n    var _meta$message_type;\n\n    if (isOnlyEmoji(content === null || content === void 0 ? void 0 : content.body)) {\n      return __jsx(ChatContainer, {\n        isRhs: isRhs,\n        message: message,\n        threadType: threadType,\n        timeViewRef: timeViewRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, __jsx(Box, {\n        px: \"1rem\",\n        py: \"1.25rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, __jsx(SmallText, {\n        lineHeight: \"30px\",\n        fontSize: \"2rem\",\n        color: \"gray.900\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, content === null || content === void 0 ? void 0 : content.body)));\n    }\n\n    if (meta !== null && meta !== void 0 && (_meta$message_type = meta.message_type) !== null && _meta$message_type !== void 0 && _meta$message_type.includes('payment_')) {\n      const paymentLink = content.body.split('\\n')[1];\n      return __jsx(ChatContainer, {\n        isRhs: isRhs,\n        message: message,\n        threadType: threadType,\n        timeViewRef: timeViewRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, isRhs ? __jsx(Stack, {\n        px: \"1rem\",\n        py: \"1.25rem\",\n        isInline: true,\n        spacing: \"0.75rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, __jsx(Image, {\n        width: \"144px\",\n        src: \"/images/inbox/payment.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }), __jsx(Flex, {\n        position: \"relative\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, meta.message_type === 'payment_received' ? __jsx(BodyText, {\n        color: \"gray.900\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }, \"You Just Got\", ' ', __jsx(PseudoBox, {\n        as: \"span\",\n        color: \"blue.500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, \"Paid!!\")) : __jsx(BodyText, {\n        color: \"gray.900\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, \"You Just\", ' ', __jsx(PseudoBox, {\n        as: \"span\",\n        color: \"blue.500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"Requested\")), !!request && __jsx(Subtitle, {\n        color: \"blue.600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, __jsx(PseudoBox, {\n        as: \"span\",\n        fontWeight: \"1.25rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, request === null || request === void 0 ? void 0 : request.currency), ' ', numberWithCommas((request === null || request === void 0 ? void 0 : request.amount) / 100)), __jsx(Link, {\n        isExternal: true,\n        color: \"gray.900\",\n        href: paymentLink,\n        fontSize: \"0.75rem\",\n        fontWeight: \"medium\",\n        textDecoration: \"underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, \"View Details\"))) : __jsx(Box, {\n        px: \"1rem\",\n        py: \"1.25rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, __jsx(TextWithLink, {\n        wordBreak: \"break-word\",\n        text: content === null || content === void 0 ? void 0 : content.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      })));\n    }\n\n    if (receiver.channel_name === 'email') {\n      return __jsx(EmailContainer, {\n        isRhs: isRhs,\n        message: message,\n        receiver: receiver,\n        onReply: onEmailReply,\n        onForward: onEmailForward,\n        onReplyAll: onEmailReplyAll,\n        defaultIndex: emailBubbleDefaultIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (type === 'comment') {\n      return __jsx(CommentContainer, {\n        message: message,\n        threadType: threadType,\n        timeViewRef: timeViewRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, hasAttachment ? !!status ? __jsx(Attachment, {\n        isOrgUser: isRhs,\n        receiver: receiver,\n        attachments: attachments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }) : __jsx(Box, {\n        p: \"1rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, __jsx(Flex, {\n        rounded: \"8\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, __jsx(SmallText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }, \"Uploading file(s)\"), __jsx(Spinner, {\n        color: \"blue.500\",\n        size: \"xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }\n      }))) : null, (content === null || content === void 0 ? void 0 : content.body) && __jsx(Box, {\n        px: \"1rem\",\n        py: \"1.25rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, __jsx(TextWithLink, {\n        wordBreak: \"break-word\",\n        text: content === null || content === void 0 ? void 0 : content.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      })));\n    }\n\n    return __jsx(ChatContainer, {\n      isRhs: isRhs,\n      message: message,\n      threadType: threadType,\n      timeViewRef: timeViewRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, hasAttachment ? !!status ? __jsx(Attachment, {\n      isOrgUser: isRhs,\n      receiver: receiver,\n      attachments: attachments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }) : __jsx(Box, {\n      p: \"1rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, __jsx(Flex, {\n      rounded: \"8\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, __jsx(SmallText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \"Uploading file(s)\"), __jsx(Spinner, {\n      color: \"blue.500\",\n      size: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }))) : null, (content === null || content === void 0 ? void 0 : content.body) && __jsx(Box, {\n      px: \"1rem\",\n      py: \"1.25rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, __jsx(TextWithLink, {\n      wordBreak: \"break-word\",\n      text: content === null || content === void 0 ? void 0 : content.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  useQuery(['update-message-notification', uuid], () => updateConversationNotificationStatus({\n    message_id: uuid\n  }), {\n    enabled: !!uuid && ['sent', 'delivered'].includes(status)\n  });\n  return renderBubbleContent();\n};\n\nconst ChatContainer = props => {\n  const {\n    isRhs,\n    message,\n    children,\n    threadType,\n    timeViewRef\n  } = props;\n  return __jsx(Flex, {\n    width: \"100%\",\n    flexDirection: isRhs ? 'row-reverse' : 'row',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    maxWidth: \"65.4%\",\n    alignItems: isRhs ? 'flex-end' : 'unset',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    width: \"100%\",\n    alignItems: isRhs ? 'flex-end' : 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, __jsx(BubbleContainer, {\n    rounded: \"12px\",\n    borderWidth: \"1px\",\n    position: \"relative\",\n    borderColor: isRhs ? '#D2CEF9' : 'gray.300',\n    bg: isRhs ? '#F7F7FE' : 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, children), __jsx(ChatbubbleBottom, {\n    threadType: threadType,\n    isRhs: isRhs,\n    message: message,\n    timeViewRef: timeViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst EmailContainer = props => {\n  var _meta$cc, _meta$bcc;\n\n  const {\n    isRhs,\n    onReply,\n    message,\n    receiver,\n    onForward,\n    onReplyAll,\n    defaultIndex = [0]\n  } = props;\n  const {\n    meta,\n    author,\n    created_datetime,\n    content,\n    attachments\n  } = message;\n  const cc = meta === null || meta === void 0 ? void 0 : (_meta$cc = meta.cc) === null || _meta$cc === void 0 ? void 0 : _meta$cc.map((item, index) => {\n    var _meta$cc$length, _meta$cc2;\n\n    return index === ((_meta$cc$length = meta === null || meta === void 0 ? void 0 : (_meta$cc2 = meta.cc) === null || _meta$cc2 === void 0 ? void 0 : _meta$cc2.length) !== null && _meta$cc$length !== void 0 ? _meta$cc$length : 0) - 1 ? `${item}` : `${item}, `;\n  });\n  const bcc = meta === null || meta === void 0 ? void 0 : (_meta$bcc = meta.bcc) === null || _meta$bcc === void 0 ? void 0 : _meta$bcc.map((item, index) => {\n    var _meta$bcc$length, _meta$bcc2;\n\n    return index === ((_meta$bcc$length = meta === null || meta === void 0 ? void 0 : (_meta$bcc2 = meta.bcc) === null || _meta$bcc2 === void 0 ? void 0 : _meta$bcc2.length) !== null && _meta$bcc$length !== void 0 ? _meta$bcc$length : 0) - 1 ? `${item}` : `${item}, `;\n  });\n  return __jsx(Accordion, {\n    position: \"relative\",\n    defaultIndex: defaultIndex,\n    allowMultiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, __jsx(AccordionItem, {\n    borderWidth: \"1px\",\n    rounded: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, ({\n    isExpanded\n  }) => {\n    var _meta$cc3, _meta$bcc3;\n\n    return __jsx(React.Fragment, null, __jsx(AccordionHeader, {\n      pb: \"1rem\",\n      pt: \"1rem\",\n      px: \"1rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      _hover: {\n        bg: 'transparent'\n      },\n      _focus: {\n        boxShadow: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, __jsx(AccordionIcon, {\n      alignSelf: \"flex-start\",\n      name: isExpanded ? 'chevron-up' : 'chevron-right',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }), __jsx(Box, {\n      flex: 1,\n      pl: \"1.25rem\",\n      borderBottomWidth: isExpanded ? '1px' : '0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    }, isExpanded ? __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    }, __jsx(Stack, {\n      pb: \"0.2rem\",\n      isInline: true,\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, __jsx(BodyText, {\n      color: \"gray.900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }\n    }, receiver.platform_name), __jsx(SmallText, {\n      color: \"gray.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 23\n      }\n    }, formatMessageDateTime(created_datetime ? new Date(created_datetime) : new Date()))), __jsx(BodyText, {\n      textAlign: \"left\",\n      pb: \"0.2rem\",\n      color: \"blue.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, message.content.subject), __jsx(Box, {\n      pb: \"1rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }, __jsx(Flex, {\n      pb: \"0.5rem\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 23\n      }\n    }, __jsx(Stack, {\n      spacing: \"0.1rem\",\n      isInline: true,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }, __jsx(SmallText, {\n      color: \"gray.400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 27\n      }\n    }, isRhs ? 'From: ' : 'To: '), __jsx(SmallText, {\n      color: \"gray.900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 27\n      }\n    }, isRhs ? author.platform_nick : receiver.platform_nick)), __jsx(EmailContainerActions, {\n      onReply: () => onReply === null || onReply === void 0 ? void 0 : onReply(message),\n      onForward: () => onForward === null || onForward === void 0 ? void 0 : onForward(message),\n      onReplyAll: () => onReplyAll === null || onReplyAll === void 0 ? void 0 : onReplyAll(message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 25\n      }\n    })), __jsx(Stack, {\n      spacing: \"0.1rem\",\n      isInline: true,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 23\n      }\n    }, __jsx(SmallText, {\n      color: \"gray.400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 25\n      }\n    }, isRhs ? 'To: ' : 'From: '), __jsx(SmallText, {\n      color: \"gray.900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }, isRhs ? receiver.platform_nick : author.platform_nick)), ((meta === null || meta === void 0 ? void 0 : meta.bcc) || (meta === null || meta === void 0 ? void 0 : meta.cc)) && __jsx(React.Fragment, null, (meta === null || meta === void 0 ? void 0 : meta.cc) && __jsx(Stack, {\n      pt: \"0.5rem\",\n      spacing: \"0.1rem\",\n      isInline: true,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, __jsx(SmallText, {\n      color: \"gray.400\",\n      textTransform: \"uppercase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 31\n      }\n    }, \"CC:\"), (meta === null || meta === void 0 ? void 0 : meta.cc.length) > 2 ? __jsx(Tooltip, {\n      label: meta === null || meta === void 0 ? void 0 : (_meta$cc3 = meta.cc) === null || _meta$cc3 === void 0 ? void 0 : _meta$cc3.join(', '),\n      \"aria-label\": \"cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 33\n      }\n    }, __jsx(SmallText, {\n      width: \"250px\",\n      color: \"gray.900\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      style: {\n        textOverflow: 'ellipsis'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 35\n      }\n    }, cc)) : __jsx(SmallText, {\n      width: \"250px\",\n      color: \"gray.900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 33\n      }\n    }, cc)), (meta === null || meta === void 0 ? void 0 : meta.bcc) && __jsx(Stack, {\n      pt: \"0.5rem\",\n      spacing: \"0.1rem\",\n      isInline: true,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 29\n      }\n    }, __jsx(SmallText, {\n      color: \"gray.400\",\n      textTransform: \"uppercase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 31\n      }\n    }, \"BCC:\"), (meta === null || meta === void 0 ? void 0 : meta.bcc.length) > 2 ? __jsx(Tooltip, {\n      label: meta === null || meta === void 0 ? void 0 : (_meta$bcc3 = meta.bcc) === null || _meta$bcc3 === void 0 ? void 0 : _meta$bcc3.join(', '),\n      \"aria-label\": \"bcc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 33\n      }\n    }, __jsx(SmallText, {\n      width: \"250px\",\n      color: \"gray.900\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      style: {\n        textOverflow: 'ellipsis'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 35\n      }\n    }, bcc)) : __jsx(SmallText, {\n      width: \"250px\",\n      color: \"gray.900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 33\n      }\n    }, bcc))))) : __jsx(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }, __jsx(Stack, {\n      isInline: true,\n      spacing: \"1.25rem\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }, __jsx(BodyText, {\n      color: \"gray.900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 23\n      }\n    }, receiver.platform_name), __jsx(Stack, {\n      isInline: true,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 23\n      }\n    }, __jsx(BodyText, {\n      color: \"gray.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }\n    }, \"To:\"), __jsx(BodyText, {\n      color: \"gray.900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 25\n      }\n    }, isRhs ? author.platform_nick : receiver.platform_nick))), __jsx(EmailContainerActions, {\n      onReply: () => onReply === null || onReply === void 0 ? void 0 : onReply(message),\n      onForward: () => onForward === null || onForward === void 0 ? void 0 : onForward(message),\n      onReplyAll: () => onReplyAll === null || onReplyAll === void 0 ? void 0 : onReplyAll(message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }\n    })))), __jsx(AccordionPanel, {\n      pt: \"0\",\n      pb: \"1rem\",\n      pr: \"1.5rem\",\n      pl: \"3.125rem\",\n      overflow: \"auto\",\n      borderBottomWidth: \"0\",\n      borderColor: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }\n    }, __jsx(BodyText, {\n      dangerouslySetInnerHTML: {\n        __html: content === null || content === void 0 ? void 0 : content.body\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 15\n      }\n    }), !!(attachments !== null && attachments !== void 0 && attachments.length) && __jsx(Box, {\n      mt: \"2rem\",\n      pt: \"1rem\",\n      borderTopWidth: \"1px\",\n      borderTopColor: \"gray.300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, __jsx(SmallText, {\n      pb: \"1rem\",\n      color: \"gray.600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 19\n      }\n    }, attachments === null || attachments === void 0 ? void 0 : attachments.length, \" \", (attachments === null || attachments === void 0 ? void 0 : attachments.length) > 1 ? 'attachments' : 'attachment'), __jsx(Attachments, {\n      files: attachments,\n      setFiles: () => {},\n      showDeleteButton: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    }))));\n  }));\n};\n\nconst CommentContainer = props => {\n  const {\n    isRhs = true,\n    message,\n    children,\n    threadType,\n    timeViewRef\n  } = props;\n  return __jsx(Flex, {\n    width: \"100%\",\n    flexDirection: \"row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    maxWidth: \"65.4%\",\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }\n  }, __jsx(BubbleContainer, {\n    rounded: \"12px\",\n    borderWidth: \"1px\",\n    position: \"relative\",\n    bg: \"rgba(255, 215, 110, 0.19)\",\n    borderColor: \"rgba(255, 215, 110, 0.44)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 11\n    }\n  }, children), __jsx(ChatbubbleBottom, {\n    isRhs: isRhs,\n    message: message,\n    threadType: threadType,\n    timeViewRef: timeViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst ChatbubbleBottom = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    message,\n    isRhs,\n    timeViewRef,\n    threadType\n  } = props;\n  const {\n    author,\n    status,\n    created_datetime,\n    content\n  } = message;\n  return __jsx(Box, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }\n  }, (content === null || content === void 0 ? void 0 : content.content_type) !== 'html' && __jsx(Flex, {\n    width: \"100%\",\n    lineHeight: \".875rem\",\n    alignItems: \"center\",\n    justifyContent: status === 'unsent' ? 'space-between' : undefined,\n    flexDirection: isRhs ? 'row-reverse' : 'row',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    alignItems: \"center\",\n    flexDirection: isRhs ? 'row' : 'row-reverse',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, (isRhs || threadType === 'group') && __jsx(React.Fragment, null, __jsx(XSmallText, {\n    color: \"gray.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 19\n    }\n  }, author.name), __jsx(XSmallText, {\n    color: \"gray.400\",\n    ref: timeViewRef,\n    marginX: \"0.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 19\n    }\n  }, \"-\")), __jsx(XSmallText, {\n    color: \"gray.400\",\n    ref: timeViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 15\n    }\n  }, formatMessageDateTime(created_datetime ? new Date(created_datetime) : new Date())))), status === 'unsent' && __jsx(Stack, {\n    pt: \"0.5rem\",\n    isInline: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"ghost\",\n    height: \"auto\",\n    minW: \"auto\",\n    px: \"0\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    size: \"1rem\",\n    color: \"#5ACA75\",\n    name: \"inbox-resend-failed-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    variant: \"ghost\",\n    height: \"auto\",\n    minW: \"auto\",\n    px: \"0\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    size: \"1rem\",\n    color: \"#F48989\",\n    name: \"inbox-delete-failed-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 15\n    }\n  })), __jsx(XSmallText, {\n    color: \"#DA1414\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }\n  }, \"Failed\")));\n}); // const renderChatBubbleMenuItem = (\n//   item: { label?: ReactNode; onItemClick?(): void },\n//   index?: number,\n// ) => {\n//   const { label, onItemClick } = item;\n//   return (\n//     <MenuItem key={`${index}`} onClick={() => onItemClick?.()}>\n//       <XSmallText textAlign=\"center\" color=\"gray.900\">\n//         {label}\n//       </XSmallText>\n//     </MenuItem>\n//   );\n// };\n\nconst BubbleContainer = styled(Box)`\n  width: 100%;\n  transition: all 0.2s;\n  &:hover {\n    .chat-bubble-more-button {\n      opacity: 1;\n    }\n  }\n`;\n\nconst EmailContainerActions = props => {\n  const {\n    onReply,\n    onForward,\n    onReplyAll\n  } = props;\n  return __jsx(Stack, {\n    isInline: true,\n    spacing: \"1rem\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    variant: \"ghost\",\n    fontWeight: \"normal\" //@ts-ignore\n    ,\n    leftIcon: \"inbox-reply-all\",\n    onClick: e => {\n      e.stopPropagation();\n      onReplyAll === null || onReplyAll === void 0 ? void 0 : onReplyAll();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }\n  }, \"Reply all\"), __jsx(Button, {\n    size: \"xs\",\n    variant: \"ghost\",\n    fontWeight: \"normal\" //@ts-ignore\n    ,\n    leftIcon: \"inbox-reply\",\n    onClick: e => {\n      e.stopPropagation();\n      onReply === null || onReply === void 0 ? void 0 : onReply();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }\n  }, \"Reply\"), __jsx(Button, {\n    size: \"xs\",\n    variant: \"ghost\",\n    fontWeight: \"normal\" //@ts-ignore\n    ,\n    leftIcon: \"inbox-forward\",\n    onClick: e => {\n      e.stopPropagation();\n      onForward === null || onForward === void 0 ? void 0 : onForward();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }\n  }, \"Forward\"));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/inbox/components/messages/Chatbubble.tsx"],"names":["Accordion","AccordionHeader","AccordionIcon","AccordionItem","AccordionPanel","Box","Flex","Icon","Image","Link","PseudoBox","Spinner","Stack","Tooltip","styled","BodyText","Button","SmallText","Subtitle","TextWithLink","XSmallText","React","forwardRef","useQuery","numberWithCommas","updateConversationNotificationStatus","formatMessageDateTime","isOnlyEmoji","Attachment","Attachments","Chatbubble","props","thread","message","receiver","timeViewRef","onEmailReply","onEmailForward","onEmailReplyAll","emailBubbleDefaultIndex","uuid","author","meta","type","content","attachments","status","request","threadType","hasAttachment","length","isChannelAcct","user_id","isRhs","is_customer","message_type","renderBubbleContent","body","includes","paymentLink","split","currency","amount","channel_name","message_id","enabled","ChatContainer","children","EmailContainer","onReply","onForward","onReplyAll","defaultIndex","created_datetime","cc","map","item","index","bcc","isExpanded","bg","boxShadow","platform_name","Date","subject","platform_nick","join","textOverflow","__html","CommentContainer","ChatbubbleBottom","ref","content_type","undefined","name","BubbleContainer","EmailContainerActions","e","stopPropagation"],"mappings":"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","sourcesContent":["import {\n  Accordion,\n  AccordionHeader,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Flex,\n  Icon,\n  Image,\n  Link,\n  PseudoBox,\n  Spinner,\n  Stack,\n  Tooltip,\n} from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport { BodyText, Button, SmallText, Subtitle, TextWithLink, XSmallText } from 'app/components';\nimport React, { forwardRef, MutableRefObject, ReactNode } from 'react';\nimport { useQuery } from 'react-query';\nimport { numberWithCommas } from 'utils';\nimport { updateConversationNotificationStatus } from '../../inbox.service';\nimport { InboxMessage, ThreadSchema } from '../../inbox.types';\nimport { formatMessageDateTime, isOnlyEmoji } from '../../inbox.utils';\nimport { Attachment } from './Attachment';\nimport { Attachments } from './compose/Attachments';\n\nexport type ChatbubbleProps = {\n  receiver: any;\n  thread?: ThreadSchema;\n  message: InboxMessage;\n  emailBubbleDefaultIndex?: number[];\n  onEmailReply?(message: InboxMessage): void;\n  onEmailForward?(message: InboxMessage): void;\n  onEmailReplyAll?(message: InboxMessage): void;\n  timeViewRef: MutableRefObject<HTMLParagraphElement | undefined>;\n};\n\nexport const Chatbubble = (props: ChatbubbleProps) => {\n  const {\n    thread,\n    message,\n    receiver,\n    timeViewRef,\n    onEmailReply,\n    onEmailForward,\n    onEmailReplyAll,\n    emailBubbleDefaultIndex,\n  } = props;\n  const { uuid, author, meta, type, content, attachments, status, request } = message;\n\n  const threadType = thread?.type;\n  // const firstAttachment = attachments?.[0];\n  const hasAttachment = !!attachments && !!attachments.length;\n  // const attachmentType = !!firstAttachment && firstAttachment.type;\n  const isChannelAcct = receiver.user_id === author.uuid;\n  // const copyAttachmentText = `Copy link to ${attachmentType === 'image' ? 'image' : 'file'}`;\n  const isRhs =\n    !author.is_customer || !!(isChannelAcct && meta?.message_type !== 'payment_received');\n\n  // const { onCopy } = useClipboard(firstAttachment?.data?.url);\n  // const onDownload = () => {\n  //   window.open(firstAttachment?.data?.url, '_blank');\n  // };\n\n  // const menuOptions = hasAttachment\n  //   ? !content?.body\n  //     ? [\n  //         { label: copyAttachmentText, onItemClick: onCopy },\n  //         { label: 'Download', onItemClick: onDownload },\n  //       ]\n  //     : [\n  //         { label: 'Reply', onItemClick: () => {} },\n  //         { label: copyAttachmentText, onItemClick: onCopy },\n  //         { label: 'Download', onItemClick: onDownload },\n  //       ]\n  //   : [{ label: 'Reply', onItemClick: () => {} }];\n\n  const renderBubbleContent = () => {\n    if (isOnlyEmoji(content?.body)) {\n      return (\n        <ChatContainer\n          isRhs={isRhs}\n          message={message}\n          threadType={threadType}\n          timeViewRef={timeViewRef}\n        >\n          <Box px=\"1rem\" py=\"1.25rem\">\n            <SmallText lineHeight=\"30px\" fontSize=\"2rem\" color=\"gray.900\">\n              {content?.body}\n            </SmallText>\n          </Box>\n        </ChatContainer>\n      );\n    }\n    if (meta?.message_type?.includes('payment_')) {\n      const paymentLink = content.body.split('\\n')[1];\n      return (\n        <ChatContainer\n          isRhs={isRhs}\n          message={message}\n          threadType={threadType}\n          timeViewRef={timeViewRef}\n        >\n          {isRhs ? (\n            <Stack px=\"1rem\" py=\"1.25rem\" isInline spacing=\"0.75rem\">\n              <Image width=\"144px\" src=\"/images/inbox/payment.png\" />\n              <Flex position=\"relative\" flexDirection=\"column\" justifyContent=\"space-between\">\n                {meta.message_type === 'payment_received' ? (\n                  <BodyText color=\"gray.900\">\n                    You Just Got{' '}\n                    <PseudoBox as=\"span\" color=\"blue.500\">\n                      Paid!!\n                    </PseudoBox>\n                  </BodyText>\n                ) : (\n                  <BodyText color=\"gray.900\">\n                    You Just{' '}\n                    <PseudoBox as=\"span\" color=\"blue.500\">\n                      Requested\n                    </PseudoBox>\n                  </BodyText>\n                )}\n                {!!request && (\n                  <Subtitle color=\"blue.600\">\n                    <PseudoBox as=\"span\" fontWeight=\"1.25rem\">\n                      {request?.currency}\n                    </PseudoBox>{' '}\n                    {numberWithCommas(request?.amount / 100)}\n                  </Subtitle>\n                )}\n                <Link\n                  isExternal\n                  color=\"gray.900\"\n                  href={paymentLink}\n                  fontSize=\"0.75rem\"\n                  fontWeight=\"medium\"\n                  textDecoration=\"underline\"\n                >\n                  View Details\n                </Link>\n              </Flex>\n            </Stack>\n          ) : (\n            <Box px=\"1rem\" py=\"1.25rem\">\n              <TextWithLink wordBreak=\"break-word\" text={content?.body} />\n            </Box>\n          )}\n        </ChatContainer>\n      );\n    }\n    if (receiver.channel_name === 'email') {\n      return (\n        <EmailContainer\n          isRhs={isRhs}\n          message={message}\n          receiver={receiver}\n          onReply={onEmailReply}\n          onForward={onEmailForward}\n          onReplyAll={onEmailReplyAll}\n          defaultIndex={emailBubbleDefaultIndex}\n        />\n      );\n    }\n    if (type === 'comment') {\n      return (\n        <CommentContainer message={message} threadType={threadType} timeViewRef={timeViewRef}>\n          {hasAttachment ? (\n            !!status ? (\n              <Attachment isOrgUser={isRhs} receiver={receiver} attachments={attachments} />\n            ) : (\n              <Box p=\"1rem\">\n                <Flex rounded=\"8\" alignItems=\"center\" justifyContent=\"space-between\">\n                  <SmallText>Uploading file(s)</SmallText>\n                  <Spinner color=\"blue.500\" size=\"xs\" />\n                </Flex>\n              </Box>\n            )\n          ) : null}\n          {content?.body && (\n            <Box px=\"1rem\" py=\"1.25rem\">\n              <TextWithLink wordBreak=\"break-word\" text={content?.body} />\n            </Box>\n          )}\n        </CommentContainer>\n      );\n    }\n\n    return (\n      <ChatContainer\n        isRhs={isRhs}\n        message={message}\n        threadType={threadType}\n        timeViewRef={timeViewRef}\n      >\n        {/* <Menu\n          options={menuOptions}\n          renderItem={renderChatBubbleMenuItem}\n          menuListProps={{\n            minW: '160px',\n            placement: isRhs ? 'bottom-end' : 'bottom-start',\n          }}\n          menuButtonProps={{\n            px: '0',\n            opacity: 0,\n            minW: 'unset',\n            right: '1rem',\n            position: 'absolute',\n            className: 'chat-bubble-more-button',\n            children: <Icon size=\"1.5rem\" name=\"inbox-more\" color=\"black\" />,\n          }}\n        /> */}\n        {hasAttachment ? (\n          !!status ? (\n            <Attachment isOrgUser={isRhs} receiver={receiver} attachments={attachments} />\n          ) : (\n            <Box p=\"1rem\">\n              <Flex rounded=\"8\" alignItems=\"center\" justifyContent=\"space-between\">\n                <SmallText>Uploading file(s)</SmallText>\n                <Spinner color=\"blue.500\" size=\"xs\" />\n              </Flex>\n            </Box>\n          )\n        ) : null}\n        {content?.body && (\n          <Box px=\"1rem\" py=\"1.25rem\">\n            <TextWithLink wordBreak=\"break-word\" text={content?.body} />\n          </Box>\n        )}\n      </ChatContainer>\n    );\n  };\n\n  useQuery(\n    ['update-message-notification', uuid],\n    () => updateConversationNotificationStatus({ message_id: uuid }),\n    {\n      enabled: !!uuid && ['sent', 'delivered'].includes(status),\n    },\n  );\n\n  return renderBubbleContent();\n};\n\nconst ChatContainer = (props: {\n  isRhs: boolean;\n  children: ReactNode;\n  threadType?: string;\n  message: ChatbubbleProps['message'];\n  timeViewRef: ChatbubbleProps['timeViewRef'];\n}) => {\n  const { isRhs, message, children, threadType, timeViewRef } = props;\n\n  return (\n    <Flex width=\"100%\" flexDirection={isRhs ? 'row-reverse' : 'row'}>\n      <Stack maxWidth=\"65.4%\" alignItems={isRhs ? 'flex-end' : 'unset'}>\n        <Stack width=\"100%\" alignItems={isRhs ? 'flex-end' : 'flex-start'}>\n          <BubbleContainer\n            rounded=\"12px\"\n            borderWidth=\"1px\"\n            position=\"relative\"\n            borderColor={isRhs ? '#D2CEF9' : 'gray.300'}\n            bg={isRhs ? '#F7F7FE' : 'white'}\n          >\n            {children}\n          </BubbleContainer>\n          <ChatbubbleBottom\n            threadType={threadType}\n            isRhs={isRhs}\n            message={message}\n            timeViewRef={timeViewRef}\n          />\n        </Stack>\n      </Stack>\n    </Flex>\n  );\n};\n\nconst EmailContainer = (props: {\n  isRhs: boolean;\n  message: ChatbubbleProps['message'];\n  receiver: ChatbubbleProps['receiver'];\n  onReply?: ChatbubbleProps['onEmailReply'];\n  onForward?: ChatbubbleProps['onEmailForward'];\n  onReplyAll?: ChatbubbleProps['onEmailReplyAll'];\n  defaultIndex?: ChatbubbleProps['emailBubbleDefaultIndex'];\n}) => {\n  const { isRhs, onReply, message, receiver, onForward, onReplyAll, defaultIndex = [0] } = props;\n  const { meta, author, created_datetime, content, attachments } = message;\n\n  const cc = meta?.cc?.map((item, index) =>\n    index === (meta?.cc?.length ?? 0) - 1 ? `${item}` : `${item}, `,\n  );\n  const bcc = meta?.bcc?.map((item, index) =>\n    index === (meta?.bcc?.length ?? 0) - 1 ? `${item}` : `${item}, `,\n  );\n\n  return (\n    <Accordion position=\"relative\" defaultIndex={defaultIndex} allowMultiple>\n      <AccordionItem borderWidth=\"1px\" rounded=\"12px\">\n        {({ isExpanded }) => (\n          <>\n            <AccordionHeader\n              pb=\"1rem\"\n              pt=\"1rem\"\n              px=\"1rem\"\n              display=\"flex\"\n              alignItems=\"center\"\n              _hover={{ bg: 'transparent' }}\n              _focus={{ boxShadow: 'none' }}\n            >\n              <AccordionIcon\n                alignSelf=\"flex-start\"\n                name={isExpanded ? 'chevron-up' : 'chevron-right'}\n              />\n              <Box flex={1} pl=\"1.25rem\" borderBottomWidth={isExpanded ? '1px' : '0'}>\n                {isExpanded ? (\n                  <Box>\n                    <Stack pb=\"0.2rem\" isInline alignItems=\"center\" justifyContent=\"space-between\">\n                      <BodyText color=\"gray.900\">{receiver.platform_name}</BodyText>\n                      <SmallText color=\"gray.500\">\n                        {formatMessageDateTime(\n                          created_datetime ? new Date(created_datetime) : new Date(),\n                        )}\n                      </SmallText>\n                    </Stack>\n                    <BodyText textAlign=\"left\" pb=\"0.2rem\" color=\"blue.500\">\n                      {message.content.subject}\n                    </BodyText>\n                    <Box pb=\"1rem\">\n                      <Flex pb=\"0.5rem\" alignItems=\"center\" justifyContent=\"space-between\">\n                        <Stack spacing=\"0.1rem\" isInline alignItems=\"center\">\n                          <SmallText color=\"gray.400\">{isRhs ? 'From: ' : 'To: '}</SmallText>\n                          <SmallText color=\"gray.900\">\n                            {isRhs ? author.platform_nick : receiver.platform_nick}\n                          </SmallText>\n                        </Stack>\n                        <EmailContainerActions\n                          onReply={() => onReply?.(message)}\n                          onForward={() => onForward?.(message)}\n                          onReplyAll={() => onReplyAll?.(message)}\n                        />\n                      </Flex>\n                      <Stack spacing=\"0.1rem\" isInline alignItems=\"center\">\n                        <SmallText color=\"gray.400\">{isRhs ? 'To: ' : 'From: '}</SmallText>\n                        <SmallText color=\"gray.900\">\n                          {isRhs ? receiver.platform_nick : author.platform_nick}\n                        </SmallText>\n                      </Stack>\n                      {(meta?.bcc || meta?.cc) && (\n                        <>\n                          {meta?.cc && (\n                            <Stack pt=\"0.5rem\" spacing=\"0.1rem\" isInline alignItems=\"center\">\n                              <SmallText color=\"gray.400\" textTransform=\"uppercase\">\n                                CC:\n                              </SmallText>\n                              {meta?.cc.length > 2 ? (\n                                <Tooltip label={meta?.cc?.join(', ')} aria-label=\"cc\">\n                                  <SmallText\n                                    width=\"250px\"\n                                    color=\"gray.900\"\n                                    overflow=\"hidden\"\n                                    whiteSpace=\"nowrap\"\n                                    style={{ textOverflow: 'ellipsis' }}\n                                  >\n                                    {cc}\n                                  </SmallText>\n                                </Tooltip>\n                              ) : (\n                                <SmallText width=\"250px\" color=\"gray.900\">\n                                  {cc}\n                                </SmallText>\n                              )}\n                            </Stack>\n                          )}\n                          {meta?.bcc && (\n                            <Stack pt=\"0.5rem\" spacing=\"0.1rem\" isInline alignItems=\"center\">\n                              <SmallText color=\"gray.400\" textTransform=\"uppercase\">\n                                BCC:\n                              </SmallText>\n                              {meta?.bcc.length > 2 ? (\n                                <Tooltip label={meta?.bcc?.join(', ')} aria-label=\"bcc\">\n                                  <SmallText\n                                    width=\"250px\"\n                                    color=\"gray.900\"\n                                    overflow=\"hidden\"\n                                    whiteSpace=\"nowrap\"\n                                    style={{ textOverflow: 'ellipsis' }}\n                                  >\n                                    {bcc}\n                                  </SmallText>\n                                </Tooltip>\n                              ) : (\n                                <SmallText width=\"250px\" color=\"gray.900\">\n                                  {bcc}\n                                </SmallText>\n                              )}\n                            </Stack>\n                          )}\n                        </>\n                      )}\n                    </Box>\n                  </Box>\n                ) : (\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Stack isInline spacing=\"1.25rem\" alignItems=\"center\">\n                      <BodyText color=\"gray.900\">{receiver.platform_name}</BodyText>\n                      <Stack isInline alignItems=\"center\">\n                        <BodyText color=\"gray.500\">To:</BodyText>\n                        <BodyText color=\"gray.900\">\n                          {isRhs ? author.platform_nick : receiver.platform_nick}\n                        </BodyText>\n                      </Stack>\n                    </Stack>\n                    <EmailContainerActions\n                      onReply={() => onReply?.(message)}\n                      onForward={() => onForward?.(message)}\n                      onReplyAll={() => onReplyAll?.(message)}\n                    />\n                  </Flex>\n                )}\n              </Box>\n            </AccordionHeader>\n            <AccordionPanel\n              pt=\"0\"\n              pb=\"1rem\"\n              pr=\"1.5rem\"\n              pl=\"3.125rem\"\n              overflow=\"auto\"\n              borderBottomWidth=\"0\"\n              borderColor=\"transparent\"\n            >\n              <BodyText dangerouslySetInnerHTML={{ __html: content?.body }} />\n              {!!attachments?.length && (\n                <Box mt=\"2rem\" pt=\"1rem\" borderTopWidth=\"1px\" borderTopColor=\"gray.300\">\n                  <SmallText pb=\"1rem\" color=\"gray.600\">\n                    {attachments?.length} {attachments?.length > 1 ? 'attachments' : 'attachment'}\n                  </SmallText>\n                  <Attachments files={attachments} setFiles={() => {}} showDeleteButton={false} />\n                </Box>\n              )}\n            </AccordionPanel>\n          </>\n        )}\n      </AccordionItem>\n    </Accordion>\n  );\n};\n\nconst CommentContainer = (props: {\n  isRhs?: boolean;\n  children: ReactNode;\n  threadType?: string;\n  message: ChatbubbleProps['message'];\n  timeViewRef: ChatbubbleProps['timeViewRef'];\n}) => {\n  const { isRhs = true, message, children, threadType, timeViewRef } = props;\n  return (\n    <Flex width=\"100%\" flexDirection=\"row-reverse\">\n      <Stack maxWidth=\"65.4%\" alignItems=\"flex-end\">\n        <Stack width=\"100%\" alignItems=\"flex-end\">\n          <BubbleContainer\n            rounded=\"12px\"\n            borderWidth=\"1px\"\n            position=\"relative\"\n            bg=\"rgba(255, 215, 110, 0.19)\"\n            borderColor=\"rgba(255, 215, 110, 0.44)\"\n          >\n            {/* <Menu\n              options={[{ label: 'Reply', onItemClick: () => {} }]}\n              renderItem={renderChatBubbleMenuItem}\n              menuListProps={{\n                placement: 'bottom-end',\n              }}\n              menuButtonProps={{\n                px: '0',\n                opacity: 0,\n                minW: 'unset',\n                right: '1rem',\n                position: 'absolute',\n                className: 'chat-bubble-more-button',\n                children: <Icon size=\"1.5rem\" name=\"inbox-more\" color=\"black\" />,\n              }}\n            /> */}\n            {children}\n          </BubbleContainer>\n          <ChatbubbleBottom\n            isRhs={isRhs}\n            message={message}\n            threadType={threadType}\n            timeViewRef={timeViewRef}\n          />\n        </Stack>\n      </Stack>\n    </Flex>\n  );\n};\n\nconst ChatbubbleBottom = forwardRef(\n  (\n    props: {\n      isRhs: boolean;\n      threadType?: string;\n      message: ChatbubbleProps['message'];\n      timeViewRef: ChatbubbleProps['timeViewRef'];\n    },\n    ref: any,\n  ) => {\n    const { message, isRhs, timeViewRef, threadType } = props;\n    const { author, status, created_datetime, content } = message;\n\n    return (\n      <Box ref={ref}>\n        {content?.content_type !== 'html' && (\n          <Flex\n            width=\"100%\"\n            lineHeight=\".875rem\"\n            alignItems=\"center\"\n            justifyContent={status === 'unsent' ? 'space-between' : undefined}\n            flexDirection={isRhs ? 'row-reverse' : 'row'}\n          >\n            <Flex alignItems=\"center\" flexDirection={isRhs ? 'row' : 'row-reverse'}>\n              {(isRhs || threadType === 'group') && (\n                <>\n                  <XSmallText color=\"gray.400\">{author.name}</XSmallText>\n                  <XSmallText color=\"gray.400\" ref={timeViewRef} marginX=\"0.5rem\">\n                    -\n                  </XSmallText>\n                </>\n              )}\n              <XSmallText color=\"gray.400\" ref={timeViewRef}>\n                {formatMessageDateTime(created_datetime ? new Date(created_datetime) : new Date())}\n              </XSmallText>\n            </Flex>\n          </Flex>\n        )}\n        {status === 'unsent' && (\n          <Stack pt=\"0.5rem\" isInline alignItems=\"center\">\n            <Button variant=\"ghost\" height=\"auto\" minW=\"auto\" px=\"0\" onClick={() => {}}>\n              <Icon size=\"1rem\" color=\"#5ACA75\" name=\"inbox-resend-failed-message\" />\n            </Button>\n            <Button variant=\"ghost\" height=\"auto\" minW=\"auto\" px=\"0\" onClick={() => {}}>\n              <Icon size=\"1rem\" color=\"#F48989\" name=\"inbox-delete-failed-message\" />\n            </Button>\n            <XSmallText color=\"#DA1414\">Failed</XSmallText>\n          </Stack>\n        )}\n      </Box>\n    );\n  },\n);\n\n// const renderChatBubbleMenuItem = (\n//   item: { label?: ReactNode; onItemClick?(): void },\n//   index?: number,\n// ) => {\n//   const { label, onItemClick } = item;\n\n//   return (\n//     <MenuItem key={`${index}`} onClick={() => onItemClick?.()}>\n//       <XSmallText textAlign=\"center\" color=\"gray.900\">\n//         {label}\n//       </XSmallText>\n//     </MenuItem>\n//   );\n// };\n\nconst BubbleContainer = styled(Box)`\n  width: 100%;\n  transition: all 0.2s;\n  &:hover {\n    .chat-bubble-more-button {\n      opacity: 1;\n    }\n  }\n`;\n\nconst EmailContainerActions = (props: {\n  onReply?(): void;\n  onReplyAll?(): void;\n  onForward?(): void;\n}) => {\n  const { onReply, onForward, onReplyAll } = props;\n  return (\n    <Stack isInline spacing=\"1rem\" alignItems=\"center\">\n      <Button\n        size=\"xs\"\n        variant=\"ghost\"\n        fontWeight=\"normal\"\n        //@ts-ignore\n        leftIcon=\"inbox-reply-all\"\n        onClick={e => {\n          e.stopPropagation();\n          onReplyAll?.();\n        }}\n      >\n        Reply all\n      </Button>\n      <Button\n        size=\"xs\"\n        variant=\"ghost\"\n        fontWeight=\"normal\"\n        //@ts-ignore\n        leftIcon=\"inbox-reply\"\n        onClick={e => {\n          e.stopPropagation();\n          onReply?.();\n        }}\n      >\n        Reply\n      </Button>\n      <Button\n        size=\"xs\"\n        variant=\"ghost\"\n        fontWeight=\"normal\"\n        //@ts-ignore\n        leftIcon=\"inbox-forward\"\n        onClick={e => {\n          e.stopPropagation();\n          onForward?.();\n        }}\n      >\n        Forward\n      </Button>\n    </Stack>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}