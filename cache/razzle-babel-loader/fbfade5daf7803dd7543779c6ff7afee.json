{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/sort/sort-item/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ColumnSelect } from './column-select';\nimport { OrderSelect } from './order-select';\nimport { Box, Icon } from '@chakra-ui/core';\nexport const SortItem = props => {\n  var _columns$columnID;\n\n  const {\n    columns,\n    columns_by_id,\n    columnID,\n    updateSort,\n    uid: sort_id,\n    deleteSort,\n    order: selected_order,\n    sorted_columns\n  } = props;\n\n  const handleColumnChange = columnID => {\n    updateSort(sort_id, {\n      columnID: columnID,\n      name: columns[columnID].name\n    });\n  };\n\n  const handleOrderChange = order => {\n    updateSort(sort_id, {\n      order\n    });\n  };\n\n  const columnType = (_columns$columnID = columns[columnID]) === null || _columns$columnID === void 0 ? void 0 : _columns$columnID.type;\n  return __jsx(Box, {\n    className: \"sort-item\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(ColumnSelect, {\n    selected_column: columnID,\n    sorted_columns,\n    columns,\n    columns_by_id,\n    onChange: handleColumnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(OrderSelect, {\n    selected_order,\n    onChange: handleOrderChange,\n    columnType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: \"icon-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: \"trash\",\n    onClick: () => deleteSort(sort_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/authenticated-app/lists/components/sort/sort-item/index.tsx"],"names":["React","ColumnSelect","OrderSelect","Box","Icon","SortItem","props","columns","columns_by_id","columnID","updateSort","uid","sort_id","deleteSort","order","selected_order","sorted_columns","handleColumnChange","name","handleOrderChange","columnType","type","selected_column","onChange"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,iBAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAgB;AAAA;;AACtC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,GAAG,EAAEC,OALD;AAMJC,IAAAA,UANI;AAOJC,IAAAA,KAAK,EAAEC,cAPH;AAQJC,IAAAA;AARI,MASFV,KATJ;;AAWA,QAAMW,kBAAkB,GAAIR,QAAD,IAAsB;AAC/CC,IAAAA,UAAU,CAACE,OAAD,EAAU;AAAEH,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBS,MAAAA,IAAI,EAAEX,OAAO,CAACE,QAAD,CAAP,CAAkBS;AAA9C,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIL,KAAD,IAAmB;AAC3CJ,IAAAA,UAAU,CAACE,OAAD,EAAU;AAAEE,MAAAA;AAAF,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMM,UAAU,wBAAGb,OAAO,CAACE,QAAD,CAAV,sDAAG,kBAAmBY,IAAtC;AAEA,SACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,cAAc,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAEIC,IAAAA,eAAe,EAAEb,QAFrB;AAGIO,IAAAA,cAHJ;AAIIT,IAAAA,OAJJ;AAKIC,IAAAA,aALJ;AAMIe,IAAAA,QAAQ,EAAEN,kBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,MAAC,WAAD;AAEIF,IAAAA,cAFJ;AAGIQ,IAAAA,QAAQ,EAAEJ,iBAHd;AAIIC,IAAAA,UAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAiBE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,OAAO,EAAE,MAAMP,UAAU,CAACD,OAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF;AAuBD,CA7CM","sourcesContent":["import React from 'react';\nimport { ColumnSelect } from './column-select';\nimport { OrderSelect } from './order-select';\nimport { Box, Icon } from '@chakra-ui/core';\n\nexport const SortItem = (props: any) => {\n  const {\n    columns,\n    columns_by_id,\n    columnID,\n    updateSort,\n    uid: sort_id,\n    deleteSort,\n    order: selected_order,\n    sorted_columns,\n  } = props;\n\n  const handleColumnChange = (columnID: string) => {\n    updateSort(sort_id, { columnID: columnID, name: columns[columnID].name });\n  };\n\n  const handleOrderChange = (order: string) => {\n    updateSort(sort_id, { order });\n  };\n\n  const columnType = columns[columnID]?.type;\n\n  return (\n    <Box className=\"sort-item\" justifyContent=\"space-between\">\n      <ColumnSelect\n        {...{\n          selected_column: columnID,\n          sorted_columns,\n          columns,\n          columns_by_id,\n          onChange: handleColumnChange,\n        }}\n      />\n      <OrderSelect\n        {...{\n          selected_order,\n          onChange: handleOrderChange,\n          columnType,\n        }}\n      />\n      <Box className=\"icon-menu\">\n        <Icon name=\"trash\" onClick={() => deleteSort(sort_id)} />\n      </Box>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}