{"ast":null,"code":"var _jsxFileName = \"/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/verify/index.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Heading, Stack, Text, useToast } from '@chakra-ui/core';\nimport { isEmpty } from 'lodash';\nimport React from 'react';\nimport { loadState } from '../../../utils';\nimport { sendAmplitudeData } from '../../../utils/amplitude';\nimport { ToastBox, Button } from '../../components';\nimport Logo from '../../components/Logo';\nimport { verifyEmail } from '../authentication';\nexport const VerifyEmailPage = props => {\n  const {\n    match,\n    history\n  } = props;\n  const {\n    token\n  } = match.params;\n  const toast = useToast();\n  const [loading, setLoading] = React.useState(false);\n\n  async function handleVerifyEmail() {\n    const isLoggedIn = !isEmpty(loadState()) ? !!loadState().token : false;\n    setLoading(true);\n\n    try {\n      await verifyEmail({\n        token\n      });\n      setLoading(false);\n      sendAmplitudeData('emailVerified');\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          status: \"success\",\n          message: \"Email verified successfully\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        })\n      });\n      isLoggedIn ? history.push('/s/home') : history.push('/login');\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({\n          onClose\n        }) => __jsx(ToastBox, {\n          onClose: onClose,\n          message: error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 34\n          }\n        })\n      });\n    }\n  }\n\n  return __jsx(Flex, {\n    px: \"1rem\",\n    width: \"100%\",\n    height: \"100vh\",\n    position: \"fixed\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: \"#f5f5f5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    px: \"1rem\",\n    py: \"1.5rem\",\n    mb: \"1.5rem\",\n    rounded: \"5px\",\n    spacing: \"1.2rem\",\n    maxWidth: \"800px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Logo, {\n    width: \"150px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), __jsx(Heading, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Verify your email address\"), __jsx(Text, {\n    width: ['100%', '80%', '80%'],\n    mx: \"auto\",\n    textAlign: \"center\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Please confirm that you want to use this as your Simpu account email address. Once it is done you can start using Simpu!\"), __jsx(Button, {\n    size: \"lg\",\n    variantColor: \"blue\",\n    isLoading: loading,\n    onClick: handleVerifyEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Verify my email\")), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    color: \"gray.500\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"\\xA92020 Simpu. All rights reserved\")));\n};","map":{"version":3,"sources":["/Users/public1/Documents/Projects/ssr-razzle/src/app/unauthenticated-app/verify/index.tsx"],"names":["Box","Flex","Heading","Stack","Text","useToast","isEmpty","React","loadState","sendAmplitudeData","ToastBox","Button","Logo","verifyEmail","VerifyEmailPage","props","match","history","token","params","toast","loading","setLoading","useState","handleVerifyEmail","isLoggedIn","position","render","onClose","push","error"],"mappings":"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","sourcesContent":["import { Box, Flex, Heading, Stack, Text, useToast } from '@chakra-ui/core';\nimport { isEmpty } from 'lodash';\nimport React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { loadState } from '../../../utils';\nimport { sendAmplitudeData } from '../../../utils/amplitude';\nimport { ToastBox, Button } from '../../components';\nimport Logo from '../../components/Logo';\nimport { verifyEmail } from '../authentication';\n\nexport const VerifyEmailPage = (\n  props: RouteComponentProps<{\n    token: string;\n  }>,\n) => {\n  const { match, history } = props;\n  const { token } = match.params;\n\n  const toast = useToast();\n\n  const [loading, setLoading] = React.useState(false);\n\n  async function handleVerifyEmail() {\n    const isLoggedIn = !isEmpty(loadState()) ? !!loadState().token : false;\n    setLoading(true);\n    try {\n      await verifyEmail({ token });\n      setLoading(false);\n      sendAmplitudeData('emailVerified');\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => (\n          <ToastBox onClose={onClose} status=\"success\" message=\"Email verified successfully\" />\n        ),\n      });\n      isLoggedIn ? history.push('/s/home') : history.push('/login');\n    } catch (error) {\n      setLoading(false);\n      toast({\n        position: 'bottom-left',\n        render: ({ onClose }) => <ToastBox onClose={onClose} message={error} />,\n      });\n    }\n  }\n\n  return (\n    <Flex\n      px=\"1rem\"\n      width=\"100%\"\n      height=\"100vh\"\n      position=\"fixed\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      backgroundColor=\"#f5f5f5\"\n    >\n      <Stack\n        px=\"1rem\"\n        py=\"1.5rem\"\n        mb=\"1.5rem\"\n        rounded=\"5px\"\n        spacing=\"1.2rem\"\n        maxWidth=\"800px\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        backgroundColor=\"white\"\n      >\n        <Box>\n          <Logo width=\"150px\" />\n        </Box>\n        <Heading textAlign=\"center\">Verify your email address</Heading>\n        <Text width={['100%', '80%', '80%']} mx=\"auto\" textAlign=\"center\" color=\"gray.500\">\n          Please confirm that you want to use this as your Simpu account email address. Once it is\n          done you can start using Simpu!\n        </Text>\n        <Button size=\"lg\" variantColor=\"blue\" isLoading={loading} onClick={handleVerifyEmail}>\n          Verify my email\n        </Button>\n      </Stack>\n      <Box>\n        <Text color=\"gray.500\" textAlign=\"center\">\n          &copy;2020 Simpu. All rights reserved\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}