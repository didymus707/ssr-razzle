{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { buildConversationUrl, clearState, client, loadState, saveState } from '../../../../utils';\nimport { setAmplitudeUserProperties } from \"../../../../utils/amplitude\";\nexport const getToken = () => {\n  if (loadState()) {\n    const {\n      token\n    } = loadState();\n    return token;\n  }\n\n  return null;\n};\nexport const getUser = () => {\n  if (loadState()) {\n    const {\n      user\n    } = loadState();\n    return user;\n  }\n\n  return null;\n};\nexport const login = async values => {\n  const response = await client('auth/login', {\n    data: values,\n    method: 'POST'\n  });\n  const {\n    token,\n    auth: user,\n    organisations\n  } = response.data;\n  setAmplitudeUserProperties(user);\n  saveState({\n    token,\n    user,\n    organisations\n  });\n  return {\n    token,\n    user,\n    organisations\n  };\n};\nexport const register = async values => {\n  const response = await client('auth/create', {\n    data: values,\n    method: 'POST'\n  });\n  const {\n    token,\n    auth: user,\n    organisations\n  } = response.data;\n  setAmplitudeUserProperties(user);\n  saveState({\n    token,\n    user,\n    organisations\n  });\n  return {\n    token,\n    user,\n    organisations\n  };\n};\nexport const verifyEmail = async values => {\n  const response = await client('auth/verify', {\n    data: values,\n    method: 'POST'\n  });\n  return response.data;\n};\nexport const getProfile = async organizationID => {\n  const response = await client(`auth/view/${organizationID}`);\n  const {\n    user,\n    profile\n  } = response.data;\n  const previouslocalStorageState = loadState();\n  saveState(_objectSpread(_objectSpread({}, previouslocalStorageState), {}, {\n    user,\n    profile\n  }));\n  return _objectSpread(_objectSpread({}, previouslocalStorageState), {}, {\n    user,\n    profile\n  });\n};\nexport const updateProfile = async values => {\n  const response = await client(`profile/save`, {\n    method: 'PATCH',\n    data: values\n  });\n  const {\n    profile\n  } = response.data;\n  const previouslocalStorageState = loadState();\n  saveState(_objectSpread(_objectSpread({}, previouslocalStorageState), {}, {\n    profile\n  }));\n  return _objectSpread(_objectSpread({}, previouslocalStorageState), {}, {\n    profile\n  });\n};\nexport const forgotPassword = async values => {\n  const response = await client('auth/send_password_reset', {\n    data: values,\n    method: 'POST'\n  });\n  return response.data;\n};\nexport const resetPassword = async values => {\n  const response = await client('auth/reset_password', {\n    data: values,\n    method: 'POST'\n  });\n  return response.data;\n};\nexport const changePassword = async values => {\n  const response = await client(`auth/change-password`, {\n    data: values,\n    method: 'PATCH',\n    validateStatus: status => status >= 200 && status <= 401\n  });\n  if (response.status === 401) throw new Error('Your old password is incorrect');\n  return response.data;\n};\nexport const logout = async userId => {\n  const SWID = loadState().SWID;\n\n  if (userId && SWID) {\n    try {\n      await client('', {\n        url: buildConversationUrl(`push-notifications/${userId}`),\n        method: 'DELETE',\n        data: {\n          SWID\n        }\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n\n  clearState();\n  return Promise.resolve({});\n};","map":{"version":3,"sources":["/Users/okechukwuiheagwara/Documents/Adewale/simpu/razzle/with-typescript/src/app/unauthenticated-app/authentication/service/authentication.service.ts"],"names":["buildConversationUrl","clearState","client","loadState","saveState","setAmplitudeUserProperties","getToken","token","getUser","user","login","values","response","data","method","auth","organisations","register","verifyEmail","getProfile","organizationID","profile","previouslocalStorageState","updateProfile","forgotPassword","resetPassword","changePassword","validateStatus","status","Error","logout","userId","SWID","url","error","Promise","resolve"],"mappings":"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","sourcesContent":["import { buildConversationUrl, clearState, client, loadState, saveState } from '../../../../utils'\nimport {\n  ForgotPasswordInitialValuesProps,\n  LoginFormInitialValuesProps,\n  RegisterFormInitialValuesProps,\n} from '../components'\nimport { User, UserProfile } from './types'\nimport {setAmplitudeUserProperties} from \"../../../../utils/amplitude\";\n\nexport const getToken = () => {\n  if (loadState()) {\n    const { token } = loadState()\n    return token\n  }\n  return null\n}\n\nexport const getUser = () => {\n  if (loadState()) {\n    const { user } = loadState()\n    return user\n  }\n  return null\n}\n\nexport const login = async (values: LoginFormInitialValuesProps) => {\n  const response = await client('auth/login', { data: values, method: 'POST' })\n  const { token, auth: user, organisations } = response.data\n  setAmplitudeUserProperties(user)\n  saveState({ token, user, organisations })\n  return { token, user, organisations }\n}\n\nexport const register = async (values: RegisterFormInitialValuesProps) => {\n  const response = await client('auth/create', { data: values, method: 'POST' })\n  const { token, auth: user, organisations } = response.data\n  setAmplitudeUserProperties(user)\n  saveState({ token, user, organisations })\n  return { token, user, organisations }\n}\n\nexport const verifyEmail = async (values: { token: string }) => {\n  const response = await client('auth/verify', { data: values, method: 'POST' })\n  return response.data\n}\n\nexport const getProfile = async (organizationID: string) => {\n  const response = await client(`auth/view/${organizationID}`)\n  const { user, profile } = response.data\n  const previouslocalStorageState = loadState()\n  saveState({ ...previouslocalStorageState, user, profile })\n  return { ...previouslocalStorageState, user, profile }\n}\n\nexport const updateProfile = async (\n  values: Partial<Pick<UserProfile, 'first_name' | 'last_name' | 'organisation_id'>> & {\n    user_id: User['id']\n  }\n) => {\n  const response = await client(`profile/save`, {\n    method: 'PATCH',\n    data: values,\n  })\n  const { profile } = response.data\n  const previouslocalStorageState = loadState()\n  saveState({ ...previouslocalStorageState, profile })\n  return { ...previouslocalStorageState, profile }\n}\n\nexport const forgotPassword = async (\n  values: ForgotPasswordInitialValuesProps & { link: string }\n) => {\n  const response = await client('auth/send_password_reset', {\n    data: values,\n    method: 'POST',\n  })\n  return response.data\n}\n\nexport const resetPassword = async (values: { password: string; token: string }) => {\n  const response = await client('auth/reset_password', {\n    data: values,\n    method: 'POST',\n  })\n  return response.data\n}\n\nexport const changePassword = async (values: { old_password: string; new_password: string }) => {\n  const response = await client(`auth/change-password`, {\n    data: values,\n    method: 'PATCH',\n    validateStatus: status => status >= 200 && status <= 401,\n  })\n  if (response.status === 401) throw new Error('Your old password is incorrect')\n  return response.data\n}\n\nexport const logout = async (userId?: string) => {\n  const SWID = loadState().SWID\n  if (userId && SWID) {\n    try {\n      await client('', {\n        url: buildConversationUrl(`push-notifications/${userId}`),\n        method: 'DELETE',\n        data: { SWID },\n      })\n    } catch (error) {\n      return error;\n    }\n  }\n  clearState()\n  return Promise.resolve({})\n}\n"]},"metadata":{},"sourceType":"module"}